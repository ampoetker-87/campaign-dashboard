{"ast":null,"code":"\"use strict\";\n/**\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar _createClass = require(\"/Users/amandapoetker-alles/Desktop/campaign-dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _classCallCheck = require(\"/Users/amandapoetker-alles/Desktop/campaign-dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar googleapis_common_1 = require(\"googleapis-common\"); // tslint:disable: no-any\n// tslint:disable: class-name\n// tslint:disable: variable-name\n// tslint:disable: jsdoc-format\n// tslint:disable: no-namespace\n\n\nvar gamesManagement_v1management;\n\n(function (gamesManagement_v1management) {\n  /**\n   * Google Play Game Services Management API\n   *\n   * The Management API for Google Play Game Services.\n   *\n   * @example\n   * const {google} = require('googleapis');\n   * const gamesManagement = google.gamesManagement('v1management');\n   *\n   * @namespace gamesManagement\n   * @type {Function}\n   * @version v1management\n   * @variation v1management\n   * @param {object=} options Options for Gamesmanagement\n   */\n  var Gamesmanagement = function Gamesmanagement(options, google) {\n    _classCallCheck(this, Gamesmanagement);\n\n    this.context = {\n      _options: options || {},\n      google\n    };\n    this.achievements = new Resource$Achievements(this.context);\n    this.applications = new Resource$Applications(this.context);\n    this.events = new Resource$Events(this.context);\n    this.players = new Resource$Players(this.context);\n    this.quests = new Resource$Quests(this.context);\n    this.rooms = new Resource$Rooms(this.context);\n    this.scores = new Resource$Scores(this.context);\n    this.turnBasedMatches = new Resource$Turnbasedmatches(this.context);\n  };\n\n  gamesManagement_v1management.Gamesmanagement = Gamesmanagement;\n\n  var Resource$Achievements = /*#__PURE__*/function () {\n    function Resource$Achievements(context) {\n      _classCallCheck(this, Resource$Achievements);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Achievements, [{\n      key: \"reset\",\n      value: function reset(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/games/v1management/achievements/{achievementId}/reset').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['achievementId'],\n          pathParams: ['achievementId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"resetAll\",\n      value: function resetAll(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/games/v1management/achievements/reset').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: [],\n          pathParams: [],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"resetAllForAllPlayers\",\n      value: function resetAllForAllPlayers(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/games/v1management/achievements/resetAllForAllPlayers').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: [],\n          pathParams: [],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"resetForAllPlayers\",\n      value: function resetForAllPlayers(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/games/v1management/achievements/{achievementId}/resetForAllPlayers').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['achievementId'],\n          pathParams: ['achievementId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"resetMultipleForAllPlayers\",\n      value: function resetMultipleForAllPlayers(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/games/v1management/achievements/resetMultipleForAllPlayers').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: [],\n          pathParams: [],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Achievements;\n  }();\n\n  gamesManagement_v1management.Resource$Achievements = Resource$Achievements;\n\n  var Resource$Applications = /*#__PURE__*/function () {\n    function Resource$Applications(context) {\n      _classCallCheck(this, Resource$Applications);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Applications, [{\n      key: \"listHidden\",\n      value: function listHidden(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/games/v1management/applications/{applicationId}/players/hidden').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['applicationId'],\n          pathParams: ['applicationId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Applications;\n  }();\n\n  gamesManagement_v1management.Resource$Applications = Resource$Applications;\n\n  var Resource$Events = /*#__PURE__*/function () {\n    function Resource$Events(context) {\n      _classCallCheck(this, Resource$Events);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Events, [{\n      key: \"reset\",\n      value: function reset(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/games/v1management/events/{eventId}/reset').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['eventId'],\n          pathParams: ['eventId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"resetAll\",\n      value: function resetAll(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/games/v1management/events/reset').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: [],\n          pathParams: [],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"resetAllForAllPlayers\",\n      value: function resetAllForAllPlayers(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/games/v1management/events/resetAllForAllPlayers').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: [],\n          pathParams: [],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"resetForAllPlayers\",\n      value: function resetForAllPlayers(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/games/v1management/events/{eventId}/resetForAllPlayers').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['eventId'],\n          pathParams: ['eventId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"resetMultipleForAllPlayers\",\n      value: function resetMultipleForAllPlayers(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/games/v1management/events/resetMultipleForAllPlayers').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: [],\n          pathParams: [],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Events;\n  }();\n\n  gamesManagement_v1management.Resource$Events = Resource$Events;\n\n  var Resource$Players = /*#__PURE__*/function () {\n    function Resource$Players(context) {\n      _classCallCheck(this, Resource$Players);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Players, [{\n      key: \"hide\",\n      value: function hide(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/games/v1management/applications/{applicationId}/players/hidden/{playerId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['applicationId', 'playerId'],\n          pathParams: ['applicationId', 'playerId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"unhide\",\n      value: function unhide(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/games/v1management/applications/{applicationId}/players/hidden/{playerId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'DELETE'\n          }, options),\n          params,\n          requiredParams: ['applicationId', 'playerId'],\n          pathParams: ['applicationId', 'playerId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Players;\n  }();\n\n  gamesManagement_v1management.Resource$Players = Resource$Players;\n\n  var Resource$Quests = /*#__PURE__*/function () {\n    function Resource$Quests(context) {\n      _classCallCheck(this, Resource$Quests);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Quests, [{\n      key: \"reset\",\n      value: function reset(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/games/v1management/quests/{questId}/reset').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['questId'],\n          pathParams: ['questId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"resetAll\",\n      value: function resetAll(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/games/v1management/quests/reset').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: [],\n          pathParams: [],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"resetAllForAllPlayers\",\n      value: function resetAllForAllPlayers(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/games/v1management/quests/resetAllForAllPlayers').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: [],\n          pathParams: [],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"resetForAllPlayers\",\n      value: function resetForAllPlayers(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/games/v1management/quests/{questId}/resetForAllPlayers').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['questId'],\n          pathParams: ['questId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"resetMultipleForAllPlayers\",\n      value: function resetMultipleForAllPlayers(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/games/v1management/quests/resetMultipleForAllPlayers').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: [],\n          pathParams: [],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Quests;\n  }();\n\n  gamesManagement_v1management.Resource$Quests = Resource$Quests;\n\n  var Resource$Rooms = /*#__PURE__*/function () {\n    function Resource$Rooms(context) {\n      _classCallCheck(this, Resource$Rooms);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Rooms, [{\n      key: \"reset\",\n      value: function reset(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/games/v1management/rooms/reset').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: [],\n          pathParams: [],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"resetForAllPlayers\",\n      value: function resetForAllPlayers(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/games/v1management/rooms/resetForAllPlayers').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: [],\n          pathParams: [],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Rooms;\n  }();\n\n  gamesManagement_v1management.Resource$Rooms = Resource$Rooms;\n\n  var Resource$Scores = /*#__PURE__*/function () {\n    function Resource$Scores(context) {\n      _classCallCheck(this, Resource$Scores);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Scores, [{\n      key: \"reset\",\n      value: function reset(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/games/v1management/leaderboards/{leaderboardId}/scores/reset').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['leaderboardId'],\n          pathParams: ['leaderboardId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"resetAll\",\n      value: function resetAll(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/games/v1management/scores/reset').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: [],\n          pathParams: [],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"resetAllForAllPlayers\",\n      value: function resetAllForAllPlayers(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/games/v1management/scores/resetAllForAllPlayers').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: [],\n          pathParams: [],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"resetForAllPlayers\",\n      value: function resetForAllPlayers(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/games/v1management/leaderboards/{leaderboardId}/scores/resetForAllPlayers').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['leaderboardId'],\n          pathParams: ['leaderboardId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"resetMultipleForAllPlayers\",\n      value: function resetMultipleForAllPlayers(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/games/v1management/scores/resetMultipleForAllPlayers').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: [],\n          pathParams: [],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Scores;\n  }();\n\n  gamesManagement_v1management.Resource$Scores = Resource$Scores;\n\n  var Resource$Turnbasedmatches = /*#__PURE__*/function () {\n    function Resource$Turnbasedmatches(context) {\n      _classCallCheck(this, Resource$Turnbasedmatches);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Turnbasedmatches, [{\n      key: \"reset\",\n      value: function reset(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/games/v1management/turnbasedmatches/reset').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: [],\n          pathParams: [],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"resetForAllPlayers\",\n      value: function resetForAllPlayers(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/games/v1management/turnbasedmatches/resetForAllPlayers').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: [],\n          pathParams: [],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Turnbasedmatches;\n  }();\n\n  gamesManagement_v1management.Resource$Turnbasedmatches = Resource$Turnbasedmatches;\n})(gamesManagement_v1management = exports.gamesManagement_v1management || (exports.gamesManagement_v1management = {}));","map":{"version":3,"sources":["/Users/amandapoetker-alles/Desktop/campaign-dashboard/node_modules/googleapis/build/src/apis/gamesManagement/v1management.js"],"names":["Object","defineProperty","exports","value","googleapis_common_1","require","gamesManagement_v1management","Gamesmanagement","options","google","context","_options","achievements","Resource$Achievements","applications","Resource$Applications","events","Resource$Events","players","Resource$Players","quests","Resource$Quests","rooms","Resource$Rooms","scores","Resource$Scores","turnBasedMatches","Resource$Turnbasedmatches","paramsOrCallback","optionsOrCallback","callback","params","rootUrl","parameters","assign","url","replace","method","requiredParams","pathParams","createAPIRequest"],"mappings":"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","sourcesContent":["\"use strict\";\n/**\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst googleapis_common_1 = require(\"googleapis-common\");\n// tslint:disable: no-any\n// tslint:disable: class-name\n// tslint:disable: variable-name\n// tslint:disable: jsdoc-format\n// tslint:disable: no-namespace\nvar gamesManagement_v1management;\n(function (gamesManagement_v1management) {\n    /**\n     * Google Play Game Services Management API\n     *\n     * The Management API for Google Play Game Services.\n     *\n     * @example\n     * const {google} = require('googleapis');\n     * const gamesManagement = google.gamesManagement('v1management');\n     *\n     * @namespace gamesManagement\n     * @type {Function}\n     * @version v1management\n     * @variation v1management\n     * @param {object=} options Options for Gamesmanagement\n     */\n    class Gamesmanagement {\n        constructor(options, google) {\n            this.context = { _options: options || {}, google };\n            this.achievements = new Resource$Achievements(this.context);\n            this.applications = new Resource$Applications(this.context);\n            this.events = new Resource$Events(this.context);\n            this.players = new Resource$Players(this.context);\n            this.quests = new Resource$Quests(this.context);\n            this.rooms = new Resource$Rooms(this.context);\n            this.scores = new Resource$Scores(this.context);\n            this.turnBasedMatches = new Resource$Turnbasedmatches(this.context);\n        }\n    }\n    gamesManagement_v1management.Gamesmanagement = Gamesmanagement;\n    class Resource$Achievements {\n        constructor(context) {\n            this.context = context;\n        }\n        reset(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/games/v1management/achievements/{achievementId}/reset')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST'\n                }, options),\n                params,\n                requiredParams: ['achievementId'],\n                pathParams: ['achievementId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        resetAll(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/games/v1management/achievements/reset')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST'\n                }, options),\n                params,\n                requiredParams: [],\n                pathParams: [],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        resetAllForAllPlayers(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/games/v1management/achievements/resetAllForAllPlayers')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST'\n                }, options),\n                params,\n                requiredParams: [],\n                pathParams: [],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        resetForAllPlayers(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/games/v1management/achievements/{achievementId}/resetForAllPlayers')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST'\n                }, options),\n                params,\n                requiredParams: ['achievementId'],\n                pathParams: ['achievementId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        resetMultipleForAllPlayers(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/games/v1management/achievements/resetMultipleForAllPlayers')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST'\n                }, options),\n                params,\n                requiredParams: [],\n                pathParams: [],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    gamesManagement_v1management.Resource$Achievements = Resource$Achievements;\n    class Resource$Applications {\n        constructor(context) {\n            this.context = context;\n        }\n        listHidden(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/games/v1management/applications/{applicationId}/players/hidden')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['applicationId'],\n                pathParams: ['applicationId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    gamesManagement_v1management.Resource$Applications = Resource$Applications;\n    class Resource$Events {\n        constructor(context) {\n            this.context = context;\n        }\n        reset(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/games/v1management/events/{eventId}/reset')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST'\n                }, options),\n                params,\n                requiredParams: ['eventId'],\n                pathParams: ['eventId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        resetAll(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/games/v1management/events/reset')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST'\n                }, options),\n                params,\n                requiredParams: [],\n                pathParams: [],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        resetAllForAllPlayers(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/games/v1management/events/resetAllForAllPlayers')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST'\n                }, options),\n                params,\n                requiredParams: [],\n                pathParams: [],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        resetForAllPlayers(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/games/v1management/events/{eventId}/resetForAllPlayers')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST'\n                }, options),\n                params,\n                requiredParams: ['eventId'],\n                pathParams: ['eventId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        resetMultipleForAllPlayers(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/games/v1management/events/resetMultipleForAllPlayers')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST'\n                }, options),\n                params,\n                requiredParams: [],\n                pathParams: [],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    gamesManagement_v1management.Resource$Events = Resource$Events;\n    class Resource$Players {\n        constructor(context) {\n            this.context = context;\n        }\n        hide(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/games/v1management/applications/{applicationId}/players/hidden/{playerId}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST'\n                }, options),\n                params,\n                requiredParams: ['applicationId', 'playerId'],\n                pathParams: ['applicationId', 'playerId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        unhide(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/games/v1management/applications/{applicationId}/players/hidden/{playerId}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'DELETE'\n                }, options),\n                params,\n                requiredParams: ['applicationId', 'playerId'],\n                pathParams: ['applicationId', 'playerId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    gamesManagement_v1management.Resource$Players = Resource$Players;\n    class Resource$Quests {\n        constructor(context) {\n            this.context = context;\n        }\n        reset(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/games/v1management/quests/{questId}/reset')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST'\n                }, options),\n                params,\n                requiredParams: ['questId'],\n                pathParams: ['questId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        resetAll(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/games/v1management/quests/reset')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST'\n                }, options),\n                params,\n                requiredParams: [],\n                pathParams: [],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        resetAllForAllPlayers(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/games/v1management/quests/resetAllForAllPlayers')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST'\n                }, options),\n                params,\n                requiredParams: [],\n                pathParams: [],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        resetForAllPlayers(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/games/v1management/quests/{questId}/resetForAllPlayers')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST'\n                }, options),\n                params,\n                requiredParams: ['questId'],\n                pathParams: ['questId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        resetMultipleForAllPlayers(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/games/v1management/quests/resetMultipleForAllPlayers')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST'\n                }, options),\n                params,\n                requiredParams: [],\n                pathParams: [],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    gamesManagement_v1management.Resource$Quests = Resource$Quests;\n    class Resource$Rooms {\n        constructor(context) {\n            this.context = context;\n        }\n        reset(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/games/v1management/rooms/reset')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST'\n                }, options),\n                params,\n                requiredParams: [],\n                pathParams: [],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        resetForAllPlayers(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/games/v1management/rooms/resetForAllPlayers')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST'\n                }, options),\n                params,\n                requiredParams: [],\n                pathParams: [],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    gamesManagement_v1management.Resource$Rooms = Resource$Rooms;\n    class Resource$Scores {\n        constructor(context) {\n            this.context = context;\n        }\n        reset(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/games/v1management/leaderboards/{leaderboardId}/scores/reset')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST'\n                }, options),\n                params,\n                requiredParams: ['leaderboardId'],\n                pathParams: ['leaderboardId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        resetAll(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/games/v1management/scores/reset')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST'\n                }, options),\n                params,\n                requiredParams: [],\n                pathParams: [],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        resetAllForAllPlayers(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/games/v1management/scores/resetAllForAllPlayers')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST'\n                }, options),\n                params,\n                requiredParams: [],\n                pathParams: [],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        resetForAllPlayers(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/games/v1management/leaderboards/{leaderboardId}/scores/resetForAllPlayers')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST'\n                }, options),\n                params,\n                requiredParams: ['leaderboardId'],\n                pathParams: ['leaderboardId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        resetMultipleForAllPlayers(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/games/v1management/scores/resetMultipleForAllPlayers')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST'\n                }, options),\n                params,\n                requiredParams: [],\n                pathParams: [],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    gamesManagement_v1management.Resource$Scores = Resource$Scores;\n    class Resource$Turnbasedmatches {\n        constructor(context) {\n            this.context = context;\n        }\n        reset(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/games/v1management/turnbasedmatches/reset')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST'\n                }, options),\n                params,\n                requiredParams: [],\n                pathParams: [],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        resetForAllPlayers(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/games/v1management/turnbasedmatches/resetForAllPlayers')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST'\n                }, options),\n                params,\n                requiredParams: [],\n                pathParams: [],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    gamesManagement_v1management.Resource$Turnbasedmatches = Resource$Turnbasedmatches;\n})(gamesManagement_v1management = exports.gamesManagement_v1management || (exports.gamesManagement_v1management = {}));\n//# sourceMappingURL=v1management.js.map"]},"metadata":{},"sourceType":"script"}