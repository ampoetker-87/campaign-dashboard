{"ast":null,"code":"\"use strict\";\n/**\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar _createClass = require(\"/Users/amandapoetker-alles/Desktop/campaign-dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _classCallCheck = require(\"/Users/amandapoetker-alles/Desktop/campaign-dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar googleapis_common_1 = require(\"googleapis-common\"); // tslint:disable: no-any\n// tslint:disable: class-name\n// tslint:disable: variable-name\n// tslint:disable: jsdoc-format\n// tslint:disable: no-namespace\n\n\nvar dfareporting_v3_1;\n\n(function (dfareporting_v3_1) {\n  /**\n   * DCM/DFA Reporting And Trafficking API\n   *\n   * Manages your DoubleClick Campaign Manager ad campaigns and reports.\n   *\n   * @example\n   * const {google} = require('googleapis');\n   * const dfareporting = google.dfareporting('v3.1');\n   *\n   * @namespace dfareporting\n   * @type {Function}\n   * @version v3.1\n   * @variation v3.1\n   * @param {object=} options Options for Dfareporting\n   */\n  var Dfareporting = function Dfareporting(options, google) {\n    _classCallCheck(this, Dfareporting);\n\n    this.context = {\n      _options: options || {},\n      google\n    };\n    this.accountActiveAdSummaries = new Resource$Accountactiveadsummaries(this.context);\n    this.accountPermissionGroups = new Resource$Accountpermissiongroups(this.context);\n    this.accountPermissions = new Resource$Accountpermissions(this.context);\n    this.accounts = new Resource$Accounts(this.context);\n    this.accountUserProfiles = new Resource$Accountuserprofiles(this.context);\n    this.ads = new Resource$Ads(this.context);\n    this.advertiserGroups = new Resource$Advertisergroups(this.context);\n    this.advertiserLandingPages = new Resource$Advertiserlandingpages(this.context);\n    this.advertisers = new Resource$Advertisers(this.context);\n    this.browsers = new Resource$Browsers(this.context);\n    this.campaignCreativeAssociations = new Resource$Campaigncreativeassociations(this.context);\n    this.campaigns = new Resource$Campaigns(this.context);\n    this.changeLogs = new Resource$Changelogs(this.context);\n    this.cities = new Resource$Cities(this.context);\n    this.connectionTypes = new Resource$Connectiontypes(this.context);\n    this.contentCategories = new Resource$Contentcategories(this.context);\n    this.conversions = new Resource$Conversions(this.context);\n    this.countries = new Resource$Countries(this.context);\n    this.creativeAssets = new Resource$Creativeassets(this.context);\n    this.creativeFields = new Resource$Creativefields(this.context);\n    this.creativeFieldValues = new Resource$Creativefieldvalues(this.context);\n    this.creativeGroups = new Resource$Creativegroups(this.context);\n    this.creatives = new Resource$Creatives(this.context);\n    this.dimensionValues = new Resource$Dimensionvalues(this.context);\n    this.directorySiteContacts = new Resource$Directorysitecontacts(this.context);\n    this.directorySites = new Resource$Directorysites(this.context);\n    this.dynamicTargetingKeys = new Resource$Dynamictargetingkeys(this.context);\n    this.eventTags = new Resource$Eventtags(this.context);\n    this.files = new Resource$Files(this.context);\n    this.floodlightActivities = new Resource$Floodlightactivities(this.context);\n    this.floodlightActivityGroups = new Resource$Floodlightactivitygroups(this.context);\n    this.floodlightConfigurations = new Resource$Floodlightconfigurations(this.context);\n    this.inventoryItems = new Resource$Inventoryitems(this.context);\n    this.languages = new Resource$Languages(this.context);\n    this.metros = new Resource$Metros(this.context);\n    this.mobileApps = new Resource$Mobileapps(this.context);\n    this.mobileCarriers = new Resource$Mobilecarriers(this.context);\n    this.operatingSystems = new Resource$Operatingsystems(this.context);\n    this.operatingSystemVersions = new Resource$Operatingsystemversions(this.context);\n    this.orderDocuments = new Resource$Orderdocuments(this.context);\n    this.orders = new Resource$Orders(this.context);\n    this.placementGroups = new Resource$Placementgroups(this.context);\n    this.placements = new Resource$Placements(this.context);\n    this.placementStrategies = new Resource$Placementstrategies(this.context);\n    this.platformTypes = new Resource$Platformtypes(this.context);\n    this.postalCodes = new Resource$Postalcodes(this.context);\n    this.projects = new Resource$Projects(this.context);\n    this.regions = new Resource$Regions(this.context);\n    this.remarketingLists = new Resource$Remarketinglists(this.context);\n    this.remarketingListShares = new Resource$Remarketinglistshares(this.context);\n    this.reports = new Resource$Reports(this.context);\n    this.sites = new Resource$Sites(this.context);\n    this.sizes = new Resource$Sizes(this.context);\n    this.subaccounts = new Resource$Subaccounts(this.context);\n    this.targetableRemarketingLists = new Resource$Targetableremarketinglists(this.context);\n    this.targetingTemplates = new Resource$Targetingtemplates(this.context);\n    this.userProfiles = new Resource$Userprofiles(this.context);\n    this.userRolePermissionGroups = new Resource$Userrolepermissiongroups(this.context);\n    this.userRolePermissions = new Resource$Userrolepermissions(this.context);\n    this.userRoles = new Resource$Userroles(this.context);\n    this.videoFormats = new Resource$Videoformats(this.context);\n  };\n\n  dfareporting_v3_1.Dfareporting = Dfareporting;\n\n  var Resource$Accountactiveadsummaries = /*#__PURE__*/function () {\n    function Resource$Accountactiveadsummaries(context) {\n      _classCallCheck(this, Resource$Accountactiveadsummaries);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Accountactiveadsummaries, [{\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.1/userprofiles/{profileId}/accountActiveAdSummaries/{summaryAccountId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['profileId', 'summaryAccountId'],\n          pathParams: ['profileId', 'summaryAccountId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Accountactiveadsummaries;\n  }();\n\n  dfareporting_v3_1.Resource$Accountactiveadsummaries = Resource$Accountactiveadsummaries;\n\n  var Resource$Accountpermissiongroups = /*#__PURE__*/function () {\n    function Resource$Accountpermissiongroups(context) {\n      _classCallCheck(this, Resource$Accountpermissiongroups);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Accountpermissiongroups, [{\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.1/userprofiles/{profileId}/accountPermissionGroups/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['profileId', 'id'],\n          pathParams: ['id', 'profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.1/userprofiles/{profileId}/accountPermissionGroups').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Accountpermissiongroups;\n  }();\n\n  dfareporting_v3_1.Resource$Accountpermissiongroups = Resource$Accountpermissiongroups;\n\n  var Resource$Accountpermissions = /*#__PURE__*/function () {\n    function Resource$Accountpermissions(context) {\n      _classCallCheck(this, Resource$Accountpermissions);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Accountpermissions, [{\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.1/userprofiles/{profileId}/accountPermissions/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['profileId', 'id'],\n          pathParams: ['id', 'profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.1/userprofiles/{profileId}/accountPermissions').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Accountpermissions;\n  }();\n\n  dfareporting_v3_1.Resource$Accountpermissions = Resource$Accountpermissions;\n\n  var Resource$Accounts = /*#__PURE__*/function () {\n    function Resource$Accounts(context) {\n      _classCallCheck(this, Resource$Accounts);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Accounts, [{\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.1/userprofiles/{profileId}/accounts/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['profileId', 'id'],\n          pathParams: ['id', 'profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.1/userprofiles/{profileId}/accounts').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"patch\",\n      value: function patch(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.1/userprofiles/{profileId}/accounts').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PATCH'\n          }, options),\n          params,\n          requiredParams: ['profileId', 'id'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"update\",\n      value: function update(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.1/userprofiles/{profileId}/accounts').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PUT'\n          }, options),\n          params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Accounts;\n  }();\n\n  dfareporting_v3_1.Resource$Accounts = Resource$Accounts;\n\n  var Resource$Accountuserprofiles = /*#__PURE__*/function () {\n    function Resource$Accountuserprofiles(context) {\n      _classCallCheck(this, Resource$Accountuserprofiles);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Accountuserprofiles, [{\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.1/userprofiles/{profileId}/accountUserProfiles/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['profileId', 'id'],\n          pathParams: ['id', 'profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"insert\",\n      value: function insert(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.1/userprofiles/{profileId}/accountUserProfiles').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.1/userprofiles/{profileId}/accountUserProfiles').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"patch\",\n      value: function patch(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.1/userprofiles/{profileId}/accountUserProfiles').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PATCH'\n          }, options),\n          params,\n          requiredParams: ['profileId', 'id'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"update\",\n      value: function update(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.1/userprofiles/{profileId}/accountUserProfiles').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PUT'\n          }, options),\n          params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Accountuserprofiles;\n  }();\n\n  dfareporting_v3_1.Resource$Accountuserprofiles = Resource$Accountuserprofiles;\n\n  var Resource$Ads = /*#__PURE__*/function () {\n    function Resource$Ads(context) {\n      _classCallCheck(this, Resource$Ads);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Ads, [{\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.1/userprofiles/{profileId}/ads/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['profileId', 'id'],\n          pathParams: ['id', 'profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"insert\",\n      value: function insert(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.1/userprofiles/{profileId}/ads').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.1/userprofiles/{profileId}/ads').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"patch\",\n      value: function patch(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.1/userprofiles/{profileId}/ads').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PATCH'\n          }, options),\n          params,\n          requiredParams: ['profileId', 'id'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"update\",\n      value: function update(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.1/userprofiles/{profileId}/ads').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PUT'\n          }, options),\n          params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Ads;\n  }();\n\n  dfareporting_v3_1.Resource$Ads = Resource$Ads;\n\n  var Resource$Advertisergroups = /*#__PURE__*/function () {\n    function Resource$Advertisergroups(context) {\n      _classCallCheck(this, Resource$Advertisergroups);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Advertisergroups, [{\n      key: \"delete\",\n      value: function _delete(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.1/userprofiles/{profileId}/advertiserGroups/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'DELETE'\n          }, options),\n          params,\n          requiredParams: ['profileId', 'id'],\n          pathParams: ['id', 'profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.1/userprofiles/{profileId}/advertiserGroups/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['profileId', 'id'],\n          pathParams: ['id', 'profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"insert\",\n      value: function insert(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.1/userprofiles/{profileId}/advertiserGroups').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.1/userprofiles/{profileId}/advertiserGroups').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"patch\",\n      value: function patch(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.1/userprofiles/{profileId}/advertiserGroups').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PATCH'\n          }, options),\n          params,\n          requiredParams: ['profileId', 'id'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"update\",\n      value: function update(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.1/userprofiles/{profileId}/advertiserGroups').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PUT'\n          }, options),\n          params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Advertisergroups;\n  }();\n\n  dfareporting_v3_1.Resource$Advertisergroups = Resource$Advertisergroups;\n\n  var Resource$Advertiserlandingpages = /*#__PURE__*/function () {\n    function Resource$Advertiserlandingpages(context) {\n      _classCallCheck(this, Resource$Advertiserlandingpages);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Advertiserlandingpages, [{\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.1/userprofiles/{profileId}/advertiserLandingPages/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['profileId', 'id'],\n          pathParams: ['id', 'profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"insert\",\n      value: function insert(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.1/userprofiles/{profileId}/advertiserLandingPages').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.1/userprofiles/{profileId}/advertiserLandingPages').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"patch\",\n      value: function patch(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.1/userprofiles/{profileId}/advertiserLandingPages').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PATCH'\n          }, options),\n          params,\n          requiredParams: ['profileId', 'id'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"update\",\n      value: function update(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.1/userprofiles/{profileId}/advertiserLandingPages').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PUT'\n          }, options),\n          params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Advertiserlandingpages;\n  }();\n\n  dfareporting_v3_1.Resource$Advertiserlandingpages = Resource$Advertiserlandingpages;\n\n  var Resource$Advertisers = /*#__PURE__*/function () {\n    function Resource$Advertisers(context) {\n      _classCallCheck(this, Resource$Advertisers);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Advertisers, [{\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.1/userprofiles/{profileId}/advertisers/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['profileId', 'id'],\n          pathParams: ['id', 'profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"insert\",\n      value: function insert(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.1/userprofiles/{profileId}/advertisers').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.1/userprofiles/{profileId}/advertisers').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"patch\",\n      value: function patch(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.1/userprofiles/{profileId}/advertisers').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PATCH'\n          }, options),\n          params,\n          requiredParams: ['profileId', 'id'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"update\",\n      value: function update(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.1/userprofiles/{profileId}/advertisers').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PUT'\n          }, options),\n          params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Advertisers;\n  }();\n\n  dfareporting_v3_1.Resource$Advertisers = Resource$Advertisers;\n\n  var Resource$Browsers = /*#__PURE__*/function () {\n    function Resource$Browsers(context) {\n      _classCallCheck(this, Resource$Browsers);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Browsers, [{\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.1/userprofiles/{profileId}/browsers').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Browsers;\n  }();\n\n  dfareporting_v3_1.Resource$Browsers = Resource$Browsers;\n\n  var Resource$Campaigncreativeassociations = /*#__PURE__*/function () {\n    function Resource$Campaigncreativeassociations(context) {\n      _classCallCheck(this, Resource$Campaigncreativeassociations);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Campaigncreativeassociations, [{\n      key: \"insert\",\n      value: function insert(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.1/userprofiles/{profileId}/campaigns/{campaignId}/campaignCreativeAssociations').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['profileId', 'campaignId'],\n          pathParams: ['campaignId', 'profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.1/userprofiles/{profileId}/campaigns/{campaignId}/campaignCreativeAssociations').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['profileId', 'campaignId'],\n          pathParams: ['campaignId', 'profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Campaigncreativeassociations;\n  }();\n\n  dfareporting_v3_1.Resource$Campaigncreativeassociations = Resource$Campaigncreativeassociations;\n\n  var Resource$Campaigns = /*#__PURE__*/function () {\n    function Resource$Campaigns(context) {\n      _classCallCheck(this, Resource$Campaigns);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Campaigns, [{\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.1/userprofiles/{profileId}/campaigns/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['profileId', 'id'],\n          pathParams: ['id', 'profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"insert\",\n      value: function insert(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.1/userprofiles/{profileId}/campaigns').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.1/userprofiles/{profileId}/campaigns').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"patch\",\n      value: function patch(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.1/userprofiles/{profileId}/campaigns').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PATCH'\n          }, options),\n          params,\n          requiredParams: ['profileId', 'id'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"update\",\n      value: function update(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.1/userprofiles/{profileId}/campaigns').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PUT'\n          }, options),\n          params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Campaigns;\n  }();\n\n  dfareporting_v3_1.Resource$Campaigns = Resource$Campaigns;\n\n  var Resource$Changelogs = /*#__PURE__*/function () {\n    function Resource$Changelogs(context) {\n      _classCallCheck(this, Resource$Changelogs);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Changelogs, [{\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.1/userprofiles/{profileId}/changeLogs/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['profileId', 'id'],\n          pathParams: ['id', 'profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.1/userprofiles/{profileId}/changeLogs').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Changelogs;\n  }();\n\n  dfareporting_v3_1.Resource$Changelogs = Resource$Changelogs;\n\n  var Resource$Cities = /*#__PURE__*/function () {\n    function Resource$Cities(context) {\n      _classCallCheck(this, Resource$Cities);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Cities, [{\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.1/userprofiles/{profileId}/cities').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Cities;\n  }();\n\n  dfareporting_v3_1.Resource$Cities = Resource$Cities;\n\n  var Resource$Connectiontypes = /*#__PURE__*/function () {\n    function Resource$Connectiontypes(context) {\n      _classCallCheck(this, Resource$Connectiontypes);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Connectiontypes, [{\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.1/userprofiles/{profileId}/connectionTypes/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['profileId', 'id'],\n          pathParams: ['id', 'profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.1/userprofiles/{profileId}/connectionTypes').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Connectiontypes;\n  }();\n\n  dfareporting_v3_1.Resource$Connectiontypes = Resource$Connectiontypes;\n\n  var Resource$Contentcategories = /*#__PURE__*/function () {\n    function Resource$Contentcategories(context) {\n      _classCallCheck(this, Resource$Contentcategories);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Contentcategories, [{\n      key: \"delete\",\n      value: function _delete(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.1/userprofiles/{profileId}/contentCategories/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'DELETE'\n          }, options),\n          params,\n          requiredParams: ['profileId', 'id'],\n          pathParams: ['id', 'profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.1/userprofiles/{profileId}/contentCategories/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['profileId', 'id'],\n          pathParams: ['id', 'profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"insert\",\n      value: function insert(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.1/userprofiles/{profileId}/contentCategories').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.1/userprofiles/{profileId}/contentCategories').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"patch\",\n      value: function patch(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.1/userprofiles/{profileId}/contentCategories').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PATCH'\n          }, options),\n          params,\n          requiredParams: ['profileId', 'id'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"update\",\n      value: function update(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.1/userprofiles/{profileId}/contentCategories').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PUT'\n          }, options),\n          params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Contentcategories;\n  }();\n\n  dfareporting_v3_1.Resource$Contentcategories = Resource$Contentcategories;\n\n  var Resource$Conversions = /*#__PURE__*/function () {\n    function Resource$Conversions(context) {\n      _classCallCheck(this, Resource$Conversions);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Conversions, [{\n      key: \"batchinsert\",\n      value: function batchinsert(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.1/userprofiles/{profileId}/conversions/batchinsert').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"batchupdate\",\n      value: function batchupdate(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.1/userprofiles/{profileId}/conversions/batchupdate').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Conversions;\n  }();\n\n  dfareporting_v3_1.Resource$Conversions = Resource$Conversions;\n\n  var Resource$Countries = /*#__PURE__*/function () {\n    function Resource$Countries(context) {\n      _classCallCheck(this, Resource$Countries);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Countries, [{\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.1/userprofiles/{profileId}/countries/{dartId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['profileId', 'dartId'],\n          pathParams: ['dartId', 'profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.1/userprofiles/{profileId}/countries').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Countries;\n  }();\n\n  dfareporting_v3_1.Resource$Countries = Resource$Countries;\n\n  var Resource$Creativeassets = /*#__PURE__*/function () {\n    function Resource$Creativeassets(context) {\n      _classCallCheck(this, Resource$Creativeassets);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Creativeassets, [{\n      key: \"insert\",\n      value: function insert(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.1/userprofiles/{profileId}/creativeAssets/{advertiserId}/creativeAssets').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          mediaUrl: (rootUrl + '/upload/dfareporting/v3.1/userprofiles/{profileId}/creativeAssets/{advertiserId}/creativeAssets').replace(/([^:]\\/)\\/+/g, '$1'),\n          requiredParams: ['profileId', 'advertiserId'],\n          pathParams: ['advertiserId', 'profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Creativeassets;\n  }();\n\n  dfareporting_v3_1.Resource$Creativeassets = Resource$Creativeassets;\n\n  var Resource$Creativefields = /*#__PURE__*/function () {\n    function Resource$Creativefields(context) {\n      _classCallCheck(this, Resource$Creativefields);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Creativefields, [{\n      key: \"delete\",\n      value: function _delete(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.1/userprofiles/{profileId}/creativeFields/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'DELETE'\n          }, options),\n          params,\n          requiredParams: ['profileId', 'id'],\n          pathParams: ['id', 'profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.1/userprofiles/{profileId}/creativeFields/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['profileId', 'id'],\n          pathParams: ['id', 'profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"insert\",\n      value: function insert(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.1/userprofiles/{profileId}/creativeFields').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.1/userprofiles/{profileId}/creativeFields').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"patch\",\n      value: function patch(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.1/userprofiles/{profileId}/creativeFields').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PATCH'\n          }, options),\n          params,\n          requiredParams: ['profileId', 'id'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"update\",\n      value: function update(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.1/userprofiles/{profileId}/creativeFields').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PUT'\n          }, options),\n          params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Creativefields;\n  }();\n\n  dfareporting_v3_1.Resource$Creativefields = Resource$Creativefields;\n\n  var Resource$Creativefieldvalues = /*#__PURE__*/function () {\n    function Resource$Creativefieldvalues(context) {\n      _classCallCheck(this, Resource$Creativefieldvalues);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Creativefieldvalues, [{\n      key: \"delete\",\n      value: function _delete(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.1/userprofiles/{profileId}/creativeFields/{creativeFieldId}/creativeFieldValues/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'DELETE'\n          }, options),\n          params,\n          requiredParams: ['profileId', 'creativeFieldId', 'id'],\n          pathParams: ['creativeFieldId', 'id', 'profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.1/userprofiles/{profileId}/creativeFields/{creativeFieldId}/creativeFieldValues/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['profileId', 'creativeFieldId', 'id'],\n          pathParams: ['creativeFieldId', 'id', 'profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"insert\",\n      value: function insert(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.1/userprofiles/{profileId}/creativeFields/{creativeFieldId}/creativeFieldValues').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['profileId', 'creativeFieldId'],\n          pathParams: ['creativeFieldId', 'profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.1/userprofiles/{profileId}/creativeFields/{creativeFieldId}/creativeFieldValues').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['profileId', 'creativeFieldId'],\n          pathParams: ['creativeFieldId', 'profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"patch\",\n      value: function patch(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.1/userprofiles/{profileId}/creativeFields/{creativeFieldId}/creativeFieldValues').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PATCH'\n          }, options),\n          params,\n          requiredParams: ['profileId', 'creativeFieldId', 'id'],\n          pathParams: ['creativeFieldId', 'profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"update\",\n      value: function update(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.1/userprofiles/{profileId}/creativeFields/{creativeFieldId}/creativeFieldValues').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PUT'\n          }, options),\n          params,\n          requiredParams: ['profileId', 'creativeFieldId'],\n          pathParams: ['creativeFieldId', 'profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Creativefieldvalues;\n  }();\n\n  dfareporting_v3_1.Resource$Creativefieldvalues = Resource$Creativefieldvalues;\n\n  var Resource$Creativegroups = /*#__PURE__*/function () {\n    function Resource$Creativegroups(context) {\n      _classCallCheck(this, Resource$Creativegroups);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Creativegroups, [{\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.1/userprofiles/{profileId}/creativeGroups/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['profileId', 'id'],\n          pathParams: ['id', 'profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"insert\",\n      value: function insert(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.1/userprofiles/{profileId}/creativeGroups').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.1/userprofiles/{profileId}/creativeGroups').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"patch\",\n      value: function patch(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.1/userprofiles/{profileId}/creativeGroups').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PATCH'\n          }, options),\n          params,\n          requiredParams: ['profileId', 'id'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"update\",\n      value: function update(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.1/userprofiles/{profileId}/creativeGroups').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PUT'\n          }, options),\n          params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Creativegroups;\n  }();\n\n  dfareporting_v3_1.Resource$Creativegroups = Resource$Creativegroups;\n\n  var Resource$Creatives = /*#__PURE__*/function () {\n    function Resource$Creatives(context) {\n      _classCallCheck(this, Resource$Creatives);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Creatives, [{\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.1/userprofiles/{profileId}/creatives/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['profileId', 'id'],\n          pathParams: ['id', 'profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"insert\",\n      value: function insert(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.1/userprofiles/{profileId}/creatives').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.1/userprofiles/{profileId}/creatives').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"patch\",\n      value: function patch(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.1/userprofiles/{profileId}/creatives').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PATCH'\n          }, options),\n          params,\n          requiredParams: ['profileId', 'id'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"update\",\n      value: function update(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.1/userprofiles/{profileId}/creatives').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PUT'\n          }, options),\n          params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Creatives;\n  }();\n\n  dfareporting_v3_1.Resource$Creatives = Resource$Creatives;\n\n  var Resource$Dimensionvalues = /*#__PURE__*/function () {\n    function Resource$Dimensionvalues(context) {\n      _classCallCheck(this, Resource$Dimensionvalues);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Dimensionvalues, [{\n      key: \"query\",\n      value: function query(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.1/userprofiles/{profileId}/dimensionvalues/query').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Dimensionvalues;\n  }();\n\n  dfareporting_v3_1.Resource$Dimensionvalues = Resource$Dimensionvalues;\n\n  var Resource$Directorysitecontacts = /*#__PURE__*/function () {\n    function Resource$Directorysitecontacts(context) {\n      _classCallCheck(this, Resource$Directorysitecontacts);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Directorysitecontacts, [{\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.1/userprofiles/{profileId}/directorySiteContacts/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['profileId', 'id'],\n          pathParams: ['id', 'profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.1/userprofiles/{profileId}/directorySiteContacts').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Directorysitecontacts;\n  }();\n\n  dfareporting_v3_1.Resource$Directorysitecontacts = Resource$Directorysitecontacts;\n\n  var Resource$Directorysites = /*#__PURE__*/function () {\n    function Resource$Directorysites(context) {\n      _classCallCheck(this, Resource$Directorysites);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Directorysites, [{\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.1/userprofiles/{profileId}/directorySites/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['profileId', 'id'],\n          pathParams: ['id', 'profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"insert\",\n      value: function insert(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.1/userprofiles/{profileId}/directorySites').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.1/userprofiles/{profileId}/directorySites').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Directorysites;\n  }();\n\n  dfareporting_v3_1.Resource$Directorysites = Resource$Directorysites;\n\n  var Resource$Dynamictargetingkeys = /*#__PURE__*/function () {\n    function Resource$Dynamictargetingkeys(context) {\n      _classCallCheck(this, Resource$Dynamictargetingkeys);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Dynamictargetingkeys, [{\n      key: \"delete\",\n      value: function _delete(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.1/userprofiles/{profileId}/dynamicTargetingKeys/{objectId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'DELETE'\n          }, options),\n          params,\n          requiredParams: ['profileId', 'objectId', 'name', 'objectType'],\n          pathParams: ['objectId', 'profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"insert\",\n      value: function insert(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.1/userprofiles/{profileId}/dynamicTargetingKeys').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.1/userprofiles/{profileId}/dynamicTargetingKeys').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Dynamictargetingkeys;\n  }();\n\n  dfareporting_v3_1.Resource$Dynamictargetingkeys = Resource$Dynamictargetingkeys;\n\n  var Resource$Eventtags = /*#__PURE__*/function () {\n    function Resource$Eventtags(context) {\n      _classCallCheck(this, Resource$Eventtags);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Eventtags, [{\n      key: \"delete\",\n      value: function _delete(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.1/userprofiles/{profileId}/eventTags/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'DELETE'\n          }, options),\n          params,\n          requiredParams: ['profileId', 'id'],\n          pathParams: ['id', 'profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.1/userprofiles/{profileId}/eventTags/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['profileId', 'id'],\n          pathParams: ['id', 'profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"insert\",\n      value: function insert(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.1/userprofiles/{profileId}/eventTags').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.1/userprofiles/{profileId}/eventTags').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"patch\",\n      value: function patch(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.1/userprofiles/{profileId}/eventTags').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PATCH'\n          }, options),\n          params,\n          requiredParams: ['profileId', 'id'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"update\",\n      value: function update(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.1/userprofiles/{profileId}/eventTags').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PUT'\n          }, options),\n          params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Eventtags;\n  }();\n\n  dfareporting_v3_1.Resource$Eventtags = Resource$Eventtags;\n\n  var Resource$Files = /*#__PURE__*/function () {\n    function Resource$Files(context) {\n      _classCallCheck(this, Resource$Files);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Files, [{\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.1/reports/{reportId}/files/{fileId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['reportId', 'fileId'],\n          pathParams: ['fileId', 'reportId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.1/userprofiles/{profileId}/files').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Files;\n  }();\n\n  dfareporting_v3_1.Resource$Files = Resource$Files;\n\n  var Resource$Floodlightactivities = /*#__PURE__*/function () {\n    function Resource$Floodlightactivities(context) {\n      _classCallCheck(this, Resource$Floodlightactivities);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Floodlightactivities, [{\n      key: \"delete\",\n      value: function _delete(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.1/userprofiles/{profileId}/floodlightActivities/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'DELETE'\n          }, options),\n          params,\n          requiredParams: ['profileId', 'id'],\n          pathParams: ['id', 'profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"generatetag\",\n      value: function generatetag(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.1/userprofiles/{profileId}/floodlightActivities/generatetag').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.1/userprofiles/{profileId}/floodlightActivities/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['profileId', 'id'],\n          pathParams: ['id', 'profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"insert\",\n      value: function insert(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.1/userprofiles/{profileId}/floodlightActivities').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.1/userprofiles/{profileId}/floodlightActivities').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"patch\",\n      value: function patch(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.1/userprofiles/{profileId}/floodlightActivities').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PATCH'\n          }, options),\n          params,\n          requiredParams: ['profileId', 'id'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"update\",\n      value: function update(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.1/userprofiles/{profileId}/floodlightActivities').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PUT'\n          }, options),\n          params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Floodlightactivities;\n  }();\n\n  dfareporting_v3_1.Resource$Floodlightactivities = Resource$Floodlightactivities;\n\n  var Resource$Floodlightactivitygroups = /*#__PURE__*/function () {\n    function Resource$Floodlightactivitygroups(context) {\n      _classCallCheck(this, Resource$Floodlightactivitygroups);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Floodlightactivitygroups, [{\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.1/userprofiles/{profileId}/floodlightActivityGroups/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['profileId', 'id'],\n          pathParams: ['id', 'profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"insert\",\n      value: function insert(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.1/userprofiles/{profileId}/floodlightActivityGroups').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.1/userprofiles/{profileId}/floodlightActivityGroups').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"patch\",\n      value: function patch(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.1/userprofiles/{profileId}/floodlightActivityGroups').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PATCH'\n          }, options),\n          params,\n          requiredParams: ['profileId', 'id'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"update\",\n      value: function update(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.1/userprofiles/{profileId}/floodlightActivityGroups').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PUT'\n          }, options),\n          params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Floodlightactivitygroups;\n  }();\n\n  dfareporting_v3_1.Resource$Floodlightactivitygroups = Resource$Floodlightactivitygroups;\n\n  var Resource$Floodlightconfigurations = /*#__PURE__*/function () {\n    function Resource$Floodlightconfigurations(context) {\n      _classCallCheck(this, Resource$Floodlightconfigurations);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Floodlightconfigurations, [{\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.1/userprofiles/{profileId}/floodlightConfigurations/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['profileId', 'id'],\n          pathParams: ['id', 'profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.1/userprofiles/{profileId}/floodlightConfigurations').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"patch\",\n      value: function patch(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.1/userprofiles/{profileId}/floodlightConfigurations').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PATCH'\n          }, options),\n          params,\n          requiredParams: ['profileId', 'id'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"update\",\n      value: function update(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.1/userprofiles/{profileId}/floodlightConfigurations').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PUT'\n          }, options),\n          params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Floodlightconfigurations;\n  }();\n\n  dfareporting_v3_1.Resource$Floodlightconfigurations = Resource$Floodlightconfigurations;\n\n  var Resource$Inventoryitems = /*#__PURE__*/function () {\n    function Resource$Inventoryitems(context) {\n      _classCallCheck(this, Resource$Inventoryitems);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Inventoryitems, [{\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.1/userprofiles/{profileId}/projects/{projectId}/inventoryItems/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['profileId', 'projectId', 'id'],\n          pathParams: ['id', 'profileId', 'projectId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.1/userprofiles/{profileId}/projects/{projectId}/inventoryItems').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['profileId', 'projectId'],\n          pathParams: ['profileId', 'projectId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Inventoryitems;\n  }();\n\n  dfareporting_v3_1.Resource$Inventoryitems = Resource$Inventoryitems;\n\n  var Resource$Languages = /*#__PURE__*/function () {\n    function Resource$Languages(context) {\n      _classCallCheck(this, Resource$Languages);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Languages, [{\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.1/userprofiles/{profileId}/languages').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Languages;\n  }();\n\n  dfareporting_v3_1.Resource$Languages = Resource$Languages;\n\n  var Resource$Metros = /*#__PURE__*/function () {\n    function Resource$Metros(context) {\n      _classCallCheck(this, Resource$Metros);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Metros, [{\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.1/userprofiles/{profileId}/metros').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Metros;\n  }();\n\n  dfareporting_v3_1.Resource$Metros = Resource$Metros;\n\n  var Resource$Mobileapps = /*#__PURE__*/function () {\n    function Resource$Mobileapps(context) {\n      _classCallCheck(this, Resource$Mobileapps);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Mobileapps, [{\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.1/userprofiles/{profileId}/mobileApps/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['profileId', 'id'],\n          pathParams: ['id', 'profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.1/userprofiles/{profileId}/mobileApps').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Mobileapps;\n  }();\n\n  dfareporting_v3_1.Resource$Mobileapps = Resource$Mobileapps;\n\n  var Resource$Mobilecarriers = /*#__PURE__*/function () {\n    function Resource$Mobilecarriers(context) {\n      _classCallCheck(this, Resource$Mobilecarriers);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Mobilecarriers, [{\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.1/userprofiles/{profileId}/mobileCarriers/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['profileId', 'id'],\n          pathParams: ['id', 'profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.1/userprofiles/{profileId}/mobileCarriers').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Mobilecarriers;\n  }();\n\n  dfareporting_v3_1.Resource$Mobilecarriers = Resource$Mobilecarriers;\n\n  var Resource$Operatingsystems = /*#__PURE__*/function () {\n    function Resource$Operatingsystems(context) {\n      _classCallCheck(this, Resource$Operatingsystems);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Operatingsystems, [{\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.1/userprofiles/{profileId}/operatingSystems/{dartId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['profileId', 'dartId'],\n          pathParams: ['dartId', 'profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.1/userprofiles/{profileId}/operatingSystems').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Operatingsystems;\n  }();\n\n  dfareporting_v3_1.Resource$Operatingsystems = Resource$Operatingsystems;\n\n  var Resource$Operatingsystemversions = /*#__PURE__*/function () {\n    function Resource$Operatingsystemversions(context) {\n      _classCallCheck(this, Resource$Operatingsystemversions);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Operatingsystemversions, [{\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.1/userprofiles/{profileId}/operatingSystemVersions/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['profileId', 'id'],\n          pathParams: ['id', 'profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.1/userprofiles/{profileId}/operatingSystemVersions').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Operatingsystemversions;\n  }();\n\n  dfareporting_v3_1.Resource$Operatingsystemversions = Resource$Operatingsystemversions;\n\n  var Resource$Orderdocuments = /*#__PURE__*/function () {\n    function Resource$Orderdocuments(context) {\n      _classCallCheck(this, Resource$Orderdocuments);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Orderdocuments, [{\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.1/userprofiles/{profileId}/projects/{projectId}/orderDocuments/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['profileId', 'projectId', 'id'],\n          pathParams: ['id', 'profileId', 'projectId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.1/userprofiles/{profileId}/projects/{projectId}/orderDocuments').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['profileId', 'projectId'],\n          pathParams: ['profileId', 'projectId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Orderdocuments;\n  }();\n\n  dfareporting_v3_1.Resource$Orderdocuments = Resource$Orderdocuments;\n\n  var Resource$Orders = /*#__PURE__*/function () {\n    function Resource$Orders(context) {\n      _classCallCheck(this, Resource$Orders);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Orders, [{\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.1/userprofiles/{profileId}/projects/{projectId}/orders/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['profileId', 'projectId', 'id'],\n          pathParams: ['id', 'profileId', 'projectId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.1/userprofiles/{profileId}/projects/{projectId}/orders').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['profileId', 'projectId'],\n          pathParams: ['profileId', 'projectId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Orders;\n  }();\n\n  dfareporting_v3_1.Resource$Orders = Resource$Orders;\n\n  var Resource$Placementgroups = /*#__PURE__*/function () {\n    function Resource$Placementgroups(context) {\n      _classCallCheck(this, Resource$Placementgroups);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Placementgroups, [{\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.1/userprofiles/{profileId}/placementGroups/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['profileId', 'id'],\n          pathParams: ['id', 'profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"insert\",\n      value: function insert(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.1/userprofiles/{profileId}/placementGroups').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.1/userprofiles/{profileId}/placementGroups').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"patch\",\n      value: function patch(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.1/userprofiles/{profileId}/placementGroups').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PATCH'\n          }, options),\n          params,\n          requiredParams: ['profileId', 'id'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"update\",\n      value: function update(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.1/userprofiles/{profileId}/placementGroups').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PUT'\n          }, options),\n          params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Placementgroups;\n  }();\n\n  dfareporting_v3_1.Resource$Placementgroups = Resource$Placementgroups;\n\n  var Resource$Placements = /*#__PURE__*/function () {\n    function Resource$Placements(context) {\n      _classCallCheck(this, Resource$Placements);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Placements, [{\n      key: \"generatetags\",\n      value: function generatetags(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.1/userprofiles/{profileId}/placements/generatetags').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.1/userprofiles/{profileId}/placements/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['profileId', 'id'],\n          pathParams: ['id', 'profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"insert\",\n      value: function insert(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.1/userprofiles/{profileId}/placements').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.1/userprofiles/{profileId}/placements').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"patch\",\n      value: function patch(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.1/userprofiles/{profileId}/placements').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PATCH'\n          }, options),\n          params,\n          requiredParams: ['profileId', 'id'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"update\",\n      value: function update(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.1/userprofiles/{profileId}/placements').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PUT'\n          }, options),\n          params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Placements;\n  }();\n\n  dfareporting_v3_1.Resource$Placements = Resource$Placements;\n\n  var Resource$Placementstrategies = /*#__PURE__*/function () {\n    function Resource$Placementstrategies(context) {\n      _classCallCheck(this, Resource$Placementstrategies);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Placementstrategies, [{\n      key: \"delete\",\n      value: function _delete(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.1/userprofiles/{profileId}/placementStrategies/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'DELETE'\n          }, options),\n          params,\n          requiredParams: ['profileId', 'id'],\n          pathParams: ['id', 'profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.1/userprofiles/{profileId}/placementStrategies/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['profileId', 'id'],\n          pathParams: ['id', 'profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"insert\",\n      value: function insert(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.1/userprofiles/{profileId}/placementStrategies').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.1/userprofiles/{profileId}/placementStrategies').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"patch\",\n      value: function patch(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.1/userprofiles/{profileId}/placementStrategies').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PATCH'\n          }, options),\n          params,\n          requiredParams: ['profileId', 'id'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"update\",\n      value: function update(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.1/userprofiles/{profileId}/placementStrategies').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PUT'\n          }, options),\n          params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Placementstrategies;\n  }();\n\n  dfareporting_v3_1.Resource$Placementstrategies = Resource$Placementstrategies;\n\n  var Resource$Platformtypes = /*#__PURE__*/function () {\n    function Resource$Platformtypes(context) {\n      _classCallCheck(this, Resource$Platformtypes);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Platformtypes, [{\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.1/userprofiles/{profileId}/platformTypes/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['profileId', 'id'],\n          pathParams: ['id', 'profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.1/userprofiles/{profileId}/platformTypes').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Platformtypes;\n  }();\n\n  dfareporting_v3_1.Resource$Platformtypes = Resource$Platformtypes;\n\n  var Resource$Postalcodes = /*#__PURE__*/function () {\n    function Resource$Postalcodes(context) {\n      _classCallCheck(this, Resource$Postalcodes);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Postalcodes, [{\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.1/userprofiles/{profileId}/postalCodes/{code}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['profileId', 'code'],\n          pathParams: ['code', 'profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.1/userprofiles/{profileId}/postalCodes').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Postalcodes;\n  }();\n\n  dfareporting_v3_1.Resource$Postalcodes = Resource$Postalcodes;\n\n  var Resource$Projects = /*#__PURE__*/function () {\n    function Resource$Projects(context) {\n      _classCallCheck(this, Resource$Projects);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Projects, [{\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.1/userprofiles/{profileId}/projects/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['profileId', 'id'],\n          pathParams: ['id', 'profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.1/userprofiles/{profileId}/projects').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Projects;\n  }();\n\n  dfareporting_v3_1.Resource$Projects = Resource$Projects;\n\n  var Resource$Regions = /*#__PURE__*/function () {\n    function Resource$Regions(context) {\n      _classCallCheck(this, Resource$Regions);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Regions, [{\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.1/userprofiles/{profileId}/regions').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Regions;\n  }();\n\n  dfareporting_v3_1.Resource$Regions = Resource$Regions;\n\n  var Resource$Remarketinglists = /*#__PURE__*/function () {\n    function Resource$Remarketinglists(context) {\n      _classCallCheck(this, Resource$Remarketinglists);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Remarketinglists, [{\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.1/userprofiles/{profileId}/remarketingLists/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['profileId', 'id'],\n          pathParams: ['id', 'profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"insert\",\n      value: function insert(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.1/userprofiles/{profileId}/remarketingLists').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.1/userprofiles/{profileId}/remarketingLists').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['profileId', 'advertiserId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"patch\",\n      value: function patch(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.1/userprofiles/{profileId}/remarketingLists').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PATCH'\n          }, options),\n          params,\n          requiredParams: ['profileId', 'id'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"update\",\n      value: function update(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.1/userprofiles/{profileId}/remarketingLists').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PUT'\n          }, options),\n          params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Remarketinglists;\n  }();\n\n  dfareporting_v3_1.Resource$Remarketinglists = Resource$Remarketinglists;\n\n  var Resource$Remarketinglistshares = /*#__PURE__*/function () {\n    function Resource$Remarketinglistshares(context) {\n      _classCallCheck(this, Resource$Remarketinglistshares);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Remarketinglistshares, [{\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.1/userprofiles/{profileId}/remarketingListShares/{remarketingListId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['profileId', 'remarketingListId'],\n          pathParams: ['profileId', 'remarketingListId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"patch\",\n      value: function patch(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.1/userprofiles/{profileId}/remarketingListShares').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PATCH'\n          }, options),\n          params,\n          requiredParams: ['profileId', 'remarketingListId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"update\",\n      value: function update(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.1/userprofiles/{profileId}/remarketingListShares').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PUT'\n          }, options),\n          params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Remarketinglistshares;\n  }();\n\n  dfareporting_v3_1.Resource$Remarketinglistshares = Resource$Remarketinglistshares;\n\n  var Resource$Reports = /*#__PURE__*/function () {\n    function Resource$Reports(context) {\n      _classCallCheck(this, Resource$Reports);\n\n      this.context = context;\n      this.compatibleFields = new Resource$Reports$Compatiblefields(this.context);\n      this.files = new Resource$Reports$Files(this.context);\n    }\n\n    _createClass(Resource$Reports, [{\n      key: \"delete\",\n      value: function _delete(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.1/userprofiles/{profileId}/reports/{reportId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'DELETE'\n          }, options),\n          params,\n          requiredParams: ['profileId', 'reportId'],\n          pathParams: ['profileId', 'reportId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.1/userprofiles/{profileId}/reports/{reportId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['profileId', 'reportId'],\n          pathParams: ['profileId', 'reportId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"insert\",\n      value: function insert(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.1/userprofiles/{profileId}/reports').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.1/userprofiles/{profileId}/reports').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"patch\",\n      value: function patch(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.1/userprofiles/{profileId}/reports/{reportId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PATCH'\n          }, options),\n          params,\n          requiredParams: ['profileId', 'reportId'],\n          pathParams: ['profileId', 'reportId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"run\",\n      value: function run(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.1/userprofiles/{profileId}/reports/{reportId}/run').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['profileId', 'reportId'],\n          pathParams: ['profileId', 'reportId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"update\",\n      value: function update(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.1/userprofiles/{profileId}/reports/{reportId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PUT'\n          }, options),\n          params,\n          requiredParams: ['profileId', 'reportId'],\n          pathParams: ['profileId', 'reportId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Reports;\n  }();\n\n  dfareporting_v3_1.Resource$Reports = Resource$Reports;\n\n  var Resource$Reports$Compatiblefields = /*#__PURE__*/function () {\n    function Resource$Reports$Compatiblefields(context) {\n      _classCallCheck(this, Resource$Reports$Compatiblefields);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Reports$Compatiblefields, [{\n      key: \"query\",\n      value: function query(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.1/userprofiles/{profileId}/reports/compatiblefields/query').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Reports$Compatiblefields;\n  }();\n\n  dfareporting_v3_1.Resource$Reports$Compatiblefields = Resource$Reports$Compatiblefields;\n\n  var Resource$Reports$Files = /*#__PURE__*/function () {\n    function Resource$Reports$Files(context) {\n      _classCallCheck(this, Resource$Reports$Files);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Reports$Files, [{\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.1/userprofiles/{profileId}/reports/{reportId}/files/{fileId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['profileId', 'reportId', 'fileId'],\n          pathParams: ['fileId', 'profileId', 'reportId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.1/userprofiles/{profileId}/reports/{reportId}/files').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['profileId', 'reportId'],\n          pathParams: ['profileId', 'reportId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Reports$Files;\n  }();\n\n  dfareporting_v3_1.Resource$Reports$Files = Resource$Reports$Files;\n\n  var Resource$Sites = /*#__PURE__*/function () {\n    function Resource$Sites(context) {\n      _classCallCheck(this, Resource$Sites);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Sites, [{\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.1/userprofiles/{profileId}/sites/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['profileId', 'id'],\n          pathParams: ['id', 'profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"insert\",\n      value: function insert(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.1/userprofiles/{profileId}/sites').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.1/userprofiles/{profileId}/sites').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"patch\",\n      value: function patch(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.1/userprofiles/{profileId}/sites').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PATCH'\n          }, options),\n          params,\n          requiredParams: ['profileId', 'id'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"update\",\n      value: function update(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.1/userprofiles/{profileId}/sites').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PUT'\n          }, options),\n          params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Sites;\n  }();\n\n  dfareporting_v3_1.Resource$Sites = Resource$Sites;\n\n  var Resource$Sizes = /*#__PURE__*/function () {\n    function Resource$Sizes(context) {\n      _classCallCheck(this, Resource$Sizes);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Sizes, [{\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.1/userprofiles/{profileId}/sizes/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['profileId', 'id'],\n          pathParams: ['id', 'profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"insert\",\n      value: function insert(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.1/userprofiles/{profileId}/sizes').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.1/userprofiles/{profileId}/sizes').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Sizes;\n  }();\n\n  dfareporting_v3_1.Resource$Sizes = Resource$Sizes;\n\n  var Resource$Subaccounts = /*#__PURE__*/function () {\n    function Resource$Subaccounts(context) {\n      _classCallCheck(this, Resource$Subaccounts);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Subaccounts, [{\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.1/userprofiles/{profileId}/subaccounts/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['profileId', 'id'],\n          pathParams: ['id', 'profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"insert\",\n      value: function insert(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.1/userprofiles/{profileId}/subaccounts').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.1/userprofiles/{profileId}/subaccounts').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"patch\",\n      value: function patch(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.1/userprofiles/{profileId}/subaccounts').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PATCH'\n          }, options),\n          params,\n          requiredParams: ['profileId', 'id'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"update\",\n      value: function update(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.1/userprofiles/{profileId}/subaccounts').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PUT'\n          }, options),\n          params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Subaccounts;\n  }();\n\n  dfareporting_v3_1.Resource$Subaccounts = Resource$Subaccounts;\n\n  var Resource$Targetableremarketinglists = /*#__PURE__*/function () {\n    function Resource$Targetableremarketinglists(context) {\n      _classCallCheck(this, Resource$Targetableremarketinglists);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Targetableremarketinglists, [{\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.1/userprofiles/{profileId}/targetableRemarketingLists/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['profileId', 'id'],\n          pathParams: ['id', 'profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.1/userprofiles/{profileId}/targetableRemarketingLists').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['profileId', 'advertiserId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Targetableremarketinglists;\n  }();\n\n  dfareporting_v3_1.Resource$Targetableremarketinglists = Resource$Targetableremarketinglists;\n\n  var Resource$Targetingtemplates = /*#__PURE__*/function () {\n    function Resource$Targetingtemplates(context) {\n      _classCallCheck(this, Resource$Targetingtemplates);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Targetingtemplates, [{\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.1/userprofiles/{profileId}/targetingTemplates/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['profileId', 'id'],\n          pathParams: ['id', 'profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"insert\",\n      value: function insert(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.1/userprofiles/{profileId}/targetingTemplates').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.1/userprofiles/{profileId}/targetingTemplates').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"patch\",\n      value: function patch(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.1/userprofiles/{profileId}/targetingTemplates').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PATCH'\n          }, options),\n          params,\n          requiredParams: ['profileId', 'id'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"update\",\n      value: function update(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.1/userprofiles/{profileId}/targetingTemplates').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PUT'\n          }, options),\n          params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Targetingtemplates;\n  }();\n\n  dfareporting_v3_1.Resource$Targetingtemplates = Resource$Targetingtemplates;\n\n  var Resource$Userprofiles = /*#__PURE__*/function () {\n    function Resource$Userprofiles(context) {\n      _classCallCheck(this, Resource$Userprofiles);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Userprofiles, [{\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.1/userprofiles/{profileId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.1/userprofiles').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: [],\n          pathParams: [],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Userprofiles;\n  }();\n\n  dfareporting_v3_1.Resource$Userprofiles = Resource$Userprofiles;\n\n  var Resource$Userrolepermissiongroups = /*#__PURE__*/function () {\n    function Resource$Userrolepermissiongroups(context) {\n      _classCallCheck(this, Resource$Userrolepermissiongroups);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Userrolepermissiongroups, [{\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.1/userprofiles/{profileId}/userRolePermissionGroups/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['profileId', 'id'],\n          pathParams: ['id', 'profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.1/userprofiles/{profileId}/userRolePermissionGroups').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Userrolepermissiongroups;\n  }();\n\n  dfareporting_v3_1.Resource$Userrolepermissiongroups = Resource$Userrolepermissiongroups;\n\n  var Resource$Userrolepermissions = /*#__PURE__*/function () {\n    function Resource$Userrolepermissions(context) {\n      _classCallCheck(this, Resource$Userrolepermissions);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Userrolepermissions, [{\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.1/userprofiles/{profileId}/userRolePermissions/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['profileId', 'id'],\n          pathParams: ['id', 'profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.1/userprofiles/{profileId}/userRolePermissions').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Userrolepermissions;\n  }();\n\n  dfareporting_v3_1.Resource$Userrolepermissions = Resource$Userrolepermissions;\n\n  var Resource$Userroles = /*#__PURE__*/function () {\n    function Resource$Userroles(context) {\n      _classCallCheck(this, Resource$Userroles);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Userroles, [{\n      key: \"delete\",\n      value: function _delete(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.1/userprofiles/{profileId}/userRoles/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'DELETE'\n          }, options),\n          params,\n          requiredParams: ['profileId', 'id'],\n          pathParams: ['id', 'profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.1/userprofiles/{profileId}/userRoles/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['profileId', 'id'],\n          pathParams: ['id', 'profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"insert\",\n      value: function insert(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.1/userprofiles/{profileId}/userRoles').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.1/userprofiles/{profileId}/userRoles').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"patch\",\n      value: function patch(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.1/userprofiles/{profileId}/userRoles').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PATCH'\n          }, options),\n          params,\n          requiredParams: ['profileId', 'id'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"update\",\n      value: function update(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.1/userprofiles/{profileId}/userRoles').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PUT'\n          }, options),\n          params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Userroles;\n  }();\n\n  dfareporting_v3_1.Resource$Userroles = Resource$Userroles;\n\n  var Resource$Videoformats = /*#__PURE__*/function () {\n    function Resource$Videoformats(context) {\n      _classCallCheck(this, Resource$Videoformats);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Videoformats, [{\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.1/userprofiles/{profileId}/videoFormats/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['profileId', 'id'],\n          pathParams: ['id', 'profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.1/userprofiles/{profileId}/videoFormats').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Videoformats;\n  }();\n\n  dfareporting_v3_1.Resource$Videoformats = Resource$Videoformats;\n})(dfareporting_v3_1 = exports.dfareporting_v3_1 || (exports.dfareporting_v3_1 = {}));","map":{"version":3,"sources":["/Users/amandapoetker-alles/Desktop/campaign-dashboard/node_modules/googleapis/build/src/apis/dfareporting/v3.1.js"],"names":["Object","defineProperty","exports","value","googleapis_common_1","require","dfareporting_v3_1","Dfareporting","options","google","context","_options","accountActiveAdSummaries","Resource$Accountactiveadsummaries","accountPermissionGroups","Resource$Accountpermissiongroups","accountPermissions","Resource$Accountpermissions","accounts","Resource$Accounts","accountUserProfiles","Resource$Accountuserprofiles","ads","Resource$Ads","advertiserGroups","Resource$Advertisergroups","advertiserLandingPages","Resource$Advertiserlandingpages","advertisers","Resource$Advertisers","browsers","Resource$Browsers","campaignCreativeAssociations","Resource$Campaigncreativeassociations","campaigns","Resource$Campaigns","changeLogs","Resource$Changelogs","cities","Resource$Cities","connectionTypes","Resource$Connectiontypes","contentCategories","Resource$Contentcategories","conversions","Resource$Conversions","countries","Resource$Countries","creativeAssets","Resource$Creativeassets","creativeFields","Resource$Creativefields","creativeFieldValues","Resource$Creativefieldvalues","creativeGroups","Resource$Creativegroups","creatives","Resource$Creatives","dimensionValues","Resource$Dimensionvalues","directorySiteContacts","Resource$Directorysitecontacts","directorySites","Resource$Directorysites","dynamicTargetingKeys","Resource$Dynamictargetingkeys","eventTags","Resource$Eventtags","files","Resource$Files","floodlightActivities","Resource$Floodlightactivities","floodlightActivityGroups","Resource$Floodlightactivitygroups","floodlightConfigurations","Resource$Floodlightconfigurations","inventoryItems","Resource$Inventoryitems","languages","Resource$Languages","metros","Resource$Metros","mobileApps","Resource$Mobileapps","mobileCarriers","Resource$Mobilecarriers","operatingSystems","Resource$Operatingsystems","operatingSystemVersions","Resource$Operatingsystemversions","orderDocuments","Resource$Orderdocuments","orders","Resource$Orders","placementGroups","Resource$Placementgroups","placements","Resource$Placements","placementStrategies","Resource$Placementstrategies","platformTypes","Resource$Platformtypes","postalCodes","Resource$Postalcodes","projects","Resource$Projects","regions","Resource$Regions","remarketingLists","Resource$Remarketinglists","remarketingListShares","Resource$Remarketinglistshares","reports","Resource$Reports","sites","Resource$Sites","sizes","Resource$Sizes","subaccounts","Resource$Subaccounts","targetableRemarketingLists","Resource$Targetableremarketinglists","targetingTemplates","Resource$Targetingtemplates","userProfiles","Resource$Userprofiles","userRolePermissionGroups","Resource$Userrolepermissiongroups","userRolePermissions","Resource$Userrolepermissions","userRoles","Resource$Userroles","videoFormats","Resource$Videoformats","paramsOrCallback","optionsOrCallback","callback","params","rootUrl","parameters","assign","url","replace","method","requiredParams","pathParams","createAPIRequest","mediaUrl","compatibleFields","Resource$Reports$Compatiblefields","Resource$Reports$Files"],"mappings":"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","sourcesContent":["\"use strict\";\n/**\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst googleapis_common_1 = require(\"googleapis-common\");\n// tslint:disable: no-any\n// tslint:disable: class-name\n// tslint:disable: variable-name\n// tslint:disable: jsdoc-format\n// tslint:disable: no-namespace\nvar dfareporting_v3_1;\n(function (dfareporting_v3_1) {\n    /**\n     * DCM/DFA Reporting And Trafficking API\n     *\n     * Manages your DoubleClick Campaign Manager ad campaigns and reports.\n     *\n     * @example\n     * const {google} = require('googleapis');\n     * const dfareporting = google.dfareporting('v3.1');\n     *\n     * @namespace dfareporting\n     * @type {Function}\n     * @version v3.1\n     * @variation v3.1\n     * @param {object=} options Options for Dfareporting\n     */\n    class Dfareporting {\n        constructor(options, google) {\n            this.context = { _options: options || {}, google };\n            this.accountActiveAdSummaries =\n                new Resource$Accountactiveadsummaries(this.context);\n            this.accountPermissionGroups =\n                new Resource$Accountpermissiongroups(this.context);\n            this.accountPermissions = new Resource$Accountpermissions(this.context);\n            this.accounts = new Resource$Accounts(this.context);\n            this.accountUserProfiles = new Resource$Accountuserprofiles(this.context);\n            this.ads = new Resource$Ads(this.context);\n            this.advertiserGroups = new Resource$Advertisergroups(this.context);\n            this.advertiserLandingPages =\n                new Resource$Advertiserlandingpages(this.context);\n            this.advertisers = new Resource$Advertisers(this.context);\n            this.browsers = new Resource$Browsers(this.context);\n            this.campaignCreativeAssociations =\n                new Resource$Campaigncreativeassociations(this.context);\n            this.campaigns = new Resource$Campaigns(this.context);\n            this.changeLogs = new Resource$Changelogs(this.context);\n            this.cities = new Resource$Cities(this.context);\n            this.connectionTypes = new Resource$Connectiontypes(this.context);\n            this.contentCategories = new Resource$Contentcategories(this.context);\n            this.conversions = new Resource$Conversions(this.context);\n            this.countries = new Resource$Countries(this.context);\n            this.creativeAssets = new Resource$Creativeassets(this.context);\n            this.creativeFields = new Resource$Creativefields(this.context);\n            this.creativeFieldValues = new Resource$Creativefieldvalues(this.context);\n            this.creativeGroups = new Resource$Creativegroups(this.context);\n            this.creatives = new Resource$Creatives(this.context);\n            this.dimensionValues = new Resource$Dimensionvalues(this.context);\n            this.directorySiteContacts =\n                new Resource$Directorysitecontacts(this.context);\n            this.directorySites = new Resource$Directorysites(this.context);\n            this.dynamicTargetingKeys =\n                new Resource$Dynamictargetingkeys(this.context);\n            this.eventTags = new Resource$Eventtags(this.context);\n            this.files = new Resource$Files(this.context);\n            this.floodlightActivities =\n                new Resource$Floodlightactivities(this.context);\n            this.floodlightActivityGroups =\n                new Resource$Floodlightactivitygroups(this.context);\n            this.floodlightConfigurations =\n                new Resource$Floodlightconfigurations(this.context);\n            this.inventoryItems = new Resource$Inventoryitems(this.context);\n            this.languages = new Resource$Languages(this.context);\n            this.metros = new Resource$Metros(this.context);\n            this.mobileApps = new Resource$Mobileapps(this.context);\n            this.mobileCarriers = new Resource$Mobilecarriers(this.context);\n            this.operatingSystems = new Resource$Operatingsystems(this.context);\n            this.operatingSystemVersions =\n                new Resource$Operatingsystemversions(this.context);\n            this.orderDocuments = new Resource$Orderdocuments(this.context);\n            this.orders = new Resource$Orders(this.context);\n            this.placementGroups = new Resource$Placementgroups(this.context);\n            this.placements = new Resource$Placements(this.context);\n            this.placementStrategies = new Resource$Placementstrategies(this.context);\n            this.platformTypes = new Resource$Platformtypes(this.context);\n            this.postalCodes = new Resource$Postalcodes(this.context);\n            this.projects = new Resource$Projects(this.context);\n            this.regions = new Resource$Regions(this.context);\n            this.remarketingLists = new Resource$Remarketinglists(this.context);\n            this.remarketingListShares =\n                new Resource$Remarketinglistshares(this.context);\n            this.reports = new Resource$Reports(this.context);\n            this.sites = new Resource$Sites(this.context);\n            this.sizes = new Resource$Sizes(this.context);\n            this.subaccounts = new Resource$Subaccounts(this.context);\n            this.targetableRemarketingLists =\n                new Resource$Targetableremarketinglists(this.context);\n            this.targetingTemplates = new Resource$Targetingtemplates(this.context);\n            this.userProfiles = new Resource$Userprofiles(this.context);\n            this.userRolePermissionGroups =\n                new Resource$Userrolepermissiongroups(this.context);\n            this.userRolePermissions = new Resource$Userrolepermissions(this.context);\n            this.userRoles = new Resource$Userroles(this.context);\n            this.videoFormats = new Resource$Videoformats(this.context);\n        }\n    }\n    dfareporting_v3_1.Dfareporting = Dfareporting;\n    class Resource$Accountactiveadsummaries {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.1/userprofiles/{profileId}/accountActiveAdSummaries/{summaryAccountId}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['profileId', 'summaryAccountId'],\n                pathParams: ['profileId', 'summaryAccountId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    dfareporting_v3_1.Resource$Accountactiveadsummaries = Resource$Accountactiveadsummaries;\n    class Resource$Accountpermissiongroups {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.1/userprofiles/{profileId}/accountPermissionGroups/{id}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['id', 'profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.1/userprofiles/{profileId}/accountPermissionGroups')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    dfareporting_v3_1.Resource$Accountpermissiongroups = Resource$Accountpermissiongroups;\n    class Resource$Accountpermissions {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.1/userprofiles/{profileId}/accountPermissions/{id}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['id', 'profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.1/userprofiles/{profileId}/accountPermissions')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    dfareporting_v3_1.Resource$Accountpermissions = Resource$Accountpermissions;\n    class Resource$Accounts {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.1/userprofiles/{profileId}/accounts/{id}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['id', 'profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.1/userprofiles/{profileId}/accounts')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        patch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.1/userprofiles/{profileId}/accounts')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PATCH'\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        update(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.1/userprofiles/{profileId}/accounts')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PUT'\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    dfareporting_v3_1.Resource$Accounts = Resource$Accounts;\n    class Resource$Accountuserprofiles {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.1/userprofiles/{profileId}/accountUserProfiles/{id}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['id', 'profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        insert(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.1/userprofiles/{profileId}/accountUserProfiles')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST'\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.1/userprofiles/{profileId}/accountUserProfiles')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        patch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.1/userprofiles/{profileId}/accountUserProfiles')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PATCH'\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        update(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.1/userprofiles/{profileId}/accountUserProfiles')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PUT'\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    dfareporting_v3_1.Resource$Accountuserprofiles = Resource$Accountuserprofiles;\n    class Resource$Ads {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.1/userprofiles/{profileId}/ads/{id}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['id', 'profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        insert(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/dfareporting/v3.1/userprofiles/{profileId}/ads')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST'\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/dfareporting/v3.1/userprofiles/{profileId}/ads')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        patch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/dfareporting/v3.1/userprofiles/{profileId}/ads')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PATCH'\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        update(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/dfareporting/v3.1/userprofiles/{profileId}/ads')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PUT'\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    dfareporting_v3_1.Resource$Ads = Resource$Ads;\n    class Resource$Advertisergroups {\n        constructor(context) {\n            this.context = context;\n        }\n        delete(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.1/userprofiles/{profileId}/advertiserGroups/{id}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'DELETE'\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['id', 'profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.1/userprofiles/{profileId}/advertiserGroups/{id}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['id', 'profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        insert(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.1/userprofiles/{profileId}/advertiserGroups')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST'\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.1/userprofiles/{profileId}/advertiserGroups')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        patch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.1/userprofiles/{profileId}/advertiserGroups')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PATCH'\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        update(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.1/userprofiles/{profileId}/advertiserGroups')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PUT'\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    dfareporting_v3_1.Resource$Advertisergroups = Resource$Advertisergroups;\n    class Resource$Advertiserlandingpages {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.1/userprofiles/{profileId}/advertiserLandingPages/{id}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['id', 'profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        insert(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.1/userprofiles/{profileId}/advertiserLandingPages')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST'\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.1/userprofiles/{profileId}/advertiserLandingPages')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        patch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.1/userprofiles/{profileId}/advertiserLandingPages')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PATCH'\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        update(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.1/userprofiles/{profileId}/advertiserLandingPages')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PUT'\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    dfareporting_v3_1.Resource$Advertiserlandingpages = Resource$Advertiserlandingpages;\n    class Resource$Advertisers {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.1/userprofiles/{profileId}/advertisers/{id}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['id', 'profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        insert(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.1/userprofiles/{profileId}/advertisers')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST'\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.1/userprofiles/{profileId}/advertisers')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        patch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.1/userprofiles/{profileId}/advertisers')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PATCH'\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        update(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.1/userprofiles/{profileId}/advertisers')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PUT'\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    dfareporting_v3_1.Resource$Advertisers = Resource$Advertisers;\n    class Resource$Browsers {\n        constructor(context) {\n            this.context = context;\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.1/userprofiles/{profileId}/browsers')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    dfareporting_v3_1.Resource$Browsers = Resource$Browsers;\n    class Resource$Campaigncreativeassociations {\n        constructor(context) {\n            this.context = context;\n        }\n        insert(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.1/userprofiles/{profileId}/campaigns/{campaignId}/campaignCreativeAssociations')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST'\n                }, options),\n                params,\n                requiredParams: ['profileId', 'campaignId'],\n                pathParams: ['campaignId', 'profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.1/userprofiles/{profileId}/campaigns/{campaignId}/campaignCreativeAssociations')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['profileId', 'campaignId'],\n                pathParams: ['campaignId', 'profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    dfareporting_v3_1.Resource$Campaigncreativeassociations = Resource$Campaigncreativeassociations;\n    class Resource$Campaigns {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.1/userprofiles/{profileId}/campaigns/{id}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['id', 'profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        insert(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.1/userprofiles/{profileId}/campaigns')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST'\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.1/userprofiles/{profileId}/campaigns')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        patch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.1/userprofiles/{profileId}/campaigns')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PATCH'\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        update(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.1/userprofiles/{profileId}/campaigns')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PUT'\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    dfareporting_v3_1.Resource$Campaigns = Resource$Campaigns;\n    class Resource$Changelogs {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.1/userprofiles/{profileId}/changeLogs/{id}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['id', 'profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.1/userprofiles/{profileId}/changeLogs')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    dfareporting_v3_1.Resource$Changelogs = Resource$Changelogs;\n    class Resource$Cities {\n        constructor(context) {\n            this.context = context;\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.1/userprofiles/{profileId}/cities')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    dfareporting_v3_1.Resource$Cities = Resource$Cities;\n    class Resource$Connectiontypes {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.1/userprofiles/{profileId}/connectionTypes/{id}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['id', 'profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.1/userprofiles/{profileId}/connectionTypes')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    dfareporting_v3_1.Resource$Connectiontypes = Resource$Connectiontypes;\n    class Resource$Contentcategories {\n        constructor(context) {\n            this.context = context;\n        }\n        delete(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.1/userprofiles/{profileId}/contentCategories/{id}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'DELETE'\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['id', 'profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.1/userprofiles/{profileId}/contentCategories/{id}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['id', 'profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        insert(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.1/userprofiles/{profileId}/contentCategories')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST'\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.1/userprofiles/{profileId}/contentCategories')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        patch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.1/userprofiles/{profileId}/contentCategories')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PATCH'\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        update(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.1/userprofiles/{profileId}/contentCategories')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PUT'\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    dfareporting_v3_1.Resource$Contentcategories = Resource$Contentcategories;\n    class Resource$Conversions {\n        constructor(context) {\n            this.context = context;\n        }\n        batchinsert(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.1/userprofiles/{profileId}/conversions/batchinsert')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST'\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        batchupdate(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.1/userprofiles/{profileId}/conversions/batchupdate')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST'\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    dfareporting_v3_1.Resource$Conversions = Resource$Conversions;\n    class Resource$Countries {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.1/userprofiles/{profileId}/countries/{dartId}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['profileId', 'dartId'],\n                pathParams: ['dartId', 'profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.1/userprofiles/{profileId}/countries')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    dfareporting_v3_1.Resource$Countries = Resource$Countries;\n    class Resource$Creativeassets {\n        constructor(context) {\n            this.context = context;\n        }\n        insert(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.1/userprofiles/{profileId}/creativeAssets/{advertiserId}/creativeAssets')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST'\n                }, options),\n                params,\n                mediaUrl: (rootUrl +\n                    '/upload/dfareporting/v3.1/userprofiles/{profileId}/creativeAssets/{advertiserId}/creativeAssets')\n                    .replace(/([^:]\\/)\\/+/g, '$1'),\n                requiredParams: ['profileId', 'advertiserId'],\n                pathParams: ['advertiserId', 'profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    dfareporting_v3_1.Resource$Creativeassets = Resource$Creativeassets;\n    class Resource$Creativefields {\n        constructor(context) {\n            this.context = context;\n        }\n        delete(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.1/userprofiles/{profileId}/creativeFields/{id}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'DELETE'\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['id', 'profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.1/userprofiles/{profileId}/creativeFields/{id}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['id', 'profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        insert(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.1/userprofiles/{profileId}/creativeFields')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST'\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.1/userprofiles/{profileId}/creativeFields')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        patch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.1/userprofiles/{profileId}/creativeFields')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PATCH'\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        update(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.1/userprofiles/{profileId}/creativeFields')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PUT'\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    dfareporting_v3_1.Resource$Creativefields = Resource$Creativefields;\n    class Resource$Creativefieldvalues {\n        constructor(context) {\n            this.context = context;\n        }\n        delete(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.1/userprofiles/{profileId}/creativeFields/{creativeFieldId}/creativeFieldValues/{id}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'DELETE'\n                }, options),\n                params,\n                requiredParams: ['profileId', 'creativeFieldId', 'id'],\n                pathParams: ['creativeFieldId', 'id', 'profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.1/userprofiles/{profileId}/creativeFields/{creativeFieldId}/creativeFieldValues/{id}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['profileId', 'creativeFieldId', 'id'],\n                pathParams: ['creativeFieldId', 'id', 'profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        insert(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.1/userprofiles/{profileId}/creativeFields/{creativeFieldId}/creativeFieldValues')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST'\n                }, options),\n                params,\n                requiredParams: ['profileId', 'creativeFieldId'],\n                pathParams: ['creativeFieldId', 'profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.1/userprofiles/{profileId}/creativeFields/{creativeFieldId}/creativeFieldValues')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['profileId', 'creativeFieldId'],\n                pathParams: ['creativeFieldId', 'profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        patch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.1/userprofiles/{profileId}/creativeFields/{creativeFieldId}/creativeFieldValues')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PATCH'\n                }, options),\n                params,\n                requiredParams: ['profileId', 'creativeFieldId', 'id'],\n                pathParams: ['creativeFieldId', 'profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        update(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.1/userprofiles/{profileId}/creativeFields/{creativeFieldId}/creativeFieldValues')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PUT'\n                }, options),\n                params,\n                requiredParams: ['profileId', 'creativeFieldId'],\n                pathParams: ['creativeFieldId', 'profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    dfareporting_v3_1.Resource$Creativefieldvalues = Resource$Creativefieldvalues;\n    class Resource$Creativegroups {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.1/userprofiles/{profileId}/creativeGroups/{id}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['id', 'profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        insert(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.1/userprofiles/{profileId}/creativeGroups')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST'\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.1/userprofiles/{profileId}/creativeGroups')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        patch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.1/userprofiles/{profileId}/creativeGroups')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PATCH'\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        update(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.1/userprofiles/{profileId}/creativeGroups')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PUT'\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    dfareporting_v3_1.Resource$Creativegroups = Resource$Creativegroups;\n    class Resource$Creatives {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.1/userprofiles/{profileId}/creatives/{id}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['id', 'profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        insert(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.1/userprofiles/{profileId}/creatives')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST'\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.1/userprofiles/{profileId}/creatives')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        patch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.1/userprofiles/{profileId}/creatives')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PATCH'\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        update(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.1/userprofiles/{profileId}/creatives')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PUT'\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    dfareporting_v3_1.Resource$Creatives = Resource$Creatives;\n    class Resource$Dimensionvalues {\n        constructor(context) {\n            this.context = context;\n        }\n        query(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.1/userprofiles/{profileId}/dimensionvalues/query')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST'\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    dfareporting_v3_1.Resource$Dimensionvalues = Resource$Dimensionvalues;\n    class Resource$Directorysitecontacts {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.1/userprofiles/{profileId}/directorySiteContacts/{id}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['id', 'profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.1/userprofiles/{profileId}/directorySiteContacts')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    dfareporting_v3_1.Resource$Directorysitecontacts = Resource$Directorysitecontacts;\n    class Resource$Directorysites {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.1/userprofiles/{profileId}/directorySites/{id}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['id', 'profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        insert(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.1/userprofiles/{profileId}/directorySites')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST'\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.1/userprofiles/{profileId}/directorySites')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    dfareporting_v3_1.Resource$Directorysites = Resource$Directorysites;\n    class Resource$Dynamictargetingkeys {\n        constructor(context) {\n            this.context = context;\n        }\n        delete(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.1/userprofiles/{profileId}/dynamicTargetingKeys/{objectId}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'DELETE'\n                }, options),\n                params,\n                requiredParams: ['profileId', 'objectId', 'name', 'objectType'],\n                pathParams: ['objectId', 'profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        insert(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.1/userprofiles/{profileId}/dynamicTargetingKeys')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST'\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.1/userprofiles/{profileId}/dynamicTargetingKeys')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    dfareporting_v3_1.Resource$Dynamictargetingkeys = Resource$Dynamictargetingkeys;\n    class Resource$Eventtags {\n        constructor(context) {\n            this.context = context;\n        }\n        delete(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.1/userprofiles/{profileId}/eventTags/{id}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'DELETE'\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['id', 'profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.1/userprofiles/{profileId}/eventTags/{id}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['id', 'profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        insert(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.1/userprofiles/{profileId}/eventTags')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST'\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.1/userprofiles/{profileId}/eventTags')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        patch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.1/userprofiles/{profileId}/eventTags')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PATCH'\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        update(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.1/userprofiles/{profileId}/eventTags')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PUT'\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    dfareporting_v3_1.Resource$Eventtags = Resource$Eventtags;\n    class Resource$Files {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.1/reports/{reportId}/files/{fileId}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['reportId', 'fileId'],\n                pathParams: ['fileId', 'reportId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.1/userprofiles/{profileId}/files')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    dfareporting_v3_1.Resource$Files = Resource$Files;\n    class Resource$Floodlightactivities {\n        constructor(context) {\n            this.context = context;\n        }\n        delete(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.1/userprofiles/{profileId}/floodlightActivities/{id}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'DELETE'\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['id', 'profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        generatetag(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.1/userprofiles/{profileId}/floodlightActivities/generatetag')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST'\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.1/userprofiles/{profileId}/floodlightActivities/{id}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['id', 'profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        insert(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.1/userprofiles/{profileId}/floodlightActivities')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST'\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.1/userprofiles/{profileId}/floodlightActivities')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        patch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.1/userprofiles/{profileId}/floodlightActivities')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PATCH'\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        update(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.1/userprofiles/{profileId}/floodlightActivities')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PUT'\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    dfareporting_v3_1.Resource$Floodlightactivities = Resource$Floodlightactivities;\n    class Resource$Floodlightactivitygroups {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.1/userprofiles/{profileId}/floodlightActivityGroups/{id}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['id', 'profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        insert(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.1/userprofiles/{profileId}/floodlightActivityGroups')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST'\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.1/userprofiles/{profileId}/floodlightActivityGroups')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        patch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.1/userprofiles/{profileId}/floodlightActivityGroups')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PATCH'\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        update(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.1/userprofiles/{profileId}/floodlightActivityGroups')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PUT'\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    dfareporting_v3_1.Resource$Floodlightactivitygroups = Resource$Floodlightactivitygroups;\n    class Resource$Floodlightconfigurations {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.1/userprofiles/{profileId}/floodlightConfigurations/{id}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['id', 'profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.1/userprofiles/{profileId}/floodlightConfigurations')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        patch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.1/userprofiles/{profileId}/floodlightConfigurations')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PATCH'\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        update(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.1/userprofiles/{profileId}/floodlightConfigurations')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PUT'\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    dfareporting_v3_1.Resource$Floodlightconfigurations = Resource$Floodlightconfigurations;\n    class Resource$Inventoryitems {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.1/userprofiles/{profileId}/projects/{projectId}/inventoryItems/{id}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['profileId', 'projectId', 'id'],\n                pathParams: ['id', 'profileId', 'projectId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.1/userprofiles/{profileId}/projects/{projectId}/inventoryItems')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['profileId', 'projectId'],\n                pathParams: ['profileId', 'projectId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    dfareporting_v3_1.Resource$Inventoryitems = Resource$Inventoryitems;\n    class Resource$Languages {\n        constructor(context) {\n            this.context = context;\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.1/userprofiles/{profileId}/languages')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    dfareporting_v3_1.Resource$Languages = Resource$Languages;\n    class Resource$Metros {\n        constructor(context) {\n            this.context = context;\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.1/userprofiles/{profileId}/metros')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    dfareporting_v3_1.Resource$Metros = Resource$Metros;\n    class Resource$Mobileapps {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.1/userprofiles/{profileId}/mobileApps/{id}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['id', 'profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.1/userprofiles/{profileId}/mobileApps')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    dfareporting_v3_1.Resource$Mobileapps = Resource$Mobileapps;\n    class Resource$Mobilecarriers {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.1/userprofiles/{profileId}/mobileCarriers/{id}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['id', 'profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.1/userprofiles/{profileId}/mobileCarriers')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    dfareporting_v3_1.Resource$Mobilecarriers = Resource$Mobilecarriers;\n    class Resource$Operatingsystems {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.1/userprofiles/{profileId}/operatingSystems/{dartId}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['profileId', 'dartId'],\n                pathParams: ['dartId', 'profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.1/userprofiles/{profileId}/operatingSystems')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    dfareporting_v3_1.Resource$Operatingsystems = Resource$Operatingsystems;\n    class Resource$Operatingsystemversions {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.1/userprofiles/{profileId}/operatingSystemVersions/{id}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['id', 'profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.1/userprofiles/{profileId}/operatingSystemVersions')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    dfareporting_v3_1.Resource$Operatingsystemversions = Resource$Operatingsystemversions;\n    class Resource$Orderdocuments {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.1/userprofiles/{profileId}/projects/{projectId}/orderDocuments/{id}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['profileId', 'projectId', 'id'],\n                pathParams: ['id', 'profileId', 'projectId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.1/userprofiles/{profileId}/projects/{projectId}/orderDocuments')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['profileId', 'projectId'],\n                pathParams: ['profileId', 'projectId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    dfareporting_v3_1.Resource$Orderdocuments = Resource$Orderdocuments;\n    class Resource$Orders {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.1/userprofiles/{profileId}/projects/{projectId}/orders/{id}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['profileId', 'projectId', 'id'],\n                pathParams: ['id', 'profileId', 'projectId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.1/userprofiles/{profileId}/projects/{projectId}/orders')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['profileId', 'projectId'],\n                pathParams: ['profileId', 'projectId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    dfareporting_v3_1.Resource$Orders = Resource$Orders;\n    class Resource$Placementgroups {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.1/userprofiles/{profileId}/placementGroups/{id}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['id', 'profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        insert(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.1/userprofiles/{profileId}/placementGroups')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST'\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.1/userprofiles/{profileId}/placementGroups')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        patch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.1/userprofiles/{profileId}/placementGroups')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PATCH'\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        update(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.1/userprofiles/{profileId}/placementGroups')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PUT'\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    dfareporting_v3_1.Resource$Placementgroups = Resource$Placementgroups;\n    class Resource$Placements {\n        constructor(context) {\n            this.context = context;\n        }\n        generatetags(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.1/userprofiles/{profileId}/placements/generatetags')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST'\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.1/userprofiles/{profileId}/placements/{id}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['id', 'profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        insert(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.1/userprofiles/{profileId}/placements')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST'\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.1/userprofiles/{profileId}/placements')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        patch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.1/userprofiles/{profileId}/placements')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PATCH'\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        update(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.1/userprofiles/{profileId}/placements')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PUT'\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    dfareporting_v3_1.Resource$Placements = Resource$Placements;\n    class Resource$Placementstrategies {\n        constructor(context) {\n            this.context = context;\n        }\n        delete(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.1/userprofiles/{profileId}/placementStrategies/{id}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'DELETE'\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['id', 'profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.1/userprofiles/{profileId}/placementStrategies/{id}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['id', 'profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        insert(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.1/userprofiles/{profileId}/placementStrategies')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST'\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.1/userprofiles/{profileId}/placementStrategies')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        patch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.1/userprofiles/{profileId}/placementStrategies')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PATCH'\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        update(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.1/userprofiles/{profileId}/placementStrategies')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PUT'\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    dfareporting_v3_1.Resource$Placementstrategies = Resource$Placementstrategies;\n    class Resource$Platformtypes {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.1/userprofiles/{profileId}/platformTypes/{id}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['id', 'profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.1/userprofiles/{profileId}/platformTypes')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    dfareporting_v3_1.Resource$Platformtypes = Resource$Platformtypes;\n    class Resource$Postalcodes {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.1/userprofiles/{profileId}/postalCodes/{code}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['profileId', 'code'],\n                pathParams: ['code', 'profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.1/userprofiles/{profileId}/postalCodes')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    dfareporting_v3_1.Resource$Postalcodes = Resource$Postalcodes;\n    class Resource$Projects {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.1/userprofiles/{profileId}/projects/{id}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['id', 'profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.1/userprofiles/{profileId}/projects')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    dfareporting_v3_1.Resource$Projects = Resource$Projects;\n    class Resource$Regions {\n        constructor(context) {\n            this.context = context;\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.1/userprofiles/{profileId}/regions')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    dfareporting_v3_1.Resource$Regions = Resource$Regions;\n    class Resource$Remarketinglists {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.1/userprofiles/{profileId}/remarketingLists/{id}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['id', 'profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        insert(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.1/userprofiles/{profileId}/remarketingLists')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST'\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.1/userprofiles/{profileId}/remarketingLists')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['profileId', 'advertiserId'],\n                pathParams: ['profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        patch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.1/userprofiles/{profileId}/remarketingLists')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PATCH'\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        update(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.1/userprofiles/{profileId}/remarketingLists')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PUT'\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    dfareporting_v3_1.Resource$Remarketinglists = Resource$Remarketinglists;\n    class Resource$Remarketinglistshares {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.1/userprofiles/{profileId}/remarketingListShares/{remarketingListId}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['profileId', 'remarketingListId'],\n                pathParams: ['profileId', 'remarketingListId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        patch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.1/userprofiles/{profileId}/remarketingListShares')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PATCH'\n                }, options),\n                params,\n                requiredParams: ['profileId', 'remarketingListId'],\n                pathParams: ['profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        update(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.1/userprofiles/{profileId}/remarketingListShares')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PUT'\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    dfareporting_v3_1.Resource$Remarketinglistshares = Resource$Remarketinglistshares;\n    class Resource$Reports {\n        constructor(context) {\n            this.context = context;\n            this.compatibleFields =\n                new Resource$Reports$Compatiblefields(this.context);\n            this.files = new Resource$Reports$Files(this.context);\n        }\n        delete(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.1/userprofiles/{profileId}/reports/{reportId}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'DELETE'\n                }, options),\n                params,\n                requiredParams: ['profileId', 'reportId'],\n                pathParams: ['profileId', 'reportId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.1/userprofiles/{profileId}/reports/{reportId}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['profileId', 'reportId'],\n                pathParams: ['profileId', 'reportId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        insert(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.1/userprofiles/{profileId}/reports')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST'\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.1/userprofiles/{profileId}/reports')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        patch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.1/userprofiles/{profileId}/reports/{reportId}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PATCH'\n                }, options),\n                params,\n                requiredParams: ['profileId', 'reportId'],\n                pathParams: ['profileId', 'reportId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        run(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.1/userprofiles/{profileId}/reports/{reportId}/run')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST'\n                }, options),\n                params,\n                requiredParams: ['profileId', 'reportId'],\n                pathParams: ['profileId', 'reportId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        update(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.1/userprofiles/{profileId}/reports/{reportId}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PUT'\n                }, options),\n                params,\n                requiredParams: ['profileId', 'reportId'],\n                pathParams: ['profileId', 'reportId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    dfareporting_v3_1.Resource$Reports = Resource$Reports;\n    class Resource$Reports$Compatiblefields {\n        constructor(context) {\n            this.context = context;\n        }\n        query(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.1/userprofiles/{profileId}/reports/compatiblefields/query')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST'\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    dfareporting_v3_1.Resource$Reports$Compatiblefields = Resource$Reports$Compatiblefields;\n    class Resource$Reports$Files {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.1/userprofiles/{profileId}/reports/{reportId}/files/{fileId}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['profileId', 'reportId', 'fileId'],\n                pathParams: ['fileId', 'profileId', 'reportId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.1/userprofiles/{profileId}/reports/{reportId}/files')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['profileId', 'reportId'],\n                pathParams: ['profileId', 'reportId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    dfareporting_v3_1.Resource$Reports$Files = Resource$Reports$Files;\n    class Resource$Sites {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.1/userprofiles/{profileId}/sites/{id}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['id', 'profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        insert(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.1/userprofiles/{profileId}/sites')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST'\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.1/userprofiles/{profileId}/sites')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        patch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.1/userprofiles/{profileId}/sites')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PATCH'\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        update(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.1/userprofiles/{profileId}/sites')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PUT'\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    dfareporting_v3_1.Resource$Sites = Resource$Sites;\n    class Resource$Sizes {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.1/userprofiles/{profileId}/sizes/{id}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['id', 'profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        insert(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.1/userprofiles/{profileId}/sizes')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST'\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.1/userprofiles/{profileId}/sizes')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    dfareporting_v3_1.Resource$Sizes = Resource$Sizes;\n    class Resource$Subaccounts {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.1/userprofiles/{profileId}/subaccounts/{id}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['id', 'profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        insert(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.1/userprofiles/{profileId}/subaccounts')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST'\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.1/userprofiles/{profileId}/subaccounts')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        patch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.1/userprofiles/{profileId}/subaccounts')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PATCH'\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        update(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.1/userprofiles/{profileId}/subaccounts')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PUT'\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    dfareporting_v3_1.Resource$Subaccounts = Resource$Subaccounts;\n    class Resource$Targetableremarketinglists {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.1/userprofiles/{profileId}/targetableRemarketingLists/{id}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['id', 'profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.1/userprofiles/{profileId}/targetableRemarketingLists')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['profileId', 'advertiserId'],\n                pathParams: ['profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    dfareporting_v3_1.Resource$Targetableremarketinglists = Resource$Targetableremarketinglists;\n    class Resource$Targetingtemplates {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.1/userprofiles/{profileId}/targetingTemplates/{id}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['id', 'profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        insert(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.1/userprofiles/{profileId}/targetingTemplates')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST'\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.1/userprofiles/{profileId}/targetingTemplates')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        patch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.1/userprofiles/{profileId}/targetingTemplates')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PATCH'\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        update(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.1/userprofiles/{profileId}/targetingTemplates')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PUT'\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    dfareporting_v3_1.Resource$Targetingtemplates = Resource$Targetingtemplates;\n    class Resource$Userprofiles {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/dfareporting/v3.1/userprofiles/{profileId}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/dfareporting/v3.1/userprofiles')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: [],\n                pathParams: [],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    dfareporting_v3_1.Resource$Userprofiles = Resource$Userprofiles;\n    class Resource$Userrolepermissiongroups {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.1/userprofiles/{profileId}/userRolePermissionGroups/{id}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['id', 'profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.1/userprofiles/{profileId}/userRolePermissionGroups')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    dfareporting_v3_1.Resource$Userrolepermissiongroups = Resource$Userrolepermissiongroups;\n    class Resource$Userrolepermissions {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.1/userprofiles/{profileId}/userRolePermissions/{id}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['id', 'profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.1/userprofiles/{profileId}/userRolePermissions')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    dfareporting_v3_1.Resource$Userrolepermissions = Resource$Userrolepermissions;\n    class Resource$Userroles {\n        constructor(context) {\n            this.context = context;\n        }\n        delete(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.1/userprofiles/{profileId}/userRoles/{id}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'DELETE'\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['id', 'profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.1/userprofiles/{profileId}/userRoles/{id}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['id', 'profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        insert(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.1/userprofiles/{profileId}/userRoles')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST'\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.1/userprofiles/{profileId}/userRoles')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        patch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.1/userprofiles/{profileId}/userRoles')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PATCH'\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        update(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.1/userprofiles/{profileId}/userRoles')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PUT'\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    dfareporting_v3_1.Resource$Userroles = Resource$Userroles;\n    class Resource$Videoformats {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.1/userprofiles/{profileId}/videoFormats/{id}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['id', 'profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.1/userprofiles/{profileId}/videoFormats')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    dfareporting_v3_1.Resource$Videoformats = Resource$Videoformats;\n})(dfareporting_v3_1 = exports.dfareporting_v3_1 || (exports.dfareporting_v3_1 = {}));\n//# sourceMappingURL=v3.1.js.map"]},"metadata":{},"sourceType":"script"}