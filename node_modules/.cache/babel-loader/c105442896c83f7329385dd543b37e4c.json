{"ast":null,"code":"\"use strict\";\n/**\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar _createClass = require(\"/Users/amandapoetker-alles/Desktop/campaign-dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _classCallCheck = require(\"/Users/amandapoetker-alles/Desktop/campaign-dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar googleapis_common_1 = require(\"googleapis-common\"); // tslint:disable: no-any\n// tslint:disable: class-name\n// tslint:disable: variable-name\n// tslint:disable: jsdoc-format\n// tslint:disable: no-namespace\n\n\nvar licensing_v1;\n\n(function (licensing_v1) {\n  /**\n   * Enterprise License Manager API\n   *\n   * Views and manages licenses for your domain.\n   *\n   * @example\n   * const {google} = require('googleapis');\n   * const licensing = google.licensing('v1');\n   *\n   * @namespace licensing\n   * @type {Function}\n   * @version v1\n   * @variation v1\n   * @param {object=} options Options for Licensing\n   */\n  var Licensing = function Licensing(options, google) {\n    _classCallCheck(this, Licensing);\n\n    this.context = {\n      _options: options || {},\n      google\n    };\n    this.licenseAssignments = new Resource$Licenseassignments(this.context);\n  };\n\n  licensing_v1.Licensing = Licensing;\n\n  var Resource$Licenseassignments = /*#__PURE__*/function () {\n    function Resource$Licenseassignments(context) {\n      _classCallCheck(this, Resource$Licenseassignments);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Licenseassignments, [{\n      key: \"delete\",\n      value: function _delete(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/apps/licensing/v1/product/{productId}/sku/{skuId}/user/{userId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'DELETE'\n          }, options),\n          params,\n          requiredParams: ['productId', 'skuId', 'userId'],\n          pathParams: ['productId', 'skuId', 'userId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/apps/licensing/v1/product/{productId}/sku/{skuId}/user/{userId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['productId', 'skuId', 'userId'],\n          pathParams: ['productId', 'skuId', 'userId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"insert\",\n      value: function insert(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/apps/licensing/v1/product/{productId}/sku/{skuId}/user').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['productId', 'skuId'],\n          pathParams: ['productId', 'skuId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"listForProduct\",\n      value: function listForProduct(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/apps/licensing/v1/product/{productId}/users').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['productId', 'customerId'],\n          pathParams: ['productId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"listForProductAndSku\",\n      value: function listForProductAndSku(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/apps/licensing/v1/product/{productId}/sku/{skuId}/users').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['productId', 'skuId', 'customerId'],\n          pathParams: ['productId', 'skuId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"patch\",\n      value: function patch(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/apps/licensing/v1/product/{productId}/sku/{skuId}/user/{userId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PATCH'\n          }, options),\n          params,\n          requiredParams: ['productId', 'skuId', 'userId'],\n          pathParams: ['productId', 'skuId', 'userId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"update\",\n      value: function update(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/apps/licensing/v1/product/{productId}/sku/{skuId}/user/{userId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PUT'\n          }, options),\n          params,\n          requiredParams: ['productId', 'skuId', 'userId'],\n          pathParams: ['productId', 'skuId', 'userId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Licenseassignments;\n  }();\n\n  licensing_v1.Resource$Licenseassignments = Resource$Licenseassignments;\n})(licensing_v1 = exports.licensing_v1 || (exports.licensing_v1 = {}));","map":{"version":3,"sources":["/Users/amandapoetker-alles/Desktop/campaign-dashboard/node_modules/googleapis/build/src/apis/licensing/v1.js"],"names":["Object","defineProperty","exports","value","googleapis_common_1","require","licensing_v1","Licensing","options","google","context","_options","licenseAssignments","Resource$Licenseassignments","paramsOrCallback","optionsOrCallback","callback","params","rootUrl","parameters","assign","url","replace","method","requiredParams","pathParams","createAPIRequest"],"mappings":"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","sourcesContent":["\"use strict\";\n/**\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst googleapis_common_1 = require(\"googleapis-common\");\n// tslint:disable: no-any\n// tslint:disable: class-name\n// tslint:disable: variable-name\n// tslint:disable: jsdoc-format\n// tslint:disable: no-namespace\nvar licensing_v1;\n(function (licensing_v1) {\n    /**\n     * Enterprise License Manager API\n     *\n     * Views and manages licenses for your domain.\n     *\n     * @example\n     * const {google} = require('googleapis');\n     * const licensing = google.licensing('v1');\n     *\n     * @namespace licensing\n     * @type {Function}\n     * @version v1\n     * @variation v1\n     * @param {object=} options Options for Licensing\n     */\n    class Licensing {\n        constructor(options, google) {\n            this.context = { _options: options || {}, google };\n            this.licenseAssignments = new Resource$Licenseassignments(this.context);\n        }\n    }\n    licensing_v1.Licensing = Licensing;\n    class Resource$Licenseassignments {\n        constructor(context) {\n            this.context = context;\n        }\n        delete(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/apps/licensing/v1/product/{productId}/sku/{skuId}/user/{userId}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'DELETE'\n                }, options),\n                params,\n                requiredParams: ['productId', 'skuId', 'userId'],\n                pathParams: ['productId', 'skuId', 'userId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/apps/licensing/v1/product/{productId}/sku/{skuId}/user/{userId}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['productId', 'skuId', 'userId'],\n                pathParams: ['productId', 'skuId', 'userId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        insert(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/apps/licensing/v1/product/{productId}/sku/{skuId}/user')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST'\n                }, options),\n                params,\n                requiredParams: ['productId', 'skuId'],\n                pathParams: ['productId', 'skuId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        listForProduct(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/apps/licensing/v1/product/{productId}/users')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['productId', 'customerId'],\n                pathParams: ['productId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        listForProductAndSku(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/apps/licensing/v1/product/{productId}/sku/{skuId}/users')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['productId', 'skuId', 'customerId'],\n                pathParams: ['productId', 'skuId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        patch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/apps/licensing/v1/product/{productId}/sku/{skuId}/user/{userId}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PATCH'\n                }, options),\n                params,\n                requiredParams: ['productId', 'skuId', 'userId'],\n                pathParams: ['productId', 'skuId', 'userId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        update(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/apps/licensing/v1/product/{productId}/sku/{skuId}/user/{userId}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PUT'\n                }, options),\n                params,\n                requiredParams: ['productId', 'skuId', 'userId'],\n                pathParams: ['productId', 'skuId', 'userId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    licensing_v1.Resource$Licenseassignments = Resource$Licenseassignments;\n})(licensing_v1 = exports.licensing_v1 || (exports.licensing_v1 = {}));\n//# sourceMappingURL=v1.js.map"]},"metadata":{},"sourceType":"script"}