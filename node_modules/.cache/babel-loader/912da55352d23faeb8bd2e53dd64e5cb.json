{"ast":null,"code":"\"use strict\";\n/**\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar _createClass = require(\"/Users/amandapoetker-alles/Desktop/campaign-dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _classCallCheck = require(\"/Users/amandapoetker-alles/Desktop/campaign-dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar googleapis_common_1 = require(\"googleapis-common\"); // tslint:disable: no-any\n// tslint:disable: class-name\n// tslint:disable: variable-name\n// tslint:disable: jsdoc-format\n// tslint:disable: no-namespace\n\n\nvar datastore_v1beta1;\n\n(function (datastore_v1beta1) {\n  /**\n   * Cloud Datastore API\n   *\n   * Accesses the schemaless NoSQL database to provide fully managed, robust,\n   * scalable storage for your application.\n   *\n   * @example\n   * const {google} = require('googleapis');\n   * const datastore = google.datastore('v1beta1');\n   *\n   * @namespace datastore\n   * @type {Function}\n   * @version v1beta1\n   * @variation v1beta1\n   * @param {object=} options Options for Datastore\n   */\n  var Datastore = function Datastore(options, google) {\n    _classCallCheck(this, Datastore);\n\n    this.context = {\n      _options: options || {},\n      google\n    };\n    this.projects = new Resource$Projects(this.context);\n  };\n\n  datastore_v1beta1.Datastore = Datastore;\n\n  var Resource$Projects = /*#__PURE__*/function () {\n    function Resource$Projects(context) {\n      _classCallCheck(this, Resource$Projects);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Projects, [{\n      key: \"export\",\n      value: function _export(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://datastore.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1beta1/projects/{projectId}:export').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['projectId'],\n          pathParams: ['projectId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"import\",\n      value: function _import(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://datastore.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1beta1/projects/{projectId}:import').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['projectId'],\n          pathParams: ['projectId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Projects;\n  }();\n\n  datastore_v1beta1.Resource$Projects = Resource$Projects;\n})(datastore_v1beta1 = exports.datastore_v1beta1 || (exports.datastore_v1beta1 = {}));","map":{"version":3,"sources":["/Users/amandapoetker-alles/Desktop/campaign-dashboard/node_modules/googleapis/build/src/apis/datastore/v1beta1.js"],"names":["Object","defineProperty","exports","value","googleapis_common_1","require","datastore_v1beta1","Datastore","options","google","context","_options","projects","Resource$Projects","paramsOrCallback","optionsOrCallback","callback","params","rootUrl","parameters","assign","url","replace","method","requiredParams","pathParams","createAPIRequest"],"mappings":"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","sourcesContent":["\"use strict\";\n/**\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst googleapis_common_1 = require(\"googleapis-common\");\n// tslint:disable: no-any\n// tslint:disable: class-name\n// tslint:disable: variable-name\n// tslint:disable: jsdoc-format\n// tslint:disable: no-namespace\nvar datastore_v1beta1;\n(function (datastore_v1beta1) {\n    /**\n     * Cloud Datastore API\n     *\n     * Accesses the schemaless NoSQL database to provide fully managed, robust,\n     * scalable storage for your application.\n     *\n     * @example\n     * const {google} = require('googleapis');\n     * const datastore = google.datastore('v1beta1');\n     *\n     * @namespace datastore\n     * @type {Function}\n     * @version v1beta1\n     * @variation v1beta1\n     * @param {object=} options Options for Datastore\n     */\n    class Datastore {\n        constructor(options, google) {\n            this.context = { _options: options || {}, google };\n            this.projects = new Resource$Projects(this.context);\n        }\n    }\n    datastore_v1beta1.Datastore = Datastore;\n    class Resource$Projects {\n        constructor(context) {\n            this.context = context;\n        }\n        export(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://datastore.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1beta1/projects/{projectId}:export')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST'\n                }, options),\n                params,\n                requiredParams: ['projectId'],\n                pathParams: ['projectId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        import(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://datastore.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1beta1/projects/{projectId}:import').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST'\n                }, options),\n                params,\n                requiredParams: ['projectId'],\n                pathParams: ['projectId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    datastore_v1beta1.Resource$Projects = Resource$Projects;\n})(datastore_v1beta1 = exports.datastore_v1beta1 || (exports.datastore_v1beta1 = {}));\n//# sourceMappingURL=v1beta1.js.map"]},"metadata":{},"sourceType":"script"}