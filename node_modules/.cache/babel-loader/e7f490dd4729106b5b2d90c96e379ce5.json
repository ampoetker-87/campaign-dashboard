{"ast":null,"code":"\"use strict\"; // Copyright 2020 Google LLC\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//    http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nvar _createClass = require(\"/Users/amandapoetker-alles/Desktop/campaign-dashboard/Campaign-Planner/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _classCallCheck = require(\"/Users/amandapoetker-alles/Desktop/campaign-dashboard/Campaign-Planner/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.content_v2 = void 0;\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\n/* eslint-disable @typescript-eslint/class-name-casing */\n\n/* eslint-disable @typescript-eslint/no-unused-vars */\n\n/* eslint-disable @typescript-eslint/no-empty-interface */\n\n/* eslint-disable @typescript-eslint/no-namespace */\n\n/* eslint-disable no-irregular-whitespace */\n\nvar googleapis_common_1 = require(\"googleapis-common\");\n\nvar content_v2;\n\n(function (content_v2) {\n  /**\n   * Content API for Shopping\n   *\n   * Manage your product listings and accounts for Google Shopping\n   *\n   * @example\n   * ```js\n   * const {google} = require('googleapis');\n   * const content = google.content('v2');\n   * ```\n   */\n  var Content = function Content(options, google) {\n    _classCallCheck(this, Content);\n\n    this.context = {\n      _options: options || {},\n      google\n    };\n    this.accounts = new Resource$Accounts(this.context);\n    this.accountstatuses = new Resource$Accountstatuses(this.context);\n    this.accounttax = new Resource$Accounttax(this.context);\n    this.datafeeds = new Resource$Datafeeds(this.context);\n    this.datafeedstatuses = new Resource$Datafeedstatuses(this.context);\n    this.inventory = new Resource$Inventory(this.context);\n    this.liasettings = new Resource$Liasettings(this.context);\n    this.orderinvoices = new Resource$Orderinvoices(this.context);\n    this.orderreports = new Resource$Orderreports(this.context);\n    this.orderreturns = new Resource$Orderreturns(this.context);\n    this.orders = new Resource$Orders(this.context);\n    this.pos = new Resource$Pos(this.context);\n    this.products = new Resource$Products(this.context);\n    this.productstatuses = new Resource$Productstatuses(this.context);\n    this.shippingsettings = new Resource$Shippingsettings(this.context);\n  };\n\n  content_v2.Content = Content;\n\n  var Resource$Accounts = /*#__PURE__*/function () {\n    function Resource$Accounts(context) {\n      _classCallCheck(this, Resource$Accounts);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Accounts, [{\n      key: \"authinfo\",\n      value: function authinfo(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2/accounts/authinfo').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: [],\n          pathParams: [],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"claimwebsite\",\n      value: function claimwebsite(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2/{merchantId}/accounts/{accountId}/claimwebsite').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['merchantId', 'accountId'],\n          pathParams: ['accountId', 'merchantId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"custombatch\",\n      value: function custombatch(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2/accounts/batch').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: [],\n          pathParams: [],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"delete\",\n      value: function _delete(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2/{merchantId}/accounts/{accountId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'DELETE'\n          }, options),\n          params,\n          requiredParams: ['merchantId', 'accountId'],\n          pathParams: ['accountId', 'merchantId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2/{merchantId}/accounts/{accountId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['merchantId', 'accountId'],\n          pathParams: ['accountId', 'merchantId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"insert\",\n      value: function insert(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2/{merchantId}/accounts').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['merchantId'],\n          pathParams: ['merchantId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"link\",\n      value: function link(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2/{merchantId}/accounts/{accountId}/link').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['merchantId', 'accountId'],\n          pathParams: ['accountId', 'merchantId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2/{merchantId}/accounts').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['merchantId'],\n          pathParams: ['merchantId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"update\",\n      value: function update(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2/{merchantId}/accounts/{accountId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PUT'\n          }, options),\n          params,\n          requiredParams: ['merchantId', 'accountId'],\n          pathParams: ['accountId', 'merchantId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Accounts;\n  }();\n\n  content_v2.Resource$Accounts = Resource$Accounts;\n\n  var Resource$Accountstatuses = /*#__PURE__*/function () {\n    function Resource$Accountstatuses(context) {\n      _classCallCheck(this, Resource$Accountstatuses);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Accountstatuses, [{\n      key: \"custombatch\",\n      value: function custombatch(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2/accountstatuses/batch').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: [],\n          pathParams: [],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2/{merchantId}/accountstatuses/{accountId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['merchantId', 'accountId'],\n          pathParams: ['accountId', 'merchantId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2/{merchantId}/accountstatuses').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['merchantId'],\n          pathParams: ['merchantId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Accountstatuses;\n  }();\n\n  content_v2.Resource$Accountstatuses = Resource$Accountstatuses;\n\n  var Resource$Accounttax = /*#__PURE__*/function () {\n    function Resource$Accounttax(context) {\n      _classCallCheck(this, Resource$Accounttax);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Accounttax, [{\n      key: \"custombatch\",\n      value: function custombatch(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2/accounttax/batch').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: [],\n          pathParams: [],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2/{merchantId}/accounttax/{accountId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['merchantId', 'accountId'],\n          pathParams: ['accountId', 'merchantId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2/{merchantId}/accounttax').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['merchantId'],\n          pathParams: ['merchantId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"update\",\n      value: function update(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2/{merchantId}/accounttax/{accountId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PUT'\n          }, options),\n          params,\n          requiredParams: ['merchantId', 'accountId'],\n          pathParams: ['accountId', 'merchantId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Accounttax;\n  }();\n\n  content_v2.Resource$Accounttax = Resource$Accounttax;\n\n  var Resource$Datafeeds = /*#__PURE__*/function () {\n    function Resource$Datafeeds(context) {\n      _classCallCheck(this, Resource$Datafeeds);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Datafeeds, [{\n      key: \"custombatch\",\n      value: function custombatch(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2/datafeeds/batch').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: [],\n          pathParams: [],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"delete\",\n      value: function _delete(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2/{merchantId}/datafeeds/{datafeedId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'DELETE'\n          }, options),\n          params,\n          requiredParams: ['merchantId', 'datafeedId'],\n          pathParams: ['datafeedId', 'merchantId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"fetchnow\",\n      value: function fetchnow(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2/{merchantId}/datafeeds/{datafeedId}/fetchNow').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['merchantId', 'datafeedId'],\n          pathParams: ['datafeedId', 'merchantId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2/{merchantId}/datafeeds/{datafeedId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['merchantId', 'datafeedId'],\n          pathParams: ['datafeedId', 'merchantId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"insert\",\n      value: function insert(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2/{merchantId}/datafeeds').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['merchantId'],\n          pathParams: ['merchantId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2/{merchantId}/datafeeds').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['merchantId'],\n          pathParams: ['merchantId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"update\",\n      value: function update(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2/{merchantId}/datafeeds/{datafeedId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PUT'\n          }, options),\n          params,\n          requiredParams: ['merchantId', 'datafeedId'],\n          pathParams: ['datafeedId', 'merchantId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Datafeeds;\n  }();\n\n  content_v2.Resource$Datafeeds = Resource$Datafeeds;\n\n  var Resource$Datafeedstatuses = /*#__PURE__*/function () {\n    function Resource$Datafeedstatuses(context) {\n      _classCallCheck(this, Resource$Datafeedstatuses);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Datafeedstatuses, [{\n      key: \"custombatch\",\n      value: function custombatch(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2/datafeedstatuses/batch').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: [],\n          pathParams: [],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2/{merchantId}/datafeedstatuses/{datafeedId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['merchantId', 'datafeedId'],\n          pathParams: ['datafeedId', 'merchantId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2/{merchantId}/datafeedstatuses').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['merchantId'],\n          pathParams: ['merchantId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Datafeedstatuses;\n  }();\n\n  content_v2.Resource$Datafeedstatuses = Resource$Datafeedstatuses;\n\n  var Resource$Inventory = /*#__PURE__*/function () {\n    function Resource$Inventory(context) {\n      _classCallCheck(this, Resource$Inventory);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Inventory, [{\n      key: \"custombatch\",\n      value: function custombatch(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2/inventory/batch').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: [],\n          pathParams: [],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"set\",\n      value: function set(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2/{merchantId}/inventory/{storeCode}/products/{productId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['merchantId', 'storeCode', 'productId'],\n          pathParams: ['merchantId', 'productId', 'storeCode'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Inventory;\n  }();\n\n  content_v2.Resource$Inventory = Resource$Inventory;\n\n  var Resource$Liasettings = /*#__PURE__*/function () {\n    function Resource$Liasettings(context) {\n      _classCallCheck(this, Resource$Liasettings);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Liasettings, [{\n      key: \"custombatch\",\n      value: function custombatch(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2/liasettings/batch').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: [],\n          pathParams: [],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2/{merchantId}/liasettings/{accountId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['merchantId', 'accountId'],\n          pathParams: ['accountId', 'merchantId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"getaccessiblegmbaccounts\",\n      value: function getaccessiblegmbaccounts(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2/{merchantId}/liasettings/{accountId}/accessiblegmbaccounts').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['merchantId', 'accountId'],\n          pathParams: ['accountId', 'merchantId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2/{merchantId}/liasettings').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['merchantId'],\n          pathParams: ['merchantId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"listposdataproviders\",\n      value: function listposdataproviders(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2/liasettings/posdataproviders').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: [],\n          pathParams: [],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"requestgmbaccess\",\n      value: function requestgmbaccess(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2/{merchantId}/liasettings/{accountId}/requestgmbaccess').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['merchantId', 'accountId', 'gmbEmail'],\n          pathParams: ['accountId', 'merchantId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"requestinventoryverification\",\n      value: function requestinventoryverification(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2/{merchantId}/liasettings/{accountId}/requestinventoryverification/{country}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['merchantId', 'accountId', 'country'],\n          pathParams: ['accountId', 'country', 'merchantId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"setinventoryverificationcontact\",\n      value: function setinventoryverificationcontact(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2/{merchantId}/liasettings/{accountId}/setinventoryverificationcontact').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['merchantId', 'accountId', 'country', 'language', 'contactName', 'contactEmail'],\n          pathParams: ['accountId', 'merchantId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"setposdataprovider\",\n      value: function setposdataprovider(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2/{merchantId}/liasettings/{accountId}/setposdataprovider').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['merchantId', 'accountId', 'country'],\n          pathParams: ['accountId', 'merchantId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"update\",\n      value: function update(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2/{merchantId}/liasettings/{accountId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PUT'\n          }, options),\n          params,\n          requiredParams: ['merchantId', 'accountId'],\n          pathParams: ['accountId', 'merchantId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Liasettings;\n  }();\n\n  content_v2.Resource$Liasettings = Resource$Liasettings;\n\n  var Resource$Orderinvoices = /*#__PURE__*/function () {\n    function Resource$Orderinvoices(context) {\n      _classCallCheck(this, Resource$Orderinvoices);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Orderinvoices, [{\n      key: \"createchargeinvoice\",\n      value: function createchargeinvoice(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2/{merchantId}/orderinvoices/{orderId}/createChargeInvoice').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['merchantId', 'orderId'],\n          pathParams: ['merchantId', 'orderId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"createrefundinvoice\",\n      value: function createrefundinvoice(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2/{merchantId}/orderinvoices/{orderId}/createRefundInvoice').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['merchantId', 'orderId'],\n          pathParams: ['merchantId', 'orderId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Orderinvoices;\n  }();\n\n  content_v2.Resource$Orderinvoices = Resource$Orderinvoices;\n\n  var Resource$Orderreports = /*#__PURE__*/function () {\n    function Resource$Orderreports(context) {\n      _classCallCheck(this, Resource$Orderreports);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Orderreports, [{\n      key: \"listdisbursements\",\n      value: function listdisbursements(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2/{merchantId}/orderreports/disbursements').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['merchantId'],\n          pathParams: ['merchantId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"listtransactions\",\n      value: function listtransactions(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2/{merchantId}/orderreports/disbursements/{disbursementId}/transactions').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['merchantId', 'disbursementId'],\n          pathParams: ['disbursementId', 'merchantId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Orderreports;\n  }();\n\n  content_v2.Resource$Orderreports = Resource$Orderreports;\n\n  var Resource$Orderreturns = /*#__PURE__*/function () {\n    function Resource$Orderreturns(context) {\n      _classCallCheck(this, Resource$Orderreturns);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Orderreturns, [{\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2/{merchantId}/orderreturns/{returnId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['merchantId', 'returnId'],\n          pathParams: ['merchantId', 'returnId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2/{merchantId}/orderreturns').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['merchantId'],\n          pathParams: ['merchantId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Orderreturns;\n  }();\n\n  content_v2.Resource$Orderreturns = Resource$Orderreturns;\n\n  var Resource$Orders = /*#__PURE__*/function () {\n    function Resource$Orders(context) {\n      _classCallCheck(this, Resource$Orders);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Orders, [{\n      key: \"acknowledge\",\n      value: function acknowledge(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2/{merchantId}/orders/{orderId}/acknowledge').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['merchantId', 'orderId'],\n          pathParams: ['merchantId', 'orderId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"advancetestorder\",\n      value: function advancetestorder(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2/{merchantId}/testorders/{orderId}/advance').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['merchantId', 'orderId'],\n          pathParams: ['merchantId', 'orderId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"cancel\",\n      value: function cancel(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2/{merchantId}/orders/{orderId}/cancel').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['merchantId', 'orderId'],\n          pathParams: ['merchantId', 'orderId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"cancellineitem\",\n      value: function cancellineitem(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2/{merchantId}/orders/{orderId}/cancelLineItem').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['merchantId', 'orderId'],\n          pathParams: ['merchantId', 'orderId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"canceltestorderbycustomer\",\n      value: function canceltestorderbycustomer(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2/{merchantId}/testorders/{orderId}/cancelByCustomer').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['merchantId', 'orderId'],\n          pathParams: ['merchantId', 'orderId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"createtestorder\",\n      value: function createtestorder(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2/{merchantId}/testorders').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['merchantId'],\n          pathParams: ['merchantId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"createtestreturn\",\n      value: function createtestreturn(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2/{merchantId}/orders/{orderId}/testreturn').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['merchantId', 'orderId'],\n          pathParams: ['merchantId', 'orderId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"custombatch\",\n      value: function custombatch(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2/orders/batch').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: [],\n          pathParams: [],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2/{merchantId}/orders/{orderId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['merchantId', 'orderId'],\n          pathParams: ['merchantId', 'orderId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"getbymerchantorderid\",\n      value: function getbymerchantorderid(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2/{merchantId}/ordersbymerchantid/{merchantOrderId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['merchantId', 'merchantOrderId'],\n          pathParams: ['merchantId', 'merchantOrderId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"gettestordertemplate\",\n      value: function gettestordertemplate(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2/{merchantId}/testordertemplates/{templateName}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['merchantId', 'templateName'],\n          pathParams: ['merchantId', 'templateName'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"instorerefundlineitem\",\n      value: function instorerefundlineitem(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2/{merchantId}/orders/{orderId}/inStoreRefundLineItem').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['merchantId', 'orderId'],\n          pathParams: ['merchantId', 'orderId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2/{merchantId}/orders').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['merchantId'],\n          pathParams: ['merchantId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"refund\",\n      value: function refund(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2/{merchantId}/orders/{orderId}/refund').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['merchantId', 'orderId'],\n          pathParams: ['merchantId', 'orderId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"rejectreturnlineitem\",\n      value: function rejectreturnlineitem(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2/{merchantId}/orders/{orderId}/rejectReturnLineItem').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['merchantId', 'orderId'],\n          pathParams: ['merchantId', 'orderId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"returnlineitem\",\n      value: function returnlineitem(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2/{merchantId}/orders/{orderId}/returnLineItem').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['merchantId', 'orderId'],\n          pathParams: ['merchantId', 'orderId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"returnrefundlineitem\",\n      value: function returnrefundlineitem(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2/{merchantId}/orders/{orderId}/returnRefundLineItem').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['merchantId', 'orderId'],\n          pathParams: ['merchantId', 'orderId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"setlineitemmetadata\",\n      value: function setlineitemmetadata(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2/{merchantId}/orders/{orderId}/setLineItemMetadata').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['merchantId', 'orderId'],\n          pathParams: ['merchantId', 'orderId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"shiplineitems\",\n      value: function shiplineitems(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2/{merchantId}/orders/{orderId}/shipLineItems').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['merchantId', 'orderId'],\n          pathParams: ['merchantId', 'orderId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"updatelineitemshippingdetails\",\n      value: function updatelineitemshippingdetails(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2/{merchantId}/orders/{orderId}/updateLineItemShippingDetails').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['merchantId', 'orderId'],\n          pathParams: ['merchantId', 'orderId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"updatemerchantorderid\",\n      value: function updatemerchantorderid(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2/{merchantId}/orders/{orderId}/updateMerchantOrderId').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['merchantId', 'orderId'],\n          pathParams: ['merchantId', 'orderId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"updateshipment\",\n      value: function updateshipment(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2/{merchantId}/orders/{orderId}/updateShipment').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['merchantId', 'orderId'],\n          pathParams: ['merchantId', 'orderId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Orders;\n  }();\n\n  content_v2.Resource$Orders = Resource$Orders;\n\n  var Resource$Pos = /*#__PURE__*/function () {\n    function Resource$Pos(context) {\n      _classCallCheck(this, Resource$Pos);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Pos, [{\n      key: \"custombatch\",\n      value: function custombatch(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2/pos/batch').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: [],\n          pathParams: [],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"delete\",\n      value: function _delete(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2/{merchantId}/pos/{targetMerchantId}/store/{storeCode}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'DELETE'\n          }, options),\n          params,\n          requiredParams: ['merchantId', 'targetMerchantId', 'storeCode'],\n          pathParams: ['merchantId', 'storeCode', 'targetMerchantId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2/{merchantId}/pos/{targetMerchantId}/store/{storeCode}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['merchantId', 'targetMerchantId', 'storeCode'],\n          pathParams: ['merchantId', 'storeCode', 'targetMerchantId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"insert\",\n      value: function insert(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2/{merchantId}/pos/{targetMerchantId}/store').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['merchantId', 'targetMerchantId'],\n          pathParams: ['merchantId', 'targetMerchantId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"inventory\",\n      value: function inventory(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2/{merchantId}/pos/{targetMerchantId}/inventory').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['merchantId', 'targetMerchantId'],\n          pathParams: ['merchantId', 'targetMerchantId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2/{merchantId}/pos/{targetMerchantId}/store').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['merchantId', 'targetMerchantId'],\n          pathParams: ['merchantId', 'targetMerchantId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"sale\",\n      value: function sale(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2/{merchantId}/pos/{targetMerchantId}/sale').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['merchantId', 'targetMerchantId'],\n          pathParams: ['merchantId', 'targetMerchantId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Pos;\n  }();\n\n  content_v2.Resource$Pos = Resource$Pos;\n\n  var Resource$Products = /*#__PURE__*/function () {\n    function Resource$Products(context) {\n      _classCallCheck(this, Resource$Products);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Products, [{\n      key: \"custombatch\",\n      value: function custombatch(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2/products/batch').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: [],\n          pathParams: [],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"delete\",\n      value: function _delete(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2/{merchantId}/products/{productId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'DELETE'\n          }, options),\n          params,\n          requiredParams: ['merchantId', 'productId'],\n          pathParams: ['merchantId', 'productId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2/{merchantId}/products/{productId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['merchantId', 'productId'],\n          pathParams: ['merchantId', 'productId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"insert\",\n      value: function insert(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2/{merchantId}/products').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['merchantId'],\n          pathParams: ['merchantId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2/{merchantId}/products').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['merchantId'],\n          pathParams: ['merchantId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Products;\n  }();\n\n  content_v2.Resource$Products = Resource$Products;\n\n  var Resource$Productstatuses = /*#__PURE__*/function () {\n    function Resource$Productstatuses(context) {\n      _classCallCheck(this, Resource$Productstatuses);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Productstatuses, [{\n      key: \"custombatch\",\n      value: function custombatch(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2/productstatuses/batch').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: [],\n          pathParams: [],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2/{merchantId}/productstatuses/{productId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['merchantId', 'productId'],\n          pathParams: ['merchantId', 'productId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2/{merchantId}/productstatuses').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['merchantId'],\n          pathParams: ['merchantId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Productstatuses;\n  }();\n\n  content_v2.Resource$Productstatuses = Resource$Productstatuses;\n\n  var Resource$Shippingsettings = /*#__PURE__*/function () {\n    function Resource$Shippingsettings(context) {\n      _classCallCheck(this, Resource$Shippingsettings);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Shippingsettings, [{\n      key: \"custombatch\",\n      value: function custombatch(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2/shippingsettings/batch').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: [],\n          pathParams: [],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2/{merchantId}/shippingsettings/{accountId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['merchantId', 'accountId'],\n          pathParams: ['accountId', 'merchantId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"getsupportedcarriers\",\n      value: function getsupportedcarriers(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2/{merchantId}/supportedCarriers').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['merchantId'],\n          pathParams: ['merchantId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"getsupportedholidays\",\n      value: function getsupportedholidays(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2/{merchantId}/supportedHolidays').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['merchantId'],\n          pathParams: ['merchantId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"getsupportedpickupservices\",\n      value: function getsupportedpickupservices(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2/{merchantId}/supportedPickupServices').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['merchantId'],\n          pathParams: ['merchantId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2/{merchantId}/shippingsettings').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['merchantId'],\n          pathParams: ['merchantId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"update\",\n      value: function update(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2/{merchantId}/shippingsettings/{accountId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PUT'\n          }, options),\n          params,\n          requiredParams: ['merchantId', 'accountId'],\n          pathParams: ['accountId', 'merchantId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Shippingsettings;\n  }();\n\n  content_v2.Resource$Shippingsettings = Resource$Shippingsettings;\n})(content_v2 = exports.content_v2 || (exports.content_v2 = {}));","map":{"version":3,"sources":["/Users/amandapoetker-alles/Desktop/campaign-dashboard/Campaign-Planner/node_modules/googleapis/build/src/apis/content/v2.js"],"names":["Object","defineProperty","exports","value","content_v2","googleapis_common_1","require","Content","options","google","context","_options","accounts","Resource$Accounts","accountstatuses","Resource$Accountstatuses","accounttax","Resource$Accounttax","datafeeds","Resource$Datafeeds","datafeedstatuses","Resource$Datafeedstatuses","inventory","Resource$Inventory","liasettings","Resource$Liasettings","orderinvoices","Resource$Orderinvoices","orderreports","Resource$Orderreports","orderreturns","Resource$Orderreturns","orders","Resource$Orders","pos","Resource$Pos","products","Resource$Products","productstatuses","Resource$Productstatuses","shippingsettings","Resource$Shippingsettings","paramsOrCallback","optionsOrCallback","callback","params","rootUrl","parameters","assign","url","replace","method","requiredParams","pathParams","createAPIRequest"],"mappings":"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","sourcesContent":["\"use strict\";\n// Copyright 2020 Google LLC\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//    http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.content_v2 = void 0;\n/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/class-name-casing */\n/* eslint-disable @typescript-eslint/no-unused-vars */\n/* eslint-disable @typescript-eslint/no-empty-interface */\n/* eslint-disable @typescript-eslint/no-namespace */\n/* eslint-disable no-irregular-whitespace */\nconst googleapis_common_1 = require(\"googleapis-common\");\nvar content_v2;\n(function (content_v2) {\n    /**\n     * Content API for Shopping\n     *\n     * Manage your product listings and accounts for Google Shopping\n     *\n     * @example\n     * ```js\n     * const {google} = require('googleapis');\n     * const content = google.content('v2');\n     * ```\n     */\n    class Content {\n        constructor(options, google) {\n            this.context = {\n                _options: options || {},\n                google,\n            };\n            this.accounts = new Resource$Accounts(this.context);\n            this.accountstatuses = new Resource$Accountstatuses(this.context);\n            this.accounttax = new Resource$Accounttax(this.context);\n            this.datafeeds = new Resource$Datafeeds(this.context);\n            this.datafeedstatuses = new Resource$Datafeedstatuses(this.context);\n            this.inventory = new Resource$Inventory(this.context);\n            this.liasettings = new Resource$Liasettings(this.context);\n            this.orderinvoices = new Resource$Orderinvoices(this.context);\n            this.orderreports = new Resource$Orderreports(this.context);\n            this.orderreturns = new Resource$Orderreturns(this.context);\n            this.orders = new Resource$Orders(this.context);\n            this.pos = new Resource$Pos(this.context);\n            this.products = new Resource$Products(this.context);\n            this.productstatuses = new Resource$Productstatuses(this.context);\n            this.shippingsettings = new Resource$Shippingsettings(this.context);\n        }\n    }\n    content_v2.Content = Content;\n    class Resource$Accounts {\n        constructor(context) {\n            this.context = context;\n        }\n        authinfo(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/content/v2/accounts/authinfo').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: [],\n                pathParams: [],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        claimwebsite(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/content/v2/{merchantId}/accounts/{accountId}/claimwebsite').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['merchantId', 'accountId'],\n                pathParams: ['accountId', 'merchantId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        custombatch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/content/v2/accounts/batch').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: [],\n                pathParams: [],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        delete(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/content/v2/{merchantId}/accounts/{accountId}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'DELETE',\n                }, options),\n                params,\n                requiredParams: ['merchantId', 'accountId'],\n                pathParams: ['accountId', 'merchantId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/content/v2/{merchantId}/accounts/{accountId}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['merchantId', 'accountId'],\n                pathParams: ['accountId', 'merchantId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        insert(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/content/v2/{merchantId}/accounts').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['merchantId'],\n                pathParams: ['merchantId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        link(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/content/v2/{merchantId}/accounts/{accountId}/link').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['merchantId', 'accountId'],\n                pathParams: ['accountId', 'merchantId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/content/v2/{merchantId}/accounts').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['merchantId'],\n                pathParams: ['merchantId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        update(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/content/v2/{merchantId}/accounts/{accountId}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PUT',\n                }, options),\n                params,\n                requiredParams: ['merchantId', 'accountId'],\n                pathParams: ['accountId', 'merchantId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    content_v2.Resource$Accounts = Resource$Accounts;\n    class Resource$Accountstatuses {\n        constructor(context) {\n            this.context = context;\n        }\n        custombatch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/content/v2/accountstatuses/batch').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: [],\n                pathParams: [],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/content/v2/{merchantId}/accountstatuses/{accountId}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['merchantId', 'accountId'],\n                pathParams: ['accountId', 'merchantId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/content/v2/{merchantId}/accountstatuses').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['merchantId'],\n                pathParams: ['merchantId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    content_v2.Resource$Accountstatuses = Resource$Accountstatuses;\n    class Resource$Accounttax {\n        constructor(context) {\n            this.context = context;\n        }\n        custombatch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/content/v2/accounttax/batch').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: [],\n                pathParams: [],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/content/v2/{merchantId}/accounttax/{accountId}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['merchantId', 'accountId'],\n                pathParams: ['accountId', 'merchantId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/content/v2/{merchantId}/accounttax').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['merchantId'],\n                pathParams: ['merchantId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        update(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/content/v2/{merchantId}/accounttax/{accountId}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PUT',\n                }, options),\n                params,\n                requiredParams: ['merchantId', 'accountId'],\n                pathParams: ['accountId', 'merchantId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    content_v2.Resource$Accounttax = Resource$Accounttax;\n    class Resource$Datafeeds {\n        constructor(context) {\n            this.context = context;\n        }\n        custombatch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/content/v2/datafeeds/batch').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: [],\n                pathParams: [],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        delete(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/content/v2/{merchantId}/datafeeds/{datafeedId}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'DELETE',\n                }, options),\n                params,\n                requiredParams: ['merchantId', 'datafeedId'],\n                pathParams: ['datafeedId', 'merchantId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        fetchnow(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/content/v2/{merchantId}/datafeeds/{datafeedId}/fetchNow').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['merchantId', 'datafeedId'],\n                pathParams: ['datafeedId', 'merchantId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/content/v2/{merchantId}/datafeeds/{datafeedId}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['merchantId', 'datafeedId'],\n                pathParams: ['datafeedId', 'merchantId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        insert(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/content/v2/{merchantId}/datafeeds').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['merchantId'],\n                pathParams: ['merchantId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/content/v2/{merchantId}/datafeeds').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['merchantId'],\n                pathParams: ['merchantId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        update(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/content/v2/{merchantId}/datafeeds/{datafeedId}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PUT',\n                }, options),\n                params,\n                requiredParams: ['merchantId', 'datafeedId'],\n                pathParams: ['datafeedId', 'merchantId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    content_v2.Resource$Datafeeds = Resource$Datafeeds;\n    class Resource$Datafeedstatuses {\n        constructor(context) {\n            this.context = context;\n        }\n        custombatch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/content/v2/datafeedstatuses/batch').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: [],\n                pathParams: [],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/content/v2/{merchantId}/datafeedstatuses/{datafeedId}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['merchantId', 'datafeedId'],\n                pathParams: ['datafeedId', 'merchantId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/content/v2/{merchantId}/datafeedstatuses').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['merchantId'],\n                pathParams: ['merchantId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    content_v2.Resource$Datafeedstatuses = Resource$Datafeedstatuses;\n    class Resource$Inventory {\n        constructor(context) {\n            this.context = context;\n        }\n        custombatch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/content/v2/inventory/batch').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: [],\n                pathParams: [],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        set(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/content/v2/{merchantId}/inventory/{storeCode}/products/{productId}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['merchantId', 'storeCode', 'productId'],\n                pathParams: ['merchantId', 'productId', 'storeCode'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    content_v2.Resource$Inventory = Resource$Inventory;\n    class Resource$Liasettings {\n        constructor(context) {\n            this.context = context;\n        }\n        custombatch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/content/v2/liasettings/batch').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: [],\n                pathParams: [],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/content/v2/{merchantId}/liasettings/{accountId}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['merchantId', 'accountId'],\n                pathParams: ['accountId', 'merchantId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        getaccessiblegmbaccounts(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/content/v2/{merchantId}/liasettings/{accountId}/accessiblegmbaccounts').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['merchantId', 'accountId'],\n                pathParams: ['accountId', 'merchantId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/content/v2/{merchantId}/liasettings').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['merchantId'],\n                pathParams: ['merchantId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        listposdataproviders(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/content/v2/liasettings/posdataproviders').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: [],\n                pathParams: [],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        requestgmbaccess(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/content/v2/{merchantId}/liasettings/{accountId}/requestgmbaccess').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['merchantId', 'accountId', 'gmbEmail'],\n                pathParams: ['accountId', 'merchantId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        requestinventoryverification(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/content/v2/{merchantId}/liasettings/{accountId}/requestinventoryverification/{country}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['merchantId', 'accountId', 'country'],\n                pathParams: ['accountId', 'country', 'merchantId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        setinventoryverificationcontact(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/content/v2/{merchantId}/liasettings/{accountId}/setinventoryverificationcontact').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: [\n                    'merchantId',\n                    'accountId',\n                    'country',\n                    'language',\n                    'contactName',\n                    'contactEmail',\n                ],\n                pathParams: ['accountId', 'merchantId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        setposdataprovider(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/content/v2/{merchantId}/liasettings/{accountId}/setposdataprovider').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['merchantId', 'accountId', 'country'],\n                pathParams: ['accountId', 'merchantId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        update(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/content/v2/{merchantId}/liasettings/{accountId}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PUT',\n                }, options),\n                params,\n                requiredParams: ['merchantId', 'accountId'],\n                pathParams: ['accountId', 'merchantId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    content_v2.Resource$Liasettings = Resource$Liasettings;\n    class Resource$Orderinvoices {\n        constructor(context) {\n            this.context = context;\n        }\n        createchargeinvoice(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/content/v2/{merchantId}/orderinvoices/{orderId}/createChargeInvoice').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['merchantId', 'orderId'],\n                pathParams: ['merchantId', 'orderId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        createrefundinvoice(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/content/v2/{merchantId}/orderinvoices/{orderId}/createRefundInvoice').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['merchantId', 'orderId'],\n                pathParams: ['merchantId', 'orderId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    content_v2.Resource$Orderinvoices = Resource$Orderinvoices;\n    class Resource$Orderreports {\n        constructor(context) {\n            this.context = context;\n        }\n        listdisbursements(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/content/v2/{merchantId}/orderreports/disbursements').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['merchantId'],\n                pathParams: ['merchantId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        listtransactions(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/content/v2/{merchantId}/orderreports/disbursements/{disbursementId}/transactions').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['merchantId', 'disbursementId'],\n                pathParams: ['disbursementId', 'merchantId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    content_v2.Resource$Orderreports = Resource$Orderreports;\n    class Resource$Orderreturns {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/content/v2/{merchantId}/orderreturns/{returnId}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['merchantId', 'returnId'],\n                pathParams: ['merchantId', 'returnId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/content/v2/{merchantId}/orderreturns').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['merchantId'],\n                pathParams: ['merchantId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    content_v2.Resource$Orderreturns = Resource$Orderreturns;\n    class Resource$Orders {\n        constructor(context) {\n            this.context = context;\n        }\n        acknowledge(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/content/v2/{merchantId}/orders/{orderId}/acknowledge').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['merchantId', 'orderId'],\n                pathParams: ['merchantId', 'orderId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        advancetestorder(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/content/v2/{merchantId}/testorders/{orderId}/advance').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['merchantId', 'orderId'],\n                pathParams: ['merchantId', 'orderId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        cancel(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/content/v2/{merchantId}/orders/{orderId}/cancel').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['merchantId', 'orderId'],\n                pathParams: ['merchantId', 'orderId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        cancellineitem(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/content/v2/{merchantId}/orders/{orderId}/cancelLineItem').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['merchantId', 'orderId'],\n                pathParams: ['merchantId', 'orderId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        canceltestorderbycustomer(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/content/v2/{merchantId}/testorders/{orderId}/cancelByCustomer').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['merchantId', 'orderId'],\n                pathParams: ['merchantId', 'orderId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        createtestorder(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/content/v2/{merchantId}/testorders').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['merchantId'],\n                pathParams: ['merchantId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        createtestreturn(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/content/v2/{merchantId}/orders/{orderId}/testreturn').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['merchantId', 'orderId'],\n                pathParams: ['merchantId', 'orderId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        custombatch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/content/v2/orders/batch').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: [],\n                pathParams: [],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/content/v2/{merchantId}/orders/{orderId}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['merchantId', 'orderId'],\n                pathParams: ['merchantId', 'orderId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        getbymerchantorderid(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/content/v2/{merchantId}/ordersbymerchantid/{merchantOrderId}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['merchantId', 'merchantOrderId'],\n                pathParams: ['merchantId', 'merchantOrderId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        gettestordertemplate(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/content/v2/{merchantId}/testordertemplates/{templateName}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['merchantId', 'templateName'],\n                pathParams: ['merchantId', 'templateName'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        instorerefundlineitem(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/content/v2/{merchantId}/orders/{orderId}/inStoreRefundLineItem').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['merchantId', 'orderId'],\n                pathParams: ['merchantId', 'orderId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/content/v2/{merchantId}/orders').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['merchantId'],\n                pathParams: ['merchantId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        refund(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/content/v2/{merchantId}/orders/{orderId}/refund').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['merchantId', 'orderId'],\n                pathParams: ['merchantId', 'orderId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        rejectreturnlineitem(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/content/v2/{merchantId}/orders/{orderId}/rejectReturnLineItem').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['merchantId', 'orderId'],\n                pathParams: ['merchantId', 'orderId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        returnlineitem(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/content/v2/{merchantId}/orders/{orderId}/returnLineItem').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['merchantId', 'orderId'],\n                pathParams: ['merchantId', 'orderId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        returnrefundlineitem(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/content/v2/{merchantId}/orders/{orderId}/returnRefundLineItem').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['merchantId', 'orderId'],\n                pathParams: ['merchantId', 'orderId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        setlineitemmetadata(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/content/v2/{merchantId}/orders/{orderId}/setLineItemMetadata').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['merchantId', 'orderId'],\n                pathParams: ['merchantId', 'orderId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        shiplineitems(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/content/v2/{merchantId}/orders/{orderId}/shipLineItems').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['merchantId', 'orderId'],\n                pathParams: ['merchantId', 'orderId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        updatelineitemshippingdetails(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/content/v2/{merchantId}/orders/{orderId}/updateLineItemShippingDetails').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['merchantId', 'orderId'],\n                pathParams: ['merchantId', 'orderId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        updatemerchantorderid(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/content/v2/{merchantId}/orders/{orderId}/updateMerchantOrderId').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['merchantId', 'orderId'],\n                pathParams: ['merchantId', 'orderId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        updateshipment(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/content/v2/{merchantId}/orders/{orderId}/updateShipment').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['merchantId', 'orderId'],\n                pathParams: ['merchantId', 'orderId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    content_v2.Resource$Orders = Resource$Orders;\n    class Resource$Pos {\n        constructor(context) {\n            this.context = context;\n        }\n        custombatch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/content/v2/pos/batch').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: [],\n                pathParams: [],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        delete(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/content/v2/{merchantId}/pos/{targetMerchantId}/store/{storeCode}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'DELETE',\n                }, options),\n                params,\n                requiredParams: ['merchantId', 'targetMerchantId', 'storeCode'],\n                pathParams: ['merchantId', 'storeCode', 'targetMerchantId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/content/v2/{merchantId}/pos/{targetMerchantId}/store/{storeCode}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['merchantId', 'targetMerchantId', 'storeCode'],\n                pathParams: ['merchantId', 'storeCode', 'targetMerchantId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        insert(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/content/v2/{merchantId}/pos/{targetMerchantId}/store').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['merchantId', 'targetMerchantId'],\n                pathParams: ['merchantId', 'targetMerchantId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        inventory(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/content/v2/{merchantId}/pos/{targetMerchantId}/inventory').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['merchantId', 'targetMerchantId'],\n                pathParams: ['merchantId', 'targetMerchantId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/content/v2/{merchantId}/pos/{targetMerchantId}/store').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['merchantId', 'targetMerchantId'],\n                pathParams: ['merchantId', 'targetMerchantId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        sale(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/content/v2/{merchantId}/pos/{targetMerchantId}/sale').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['merchantId', 'targetMerchantId'],\n                pathParams: ['merchantId', 'targetMerchantId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    content_v2.Resource$Pos = Resource$Pos;\n    class Resource$Products {\n        constructor(context) {\n            this.context = context;\n        }\n        custombatch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/content/v2/products/batch').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: [],\n                pathParams: [],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        delete(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/content/v2/{merchantId}/products/{productId}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'DELETE',\n                }, options),\n                params,\n                requiredParams: ['merchantId', 'productId'],\n                pathParams: ['merchantId', 'productId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/content/v2/{merchantId}/products/{productId}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['merchantId', 'productId'],\n                pathParams: ['merchantId', 'productId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        insert(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/content/v2/{merchantId}/products').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['merchantId'],\n                pathParams: ['merchantId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/content/v2/{merchantId}/products').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['merchantId'],\n                pathParams: ['merchantId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    content_v2.Resource$Products = Resource$Products;\n    class Resource$Productstatuses {\n        constructor(context) {\n            this.context = context;\n        }\n        custombatch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/content/v2/productstatuses/batch').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: [],\n                pathParams: [],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/content/v2/{merchantId}/productstatuses/{productId}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['merchantId', 'productId'],\n                pathParams: ['merchantId', 'productId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/content/v2/{merchantId}/productstatuses').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['merchantId'],\n                pathParams: ['merchantId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    content_v2.Resource$Productstatuses = Resource$Productstatuses;\n    class Resource$Shippingsettings {\n        constructor(context) {\n            this.context = context;\n        }\n        custombatch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/content/v2/shippingsettings/batch').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: [],\n                pathParams: [],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/content/v2/{merchantId}/shippingsettings/{accountId}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['merchantId', 'accountId'],\n                pathParams: ['accountId', 'merchantId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        getsupportedcarriers(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/content/v2/{merchantId}/supportedCarriers').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['merchantId'],\n                pathParams: ['merchantId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        getsupportedholidays(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/content/v2/{merchantId}/supportedHolidays').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['merchantId'],\n                pathParams: ['merchantId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        getsupportedpickupservices(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/content/v2/{merchantId}/supportedPickupServices').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['merchantId'],\n                pathParams: ['merchantId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/content/v2/{merchantId}/shippingsettings').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['merchantId'],\n                pathParams: ['merchantId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        update(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/content/v2/{merchantId}/shippingsettings/{accountId}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PUT',\n                }, options),\n                params,\n                requiredParams: ['merchantId', 'accountId'],\n                pathParams: ['accountId', 'merchantId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    content_v2.Resource$Shippingsettings = Resource$Shippingsettings;\n})(content_v2 = exports.content_v2 || (exports.content_v2 = {}));\n//# sourceMappingURL=v2.js.map"]},"metadata":{},"sourceType":"script"}