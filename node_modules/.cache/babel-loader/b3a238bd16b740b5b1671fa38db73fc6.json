{"ast":null,"code":"\"use strict\"; // Copyright 2020 Google LLC\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//    http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nvar _createClass = require(\"/Users/amandapoetker-alles/Desktop/campaign-dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _classCallCheck = require(\"/Users/amandapoetker-alles/Desktop/campaign-dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.firebasedynamiclinks_v1 = void 0;\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\n/* eslint-disable @typescript-eslint/class-name-casing */\n\n/* eslint-disable @typescript-eslint/no-unused-vars */\n\n/* eslint-disable @typescript-eslint/no-empty-interface */\n\n/* eslint-disable @typescript-eslint/no-namespace */\n\n/* eslint-disable no-irregular-whitespace */\n\nvar googleapis_common_1 = require(\"googleapis-common\");\n\nvar firebasedynamiclinks_v1;\n\n(function (firebasedynamiclinks_v1) {\n  /**\n   * Firebase Dynamic Links API\n   *\n   * Programmatically creates and manages Firebase Dynamic Links.\n   *\n   * @example\n   * ```js\n   * const {google} = require('googleapis');\n   * const firebasedynamiclinks = google.firebasedynamiclinks('v1');\n   * ```\n   */\n  var Firebasedynamiclinks = function Firebasedynamiclinks(options, google) {\n    _classCallCheck(this, Firebasedynamiclinks);\n\n    this.context = {\n      _options: options || {},\n      google\n    };\n    this.managedShortLinks = new Resource$Managedshortlinks(this.context);\n    this.shortLinks = new Resource$Shortlinks(this.context);\n    this.v1 = new Resource$V1(this.context);\n  };\n\n  firebasedynamiclinks_v1.Firebasedynamiclinks = Firebasedynamiclinks;\n\n  var Resource$Managedshortlinks = /*#__PURE__*/function () {\n    function Resource$Managedshortlinks(context) {\n      _classCallCheck(this, Resource$Managedshortlinks);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Managedshortlinks, [{\n      key: \"create\",\n      value: function create(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://firebasedynamiclinks.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/managedShortLinks:create').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: [],\n          pathParams: [],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Managedshortlinks;\n  }();\n\n  firebasedynamiclinks_v1.Resource$Managedshortlinks = Resource$Managedshortlinks;\n\n  var Resource$Shortlinks = /*#__PURE__*/function () {\n    function Resource$Shortlinks(context) {\n      _classCallCheck(this, Resource$Shortlinks);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Shortlinks, [{\n      key: \"create\",\n      value: function create(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://firebasedynamiclinks.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/shortLinks').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: [],\n          pathParams: [],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Shortlinks;\n  }();\n\n  firebasedynamiclinks_v1.Resource$Shortlinks = Resource$Shortlinks;\n\n  var Resource$V1 = /*#__PURE__*/function () {\n    function Resource$V1(context) {\n      _classCallCheck(this, Resource$V1);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$V1, [{\n      key: \"getLinkStats\",\n      value: function getLinkStats(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://firebasedynamiclinks.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/{dynamicLink}/linkStats').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['dynamicLink'],\n          pathParams: ['dynamicLink'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"installAttribution\",\n      value: function installAttribution(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://firebasedynamiclinks.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/installAttribution').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: [],\n          pathParams: [],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"reopenAttribution\",\n      value: function reopenAttribution(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://firebasedynamiclinks.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/reopenAttribution').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: [],\n          pathParams: [],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$V1;\n  }();\n\n  firebasedynamiclinks_v1.Resource$V1 = Resource$V1;\n})(firebasedynamiclinks_v1 = exports.firebasedynamiclinks_v1 || (exports.firebasedynamiclinks_v1 = {}));","map":{"version":3,"sources":["/Users/amandapoetker-alles/Desktop/campaign-dashboard/node_modules/googleapis/build/src/apis/firebasedynamiclinks/v1.js"],"names":["Object","defineProperty","exports","value","firebasedynamiclinks_v1","googleapis_common_1","require","Firebasedynamiclinks","options","google","context","_options","managedShortLinks","Resource$Managedshortlinks","shortLinks","Resource$Shortlinks","v1","Resource$V1","paramsOrCallback","optionsOrCallback","callback","params","rootUrl","parameters","assign","url","replace","method","requiredParams","pathParams","createAPIRequest"],"mappings":"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","sourcesContent":["\"use strict\";\n// Copyright 2020 Google LLC\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//    http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.firebasedynamiclinks_v1 = void 0;\n/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/class-name-casing */\n/* eslint-disable @typescript-eslint/no-unused-vars */\n/* eslint-disable @typescript-eslint/no-empty-interface */\n/* eslint-disable @typescript-eslint/no-namespace */\n/* eslint-disable no-irregular-whitespace */\nconst googleapis_common_1 = require(\"googleapis-common\");\nvar firebasedynamiclinks_v1;\n(function (firebasedynamiclinks_v1) {\n    /**\n     * Firebase Dynamic Links API\n     *\n     * Programmatically creates and manages Firebase Dynamic Links.\n     *\n     * @example\n     * ```js\n     * const {google} = require('googleapis');\n     * const firebasedynamiclinks = google.firebasedynamiclinks('v1');\n     * ```\n     */\n    class Firebasedynamiclinks {\n        constructor(options, google) {\n            this.context = {\n                _options: options || {},\n                google,\n            };\n            this.managedShortLinks = new Resource$Managedshortlinks(this.context);\n            this.shortLinks = new Resource$Shortlinks(this.context);\n            this.v1 = new Resource$V1(this.context);\n        }\n    }\n    firebasedynamiclinks_v1.Firebasedynamiclinks = Firebasedynamiclinks;\n    class Resource$Managedshortlinks {\n        constructor(context) {\n            this.context = context;\n        }\n        create(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://firebasedynamiclinks.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1/managedShortLinks:create').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: [],\n                pathParams: [],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    firebasedynamiclinks_v1.Resource$Managedshortlinks = Resource$Managedshortlinks;\n    class Resource$Shortlinks {\n        constructor(context) {\n            this.context = context;\n        }\n        create(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://firebasedynamiclinks.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1/shortLinks').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: [],\n                pathParams: [],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    firebasedynamiclinks_v1.Resource$Shortlinks = Resource$Shortlinks;\n    class Resource$V1 {\n        constructor(context) {\n            this.context = context;\n        }\n        getLinkStats(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://firebasedynamiclinks.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1/{dynamicLink}/linkStats').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['dynamicLink'],\n                pathParams: ['dynamicLink'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        installAttribution(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://firebasedynamiclinks.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1/installAttribution').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: [],\n                pathParams: [],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        reopenAttribution(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://firebasedynamiclinks.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1/reopenAttribution').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: [],\n                pathParams: [],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    firebasedynamiclinks_v1.Resource$V1 = Resource$V1;\n})(firebasedynamiclinks_v1 = exports.firebasedynamiclinks_v1 || (exports.firebasedynamiclinks_v1 = {}));\n//# sourceMappingURL=v1.js.map"]},"metadata":{},"sourceType":"script"}