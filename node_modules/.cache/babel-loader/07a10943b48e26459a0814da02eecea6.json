{"ast":null,"code":"\"use strict\";\n/**\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar _createClass = require(\"/Users/amandapoetker-alles/Desktop/campaign-dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _classCallCheck = require(\"/Users/amandapoetker-alles/Desktop/campaign-dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar googleapis_common_1 = require(\"googleapis-common\"); // tslint:disable: no-any\n// tslint:disable: class-name\n// tslint:disable: variable-name\n// tslint:disable: jsdoc-format\n// tslint:disable: no-namespace\n\n\nvar remotebuildexecution_v2;\n\n(function (remotebuildexecution_v2) {\n  /**\n   * Remote Build Execution API\n   *\n   * Supplies a Remote Execution API service for tools such as bazel.\n   *\n   * @example\n   * const {google} = require('googleapis');\n   * const remotebuildexecution = google.remotebuildexecution('v2');\n   *\n   * @namespace remotebuildexecution\n   * @type {Function}\n   * @version v2\n   * @variation v2\n   * @param {object=} options Options for Remotebuildexecution\n   */\n  var Remotebuildexecution = function Remotebuildexecution(options, google) {\n    _classCallCheck(this, Remotebuildexecution);\n\n    this.context = {\n      _options: options || {},\n      google\n    };\n    this.actionResults = new Resource$Actionresults(this.context);\n    this.actions = new Resource$Actions(this.context);\n    this.blobs = new Resource$Blobs(this.context);\n    this.operations = new Resource$Operations(this.context);\n    this.v2 = new Resource$V2(this.context);\n  };\n\n  remotebuildexecution_v2.Remotebuildexecution = Remotebuildexecution;\n\n  var Resource$Actionresults = /*#__PURE__*/function () {\n    function Resource$Actionresults(context) {\n      _classCallCheck(this, Resource$Actionresults);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Actionresults, [{\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://remotebuildexecution.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v2/{+instanceName}/actionResults/{hash}/{sizeBytes}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['instanceName', 'hash', 'sizeBytes'],\n          pathParams: ['hash', 'instanceName', 'sizeBytes'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"update\",\n      value: function update(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://remotebuildexecution.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v2/{+instanceName}/actionResults/{hash}/{sizeBytes}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PUT'\n          }, options),\n          params,\n          requiredParams: ['instanceName', 'hash', 'sizeBytes'],\n          pathParams: ['hash', 'instanceName', 'sizeBytes'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Actionresults;\n  }();\n\n  remotebuildexecution_v2.Resource$Actionresults = Resource$Actionresults;\n\n  var Resource$Actions = /*#__PURE__*/function () {\n    function Resource$Actions(context) {\n      _classCallCheck(this, Resource$Actions);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Actions, [{\n      key: \"execute\",\n      value: function execute(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://remotebuildexecution.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v2/{+instanceName}/actions:execute').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['instanceName'],\n          pathParams: ['instanceName'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Actions;\n  }();\n\n  remotebuildexecution_v2.Resource$Actions = Resource$Actions;\n\n  var Resource$Blobs = /*#__PURE__*/function () {\n    function Resource$Blobs(context) {\n      _classCallCheck(this, Resource$Blobs);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Blobs, [{\n      key: \"batchRead\",\n      value: function batchRead(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://remotebuildexecution.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v2/{+instanceName}/blobs:batchRead').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['instanceName'],\n          pathParams: ['instanceName'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"batchUpdate\",\n      value: function batchUpdate(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://remotebuildexecution.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v2/{+instanceName}/blobs:batchUpdate').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['instanceName'],\n          pathParams: ['instanceName'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"findMissing\",\n      value: function findMissing(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://remotebuildexecution.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v2/{+instanceName}/blobs:findMissing').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['instanceName'],\n          pathParams: ['instanceName'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"getTree\",\n      value: function getTree(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://remotebuildexecution.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v2/{+instanceName}/blobs/{hash}/{sizeBytes}:getTree').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['instanceName', 'hash', 'sizeBytes'],\n          pathParams: ['hash', 'instanceName', 'sizeBytes'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Blobs;\n  }();\n\n  remotebuildexecution_v2.Resource$Blobs = Resource$Blobs;\n\n  var Resource$Operations = /*#__PURE__*/function () {\n    function Resource$Operations(context) {\n      _classCallCheck(this, Resource$Operations);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Operations, [{\n      key: \"waitExecution\",\n      value: function waitExecution(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://remotebuildexecution.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v2/{+name}:waitExecution').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['name'],\n          pathParams: ['name'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Operations;\n  }();\n\n  remotebuildexecution_v2.Resource$Operations = Resource$Operations;\n\n  var Resource$V2 = /*#__PURE__*/function () {\n    function Resource$V2(context) {\n      _classCallCheck(this, Resource$V2);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$V2, [{\n      key: \"getCapabilities\",\n      value: function getCapabilities(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://remotebuildexecution.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v2/{+instanceName}/capabilities').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['instanceName'],\n          pathParams: ['instanceName'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$V2;\n  }();\n\n  remotebuildexecution_v2.Resource$V2 = Resource$V2;\n})(remotebuildexecution_v2 = exports.remotebuildexecution_v2 || (exports.remotebuildexecution_v2 = {}));","map":{"version":3,"sources":["/Users/amandapoetker-alles/Desktop/campaign-dashboard/node_modules/googleapis/build/src/apis/remotebuildexecution/v2.js"],"names":["Object","defineProperty","exports","value","googleapis_common_1","require","remotebuildexecution_v2","Remotebuildexecution","options","google","context","_options","actionResults","Resource$Actionresults","actions","Resource$Actions","blobs","Resource$Blobs","operations","Resource$Operations","v2","Resource$V2","paramsOrCallback","optionsOrCallback","callback","params","rootUrl","parameters","assign","url","replace","method","requiredParams","pathParams","createAPIRequest"],"mappings":"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","sourcesContent":["\"use strict\";\n/**\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst googleapis_common_1 = require(\"googleapis-common\");\n// tslint:disable: no-any\n// tslint:disable: class-name\n// tslint:disable: variable-name\n// tslint:disable: jsdoc-format\n// tslint:disable: no-namespace\nvar remotebuildexecution_v2;\n(function (remotebuildexecution_v2) {\n    /**\n     * Remote Build Execution API\n     *\n     * Supplies a Remote Execution API service for tools such as bazel.\n     *\n     * @example\n     * const {google} = require('googleapis');\n     * const remotebuildexecution = google.remotebuildexecution('v2');\n     *\n     * @namespace remotebuildexecution\n     * @type {Function}\n     * @version v2\n     * @variation v2\n     * @param {object=} options Options for Remotebuildexecution\n     */\n    class Remotebuildexecution {\n        constructor(options, google) {\n            this.context = { _options: options || {}, google };\n            this.actionResults = new Resource$Actionresults(this.context);\n            this.actions = new Resource$Actions(this.context);\n            this.blobs = new Resource$Blobs(this.context);\n            this.operations = new Resource$Operations(this.context);\n            this.v2 = new Resource$V2(this.context);\n        }\n    }\n    remotebuildexecution_v2.Remotebuildexecution = Remotebuildexecution;\n    class Resource$Actionresults {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://remotebuildexecution.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/v2/{+instanceName}/actionResults/{hash}/{sizeBytes}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['instanceName', 'hash', 'sizeBytes'],\n                pathParams: ['hash', 'instanceName', 'sizeBytes'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        update(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://remotebuildexecution.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/v2/{+instanceName}/actionResults/{hash}/{sizeBytes}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PUT'\n                }, options),\n                params,\n                requiredParams: ['instanceName', 'hash', 'sizeBytes'],\n                pathParams: ['hash', 'instanceName', 'sizeBytes'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    remotebuildexecution_v2.Resource$Actionresults = Resource$Actionresults;\n    class Resource$Actions {\n        constructor(context) {\n            this.context = context;\n        }\n        execute(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://remotebuildexecution.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2/{+instanceName}/actions:execute')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST'\n                }, options),\n                params,\n                requiredParams: ['instanceName'],\n                pathParams: ['instanceName'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    remotebuildexecution_v2.Resource$Actions = Resource$Actions;\n    class Resource$Blobs {\n        constructor(context) {\n            this.context = context;\n        }\n        batchRead(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://remotebuildexecution.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2/{+instanceName}/blobs:batchRead')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST'\n                }, options),\n                params,\n                requiredParams: ['instanceName'],\n                pathParams: ['instanceName'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        batchUpdate(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://remotebuildexecution.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2/{+instanceName}/blobs:batchUpdate')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST'\n                }, options),\n                params,\n                requiredParams: ['instanceName'],\n                pathParams: ['instanceName'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        findMissing(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://remotebuildexecution.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2/{+instanceName}/blobs:findMissing')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST'\n                }, options),\n                params,\n                requiredParams: ['instanceName'],\n                pathParams: ['instanceName'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        getTree(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://remotebuildexecution.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/v2/{+instanceName}/blobs/{hash}/{sizeBytes}:getTree')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['instanceName', 'hash', 'sizeBytes'],\n                pathParams: ['hash', 'instanceName', 'sizeBytes'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    remotebuildexecution_v2.Resource$Blobs = Resource$Blobs;\n    class Resource$Operations {\n        constructor(context) {\n            this.context = context;\n        }\n        waitExecution(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://remotebuildexecution.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2/{+name}:waitExecution')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST'\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    remotebuildexecution_v2.Resource$Operations = Resource$Operations;\n    class Resource$V2 {\n        constructor(context) {\n            this.context = context;\n        }\n        getCapabilities(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://remotebuildexecution.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2/{+instanceName}/capabilities')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['instanceName'],\n                pathParams: ['instanceName'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    remotebuildexecution_v2.Resource$V2 = Resource$V2;\n})(remotebuildexecution_v2 = exports.remotebuildexecution_v2 || (exports.remotebuildexecution_v2 = {}));\n//# sourceMappingURL=v2.js.map"]},"metadata":{},"sourceType":"script"}