{"ast":null,"code":"\"use strict\";\n/**\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar _createClass = require(\"/Users/amandapoetker-alles/Desktop/campaign-dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _classCallCheck = require(\"/Users/amandapoetker-alles/Desktop/campaign-dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar googleapis_common_1 = require(\"googleapis-common\"); // tslint:disable: no-any\n// tslint:disable: class-name\n// tslint:disable: variable-name\n// tslint:disable: jsdoc-format\n// tslint:disable: no-namespace\n\n\nvar cloudtasks_v2beta2;\n\n(function (cloudtasks_v2beta2) {\n  /**\n   * Cloud Tasks API\n   *\n   * Manages the execution of large numbers of distributed requests.\n   *\n   * @example\n   * const {google} = require('googleapis');\n   * const cloudtasks = google.cloudtasks('v2beta2');\n   *\n   * @namespace cloudtasks\n   * @type {Function}\n   * @version v2beta2\n   * @variation v2beta2\n   * @param {object=} options Options for Cloudtasks\n   */\n  var Cloudtasks = function Cloudtasks(options, google) {\n    _classCallCheck(this, Cloudtasks);\n\n    this.context = {\n      _options: options || {},\n      google\n    };\n    this.projects = new Resource$Projects(this.context);\n  };\n\n  cloudtasks_v2beta2.Cloudtasks = Cloudtasks;\n\n  var Resource$Projects = function Resource$Projects(context) {\n    _classCallCheck(this, Resource$Projects);\n\n    this.context = context;\n    this.locations = new Resource$Projects$Locations(this.context);\n  };\n\n  cloudtasks_v2beta2.Resource$Projects = Resource$Projects;\n\n  var Resource$Projects$Locations = /*#__PURE__*/function () {\n    function Resource$Projects$Locations(context) {\n      _classCallCheck(this, Resource$Projects$Locations);\n\n      this.context = context;\n      this.queues = new Resource$Projects$Locations$Queues(this.context);\n    }\n\n    _createClass(Resource$Projects$Locations, [{\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://cloudtasks.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v2beta2/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['name'],\n          pathParams: ['name'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://cloudtasks.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v2beta2/{+name}/locations').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['name'],\n          pathParams: ['name'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Projects$Locations;\n  }();\n\n  cloudtasks_v2beta2.Resource$Projects$Locations = Resource$Projects$Locations;\n\n  var Resource$Projects$Locations$Queues = /*#__PURE__*/function () {\n    function Resource$Projects$Locations$Queues(context) {\n      _classCallCheck(this, Resource$Projects$Locations$Queues);\n\n      this.context = context;\n      this.tasks = new Resource$Projects$Locations$Queues$Tasks(this.context);\n    }\n\n    _createClass(Resource$Projects$Locations$Queues, [{\n      key: \"create\",\n      value: function create(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://cloudtasks.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v2beta2/{+parent}/queues').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['parent'],\n          pathParams: ['parent'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"delete\",\n      value: function _delete(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://cloudtasks.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v2beta2/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'DELETE'\n          }, options),\n          params,\n          requiredParams: ['name'],\n          pathParams: ['name'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://cloudtasks.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v2beta2/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['name'],\n          pathParams: ['name'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"getIamPolicy\",\n      value: function getIamPolicy(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://cloudtasks.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v2beta2/{+resource}:getIamPolicy').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['resource'],\n          pathParams: ['resource'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://cloudtasks.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v2beta2/{+parent}/queues').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['parent'],\n          pathParams: ['parent'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"patch\",\n      value: function patch(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://cloudtasks.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v2beta2/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PATCH'\n          }, options),\n          params,\n          requiredParams: ['name'],\n          pathParams: ['name'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"pause\",\n      value: function pause(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://cloudtasks.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v2beta2/{+name}:pause').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['name'],\n          pathParams: ['name'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"purge\",\n      value: function purge(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://cloudtasks.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v2beta2/{+name}:purge').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['name'],\n          pathParams: ['name'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"resume\",\n      value: function resume(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://cloudtasks.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v2beta2/{+name}:resume').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['name'],\n          pathParams: ['name'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"setIamPolicy\",\n      value: function setIamPolicy(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://cloudtasks.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v2beta2/{+resource}:setIamPolicy').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['resource'],\n          pathParams: ['resource'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"testIamPermissions\",\n      value: function testIamPermissions(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://cloudtasks.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v2beta2/{+resource}:testIamPermissions').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['resource'],\n          pathParams: ['resource'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Projects$Locations$Queues;\n  }();\n\n  cloudtasks_v2beta2.Resource$Projects$Locations$Queues = Resource$Projects$Locations$Queues;\n\n  var Resource$Projects$Locations$Queues$Tasks = /*#__PURE__*/function () {\n    function Resource$Projects$Locations$Queues$Tasks(context) {\n      _classCallCheck(this, Resource$Projects$Locations$Queues$Tasks);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Projects$Locations$Queues$Tasks, [{\n      key: \"acknowledge\",\n      value: function acknowledge(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://cloudtasks.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v2beta2/{+name}:acknowledge').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['name'],\n          pathParams: ['name'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"cancelLease\",\n      value: function cancelLease(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://cloudtasks.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v2beta2/{+name}:cancelLease').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['name'],\n          pathParams: ['name'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"create\",\n      value: function create(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://cloudtasks.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v2beta2/{+parent}/tasks').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['parent'],\n          pathParams: ['parent'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"delete\",\n      value: function _delete(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://cloudtasks.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v2beta2/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'DELETE'\n          }, options),\n          params,\n          requiredParams: ['name'],\n          pathParams: ['name'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://cloudtasks.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v2beta2/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['name'],\n          pathParams: ['name'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"lease\",\n      value: function lease(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://cloudtasks.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v2beta2/{+parent}/tasks:lease').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['parent'],\n          pathParams: ['parent'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://cloudtasks.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v2beta2/{+parent}/tasks').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['parent'],\n          pathParams: ['parent'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"renewLease\",\n      value: function renewLease(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://cloudtasks.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v2beta2/{+name}:renewLease').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['name'],\n          pathParams: ['name'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"run\",\n      value: function run(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://cloudtasks.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v2beta2/{+name}:run').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['name'],\n          pathParams: ['name'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Projects$Locations$Queues$Tasks;\n  }();\n\n  cloudtasks_v2beta2.Resource$Projects$Locations$Queues$Tasks = Resource$Projects$Locations$Queues$Tasks;\n})(cloudtasks_v2beta2 = exports.cloudtasks_v2beta2 || (exports.cloudtasks_v2beta2 = {}));","map":{"version":3,"sources":["/Users/amandapoetker-alles/Desktop/campaign-dashboard/node_modules/googleapis/build/src/apis/cloudtasks/v2beta2.js"],"names":["Object","defineProperty","exports","value","googleapis_common_1","require","cloudtasks_v2beta2","Cloudtasks","options","google","context","_options","projects","Resource$Projects","locations","Resource$Projects$Locations","queues","Resource$Projects$Locations$Queues","paramsOrCallback","optionsOrCallback","callback","params","rootUrl","parameters","assign","url","replace","method","requiredParams","pathParams","createAPIRequest","tasks","Resource$Projects$Locations$Queues$Tasks"],"mappings":"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","sourcesContent":["\"use strict\";\n/**\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst googleapis_common_1 = require(\"googleapis-common\");\n// tslint:disable: no-any\n// tslint:disable: class-name\n// tslint:disable: variable-name\n// tslint:disable: jsdoc-format\n// tslint:disable: no-namespace\nvar cloudtasks_v2beta2;\n(function (cloudtasks_v2beta2) {\n    /**\n     * Cloud Tasks API\n     *\n     * Manages the execution of large numbers of distributed requests.\n     *\n     * @example\n     * const {google} = require('googleapis');\n     * const cloudtasks = google.cloudtasks('v2beta2');\n     *\n     * @namespace cloudtasks\n     * @type {Function}\n     * @version v2beta2\n     * @variation v2beta2\n     * @param {object=} options Options for Cloudtasks\n     */\n    class Cloudtasks {\n        constructor(options, google) {\n            this.context = { _options: options || {}, google };\n            this.projects = new Resource$Projects(this.context);\n        }\n    }\n    cloudtasks_v2beta2.Cloudtasks = Cloudtasks;\n    class Resource$Projects {\n        constructor(context) {\n            this.context = context;\n            this.locations = new Resource$Projects$Locations(this.context);\n        }\n    }\n    cloudtasks_v2beta2.Resource$Projects = Resource$Projects;\n    class Resource$Projects$Locations {\n        constructor(context) {\n            this.context = context;\n            this.queues = new Resource$Projects$Locations$Queues(this.context);\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://cloudtasks.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2beta2/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://cloudtasks.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2beta2/{+name}/locations')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    cloudtasks_v2beta2.Resource$Projects$Locations = Resource$Projects$Locations;\n    class Resource$Projects$Locations$Queues {\n        constructor(context) {\n            this.context = context;\n            this.tasks = new Resource$Projects$Locations$Queues$Tasks(this.context);\n        }\n        create(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://cloudtasks.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2beta2/{+parent}/queues')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST'\n                }, options),\n                params,\n                requiredParams: ['parent'],\n                pathParams: ['parent'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        delete(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://cloudtasks.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2beta2/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'DELETE'\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://cloudtasks.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2beta2/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        getIamPolicy(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://cloudtasks.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2beta2/{+resource}:getIamPolicy')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST'\n                }, options),\n                params,\n                requiredParams: ['resource'],\n                pathParams: ['resource'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://cloudtasks.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2beta2/{+parent}/queues')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['parent'],\n                pathParams: ['parent'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        patch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://cloudtasks.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2beta2/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PATCH'\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        pause(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://cloudtasks.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2beta2/{+name}:pause')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST'\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        purge(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://cloudtasks.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2beta2/{+name}:purge')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST'\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        resume(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://cloudtasks.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2beta2/{+name}:resume')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST'\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        setIamPolicy(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://cloudtasks.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2beta2/{+resource}:setIamPolicy')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST'\n                }, options),\n                params,\n                requiredParams: ['resource'],\n                pathParams: ['resource'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        testIamPermissions(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://cloudtasks.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2beta2/{+resource}:testIamPermissions')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST'\n                }, options),\n                params,\n                requiredParams: ['resource'],\n                pathParams: ['resource'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    cloudtasks_v2beta2.Resource$Projects$Locations$Queues = Resource$Projects$Locations$Queues;\n    class Resource$Projects$Locations$Queues$Tasks {\n        constructor(context) {\n            this.context = context;\n        }\n        acknowledge(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://cloudtasks.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2beta2/{+name}:acknowledge')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST'\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        cancelLease(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://cloudtasks.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2beta2/{+name}:cancelLease')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST'\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        create(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://cloudtasks.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2beta2/{+parent}/tasks')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST'\n                }, options),\n                params,\n                requiredParams: ['parent'],\n                pathParams: ['parent'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        delete(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://cloudtasks.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2beta2/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'DELETE'\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://cloudtasks.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2beta2/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        lease(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://cloudtasks.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2beta2/{+parent}/tasks:lease')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST'\n                }, options),\n                params,\n                requiredParams: ['parent'],\n                pathParams: ['parent'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://cloudtasks.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2beta2/{+parent}/tasks')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['parent'],\n                pathParams: ['parent'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        renewLease(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://cloudtasks.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2beta2/{+name}:renewLease')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST'\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        run(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://cloudtasks.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2beta2/{+name}:run')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST'\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    cloudtasks_v2beta2.Resource$Projects$Locations$Queues$Tasks = Resource$Projects$Locations$Queues$Tasks;\n})(cloudtasks_v2beta2 = exports.cloudtasks_v2beta2 || (exports.cloudtasks_v2beta2 = {}));\n//# sourceMappingURL=v2beta2.js.map"]},"metadata":{},"sourceType":"script"}