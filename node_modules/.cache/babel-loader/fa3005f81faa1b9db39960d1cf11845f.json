{"ast":null,"code":"\"use strict\";\n/**\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar _createClass = require(\"/Users/amandapoetker-alles/Desktop/campaign-dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _classCallCheck = require(\"/Users/amandapoetker-alles/Desktop/campaign-dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar googleapis_common_1 = require(\"googleapis-common\"); // tslint:disable: no-any\n// tslint:disable: class-name\n// tslint:disable: variable-name\n// tslint:disable: jsdoc-format\n// tslint:disable: no-namespace\n\n\nvar admin_reports_v1;\n\n(function (admin_reports_v1) {\n  /**\n   * Admin Reports API\n   *\n   * Fetches reports for the administrators of G Suite customers about the\n   * usage, collaboration, security, and risk for their users.\n   *\n   * @example\n   * const {google} = require('googleapis');\n   * const admin = google.admin('reports_v1');\n   *\n   * @namespace admin\n   * @type {Function}\n   * @version reports_v1\n   * @variation reports_v1\n   * @param {object=} options Options for Admin\n   */\n  var Admin = function Admin(options, google) {\n    _classCallCheck(this, Admin);\n\n    this.context = {\n      _options: options || {},\n      google\n    };\n    this.activities = new Resource$Activities(this.context);\n    this.channels = new Resource$Channels(this.context);\n    this.customerUsageReports = new Resource$Customerusagereports(this.context);\n    this.entityUsageReports = new Resource$Entityusagereports(this.context);\n    this.userUsageReport = new Resource$Userusagereport(this.context);\n  };\n\n  admin_reports_v1.Admin = Admin;\n\n  var Resource$Activities = /*#__PURE__*/function () {\n    function Resource$Activities(context) {\n      _classCallCheck(this, Resource$Activities);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Activities, [{\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/admin/reports/v1/activity/users/{userKey}/applications/{applicationName}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['userKey', 'applicationName'],\n          pathParams: ['applicationName', 'userKey'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"watch\",\n      value: function watch(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/admin/reports/v1/activity/users/{userKey}/applications/{applicationName}/watch').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['userKey', 'applicationName'],\n          pathParams: ['applicationName', 'userKey'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Activities;\n  }();\n\n  admin_reports_v1.Resource$Activities = Resource$Activities;\n\n  var Resource$Channels = /*#__PURE__*/function () {\n    function Resource$Channels(context) {\n      _classCallCheck(this, Resource$Channels);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Channels, [{\n      key: \"stop\",\n      value: function stop(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/admin/reports/v1/admin/reports_v1/channels/stop').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: [],\n          pathParams: [],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Channels;\n  }();\n\n  admin_reports_v1.Resource$Channels = Resource$Channels;\n\n  var Resource$Customerusagereports = /*#__PURE__*/function () {\n    function Resource$Customerusagereports(context) {\n      _classCallCheck(this, Resource$Customerusagereports);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Customerusagereports, [{\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/admin/reports/v1/usage/dates/{date}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['date'],\n          pathParams: ['date'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Customerusagereports;\n  }();\n\n  admin_reports_v1.Resource$Customerusagereports = Resource$Customerusagereports;\n\n  var Resource$Entityusagereports = /*#__PURE__*/function () {\n    function Resource$Entityusagereports(context) {\n      _classCallCheck(this, Resource$Entityusagereports);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Entityusagereports, [{\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/admin/reports/v1/usage/{entityType}/{entityKey}/dates/{date}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['entityType', 'entityKey', 'date'],\n          pathParams: ['date', 'entityKey', 'entityType'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Entityusagereports;\n  }();\n\n  admin_reports_v1.Resource$Entityusagereports = Resource$Entityusagereports;\n\n  var Resource$Userusagereport = /*#__PURE__*/function () {\n    function Resource$Userusagereport(context) {\n      _classCallCheck(this, Resource$Userusagereport);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Userusagereport, [{\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/admin/reports/v1/usage/users/{userKey}/dates/{date}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['userKey', 'date'],\n          pathParams: ['date', 'userKey'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Userusagereport;\n  }();\n\n  admin_reports_v1.Resource$Userusagereport = Resource$Userusagereport;\n})(admin_reports_v1 = exports.admin_reports_v1 || (exports.admin_reports_v1 = {}));","map":{"version":3,"sources":["/Users/amandapoetker-alles/Desktop/campaign-dashboard/node_modules/googleapis/build/src/apis/admin/reports_v1.js"],"names":["Object","defineProperty","exports","value","googleapis_common_1","require","admin_reports_v1","Admin","options","google","context","_options","activities","Resource$Activities","channels","Resource$Channels","customerUsageReports","Resource$Customerusagereports","entityUsageReports","Resource$Entityusagereports","userUsageReport","Resource$Userusagereport","paramsOrCallback","optionsOrCallback","callback","params","rootUrl","parameters","assign","url","replace","method","requiredParams","pathParams","createAPIRequest"],"mappings":"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","sourcesContent":["\"use strict\";\n/**\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst googleapis_common_1 = require(\"googleapis-common\");\n// tslint:disable: no-any\n// tslint:disable: class-name\n// tslint:disable: variable-name\n// tslint:disable: jsdoc-format\n// tslint:disable: no-namespace\nvar admin_reports_v1;\n(function (admin_reports_v1) {\n    /**\n     * Admin Reports API\n     *\n     * Fetches reports for the administrators of G Suite customers about the\n     * usage, collaboration, security, and risk for their users.\n     *\n     * @example\n     * const {google} = require('googleapis');\n     * const admin = google.admin('reports_v1');\n     *\n     * @namespace admin\n     * @type {Function}\n     * @version reports_v1\n     * @variation reports_v1\n     * @param {object=} options Options for Admin\n     */\n    class Admin {\n        constructor(options, google) {\n            this.context = { _options: options || {}, google };\n            this.activities = new Resource$Activities(this.context);\n            this.channels = new Resource$Channels(this.context);\n            this.customerUsageReports =\n                new Resource$Customerusagereports(this.context);\n            this.entityUsageReports = new Resource$Entityusagereports(this.context);\n            this.userUsageReport = new Resource$Userusagereport(this.context);\n        }\n    }\n    admin_reports_v1.Admin = Admin;\n    class Resource$Activities {\n        constructor(context) {\n            this.context = context;\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/admin/reports/v1/activity/users/{userKey}/applications/{applicationName}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['userKey', 'applicationName'],\n                pathParams: ['applicationName', 'userKey'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        watch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/admin/reports/v1/activity/users/{userKey}/applications/{applicationName}/watch')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST'\n                }, options),\n                params,\n                requiredParams: ['userKey', 'applicationName'],\n                pathParams: ['applicationName', 'userKey'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    admin_reports_v1.Resource$Activities = Resource$Activities;\n    class Resource$Channels {\n        constructor(context) {\n            this.context = context;\n        }\n        stop(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/admin/reports/v1/admin/reports_v1/channels/stop')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST'\n                }, options),\n                params,\n                requiredParams: [],\n                pathParams: [],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    admin_reports_v1.Resource$Channels = Resource$Channels;\n    class Resource$Customerusagereports {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/admin/reports/v1/usage/dates/{date}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['date'],\n                pathParams: ['date'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    admin_reports_v1.Resource$Customerusagereports = Resource$Customerusagereports;\n    class Resource$Entityusagereports {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/admin/reports/v1/usage/{entityType}/{entityKey}/dates/{date}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['entityType', 'entityKey', 'date'],\n                pathParams: ['date', 'entityKey', 'entityType'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    admin_reports_v1.Resource$Entityusagereports = Resource$Entityusagereports;\n    class Resource$Userusagereport {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/admin/reports/v1/usage/users/{userKey}/dates/{date}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['userKey', 'date'],\n                pathParams: ['date', 'userKey'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    admin_reports_v1.Resource$Userusagereport = Resource$Userusagereport;\n})(admin_reports_v1 = exports.admin_reports_v1 || (exports.admin_reports_v1 = {}));\n//# sourceMappingURL=reports_v1.js.map"]},"metadata":{},"sourceType":"script"}