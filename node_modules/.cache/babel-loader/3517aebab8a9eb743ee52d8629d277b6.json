{"ast":null,"code":"import _slicedToArray from \"/Users/amandapoetker-alles/Desktop/campaign-dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport useEventCallback from '../utils/useEventCallback';\nimport useEnhancedEffect from '../utils/useEnhancedEffect';\n/**\n * @ignore - internal component.\n */\n\nfunction Ripple(props) {\n  var classes = props.classes,\n      _props$pulsate = props.pulsate,\n      pulsate = _props$pulsate === void 0 ? false : _props$pulsate,\n      rippleX = props.rippleX,\n      rippleY = props.rippleY,\n      rippleSize = props.rippleSize,\n      inProp = props.in,\n      _props$onExited = props.onExited,\n      onExited = _props$onExited === void 0 ? function () {} : _props$onExited,\n      timeout = props.timeout;\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      leaving = _React$useState2[0],\n      setLeaving = _React$useState2[1];\n\n  var rippleClassName = clsx(classes.ripple, classes.rippleVisible, pulsate && classes.ripplePulsate);\n  var rippleStyles = {\n    width: rippleSize,\n    height: rippleSize,\n    top: -(rippleSize / 2) + rippleY,\n    left: -(rippleSize / 2) + rippleX\n  };\n  var childClassName = clsx(classes.child, leaving && classes.childLeaving, pulsate && classes.childPulsate);\n  var handleExited = useEventCallback(onExited); // Ripple is used for user feedback (e.g. click or press) so we want to apply styles with the highest priority\n\n  useEnhancedEffect(function () {\n    if (!inProp) {\n      // react-transition-group#onExit\n      setLeaving(true); // react-transition-group#onExited\n\n      var timeoutId = setTimeout(handleExited, timeout);\n      return function () {\n        clearTimeout(timeoutId);\n      };\n    }\n\n    return undefined;\n  }, [handleExited, inProp, timeout]);\n  return /*#__PURE__*/React.createElement(\"span\", {\n    className: rippleClassName,\n    style: rippleStyles\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: childClassName\n  }));\n}\n\nprocess.env.NODE_ENV !== \"production\" ? Ripple.propTypes = {\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore - injected from TransitionGroup\n   */\n  in: PropTypes.bool,\n\n  /**\n   * @ignore - injected from TransitionGroup\n   */\n  onExited: PropTypes.func,\n\n  /**\n   * If `true`, the ripple pulsates, typically indicating the keyboard focus state of an element.\n   */\n  pulsate: PropTypes.bool,\n\n  /**\n   * Diameter of the ripple.\n   */\n  rippleSize: PropTypes.number,\n\n  /**\n   * Horizontal position of the ripple center.\n   */\n  rippleX: PropTypes.number,\n\n  /**\n   * Vertical position of the ripple center.\n   */\n  rippleY: PropTypes.number,\n\n  /**\n   * exit delay\n   */\n  timeout: PropTypes.number.isRequired\n} : void 0;\nexport default Ripple;","map":{"version":3,"sources":["/Users/amandapoetker-alles/Desktop/campaign-dashboard/node_modules/@material-ui/core/ButtonBase/Ripple.js"],"names":["React","PropTypes","clsx","useEventCallback","useEnhancedEffect","Ripple","props","classes","pulsate","rippleX","rippleY","rippleSize","inProp","in","onExited","timeout","useState","leaving","setLeaving","rippleClassName","ripple","rippleVisible","ripplePulsate","rippleStyles","width","height","top","left","childClassName","child","childLeaving","childPulsate","handleExited","timeoutId","setTimeout","clearTimeout","undefined","createElement","className","style","process","env","NODE_ENV","propTypes","object","isRequired","bool","func","number"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport useEventCallback from '../utils/useEventCallback';\nimport useEnhancedEffect from '../utils/useEnhancedEffect';\n/**\n * @ignore - internal component.\n */\n\nfunction Ripple(props) {\n  const {\n    classes,\n    pulsate = false,\n    rippleX,\n    rippleY,\n    rippleSize,\n    in: inProp,\n    onExited = () => {},\n    timeout\n  } = props;\n  const [leaving, setLeaving] = React.useState(false);\n  const rippleClassName = clsx(classes.ripple, classes.rippleVisible, pulsate && classes.ripplePulsate);\n  const rippleStyles = {\n    width: rippleSize,\n    height: rippleSize,\n    top: -(rippleSize / 2) + rippleY,\n    left: -(rippleSize / 2) + rippleX\n  };\n  const childClassName = clsx(classes.child, leaving && classes.childLeaving, pulsate && classes.childPulsate);\n  const handleExited = useEventCallback(onExited); // Ripple is used for user feedback (e.g. click or press) so we want to apply styles with the highest priority\n\n  useEnhancedEffect(() => {\n    if (!inProp) {\n      // react-transition-group#onExit\n      setLeaving(true); // react-transition-group#onExited\n\n      const timeoutId = setTimeout(handleExited, timeout);\n      return () => {\n        clearTimeout(timeoutId);\n      };\n    }\n\n    return undefined;\n  }, [handleExited, inProp, timeout]);\n  return /*#__PURE__*/React.createElement(\"span\", {\n    className: rippleClassName,\n    style: rippleStyles\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: childClassName\n  }));\n}\n\nprocess.env.NODE_ENV !== \"production\" ? Ripple.propTypes = {\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore - injected from TransitionGroup\n   */\n  in: PropTypes.bool,\n\n  /**\n   * @ignore - injected from TransitionGroup\n   */\n  onExited: PropTypes.func,\n\n  /**\n   * If `true`, the ripple pulsates, typically indicating the keyboard focus state of an element.\n   */\n  pulsate: PropTypes.bool,\n\n  /**\n   * Diameter of the ripple.\n   */\n  rippleSize: PropTypes.number,\n\n  /**\n   * Horizontal position of the ripple center.\n   */\n  rippleX: PropTypes.number,\n\n  /**\n   * Vertical position of the ripple center.\n   */\n  rippleY: PropTypes.number,\n\n  /**\n   * exit delay\n   */\n  timeout: PropTypes.number.isRequired\n} : void 0;\nexport default Ripple;"]},"metadata":{},"sourceType":"module"}