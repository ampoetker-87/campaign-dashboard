{"ast":null,"code":"\"use strict\"; // Copyright 2020 Google LLC\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//    http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nvar _createClass = require(\"/Users/amandapoetker-alles/Desktop/campaign-dashboard/Campaign-Planner/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _classCallCheck = require(\"/Users/amandapoetker-alles/Desktop/campaign-dashboard/Campaign-Planner/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.jobs_v3 = void 0;\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\n/* eslint-disable @typescript-eslint/class-name-casing */\n\n/* eslint-disable @typescript-eslint/no-unused-vars */\n\n/* eslint-disable @typescript-eslint/no-empty-interface */\n\n/* eslint-disable @typescript-eslint/no-namespace */\n\n/* eslint-disable no-irregular-whitespace */\n\nvar googleapis_common_1 = require(\"googleapis-common\");\n\nvar jobs_v3;\n\n(function (jobs_v3) {\n  /**\n   * Cloud Talent Solution API\n   *\n   * Cloud Talent Solution provides the capability to create, read, update, and delete job postings, as well as search jobs based on keywords and filters.\n   *\n   * @example\n   * ```js\n   * const {google} = require('googleapis');\n   * const jobs = google.jobs('v3');\n   * ```\n   */\n  var Jobs = function Jobs(options, google) {\n    _classCallCheck(this, Jobs);\n\n    this.context = {\n      _options: options || {},\n      google\n    };\n    this.projects = new Resource$Projects(this.context);\n  };\n\n  jobs_v3.Jobs = Jobs;\n\n  var Resource$Projects = /*#__PURE__*/function () {\n    function Resource$Projects(context) {\n      _classCallCheck(this, Resource$Projects);\n\n      this.context = context;\n      this.clientEvents = new Resource$Projects$Clientevents(this.context);\n      this.companies = new Resource$Projects$Companies(this.context);\n      this.jobs = new Resource$Projects$Jobs(this.context);\n    }\n\n    _createClass(Resource$Projects, [{\n      key: \"complete\",\n      value: function complete(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://jobs.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v3/{+name}:complete').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['name'],\n          pathParams: ['name'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Projects;\n  }();\n\n  jobs_v3.Resource$Projects = Resource$Projects;\n\n  var Resource$Projects$Clientevents = /*#__PURE__*/function () {\n    function Resource$Projects$Clientevents(context) {\n      _classCallCheck(this, Resource$Projects$Clientevents);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Projects$Clientevents, [{\n      key: \"create\",\n      value: function create(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://jobs.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v3/{+parent}/clientEvents').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['parent'],\n          pathParams: ['parent'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Projects$Clientevents;\n  }();\n\n  jobs_v3.Resource$Projects$Clientevents = Resource$Projects$Clientevents;\n\n  var Resource$Projects$Companies = /*#__PURE__*/function () {\n    function Resource$Projects$Companies(context) {\n      _classCallCheck(this, Resource$Projects$Companies);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Projects$Companies, [{\n      key: \"create\",\n      value: function create(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://jobs.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v3/{+parent}/companies').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['parent'],\n          pathParams: ['parent'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"delete\",\n      value: function _delete(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://jobs.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v3/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'DELETE'\n          }, options),\n          params,\n          requiredParams: ['name'],\n          pathParams: ['name'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://jobs.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v3/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['name'],\n          pathParams: ['name'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://jobs.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v3/{+parent}/companies').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['parent'],\n          pathParams: ['parent'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"patch\",\n      value: function patch(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://jobs.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v3/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PATCH'\n          }, options),\n          params,\n          requiredParams: ['name'],\n          pathParams: ['name'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Projects$Companies;\n  }();\n\n  jobs_v3.Resource$Projects$Companies = Resource$Projects$Companies;\n\n  var Resource$Projects$Jobs = /*#__PURE__*/function () {\n    function Resource$Projects$Jobs(context) {\n      _classCallCheck(this, Resource$Projects$Jobs);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Projects$Jobs, [{\n      key: \"batchDelete\",\n      value: function batchDelete(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://jobs.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v3/{+parent}/jobs:batchDelete').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['parent'],\n          pathParams: ['parent'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"create\",\n      value: function create(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://jobs.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v3/{+parent}/jobs').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['parent'],\n          pathParams: ['parent'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"delete\",\n      value: function _delete(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://jobs.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v3/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'DELETE'\n          }, options),\n          params,\n          requiredParams: ['name'],\n          pathParams: ['name'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://jobs.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v3/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['name'],\n          pathParams: ['name'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://jobs.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v3/{+parent}/jobs').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['parent'],\n          pathParams: ['parent'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"patch\",\n      value: function patch(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://jobs.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v3/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PATCH'\n          }, options),\n          params,\n          requiredParams: ['name'],\n          pathParams: ['name'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"search\",\n      value: function search(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://jobs.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v3/{+parent}/jobs:search').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['parent'],\n          pathParams: ['parent'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"searchForAlert\",\n      value: function searchForAlert(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://jobs.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v3/{+parent}/jobs:searchForAlert').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['parent'],\n          pathParams: ['parent'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Projects$Jobs;\n  }();\n\n  jobs_v3.Resource$Projects$Jobs = Resource$Projects$Jobs;\n})(jobs_v3 = exports.jobs_v3 || (exports.jobs_v3 = {}));","map":{"version":3,"sources":["/Users/amandapoetker-alles/Desktop/campaign-dashboard/Campaign-Planner/node_modules/googleapis/build/src/apis/jobs/v3.js"],"names":["Object","defineProperty","exports","value","jobs_v3","googleapis_common_1","require","Jobs","options","google","context","_options","projects","Resource$Projects","clientEvents","Resource$Projects$Clientevents","companies","Resource$Projects$Companies","jobs","Resource$Projects$Jobs","paramsOrCallback","optionsOrCallback","callback","params","rootUrl","parameters","assign","url","replace","method","requiredParams","pathParams","createAPIRequest"],"mappings":"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","sourcesContent":["\"use strict\";\n// Copyright 2020 Google LLC\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//    http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.jobs_v3 = void 0;\n/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/class-name-casing */\n/* eslint-disable @typescript-eslint/no-unused-vars */\n/* eslint-disable @typescript-eslint/no-empty-interface */\n/* eslint-disable @typescript-eslint/no-namespace */\n/* eslint-disable no-irregular-whitespace */\nconst googleapis_common_1 = require(\"googleapis-common\");\nvar jobs_v3;\n(function (jobs_v3) {\n    /**\n     * Cloud Talent Solution API\n     *\n     * Cloud Talent Solution provides the capability to create, read, update, and delete job postings, as well as search jobs based on keywords and filters.\n     *\n     * @example\n     * ```js\n     * const {google} = require('googleapis');\n     * const jobs = google.jobs('v3');\n     * ```\n     */\n    class Jobs {\n        constructor(options, google) {\n            this.context = {\n                _options: options || {},\n                google,\n            };\n            this.projects = new Resource$Projects(this.context);\n        }\n    }\n    jobs_v3.Jobs = Jobs;\n    class Resource$Projects {\n        constructor(context) {\n            this.context = context;\n            this.clientEvents = new Resource$Projects$Clientevents(this.context);\n            this.companies = new Resource$Projects$Companies(this.context);\n            this.jobs = new Resource$Projects$Jobs(this.context);\n        }\n        complete(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://jobs.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v3/{+name}:complete').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    jobs_v3.Resource$Projects = Resource$Projects;\n    class Resource$Projects$Clientevents {\n        constructor(context) {\n            this.context = context;\n        }\n        create(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://jobs.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v3/{+parent}/clientEvents').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['parent'],\n                pathParams: ['parent'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    jobs_v3.Resource$Projects$Clientevents = Resource$Projects$Clientevents;\n    class Resource$Projects$Companies {\n        constructor(context) {\n            this.context = context;\n        }\n        create(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://jobs.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v3/{+parent}/companies').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['parent'],\n                pathParams: ['parent'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        delete(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://jobs.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v3/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'DELETE',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://jobs.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v3/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://jobs.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v3/{+parent}/companies').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['parent'],\n                pathParams: ['parent'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        patch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://jobs.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v3/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PATCH',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    jobs_v3.Resource$Projects$Companies = Resource$Projects$Companies;\n    class Resource$Projects$Jobs {\n        constructor(context) {\n            this.context = context;\n        }\n        batchDelete(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://jobs.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v3/{+parent}/jobs:batchDelete').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['parent'],\n                pathParams: ['parent'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        create(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://jobs.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v3/{+parent}/jobs').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['parent'],\n                pathParams: ['parent'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        delete(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://jobs.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v3/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'DELETE',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://jobs.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v3/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://jobs.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v3/{+parent}/jobs').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['parent'],\n                pathParams: ['parent'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        patch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://jobs.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v3/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PATCH',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        search(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://jobs.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v3/{+parent}/jobs:search').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['parent'],\n                pathParams: ['parent'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        searchForAlert(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://jobs.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v3/{+parent}/jobs:searchForAlert').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['parent'],\n                pathParams: ['parent'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    jobs_v3.Resource$Projects$Jobs = Resource$Projects$Jobs;\n})(jobs_v3 = exports.jobs_v3 || (exports.jobs_v3 = {}));\n//# sourceMappingURL=v3.js.map"]},"metadata":{},"sourceType":"script"}