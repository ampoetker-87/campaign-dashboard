{"ast":null,"code":"\"use strict\";\n/**\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar _createClass = require(\"/Users/amandapoetker-alles/Desktop/campaign-dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _classCallCheck = require(\"/Users/amandapoetker-alles/Desktop/campaign-dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar googleapis_common_1 = require(\"googleapis-common\"); // tslint:disable: no-any\n// tslint:disable: class-name\n// tslint:disable: variable-name\n// tslint:disable: jsdoc-format\n// tslint:disable: no-namespace\n\n\nvar safebrowsing_v4;\n\n(function (safebrowsing_v4) {\n  /**\n   * Safe Browsing API\n   *\n   * Enables client applications to check web resources (most commonly URLs)\n   * against Google-generated lists of unsafe web resources.\n   *\n   * @example\n   * const {google} = require('googleapis');\n   * const safebrowsing = google.safebrowsing('v4');\n   *\n   * @namespace safebrowsing\n   * @type {Function}\n   * @version v4\n   * @variation v4\n   * @param {object=} options Options for Safebrowsing\n   */\n  var Safebrowsing = function Safebrowsing(options, google) {\n    _classCallCheck(this, Safebrowsing);\n\n    this.context = {\n      _options: options || {},\n      google\n    };\n    this.encodedFullHashes = new Resource$Encodedfullhashes(this.context);\n    this.encodedUpdates = new Resource$Encodedupdates(this.context);\n    this.fullHashes = new Resource$Fullhashes(this.context);\n    this.threatHits = new Resource$Threathits(this.context);\n    this.threatLists = new Resource$Threatlists(this.context);\n    this.threatListUpdates = new Resource$Threatlistupdates(this.context);\n    this.threatMatches = new Resource$Threatmatches(this.context);\n  };\n\n  safebrowsing_v4.Safebrowsing = Safebrowsing;\n\n  var Resource$Encodedfullhashes = /*#__PURE__*/function () {\n    function Resource$Encodedfullhashes(context) {\n      _classCallCheck(this, Resource$Encodedfullhashes);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Encodedfullhashes, [{\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://safebrowsing.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v4/encodedFullHashes/{encodedRequest}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['encodedRequest'],\n          pathParams: ['encodedRequest'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Encodedfullhashes;\n  }();\n\n  safebrowsing_v4.Resource$Encodedfullhashes = Resource$Encodedfullhashes;\n\n  var Resource$Encodedupdates = /*#__PURE__*/function () {\n    function Resource$Encodedupdates(context) {\n      _classCallCheck(this, Resource$Encodedupdates);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Encodedupdates, [{\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://safebrowsing.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v4/encodedUpdates/{encodedRequest}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['encodedRequest'],\n          pathParams: ['encodedRequest'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Encodedupdates;\n  }();\n\n  safebrowsing_v4.Resource$Encodedupdates = Resource$Encodedupdates;\n\n  var Resource$Fullhashes = /*#__PURE__*/function () {\n    function Resource$Fullhashes(context) {\n      _classCallCheck(this, Resource$Fullhashes);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Fullhashes, [{\n      key: \"find\",\n      value: function find(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://safebrowsing.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v4/fullHashes:find').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: [],\n          pathParams: [],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Fullhashes;\n  }();\n\n  safebrowsing_v4.Resource$Fullhashes = Resource$Fullhashes;\n\n  var Resource$Threathits = /*#__PURE__*/function () {\n    function Resource$Threathits(context) {\n      _classCallCheck(this, Resource$Threathits);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Threathits, [{\n      key: \"create\",\n      value: function create(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://safebrowsing.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v4/threatHits').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: [],\n          pathParams: [],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Threathits;\n  }();\n\n  safebrowsing_v4.Resource$Threathits = Resource$Threathits;\n\n  var Resource$Threatlists = /*#__PURE__*/function () {\n    function Resource$Threatlists(context) {\n      _classCallCheck(this, Resource$Threatlists);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Threatlists, [{\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://safebrowsing.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v4/threatLists').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: [],\n          pathParams: [],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Threatlists;\n  }();\n\n  safebrowsing_v4.Resource$Threatlists = Resource$Threatlists;\n\n  var Resource$Threatlistupdates = /*#__PURE__*/function () {\n    function Resource$Threatlistupdates(context) {\n      _classCallCheck(this, Resource$Threatlistupdates);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Threatlistupdates, [{\n      key: \"fetch\",\n      value: function fetch(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://safebrowsing.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v4/threatListUpdates:fetch').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: [],\n          pathParams: [],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Threatlistupdates;\n  }();\n\n  safebrowsing_v4.Resource$Threatlistupdates = Resource$Threatlistupdates;\n\n  var Resource$Threatmatches = /*#__PURE__*/function () {\n    function Resource$Threatmatches(context) {\n      _classCallCheck(this, Resource$Threatmatches);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Threatmatches, [{\n      key: \"find\",\n      value: function find(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://safebrowsing.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v4/threatMatches:find').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: [],\n          pathParams: [],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Threatmatches;\n  }();\n\n  safebrowsing_v4.Resource$Threatmatches = Resource$Threatmatches;\n})(safebrowsing_v4 = exports.safebrowsing_v4 || (exports.safebrowsing_v4 = {}));","map":{"version":3,"sources":["/Users/amandapoetker-alles/Desktop/campaign-dashboard/node_modules/googleapis/build/src/apis/safebrowsing/v4.js"],"names":["Object","defineProperty","exports","value","googleapis_common_1","require","safebrowsing_v4","Safebrowsing","options","google","context","_options","encodedFullHashes","Resource$Encodedfullhashes","encodedUpdates","Resource$Encodedupdates","fullHashes","Resource$Fullhashes","threatHits","Resource$Threathits","threatLists","Resource$Threatlists","threatListUpdates","Resource$Threatlistupdates","threatMatches","Resource$Threatmatches","paramsOrCallback","optionsOrCallback","callback","params","rootUrl","parameters","assign","url","replace","method","requiredParams","pathParams","createAPIRequest"],"mappings":"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","sourcesContent":["\"use strict\";\n/**\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst googleapis_common_1 = require(\"googleapis-common\");\n// tslint:disable: no-any\n// tslint:disable: class-name\n// tslint:disable: variable-name\n// tslint:disable: jsdoc-format\n// tslint:disable: no-namespace\nvar safebrowsing_v4;\n(function (safebrowsing_v4) {\n    /**\n     * Safe Browsing API\n     *\n     * Enables client applications to check web resources (most commonly URLs)\n     * against Google-generated lists of unsafe web resources.\n     *\n     * @example\n     * const {google} = require('googleapis');\n     * const safebrowsing = google.safebrowsing('v4');\n     *\n     * @namespace safebrowsing\n     * @type {Function}\n     * @version v4\n     * @variation v4\n     * @param {object=} options Options for Safebrowsing\n     */\n    class Safebrowsing {\n        constructor(options, google) {\n            this.context = { _options: options || {}, google };\n            this.encodedFullHashes = new Resource$Encodedfullhashes(this.context);\n            this.encodedUpdates = new Resource$Encodedupdates(this.context);\n            this.fullHashes = new Resource$Fullhashes(this.context);\n            this.threatHits = new Resource$Threathits(this.context);\n            this.threatLists = new Resource$Threatlists(this.context);\n            this.threatListUpdates = new Resource$Threatlistupdates(this.context);\n            this.threatMatches = new Resource$Threatmatches(this.context);\n        }\n    }\n    safebrowsing_v4.Safebrowsing = Safebrowsing;\n    class Resource$Encodedfullhashes {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://safebrowsing.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v4/encodedFullHashes/{encodedRequest}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['encodedRequest'],\n                pathParams: ['encodedRequest'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    safebrowsing_v4.Resource$Encodedfullhashes = Resource$Encodedfullhashes;\n    class Resource$Encodedupdates {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://safebrowsing.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v4/encodedUpdates/{encodedRequest}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['encodedRequest'],\n                pathParams: ['encodedRequest'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    safebrowsing_v4.Resource$Encodedupdates = Resource$Encodedupdates;\n    class Resource$Fullhashes {\n        constructor(context) {\n            this.context = context;\n        }\n        find(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://safebrowsing.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v4/fullHashes:find')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST'\n                }, options),\n                params,\n                requiredParams: [],\n                pathParams: [],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    safebrowsing_v4.Resource$Fullhashes = Resource$Fullhashes;\n    class Resource$Threathits {\n        constructor(context) {\n            this.context = context;\n        }\n        create(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://safebrowsing.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v4/threatHits').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST'\n                }, options),\n                params,\n                requiredParams: [],\n                pathParams: [],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    safebrowsing_v4.Resource$Threathits = Resource$Threathits;\n    class Resource$Threatlists {\n        constructor(context) {\n            this.context = context;\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://safebrowsing.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v4/threatLists').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: [],\n                pathParams: [],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    safebrowsing_v4.Resource$Threatlists = Resource$Threatlists;\n    class Resource$Threatlistupdates {\n        constructor(context) {\n            this.context = context;\n        }\n        fetch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://safebrowsing.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v4/threatListUpdates:fetch')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST'\n                }, options),\n                params,\n                requiredParams: [],\n                pathParams: [],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    safebrowsing_v4.Resource$Threatlistupdates = Resource$Threatlistupdates;\n    class Resource$Threatmatches {\n        constructor(context) {\n            this.context = context;\n        }\n        find(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://safebrowsing.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v4/threatMatches:find')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST'\n                }, options),\n                params,\n                requiredParams: [],\n                pathParams: [],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    safebrowsing_v4.Resource$Threatmatches = Resource$Threatmatches;\n})(safebrowsing_v4 = exports.safebrowsing_v4 || (exports.safebrowsing_v4 = {}));\n//# sourceMappingURL=v4.js.map"]},"metadata":{},"sourceType":"script"}