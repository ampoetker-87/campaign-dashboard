{"ast":null,"code":"\"use strict\";\n/**\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar _createClass = require(\"/Users/amandapoetker-alles/Desktop/campaign-dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _classCallCheck = require(\"/Users/amandapoetker-alles/Desktop/campaign-dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar googleapis_common_1 = require(\"googleapis-common\"); // tslint:disable: no-any\n// tslint:disable: class-name\n// tslint:disable: variable-name\n// tslint:disable: jsdoc-format\n// tslint:disable: no-namespace\n\n\nvar classroom_v1;\n\n(function (classroom_v1) {\n  /**\n   * Google Classroom API\n   *\n   * Manages classes, rosters, and invitations in Google Classroom.\n   *\n   * @example\n   * const {google} = require('googleapis');\n   * const classroom = google.classroom('v1');\n   *\n   * @namespace classroom\n   * @type {Function}\n   * @version v1\n   * @variation v1\n   * @param {object=} options Options for Classroom\n   */\n  var Classroom = function Classroom(options, google) {\n    _classCallCheck(this, Classroom);\n\n    this.context = {\n      _options: options || {},\n      google\n    };\n    this.courses = new Resource$Courses(this.context);\n    this.invitations = new Resource$Invitations(this.context);\n    this.registrations = new Resource$Registrations(this.context);\n    this.userProfiles = new Resource$Userprofiles(this.context);\n  };\n\n  classroom_v1.Classroom = Classroom;\n\n  var Resource$Courses = /*#__PURE__*/function () {\n    function Resource$Courses(context) {\n      _classCallCheck(this, Resource$Courses);\n\n      this.context = context;\n      this.aliases = new Resource$Courses$Aliases(this.context);\n      this.announcements = new Resource$Courses$Announcements(this.context);\n      this.courseWork = new Resource$Courses$Coursework(this.context);\n      this.students = new Resource$Courses$Students(this.context);\n      this.teachers = new Resource$Courses$Teachers(this.context);\n      this.topics = new Resource$Courses$Topics(this.context);\n    }\n\n    _createClass(Resource$Courses, [{\n      key: \"create\",\n      value: function create(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://classroom.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/courses').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: [],\n          pathParams: [],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"delete\",\n      value: function _delete(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://classroom.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/courses/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'DELETE'\n          }, options),\n          params,\n          requiredParams: ['id'],\n          pathParams: ['id'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://classroom.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/courses/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['id'],\n          pathParams: ['id'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://classroom.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/courses').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: [],\n          pathParams: [],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"patch\",\n      value: function patch(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://classroom.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/courses/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PATCH'\n          }, options),\n          params,\n          requiredParams: ['id'],\n          pathParams: ['id'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"update\",\n      value: function update(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://classroom.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/courses/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PUT'\n          }, options),\n          params,\n          requiredParams: ['id'],\n          pathParams: ['id'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Courses;\n  }();\n\n  classroom_v1.Resource$Courses = Resource$Courses;\n\n  var Resource$Courses$Aliases = /*#__PURE__*/function () {\n    function Resource$Courses$Aliases(context) {\n      _classCallCheck(this, Resource$Courses$Aliases);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Courses$Aliases, [{\n      key: \"create\",\n      value: function create(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://classroom.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/courses/{courseId}/aliases').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['courseId'],\n          pathParams: ['courseId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"delete\",\n      value: function _delete(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://classroom.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/courses/{courseId}/aliases/{alias}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'DELETE'\n          }, options),\n          params,\n          requiredParams: ['courseId', 'alias'],\n          pathParams: ['alias', 'courseId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://classroom.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/courses/{courseId}/aliases').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['courseId'],\n          pathParams: ['courseId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Courses$Aliases;\n  }();\n\n  classroom_v1.Resource$Courses$Aliases = Resource$Courses$Aliases;\n\n  var Resource$Courses$Announcements = /*#__PURE__*/function () {\n    function Resource$Courses$Announcements(context) {\n      _classCallCheck(this, Resource$Courses$Announcements);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Courses$Announcements, [{\n      key: \"create\",\n      value: function create(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://classroom.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/courses/{courseId}/announcements').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['courseId'],\n          pathParams: ['courseId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"delete\",\n      value: function _delete(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://classroom.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/courses/{courseId}/announcements/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'DELETE'\n          }, options),\n          params,\n          requiredParams: ['courseId', 'id'],\n          pathParams: ['courseId', 'id'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://classroom.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/courses/{courseId}/announcements/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['courseId', 'id'],\n          pathParams: ['courseId', 'id'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://classroom.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/courses/{courseId}/announcements').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['courseId'],\n          pathParams: ['courseId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"modifyAssignees\",\n      value: function modifyAssignees(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://classroom.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/courses/{courseId}/announcements/{id}:modifyAssignees').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['courseId', 'id'],\n          pathParams: ['courseId', 'id'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"patch\",\n      value: function patch(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://classroom.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/courses/{courseId}/announcements/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PATCH'\n          }, options),\n          params,\n          requiredParams: ['courseId', 'id'],\n          pathParams: ['courseId', 'id'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Courses$Announcements;\n  }();\n\n  classroom_v1.Resource$Courses$Announcements = Resource$Courses$Announcements;\n\n  var Resource$Courses$Coursework = /*#__PURE__*/function () {\n    function Resource$Courses$Coursework(context) {\n      _classCallCheck(this, Resource$Courses$Coursework);\n\n      this.context = context;\n      this.studentSubmissions = new Resource$Courses$Coursework$Studentsubmissions(this.context);\n    }\n\n    _createClass(Resource$Courses$Coursework, [{\n      key: \"create\",\n      value: function create(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://classroom.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/courses/{courseId}/courseWork').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['courseId'],\n          pathParams: ['courseId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"delete\",\n      value: function _delete(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://classroom.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/courses/{courseId}/courseWork/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'DELETE'\n          }, options),\n          params,\n          requiredParams: ['courseId', 'id'],\n          pathParams: ['courseId', 'id'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://classroom.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/courses/{courseId}/courseWork/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['courseId', 'id'],\n          pathParams: ['courseId', 'id'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://classroom.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/courses/{courseId}/courseWork').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['courseId'],\n          pathParams: ['courseId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"modifyAssignees\",\n      value: function modifyAssignees(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://classroom.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/courses/{courseId}/courseWork/{id}:modifyAssignees').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['courseId', 'id'],\n          pathParams: ['courseId', 'id'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"patch\",\n      value: function patch(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://classroom.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/courses/{courseId}/courseWork/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PATCH'\n          }, options),\n          params,\n          requiredParams: ['courseId', 'id'],\n          pathParams: ['courseId', 'id'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Courses$Coursework;\n  }();\n\n  classroom_v1.Resource$Courses$Coursework = Resource$Courses$Coursework;\n\n  var Resource$Courses$Coursework$Studentsubmissions = /*#__PURE__*/function () {\n    function Resource$Courses$Coursework$Studentsubmissions(context) {\n      _classCallCheck(this, Resource$Courses$Coursework$Studentsubmissions);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Courses$Coursework$Studentsubmissions, [{\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://classroom.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['courseId', 'courseWorkId', 'id'],\n          pathParams: ['courseId', 'courseWorkId', 'id'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://classroom.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['courseId', 'courseWorkId'],\n          pathParams: ['courseId', 'courseWorkId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"modifyAttachments\",\n      value: function modifyAttachments(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://classroom.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}:modifyAttachments').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['courseId', 'courseWorkId', 'id'],\n          pathParams: ['courseId', 'courseWorkId', 'id'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"patch\",\n      value: function patch(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://classroom.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PATCH'\n          }, options),\n          params,\n          requiredParams: ['courseId', 'courseWorkId', 'id'],\n          pathParams: ['courseId', 'courseWorkId', 'id'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"reclaim\",\n      value: function reclaim(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://classroom.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}:reclaim').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['courseId', 'courseWorkId', 'id'],\n          pathParams: ['courseId', 'courseWorkId', 'id'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"return\",\n      value: function _return(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://classroom.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}:return').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['courseId', 'courseWorkId', 'id'],\n          pathParams: ['courseId', 'courseWorkId', 'id'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"turnIn\",\n      value: function turnIn(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://classroom.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}:turnIn').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['courseId', 'courseWorkId', 'id'],\n          pathParams: ['courseId', 'courseWorkId', 'id'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Courses$Coursework$Studentsubmissions;\n  }();\n\n  classroom_v1.Resource$Courses$Coursework$Studentsubmissions = Resource$Courses$Coursework$Studentsubmissions;\n\n  var Resource$Courses$Students = /*#__PURE__*/function () {\n    function Resource$Courses$Students(context) {\n      _classCallCheck(this, Resource$Courses$Students);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Courses$Students, [{\n      key: \"create\",\n      value: function create(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://classroom.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/courses/{courseId}/students').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['courseId'],\n          pathParams: ['courseId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"delete\",\n      value: function _delete(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://classroom.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/courses/{courseId}/students/{userId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'DELETE'\n          }, options),\n          params,\n          requiredParams: ['courseId', 'userId'],\n          pathParams: ['courseId', 'userId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://classroom.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/courses/{courseId}/students/{userId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['courseId', 'userId'],\n          pathParams: ['courseId', 'userId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://classroom.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/courses/{courseId}/students').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['courseId'],\n          pathParams: ['courseId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Courses$Students;\n  }();\n\n  classroom_v1.Resource$Courses$Students = Resource$Courses$Students;\n\n  var Resource$Courses$Teachers = /*#__PURE__*/function () {\n    function Resource$Courses$Teachers(context) {\n      _classCallCheck(this, Resource$Courses$Teachers);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Courses$Teachers, [{\n      key: \"create\",\n      value: function create(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://classroom.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/courses/{courseId}/teachers').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['courseId'],\n          pathParams: ['courseId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"delete\",\n      value: function _delete(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://classroom.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/courses/{courseId}/teachers/{userId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'DELETE'\n          }, options),\n          params,\n          requiredParams: ['courseId', 'userId'],\n          pathParams: ['courseId', 'userId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://classroom.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/courses/{courseId}/teachers/{userId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['courseId', 'userId'],\n          pathParams: ['courseId', 'userId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://classroom.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/courses/{courseId}/teachers').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['courseId'],\n          pathParams: ['courseId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Courses$Teachers;\n  }();\n\n  classroom_v1.Resource$Courses$Teachers = Resource$Courses$Teachers;\n\n  var Resource$Courses$Topics = /*#__PURE__*/function () {\n    function Resource$Courses$Topics(context) {\n      _classCallCheck(this, Resource$Courses$Topics);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Courses$Topics, [{\n      key: \"create\",\n      value: function create(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://classroom.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/courses/{courseId}/topics').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['courseId'],\n          pathParams: ['courseId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"delete\",\n      value: function _delete(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://classroom.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/courses/{courseId}/topics/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'DELETE'\n          }, options),\n          params,\n          requiredParams: ['courseId', 'id'],\n          pathParams: ['courseId', 'id'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://classroom.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/courses/{courseId}/topics/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['courseId', 'id'],\n          pathParams: ['courseId', 'id'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://classroom.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/courses/{courseId}/topics').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['courseId'],\n          pathParams: ['courseId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"patch\",\n      value: function patch(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://classroom.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/courses/{courseId}/topics/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PATCH'\n          }, options),\n          params,\n          requiredParams: ['courseId', 'id'],\n          pathParams: ['courseId', 'id'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Courses$Topics;\n  }();\n\n  classroom_v1.Resource$Courses$Topics = Resource$Courses$Topics;\n\n  var Resource$Invitations = /*#__PURE__*/function () {\n    function Resource$Invitations(context) {\n      _classCallCheck(this, Resource$Invitations);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Invitations, [{\n      key: \"accept\",\n      value: function accept(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://classroom.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/invitations/{id}:accept').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['id'],\n          pathParams: ['id'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"create\",\n      value: function create(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://classroom.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/invitations').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: [],\n          pathParams: [],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"delete\",\n      value: function _delete(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://classroom.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/invitations/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'DELETE'\n          }, options),\n          params,\n          requiredParams: ['id'],\n          pathParams: ['id'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://classroom.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/invitations/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['id'],\n          pathParams: ['id'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://classroom.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/invitations').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: [],\n          pathParams: [],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Invitations;\n  }();\n\n  classroom_v1.Resource$Invitations = Resource$Invitations;\n\n  var Resource$Registrations = /*#__PURE__*/function () {\n    function Resource$Registrations(context) {\n      _classCallCheck(this, Resource$Registrations);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Registrations, [{\n      key: \"create\",\n      value: function create(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://classroom.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/registrations').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: [],\n          pathParams: [],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"delete\",\n      value: function _delete(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://classroom.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/registrations/{registrationId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'DELETE'\n          }, options),\n          params,\n          requiredParams: ['registrationId'],\n          pathParams: ['registrationId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Registrations;\n  }();\n\n  classroom_v1.Resource$Registrations = Resource$Registrations;\n\n  var Resource$Userprofiles = /*#__PURE__*/function () {\n    function Resource$Userprofiles(context) {\n      _classCallCheck(this, Resource$Userprofiles);\n\n      this.context = context;\n      this.guardianInvitations = new Resource$Userprofiles$Guardianinvitations(this.context);\n      this.guardians = new Resource$Userprofiles$Guardians(this.context);\n    }\n\n    _createClass(Resource$Userprofiles, [{\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://classroom.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/userProfiles/{userId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['userId'],\n          pathParams: ['userId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Userprofiles;\n  }();\n\n  classroom_v1.Resource$Userprofiles = Resource$Userprofiles;\n\n  var Resource$Userprofiles$Guardianinvitations = /*#__PURE__*/function () {\n    function Resource$Userprofiles$Guardianinvitations(context) {\n      _classCallCheck(this, Resource$Userprofiles$Guardianinvitations);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Userprofiles$Guardianinvitations, [{\n      key: \"create\",\n      value: function create(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://classroom.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/userProfiles/{studentId}/guardianInvitations').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['studentId'],\n          pathParams: ['studentId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://classroom.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/userProfiles/{studentId}/guardianInvitations/{invitationId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['studentId', 'invitationId'],\n          pathParams: ['invitationId', 'studentId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://classroom.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/userProfiles/{studentId}/guardianInvitations').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['studentId'],\n          pathParams: ['studentId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"patch\",\n      value: function patch(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://classroom.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/userProfiles/{studentId}/guardianInvitations/{invitationId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PATCH'\n          }, options),\n          params,\n          requiredParams: ['studentId', 'invitationId'],\n          pathParams: ['invitationId', 'studentId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Userprofiles$Guardianinvitations;\n  }();\n\n  classroom_v1.Resource$Userprofiles$Guardianinvitations = Resource$Userprofiles$Guardianinvitations;\n\n  var Resource$Userprofiles$Guardians = /*#__PURE__*/function () {\n    function Resource$Userprofiles$Guardians(context) {\n      _classCallCheck(this, Resource$Userprofiles$Guardians);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Userprofiles$Guardians, [{\n      key: \"delete\",\n      value: function _delete(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://classroom.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/userProfiles/{studentId}/guardians/{guardianId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'DELETE'\n          }, options),\n          params,\n          requiredParams: ['studentId', 'guardianId'],\n          pathParams: ['guardianId', 'studentId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://classroom.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/userProfiles/{studentId}/guardians/{guardianId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['studentId', 'guardianId'],\n          pathParams: ['guardianId', 'studentId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://classroom.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/userProfiles/{studentId}/guardians').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['studentId'],\n          pathParams: ['studentId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Userprofiles$Guardians;\n  }();\n\n  classroom_v1.Resource$Userprofiles$Guardians = Resource$Userprofiles$Guardians;\n})(classroom_v1 = exports.classroom_v1 || (exports.classroom_v1 = {}));","map":{"version":3,"sources":["/Users/amandapoetker-alles/Desktop/campaign-dashboard/node_modules/googleapis/build/src/apis/classroom/v1.js"],"names":["Object","defineProperty","exports","value","googleapis_common_1","require","classroom_v1","Classroom","options","google","context","_options","courses","Resource$Courses","invitations","Resource$Invitations","registrations","Resource$Registrations","userProfiles","Resource$Userprofiles","aliases","Resource$Courses$Aliases","announcements","Resource$Courses$Announcements","courseWork","Resource$Courses$Coursework","students","Resource$Courses$Students","teachers","Resource$Courses$Teachers","topics","Resource$Courses$Topics","paramsOrCallback","optionsOrCallback","callback","params","rootUrl","parameters","assign","url","replace","method","requiredParams","pathParams","createAPIRequest","studentSubmissions","Resource$Courses$Coursework$Studentsubmissions","guardianInvitations","Resource$Userprofiles$Guardianinvitations","guardians","Resource$Userprofiles$Guardians"],"mappings":"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","sourcesContent":["\"use strict\";\n/**\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst googleapis_common_1 = require(\"googleapis-common\");\n// tslint:disable: no-any\n// tslint:disable: class-name\n// tslint:disable: variable-name\n// tslint:disable: jsdoc-format\n// tslint:disable: no-namespace\nvar classroom_v1;\n(function (classroom_v1) {\n    /**\n     * Google Classroom API\n     *\n     * Manages classes, rosters, and invitations in Google Classroom.\n     *\n     * @example\n     * const {google} = require('googleapis');\n     * const classroom = google.classroom('v1');\n     *\n     * @namespace classroom\n     * @type {Function}\n     * @version v1\n     * @variation v1\n     * @param {object=} options Options for Classroom\n     */\n    class Classroom {\n        constructor(options, google) {\n            this.context = { _options: options || {}, google };\n            this.courses = new Resource$Courses(this.context);\n            this.invitations = new Resource$Invitations(this.context);\n            this.registrations = new Resource$Registrations(this.context);\n            this.userProfiles = new Resource$Userprofiles(this.context);\n        }\n    }\n    classroom_v1.Classroom = Classroom;\n    class Resource$Courses {\n        constructor(context) {\n            this.context = context;\n            this.aliases = new Resource$Courses$Aliases(this.context);\n            this.announcements = new Resource$Courses$Announcements(this.context);\n            this.courseWork = new Resource$Courses$Coursework(this.context);\n            this.students = new Resource$Courses$Students(this.context);\n            this.teachers = new Resource$Courses$Teachers(this.context);\n            this.topics = new Resource$Courses$Topics(this.context);\n        }\n        create(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://classroom.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1/courses').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST'\n                }, options),\n                params,\n                requiredParams: [],\n                pathParams: [],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        delete(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://classroom.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1/courses/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'DELETE'\n                }, options),\n                params,\n                requiredParams: ['id'],\n                pathParams: ['id'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://classroom.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1/courses/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['id'],\n                pathParams: ['id'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://classroom.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1/courses').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: [],\n                pathParams: [],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        patch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://classroom.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1/courses/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PATCH'\n                }, options),\n                params,\n                requiredParams: ['id'],\n                pathParams: ['id'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        update(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://classroom.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1/courses/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PUT'\n                }, options),\n                params,\n                requiredParams: ['id'],\n                pathParams: ['id'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    classroom_v1.Resource$Courses = Resource$Courses;\n    class Resource$Courses$Aliases {\n        constructor(context) {\n            this.context = context;\n        }\n        create(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://classroom.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1/courses/{courseId}/aliases')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST'\n                }, options),\n                params,\n                requiredParams: ['courseId'],\n                pathParams: ['courseId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        delete(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://classroom.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1/courses/{courseId}/aliases/{alias}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'DELETE'\n                }, options),\n                params,\n                requiredParams: ['courseId', 'alias'],\n                pathParams: ['alias', 'courseId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://classroom.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1/courses/{courseId}/aliases')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['courseId'],\n                pathParams: ['courseId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    classroom_v1.Resource$Courses$Aliases = Resource$Courses$Aliases;\n    class Resource$Courses$Announcements {\n        constructor(context) {\n            this.context = context;\n        }\n        create(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://classroom.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1/courses/{courseId}/announcements')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST'\n                }, options),\n                params,\n                requiredParams: ['courseId'],\n                pathParams: ['courseId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        delete(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://classroom.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1/courses/{courseId}/announcements/{id}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'DELETE'\n                }, options),\n                params,\n                requiredParams: ['courseId', 'id'],\n                pathParams: ['courseId', 'id'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://classroom.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1/courses/{courseId}/announcements/{id}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['courseId', 'id'],\n                pathParams: ['courseId', 'id'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://classroom.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1/courses/{courseId}/announcements')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['courseId'],\n                pathParams: ['courseId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        modifyAssignees(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://classroom.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/v1/courses/{courseId}/announcements/{id}:modifyAssignees')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST'\n                }, options),\n                params,\n                requiredParams: ['courseId', 'id'],\n                pathParams: ['courseId', 'id'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        patch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://classroom.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1/courses/{courseId}/announcements/{id}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PATCH'\n                }, options),\n                params,\n                requiredParams: ['courseId', 'id'],\n                pathParams: ['courseId', 'id'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    classroom_v1.Resource$Courses$Announcements = Resource$Courses$Announcements;\n    class Resource$Courses$Coursework {\n        constructor(context) {\n            this.context = context;\n            this.studentSubmissions =\n                new Resource$Courses$Coursework$Studentsubmissions(this.context);\n        }\n        create(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://classroom.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1/courses/{courseId}/courseWork')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST'\n                }, options),\n                params,\n                requiredParams: ['courseId'],\n                pathParams: ['courseId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        delete(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://classroom.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1/courses/{courseId}/courseWork/{id}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'DELETE'\n                }, options),\n                params,\n                requiredParams: ['courseId', 'id'],\n                pathParams: ['courseId', 'id'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://classroom.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1/courses/{courseId}/courseWork/{id}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['courseId', 'id'],\n                pathParams: ['courseId', 'id'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://classroom.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1/courses/{courseId}/courseWork')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['courseId'],\n                pathParams: ['courseId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        modifyAssignees(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://classroom.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/v1/courses/{courseId}/courseWork/{id}:modifyAssignees')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST'\n                }, options),\n                params,\n                requiredParams: ['courseId', 'id'],\n                pathParams: ['courseId', 'id'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        patch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://classroom.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1/courses/{courseId}/courseWork/{id}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PATCH'\n                }, options),\n                params,\n                requiredParams: ['courseId', 'id'],\n                pathParams: ['courseId', 'id'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    classroom_v1.Resource$Courses$Coursework = Resource$Courses$Coursework;\n    class Resource$Courses$Coursework$Studentsubmissions {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://classroom.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['courseId', 'courseWorkId', 'id'],\n                pathParams: ['courseId', 'courseWorkId', 'id'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://classroom.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['courseId', 'courseWorkId'],\n                pathParams: ['courseId', 'courseWorkId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        modifyAttachments(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://classroom.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}:modifyAttachments')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST'\n                }, options),\n                params,\n                requiredParams: ['courseId', 'courseWorkId', 'id'],\n                pathParams: ['courseId', 'courseWorkId', 'id'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        patch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://classroom.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PATCH'\n                }, options),\n                params,\n                requiredParams: ['courseId', 'courseWorkId', 'id'],\n                pathParams: ['courseId', 'courseWorkId', 'id'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        reclaim(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://classroom.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}:reclaim')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST'\n                }, options),\n                params,\n                requiredParams: ['courseId', 'courseWorkId', 'id'],\n                pathParams: ['courseId', 'courseWorkId', 'id'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        return(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://classroom.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}:return')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST'\n                }, options),\n                params,\n                requiredParams: ['courseId', 'courseWorkId', 'id'],\n                pathParams: ['courseId', 'courseWorkId', 'id'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        turnIn(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://classroom.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}:turnIn')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST'\n                }, options),\n                params,\n                requiredParams: ['courseId', 'courseWorkId', 'id'],\n                pathParams: ['courseId', 'courseWorkId', 'id'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    classroom_v1.Resource$Courses$Coursework$Studentsubmissions = Resource$Courses$Coursework$Studentsubmissions;\n    class Resource$Courses$Students {\n        constructor(context) {\n            this.context = context;\n        }\n        create(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://classroom.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1/courses/{courseId}/students')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST'\n                }, options),\n                params,\n                requiredParams: ['courseId'],\n                pathParams: ['courseId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        delete(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://classroom.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1/courses/{courseId}/students/{userId}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'DELETE'\n                }, options),\n                params,\n                requiredParams: ['courseId', 'userId'],\n                pathParams: ['courseId', 'userId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://classroom.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1/courses/{courseId}/students/{userId}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['courseId', 'userId'],\n                pathParams: ['courseId', 'userId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://classroom.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1/courses/{courseId}/students')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['courseId'],\n                pathParams: ['courseId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    classroom_v1.Resource$Courses$Students = Resource$Courses$Students;\n    class Resource$Courses$Teachers {\n        constructor(context) {\n            this.context = context;\n        }\n        create(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://classroom.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1/courses/{courseId}/teachers')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST'\n                }, options),\n                params,\n                requiredParams: ['courseId'],\n                pathParams: ['courseId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        delete(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://classroom.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1/courses/{courseId}/teachers/{userId}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'DELETE'\n                }, options),\n                params,\n                requiredParams: ['courseId', 'userId'],\n                pathParams: ['courseId', 'userId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://classroom.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1/courses/{courseId}/teachers/{userId}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['courseId', 'userId'],\n                pathParams: ['courseId', 'userId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://classroom.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1/courses/{courseId}/teachers')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['courseId'],\n                pathParams: ['courseId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    classroom_v1.Resource$Courses$Teachers = Resource$Courses$Teachers;\n    class Resource$Courses$Topics {\n        constructor(context) {\n            this.context = context;\n        }\n        create(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://classroom.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1/courses/{courseId}/topics')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST'\n                }, options),\n                params,\n                requiredParams: ['courseId'],\n                pathParams: ['courseId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        delete(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://classroom.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1/courses/{courseId}/topics/{id}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'DELETE'\n                }, options),\n                params,\n                requiredParams: ['courseId', 'id'],\n                pathParams: ['courseId', 'id'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://classroom.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1/courses/{courseId}/topics/{id}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['courseId', 'id'],\n                pathParams: ['courseId', 'id'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://classroom.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1/courses/{courseId}/topics')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['courseId'],\n                pathParams: ['courseId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        patch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://classroom.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1/courses/{courseId}/topics/{id}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PATCH'\n                }, options),\n                params,\n                requiredParams: ['courseId', 'id'],\n                pathParams: ['courseId', 'id'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    classroom_v1.Resource$Courses$Topics = Resource$Courses$Topics;\n    class Resource$Invitations {\n        constructor(context) {\n            this.context = context;\n        }\n        accept(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://classroom.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1/invitations/{id}:accept')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST'\n                }, options),\n                params,\n                requiredParams: ['id'],\n                pathParams: ['id'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        create(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://classroom.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1/invitations').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST'\n                }, options),\n                params,\n                requiredParams: [],\n                pathParams: [],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        delete(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://classroom.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1/invitations/{id}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'DELETE'\n                }, options),\n                params,\n                requiredParams: ['id'],\n                pathParams: ['id'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://classroom.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1/invitations/{id}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['id'],\n                pathParams: ['id'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://classroom.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1/invitations').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: [],\n                pathParams: [],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    classroom_v1.Resource$Invitations = Resource$Invitations;\n    class Resource$Registrations {\n        constructor(context) {\n            this.context = context;\n        }\n        create(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://classroom.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1/registrations').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST'\n                }, options),\n                params,\n                requiredParams: [],\n                pathParams: [],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        delete(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://classroom.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1/registrations/{registrationId}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'DELETE'\n                }, options),\n                params,\n                requiredParams: ['registrationId'],\n                pathParams: ['registrationId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    classroom_v1.Resource$Registrations = Resource$Registrations;\n    class Resource$Userprofiles {\n        constructor(context) {\n            this.context = context;\n            this.guardianInvitations =\n                new Resource$Userprofiles$Guardianinvitations(this.context);\n            this.guardians = new Resource$Userprofiles$Guardians(this.context);\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://classroom.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1/userProfiles/{userId}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['userId'],\n                pathParams: ['userId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    classroom_v1.Resource$Userprofiles = Resource$Userprofiles;\n    class Resource$Userprofiles$Guardianinvitations {\n        constructor(context) {\n            this.context = context;\n        }\n        create(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://classroom.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1/userProfiles/{studentId}/guardianInvitations')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST'\n                }, options),\n                params,\n                requiredParams: ['studentId'],\n                pathParams: ['studentId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://classroom.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/v1/userProfiles/{studentId}/guardianInvitations/{invitationId}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['studentId', 'invitationId'],\n                pathParams: ['invitationId', 'studentId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://classroom.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1/userProfiles/{studentId}/guardianInvitations')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['studentId'],\n                pathParams: ['studentId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        patch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://classroom.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/v1/userProfiles/{studentId}/guardianInvitations/{invitationId}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PATCH'\n                }, options),\n                params,\n                requiredParams: ['studentId', 'invitationId'],\n                pathParams: ['invitationId', 'studentId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    classroom_v1.Resource$Userprofiles$Guardianinvitations = Resource$Userprofiles$Guardianinvitations;\n    class Resource$Userprofiles$Guardians {\n        constructor(context) {\n            this.context = context;\n        }\n        delete(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://classroom.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/v1/userProfiles/{studentId}/guardians/{guardianId}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'DELETE'\n                }, options),\n                params,\n                requiredParams: ['studentId', 'guardianId'],\n                pathParams: ['guardianId', 'studentId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://classroom.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/v1/userProfiles/{studentId}/guardians/{guardianId}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['studentId', 'guardianId'],\n                pathParams: ['guardianId', 'studentId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://classroom.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1/userProfiles/{studentId}/guardians')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['studentId'],\n                pathParams: ['studentId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    classroom_v1.Resource$Userprofiles$Guardians = Resource$Userprofiles$Guardians;\n})(classroom_v1 = exports.classroom_v1 || (exports.classroom_v1 = {}));\n//# sourceMappingURL=v1.js.map"]},"metadata":{},"sourceType":"script"}