{"ast":null,"code":"\"use strict\"; // Copyright 2020 Google LLC\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//    http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nvar _createClass = require(\"/Users/amandapoetker-alles/Desktop/campaign-dashboard/Campaign-Planner/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _classCallCheck = require(\"/Users/amandapoetker-alles/Desktop/campaign-dashboard/Campaign-Planner/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.displayvideo_v1beta2 = void 0;\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\n/* eslint-disable @typescript-eslint/class-name-casing */\n\n/* eslint-disable @typescript-eslint/no-unused-vars */\n\n/* eslint-disable @typescript-eslint/no-empty-interface */\n\n/* eslint-disable @typescript-eslint/no-namespace */\n\n/* eslint-disable no-irregular-whitespace */\n\nvar googleapis_common_1 = require(\"googleapis-common\");\n\nvar displayvideo_v1beta2;\n\n(function (displayvideo_v1beta2) {\n  /**\n   * Display &amp; Video 360 API\n   *\n   * Display &amp; Video 360 API allows users to manage and create campaigns and reports.\n   *\n   * @example\n   * ```js\n   * const {google} = require('googleapis');\n   * const displayvideo = google.displayvideo('v1beta2');\n   * ```\n   */\n  var Displayvideo = function Displayvideo(options, google) {\n    _classCallCheck(this, Displayvideo);\n\n    this.context = {\n      _options: options || {},\n      google\n    };\n    this.media = new Resource$Media(this.context);\n    this.sdfdownloadtasks = new Resource$Sdfdownloadtasks(this.context);\n  };\n\n  displayvideo_v1beta2.Displayvideo = Displayvideo;\n\n  var Resource$Media = /*#__PURE__*/function () {\n    function Resource$Media(context) {\n      _classCallCheck(this, Resource$Media);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Media, [{\n      key: \"download\",\n      value: function download(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://displayvideo.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/download/{+resourceName}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['resourceName'],\n          pathParams: ['resourceName'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Media;\n  }();\n\n  displayvideo_v1beta2.Resource$Media = Resource$Media;\n\n  var Resource$Sdfdownloadtasks = function Resource$Sdfdownloadtasks(context) {\n    _classCallCheck(this, Resource$Sdfdownloadtasks);\n\n    this.context = context;\n    this.operations = new Resource$Sdfdownloadtasks$Operations(this.context);\n  };\n\n  displayvideo_v1beta2.Resource$Sdfdownloadtasks = Resource$Sdfdownloadtasks;\n\n  var Resource$Sdfdownloadtasks$Operations = /*#__PURE__*/function () {\n    function Resource$Sdfdownloadtasks$Operations(context) {\n      _classCallCheck(this, Resource$Sdfdownloadtasks$Operations);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Sdfdownloadtasks$Operations, [{\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://displayvideo.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1beta2/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['name'],\n          pathParams: ['name'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Sdfdownloadtasks$Operations;\n  }();\n\n  displayvideo_v1beta2.Resource$Sdfdownloadtasks$Operations = Resource$Sdfdownloadtasks$Operations;\n})(displayvideo_v1beta2 = exports.displayvideo_v1beta2 || (exports.displayvideo_v1beta2 = {}));","map":{"version":3,"sources":["/Users/amandapoetker-alles/Desktop/campaign-dashboard/Campaign-Planner/node_modules/googleapis/build/src/apis/displayvideo/v1beta2.js"],"names":["Object","defineProperty","exports","value","displayvideo_v1beta2","googleapis_common_1","require","Displayvideo","options","google","context","_options","media","Resource$Media","sdfdownloadtasks","Resource$Sdfdownloadtasks","paramsOrCallback","optionsOrCallback","callback","params","rootUrl","parameters","assign","url","replace","method","requiredParams","pathParams","createAPIRequest","operations","Resource$Sdfdownloadtasks$Operations"],"mappings":"AAAA,a,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,oBAAR,GAA+B,KAAK,CAApC;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA,IAAMC,mBAAmB,GAAGC,OAAO,CAAC,mBAAD,CAAnC;;AACA,IAAIF,oBAAJ;;AACA,CAAC,UAAUA,oBAAV,EAAgC;AAC7B;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAXiC,MAYvBG,YAZuB,GAazB,sBAAYC,OAAZ,EAAqBC,MAArB,EAA6B;AAAA;;AACzB,SAAKC,OAAL,GAAe;AACXC,MAAAA,QAAQ,EAAEH,OAAO,IAAI,EADV;AAEXC,MAAAA;AAFW,KAAf;AAIA,SAAKG,KAAL,GAAa,IAAIC,cAAJ,CAAmB,KAAKH,OAAxB,CAAb;AACA,SAAKI,gBAAL,GAAwB,IAAIC,yBAAJ,CAA8B,KAAKL,OAAnC,CAAxB;AACH,GApBwB;;AAsB7BN,EAAAA,oBAAoB,CAACG,YAArB,GAAoCA,YAApC;;AAtB6B,MAuBvBM,cAvBuB;AAwBzB,4BAAYH,OAAZ,EAAqB;AAAA;;AACjB,WAAKA,OAAL,GAAeA,OAAf;AACH;;AA1BwB;AAAA;AAAA,+BA2BhBM,gBA3BgB,EA2BEC,iBA3BF,EA2BqBC,QA3BrB,EA2B+B;AACpD,YAAIC,MAAM,GAAIH,gBAAgB,IAAI,EAAlC;AACA,YAAIR,OAAO,GAAIS,iBAAiB,IAAI,EAApC;;AACA,YAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;AACxCE,UAAAA,QAAQ,GAAGF,gBAAX;AACAG,UAAAA,MAAM,GAAG,EAAT;AACAX,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAI,OAAOS,iBAAP,KAA6B,UAAjC,EAA6C;AACzCC,UAAAA,QAAQ,GAAGD,iBAAX;AACAT,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAMY,OAAO,GAAGZ,OAAO,CAACY,OAAR,IAAmB,sCAAnC;AACA,YAAMC,UAAU,GAAG;AACfb,UAAAA,OAAO,EAAER,MAAM,CAACsB,MAAP,CAAc;AACnBC,YAAAA,GAAG,EAAE,CAACH,OAAO,GAAG,2BAAX,EAAwCI,OAAxC,CAAgD,cAAhD,EAAgE,IAAhE,CADc;AAEnBC,YAAAA,MAAM,EAAE;AAFW,WAAd,EAGNjB,OAHM,CADM;AAKfW,UAAAA,MALe;AAMfO,UAAAA,cAAc,EAAE,CAAC,cAAD,CAND;AAOfC,UAAAA,UAAU,EAAE,CAAC,cAAD,CAPG;AAQfjB,UAAAA,OAAO,EAAE,KAAKA;AARC,SAAnB;;AAUA,YAAIQ,QAAJ,EAAc;AACVb,UAAAA,mBAAmB,CAACuB,gBAApB,CAAqCP,UAArC,EAAiDH,QAAjD;AACH,SAFD,MAGK;AACD,iBAAOb,mBAAmB,CAACuB,gBAApB,CAAqCP,UAArC,CAAP;AACH;AACJ;AAxDwB;;AAAA;AAAA;;AA0D7BjB,EAAAA,oBAAoB,CAACS,cAArB,GAAsCA,cAAtC;;AA1D6B,MA2DvBE,yBA3DuB,GA4DzB,mCAAYL,OAAZ,EAAqB;AAAA;;AACjB,SAAKA,OAAL,GAAeA,OAAf;AACA,SAAKmB,UAAL,GAAkB,IAAIC,oCAAJ,CAAyC,KAAKpB,OAA9C,CAAlB;AACH,GA/DwB;;AAiE7BN,EAAAA,oBAAoB,CAACW,yBAArB,GAAiDA,yBAAjD;;AAjE6B,MAkEvBe,oCAlEuB;AAmEzB,kDAAYpB,OAAZ,EAAqB;AAAA;;AACjB,WAAKA,OAAL,GAAeA,OAAf;AACH;;AArEwB;AAAA;AAAA,0BAsErBM,gBAtEqB,EAsEHC,iBAtEG,EAsEgBC,QAtEhB,EAsE0B;AAC/C,YAAIC,MAAM,GAAIH,gBAAgB,IAC1B,EADJ;AAEA,YAAIR,OAAO,GAAIS,iBAAiB,IAAI,EAApC;;AACA,YAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;AACxCE,UAAAA,QAAQ,GAAGF,gBAAX;AACAG,UAAAA,MAAM,GAAG,EAAT;AACAX,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAI,OAAOS,iBAAP,KAA6B,UAAjC,EAA6C;AACzCC,UAAAA,QAAQ,GAAGD,iBAAX;AACAT,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAMY,OAAO,GAAGZ,OAAO,CAACY,OAAR,IAAmB,sCAAnC;AACA,YAAMC,UAAU,GAAG;AACfb,UAAAA,OAAO,EAAER,MAAM,CAACsB,MAAP,CAAc;AACnBC,YAAAA,GAAG,EAAE,CAACH,OAAO,GAAG,kBAAX,EAA+BI,OAA/B,CAAuC,cAAvC,EAAuD,IAAvD,CADc;AAEnBC,YAAAA,MAAM,EAAE;AAFW,WAAd,EAGNjB,OAHM,CADM;AAKfW,UAAAA,MALe;AAMfO,UAAAA,cAAc,EAAE,CAAC,MAAD,CAND;AAOfC,UAAAA,UAAU,EAAE,CAAC,MAAD,CAPG;AAQfjB,UAAAA,OAAO,EAAE,KAAKA;AARC,SAAnB;;AAUA,YAAIQ,QAAJ,EAAc;AACVb,UAAAA,mBAAmB,CAACuB,gBAApB,CAAqCP,UAArC,EAAiDH,QAAjD;AACH,SAFD,MAGK;AACD,iBAAOb,mBAAmB,CAACuB,gBAApB,CAAqCP,UAArC,CAAP;AACH;AACJ;AApGwB;;AAAA;AAAA;;AAsG7BjB,EAAAA,oBAAoB,CAAC0B,oCAArB,GAA4DA,oCAA5D;AACH,CAvGD,EAuGG1B,oBAAoB,GAAGF,OAAO,CAACE,oBAAR,KAAiCF,OAAO,CAACE,oBAAR,GAA+B,EAAhE,CAvG1B","sourcesContent":["\"use strict\";\n// Copyright 2020 Google LLC\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//    http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.displayvideo_v1beta2 = void 0;\n/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/class-name-casing */\n/* eslint-disable @typescript-eslint/no-unused-vars */\n/* eslint-disable @typescript-eslint/no-empty-interface */\n/* eslint-disable @typescript-eslint/no-namespace */\n/* eslint-disable no-irregular-whitespace */\nconst googleapis_common_1 = require(\"googleapis-common\");\nvar displayvideo_v1beta2;\n(function (displayvideo_v1beta2) {\n    /**\n     * Display &amp; Video 360 API\n     *\n     * Display &amp; Video 360 API allows users to manage and create campaigns and reports.\n     *\n     * @example\n     * ```js\n     * const {google} = require('googleapis');\n     * const displayvideo = google.displayvideo('v1beta2');\n     * ```\n     */\n    class Displayvideo {\n        constructor(options, google) {\n            this.context = {\n                _options: options || {},\n                google,\n            };\n            this.media = new Resource$Media(this.context);\n            this.sdfdownloadtasks = new Resource$Sdfdownloadtasks(this.context);\n        }\n    }\n    displayvideo_v1beta2.Displayvideo = Displayvideo;\n    class Resource$Media {\n        constructor(context) {\n            this.context = context;\n        }\n        download(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://displayvideo.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/download/{+resourceName}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['resourceName'],\n                pathParams: ['resourceName'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    displayvideo_v1beta2.Resource$Media = Resource$Media;\n    class Resource$Sdfdownloadtasks {\n        constructor(context) {\n            this.context = context;\n            this.operations = new Resource$Sdfdownloadtasks$Operations(this.context);\n        }\n    }\n    displayvideo_v1beta2.Resource$Sdfdownloadtasks = Resource$Sdfdownloadtasks;\n    class Resource$Sdfdownloadtasks$Operations {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://displayvideo.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1beta2/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    displayvideo_v1beta2.Resource$Sdfdownloadtasks$Operations = Resource$Sdfdownloadtasks$Operations;\n})(displayvideo_v1beta2 = exports.displayvideo_v1beta2 || (exports.displayvideo_v1beta2 = {}));\n//# sourceMappingURL=v1beta2.js.map"]},"metadata":{},"sourceType":"script"}