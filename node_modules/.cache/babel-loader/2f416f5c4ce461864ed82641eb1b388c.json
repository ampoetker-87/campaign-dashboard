{"ast":null,"code":"\"use strict\";\n/**\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar _createClass = require(\"/Users/amandapoetker-alles/Desktop/campaign-dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _classCallCheck = require(\"/Users/amandapoetker-alles/Desktop/campaign-dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar googleapis_common_1 = require(\"googleapis-common\"); // tslint:disable: no-any\n// tslint:disable: class-name\n// tslint:disable: variable-name\n// tslint:disable: jsdoc-format\n// tslint:disable: no-namespace\n\n\nvar groupsmigration_v1;\n\n(function (groupsmigration_v1) {\n  /**\n   * Groups Migration API\n   *\n   * Groups Migration Api.\n   *\n   * @example\n   * const {google} = require('googleapis');\n   * const groupsmigration = google.groupsmigration('v1');\n   *\n   * @namespace groupsmigration\n   * @type {Function}\n   * @version v1\n   * @variation v1\n   * @param {object=} options Options for Groupsmigration\n   */\n  var Groupsmigration = function Groupsmigration(options, google) {\n    _classCallCheck(this, Groupsmigration);\n\n    this.context = {\n      _options: options || {},\n      google\n    };\n    this.archive = new Resource$Archive(this.context);\n  };\n\n  groupsmigration_v1.Groupsmigration = Groupsmigration;\n\n  var Resource$Archive = /*#__PURE__*/function () {\n    function Resource$Archive(context) {\n      _classCallCheck(this, Resource$Archive);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Archive, [{\n      key: \"insert\",\n      value: function insert(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/groups/v1/groups/{groupId}/archive').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          mediaUrl: (rootUrl + '/upload/groups/v1/groups/{groupId}/archive').replace(/([^:]\\/)\\/+/g, '$1'),\n          requiredParams: ['groupId'],\n          pathParams: ['groupId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Archive;\n  }();\n\n  groupsmigration_v1.Resource$Archive = Resource$Archive;\n})(groupsmigration_v1 = exports.groupsmigration_v1 || (exports.groupsmigration_v1 = {}));","map":{"version":3,"sources":["/Users/amandapoetker-alles/Desktop/campaign-dashboard/node_modules/googleapis/build/src/apis/groupsmigration/v1.js"],"names":["Object","defineProperty","exports","value","googleapis_common_1","require","groupsmigration_v1","Groupsmigration","options","google","context","_options","archive","Resource$Archive","paramsOrCallback","optionsOrCallback","callback","params","rootUrl","parameters","assign","url","replace","method","mediaUrl","requiredParams","pathParams","createAPIRequest"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,IAAMC,mBAAmB,GAAGC,OAAO,CAAC,mBAAD,CAAnC,C,CACA;AACA;AACA;AACA;AACA;;;AACA,IAAIC,kBAAJ;;AACA,CAAC,UAAUA,kBAAV,EAA8B;AAC3B;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAf+B,MAgBrBC,eAhBqB,GAiBvB,yBAAYC,OAAZ,EAAqBC,MAArB,EAA6B;AAAA;;AACzB,SAAKC,OAAL,GAAe;AAAEC,MAAAA,QAAQ,EAAEH,OAAO,IAAI,EAAvB;AAA2BC,MAAAA;AAA3B,KAAf;AACA,SAAKG,OAAL,GAAe,IAAIC,gBAAJ,CAAqB,KAAKH,OAA1B,CAAf;AACH,GApBsB;;AAsB3BJ,EAAAA,kBAAkB,CAACC,eAAnB,GAAqCA,eAArC;;AAtB2B,MAuBrBM,gBAvBqB;AAwBvB,8BAAYH,OAAZ,EAAqB;AAAA;;AACjB,WAAKA,OAAL,GAAeA,OAAf;AACH;;AA1BsB;AAAA;AAAA,6BA2BhBI,gBA3BgB,EA2BEC,iBA3BF,EA2BqBC,QA3BrB,EA2B+B;AAClD,YAAIC,MAAM,GAAIH,gBAAgB,IAAI,EAAlC;AACA,YAAIN,OAAO,GAAIO,iBAAiB,IAAI,EAApC;;AACA,YAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;AACxCE,UAAAA,QAAQ,GAAGF,gBAAX;AACAG,UAAAA,MAAM,GAAG,EAAT;AACAT,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAI,OAAOO,iBAAP,KAA6B,UAAjC,EAA6C;AACzCC,UAAAA,QAAQ,GAAGD,iBAAX;AACAP,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAMU,OAAO,GAAGV,OAAO,CAACU,OAAR,IAAmB,6BAAnC;AACA,YAAMC,UAAU,GAAG;AACfX,UAAAA,OAAO,EAAER,MAAM,CAACoB,MAAP,CAAc;AACnBC,YAAAA,GAAG,EAAE,CAACH,OAAO,GAAG,qCAAX,EACAI,OADA,CACQ,cADR,EACwB,IADxB,CADc;AAGnBC,YAAAA,MAAM,EAAE;AAHW,WAAd,EAINf,OAJM,CADM;AAMfS,UAAAA,MANe;AAOfO,UAAAA,QAAQ,EAAE,CAACN,OAAO,GAAG,4CAAX,EACLI,OADK,CACG,cADH,EACmB,IADnB,CAPK;AASfG,UAAAA,cAAc,EAAE,CAAC,SAAD,CATD;AAUfC,UAAAA,UAAU,EAAE,CAAC,SAAD,CAVG;AAWfhB,UAAAA,OAAO,EAAE,KAAKA;AAXC,SAAnB;;AAaA,YAAIM,QAAJ,EAAc;AACVZ,UAAAA,mBAAmB,CAACuB,gBAApB,CAAqCR,UAArC,EAAiDH,QAAjD;AACH,SAFD,MAGK;AACD,iBAAOZ,mBAAmB,CAACuB,gBAApB,CAAqCR,UAArC,CAAP;AACH;AACJ;AA3DsB;;AAAA;AAAA;;AA6D3Bb,EAAAA,kBAAkB,CAACO,gBAAnB,GAAsCA,gBAAtC;AACH,CA9DD,EA8DGP,kBAAkB,GAAGJ,OAAO,CAACI,kBAAR,KAA+BJ,OAAO,CAACI,kBAAR,GAA6B,EAA5D,CA9DxB","sourcesContent":["\"use strict\";\n/**\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst googleapis_common_1 = require(\"googleapis-common\");\n// tslint:disable: no-any\n// tslint:disable: class-name\n// tslint:disable: variable-name\n// tslint:disable: jsdoc-format\n// tslint:disable: no-namespace\nvar groupsmigration_v1;\n(function (groupsmigration_v1) {\n    /**\n     * Groups Migration API\n     *\n     * Groups Migration Api.\n     *\n     * @example\n     * const {google} = require('googleapis');\n     * const groupsmigration = google.groupsmigration('v1');\n     *\n     * @namespace groupsmigration\n     * @type {Function}\n     * @version v1\n     * @variation v1\n     * @param {object=} options Options for Groupsmigration\n     */\n    class Groupsmigration {\n        constructor(options, google) {\n            this.context = { _options: options || {}, google };\n            this.archive = new Resource$Archive(this.context);\n        }\n    }\n    groupsmigration_v1.Groupsmigration = Groupsmigration;\n    class Resource$Archive {\n        constructor(context) {\n            this.context = context;\n        }\n        insert(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/groups/v1/groups/{groupId}/archive')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST'\n                }, options),\n                params,\n                mediaUrl: (rootUrl + '/upload/groups/v1/groups/{groupId}/archive')\n                    .replace(/([^:]\\/)\\/+/g, '$1'),\n                requiredParams: ['groupId'],\n                pathParams: ['groupId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    groupsmigration_v1.Resource$Archive = Resource$Archive;\n})(groupsmigration_v1 = exports.groupsmigration_v1 || (exports.groupsmigration_v1 = {}));\n//# sourceMappingURL=v1.js.map"]},"metadata":{},"sourceType":"script"}