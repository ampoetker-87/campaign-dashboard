{"ast":null,"code":"\"use strict\"; // Copyright 2020 Google LLC\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//    http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nvar _createClass = require(\"/Users/amandapoetker-alles/Desktop/campaign-dashboard/Campaign-Planner/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _classCallCheck = require(\"/Users/amandapoetker-alles/Desktop/campaign-dashboard/Campaign-Planner/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.youtube_v3 = void 0;\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\n/* eslint-disable @typescript-eslint/class-name-casing */\n\n/* eslint-disable @typescript-eslint/no-unused-vars */\n\n/* eslint-disable @typescript-eslint/no-empty-interface */\n\n/* eslint-disable @typescript-eslint/no-namespace */\n\n/* eslint-disable no-irregular-whitespace */\n\nvar googleapis_common_1 = require(\"googleapis-common\");\n\nvar youtube_v3;\n\n(function (youtube_v3) {\n  /**\n   * YouTube Data API v3\n   *\n   * The YouTube Data API v3 is an API that provides access to YouTube data, such as videos, playlists, and channels.\n   *\n   * @example\n   * const {google} = require('googleapis');\n   * const youtube = google.youtube('v3');\n   *\n   * @namespace youtube\n   * @type {Function}\n   * @version v3\n   * @variation v3\n   * @param {object=} options Options for Youtube\n   */\n  var Youtube = function Youtube(options, google) {\n    _classCallCheck(this, Youtube);\n\n    this.context = {\n      _options: options || {},\n      google\n    };\n    this.activities = new Resource$Activities(this.context);\n    this.captions = new Resource$Captions(this.context);\n    this.channelBanners = new Resource$Channelbanners(this.context);\n    this.channels = new Resource$Channels(this.context);\n    this.channelSections = new Resource$Channelsections(this.context);\n    this.comments = new Resource$Comments(this.context);\n    this.commentThreads = new Resource$Commentthreads(this.context);\n    this.guideCategories = new Resource$Guidecategories(this.context);\n    this.i18nLanguages = new Resource$I18nlanguages(this.context);\n    this.i18nRegions = new Resource$I18nregions(this.context);\n    this.liveBroadcasts = new Resource$Livebroadcasts(this.context);\n    this.liveChatBans = new Resource$Livechatbans(this.context);\n    this.liveChatMessages = new Resource$Livechatmessages(this.context);\n    this.liveChatModerators = new Resource$Livechatmoderators(this.context);\n    this.liveStreams = new Resource$Livestreams(this.context);\n    this.members = new Resource$Members(this.context);\n    this.membershipsLevels = new Resource$Membershipslevels(this.context);\n    this.playlistItems = new Resource$Playlistitems(this.context);\n    this.playlists = new Resource$Playlists(this.context);\n    this.search = new Resource$Search(this.context);\n    this.sponsors = new Resource$Sponsors(this.context);\n    this.subscriptions = new Resource$Subscriptions(this.context);\n    this.superChatEvents = new Resource$Superchatevents(this.context);\n    this.thumbnails = new Resource$Thumbnails(this.context);\n    this.videoAbuseReportReasons = new Resource$Videoabusereportreasons(this.context);\n    this.videoCategories = new Resource$Videocategories(this.context);\n    this.videos = new Resource$Videos(this.context);\n    this.watermarks = new Resource$Watermarks(this.context);\n  };\n\n  youtube_v3.Youtube = Youtube;\n\n  var Resource$Activities = /*#__PURE__*/function () {\n    function Resource$Activities(context) {\n      _classCallCheck(this, Resource$Activities);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Activities, [{\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/youtube/v3/activities').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['part'],\n          pathParams: [],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Activities;\n  }();\n\n  youtube_v3.Resource$Activities = Resource$Activities;\n\n  var Resource$Captions = /*#__PURE__*/function () {\n    function Resource$Captions(context) {\n      _classCallCheck(this, Resource$Captions);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Captions, [{\n      key: \"delete\",\n      value: function _delete(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/youtube/v3/captions').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'DELETE'\n          }, options),\n          params,\n          requiredParams: ['id'],\n          pathParams: [],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"download\",\n      value: function download(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/youtube/v3/captions/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['id'],\n          pathParams: ['id'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"insert\",\n      value: function insert(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/youtube/v3/captions').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          mediaUrl: (rootUrl + '/upload/youtube/v3/captions').replace(/([^:]\\/)\\/+/g, '$1'),\n          requiredParams: ['part'],\n          pathParams: [],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/youtube/v3/captions').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['videoId', 'part'],\n          pathParams: [],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"update\",\n      value: function update(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/youtube/v3/captions').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PUT'\n          }, options),\n          params,\n          mediaUrl: (rootUrl + '/upload/youtube/v3/captions').replace(/([^:]\\/)\\/+/g, '$1'),\n          requiredParams: ['part'],\n          pathParams: [],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Captions;\n  }();\n\n  youtube_v3.Resource$Captions = Resource$Captions;\n\n  var Resource$Channelbanners = /*#__PURE__*/function () {\n    function Resource$Channelbanners(context) {\n      _classCallCheck(this, Resource$Channelbanners);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Channelbanners, [{\n      key: \"insert\",\n      value: function insert(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/youtube/v3/channelBanners/insert').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          mediaUrl: (rootUrl + '/upload/youtube/v3/channelBanners/insert').replace(/([^:]\\/)\\/+/g, '$1'),\n          requiredParams: [],\n          pathParams: [],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Channelbanners;\n  }();\n\n  youtube_v3.Resource$Channelbanners = Resource$Channelbanners;\n\n  var Resource$Channels = /*#__PURE__*/function () {\n    function Resource$Channels(context) {\n      _classCallCheck(this, Resource$Channels);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Channels, [{\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/youtube/v3/channels').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['part'],\n          pathParams: [],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"update\",\n      value: function update(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/youtube/v3/channels').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PUT'\n          }, options),\n          params,\n          requiredParams: ['part'],\n          pathParams: [],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Channels;\n  }();\n\n  youtube_v3.Resource$Channels = Resource$Channels;\n\n  var Resource$Channelsections = /*#__PURE__*/function () {\n    function Resource$Channelsections(context) {\n      _classCallCheck(this, Resource$Channelsections);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Channelsections, [{\n      key: \"delete\",\n      value: function _delete(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/youtube/v3/channelSections').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'DELETE'\n          }, options),\n          params,\n          requiredParams: ['id'],\n          pathParams: [],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"insert\",\n      value: function insert(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/youtube/v3/channelSections').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['part'],\n          pathParams: [],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/youtube/v3/channelSections').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['part'],\n          pathParams: [],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"update\",\n      value: function update(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/youtube/v3/channelSections').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PUT'\n          }, options),\n          params,\n          requiredParams: ['part'],\n          pathParams: [],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Channelsections;\n  }();\n\n  youtube_v3.Resource$Channelsections = Resource$Channelsections;\n\n  var Resource$Comments = /*#__PURE__*/function () {\n    function Resource$Comments(context) {\n      _classCallCheck(this, Resource$Comments);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Comments, [{\n      key: \"delete\",\n      value: function _delete(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/youtube/v3/comments').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'DELETE'\n          }, options),\n          params,\n          requiredParams: ['id'],\n          pathParams: [],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"insert\",\n      value: function insert(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/youtube/v3/comments').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['part'],\n          pathParams: [],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/youtube/v3/comments').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['part'],\n          pathParams: [],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"markAsSpam\",\n      value: function markAsSpam(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/youtube/v3/comments/markAsSpam').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['id'],\n          pathParams: [],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"setModerationStatus\",\n      value: function setModerationStatus(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/youtube/v3/comments/setModerationStatus').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['id', 'moderationStatus'],\n          pathParams: [],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"update\",\n      value: function update(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/youtube/v3/comments').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PUT'\n          }, options),\n          params,\n          requiredParams: ['part'],\n          pathParams: [],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Comments;\n  }();\n\n  youtube_v3.Resource$Comments = Resource$Comments;\n\n  var Resource$Commentthreads = /*#__PURE__*/function () {\n    function Resource$Commentthreads(context) {\n      _classCallCheck(this, Resource$Commentthreads);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Commentthreads, [{\n      key: \"insert\",\n      value: function insert(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/youtube/v3/commentThreads').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['part'],\n          pathParams: [],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/youtube/v3/commentThreads').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['part'],\n          pathParams: [],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"update\",\n      value: function update(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/youtube/v3/commentThreads').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PUT'\n          }, options),\n          params,\n          requiredParams: ['part'],\n          pathParams: [],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Commentthreads;\n  }();\n\n  youtube_v3.Resource$Commentthreads = Resource$Commentthreads;\n\n  var Resource$Guidecategories = /*#__PURE__*/function () {\n    function Resource$Guidecategories(context) {\n      _classCallCheck(this, Resource$Guidecategories);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Guidecategories, [{\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/youtube/v3/guideCategories').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['part'],\n          pathParams: [],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Guidecategories;\n  }();\n\n  youtube_v3.Resource$Guidecategories = Resource$Guidecategories;\n\n  var Resource$I18nlanguages = /*#__PURE__*/function () {\n    function Resource$I18nlanguages(context) {\n      _classCallCheck(this, Resource$I18nlanguages);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$I18nlanguages, [{\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/youtube/v3/i18nLanguages').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['part'],\n          pathParams: [],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$I18nlanguages;\n  }();\n\n  youtube_v3.Resource$I18nlanguages = Resource$I18nlanguages;\n\n  var Resource$I18nregions = /*#__PURE__*/function () {\n    function Resource$I18nregions(context) {\n      _classCallCheck(this, Resource$I18nregions);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$I18nregions, [{\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/youtube/v3/i18nRegions').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['part'],\n          pathParams: [],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$I18nregions;\n  }();\n\n  youtube_v3.Resource$I18nregions = Resource$I18nregions;\n\n  var Resource$Livebroadcasts = /*#__PURE__*/function () {\n    function Resource$Livebroadcasts(context) {\n      _classCallCheck(this, Resource$Livebroadcasts);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Livebroadcasts, [{\n      key: \"bind\",\n      value: function bind(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/youtube/v3/liveBroadcasts/bind').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['id', 'part'],\n          pathParams: [],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"control\",\n      value: function control(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/youtube/v3/liveBroadcasts/control').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['id', 'part'],\n          pathParams: [],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"delete\",\n      value: function _delete(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/youtube/v3/liveBroadcasts').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'DELETE'\n          }, options),\n          params,\n          requiredParams: ['id'],\n          pathParams: [],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"insert\",\n      value: function insert(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/youtube/v3/liveBroadcasts').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['part'],\n          pathParams: [],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/youtube/v3/liveBroadcasts').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['part'],\n          pathParams: [],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"transition\",\n      value: function transition(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/youtube/v3/liveBroadcasts/transition').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['id', 'broadcastStatus', 'part'],\n          pathParams: [],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"update\",\n      value: function update(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/youtube/v3/liveBroadcasts').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PUT'\n          }, options),\n          params,\n          requiredParams: ['part'],\n          pathParams: [],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Livebroadcasts;\n  }();\n\n  youtube_v3.Resource$Livebroadcasts = Resource$Livebroadcasts;\n\n  var Resource$Livechatbans = /*#__PURE__*/function () {\n    function Resource$Livechatbans(context) {\n      _classCallCheck(this, Resource$Livechatbans);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Livechatbans, [{\n      key: \"delete\",\n      value: function _delete(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/youtube/v3/liveChat/bans').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'DELETE'\n          }, options),\n          params,\n          requiredParams: ['id'],\n          pathParams: [],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"insert\",\n      value: function insert(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/youtube/v3/liveChat/bans').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['part'],\n          pathParams: [],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Livechatbans;\n  }();\n\n  youtube_v3.Resource$Livechatbans = Resource$Livechatbans;\n\n  var Resource$Livechatmessages = /*#__PURE__*/function () {\n    function Resource$Livechatmessages(context) {\n      _classCallCheck(this, Resource$Livechatmessages);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Livechatmessages, [{\n      key: \"delete\",\n      value: function _delete(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/youtube/v3/liveChat/messages').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'DELETE'\n          }, options),\n          params,\n          requiredParams: ['id'],\n          pathParams: [],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"insert\",\n      value: function insert(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/youtube/v3/liveChat/messages').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['part'],\n          pathParams: [],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/youtube/v3/liveChat/messages').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['liveChatId', 'part'],\n          pathParams: [],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Livechatmessages;\n  }();\n\n  youtube_v3.Resource$Livechatmessages = Resource$Livechatmessages;\n\n  var Resource$Livechatmoderators = /*#__PURE__*/function () {\n    function Resource$Livechatmoderators(context) {\n      _classCallCheck(this, Resource$Livechatmoderators);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Livechatmoderators, [{\n      key: \"delete\",\n      value: function _delete(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/youtube/v3/liveChat/moderators').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'DELETE'\n          }, options),\n          params,\n          requiredParams: ['id'],\n          pathParams: [],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"insert\",\n      value: function insert(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/youtube/v3/liveChat/moderators').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['part'],\n          pathParams: [],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/youtube/v3/liveChat/moderators').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['liveChatId', 'part'],\n          pathParams: [],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Livechatmoderators;\n  }();\n\n  youtube_v3.Resource$Livechatmoderators = Resource$Livechatmoderators;\n\n  var Resource$Livestreams = /*#__PURE__*/function () {\n    function Resource$Livestreams(context) {\n      _classCallCheck(this, Resource$Livestreams);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Livestreams, [{\n      key: \"delete\",\n      value: function _delete(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/youtube/v3/liveStreams').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'DELETE'\n          }, options),\n          params,\n          requiredParams: ['id'],\n          pathParams: [],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"insert\",\n      value: function insert(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/youtube/v3/liveStreams').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['part'],\n          pathParams: [],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/youtube/v3/liveStreams').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['part'],\n          pathParams: [],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"update\",\n      value: function update(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/youtube/v3/liveStreams').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PUT'\n          }, options),\n          params,\n          requiredParams: ['part'],\n          pathParams: [],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Livestreams;\n  }();\n\n  youtube_v3.Resource$Livestreams = Resource$Livestreams;\n\n  var Resource$Members = /*#__PURE__*/function () {\n    function Resource$Members(context) {\n      _classCallCheck(this, Resource$Members);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Members, [{\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/youtube/v3/members').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['part'],\n          pathParams: [],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Members;\n  }();\n\n  youtube_v3.Resource$Members = Resource$Members;\n\n  var Resource$Membershipslevels = /*#__PURE__*/function () {\n    function Resource$Membershipslevels(context) {\n      _classCallCheck(this, Resource$Membershipslevels);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Membershipslevels, [{\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/youtube/v3/membershipsLevels').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['part'],\n          pathParams: [],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Membershipslevels;\n  }();\n\n  youtube_v3.Resource$Membershipslevels = Resource$Membershipslevels;\n\n  var Resource$Playlistitems = /*#__PURE__*/function () {\n    function Resource$Playlistitems(context) {\n      _classCallCheck(this, Resource$Playlistitems);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Playlistitems, [{\n      key: \"delete\",\n      value: function _delete(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/youtube/v3/playlistItems').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'DELETE'\n          }, options),\n          params,\n          requiredParams: ['id'],\n          pathParams: [],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"insert\",\n      value: function insert(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/youtube/v3/playlistItems').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['part'],\n          pathParams: [],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/youtube/v3/playlistItems').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['part'],\n          pathParams: [],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"update\",\n      value: function update(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/youtube/v3/playlistItems').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PUT'\n          }, options),\n          params,\n          requiredParams: ['part'],\n          pathParams: [],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Playlistitems;\n  }();\n\n  youtube_v3.Resource$Playlistitems = Resource$Playlistitems;\n\n  var Resource$Playlists = /*#__PURE__*/function () {\n    function Resource$Playlists(context) {\n      _classCallCheck(this, Resource$Playlists);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Playlists, [{\n      key: \"delete\",\n      value: function _delete(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/youtube/v3/playlists').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'DELETE'\n          }, options),\n          params,\n          requiredParams: ['id'],\n          pathParams: [],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"insert\",\n      value: function insert(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/youtube/v3/playlists').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['part'],\n          pathParams: [],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/youtube/v3/playlists').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['part'],\n          pathParams: [],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"update\",\n      value: function update(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/youtube/v3/playlists').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PUT'\n          }, options),\n          params,\n          requiredParams: ['part'],\n          pathParams: [],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Playlists;\n  }();\n\n  youtube_v3.Resource$Playlists = Resource$Playlists;\n\n  var Resource$Search = /*#__PURE__*/function () {\n    function Resource$Search(context) {\n      _classCallCheck(this, Resource$Search);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Search, [{\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/youtube/v3/search').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['part'],\n          pathParams: [],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Search;\n  }();\n\n  youtube_v3.Resource$Search = Resource$Search;\n\n  var Resource$Sponsors = /*#__PURE__*/function () {\n    function Resource$Sponsors(context) {\n      _classCallCheck(this, Resource$Sponsors);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Sponsors, [{\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/youtube/v3/sponsors').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['part'],\n          pathParams: [],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Sponsors;\n  }();\n\n  youtube_v3.Resource$Sponsors = Resource$Sponsors;\n\n  var Resource$Subscriptions = /*#__PURE__*/function () {\n    function Resource$Subscriptions(context) {\n      _classCallCheck(this, Resource$Subscriptions);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Subscriptions, [{\n      key: \"delete\",\n      value: function _delete(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/youtube/v3/subscriptions').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'DELETE'\n          }, options),\n          params,\n          requiredParams: ['id'],\n          pathParams: [],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"insert\",\n      value: function insert(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/youtube/v3/subscriptions').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['part'],\n          pathParams: [],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/youtube/v3/subscriptions').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['part'],\n          pathParams: [],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Subscriptions;\n  }();\n\n  youtube_v3.Resource$Subscriptions = Resource$Subscriptions;\n\n  var Resource$Superchatevents = /*#__PURE__*/function () {\n    function Resource$Superchatevents(context) {\n      _classCallCheck(this, Resource$Superchatevents);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Superchatevents, [{\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/youtube/v3/superChatEvents').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['part'],\n          pathParams: [],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Superchatevents;\n  }();\n\n  youtube_v3.Resource$Superchatevents = Resource$Superchatevents;\n\n  var Resource$Thumbnails = /*#__PURE__*/function () {\n    function Resource$Thumbnails(context) {\n      _classCallCheck(this, Resource$Thumbnails);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Thumbnails, [{\n      key: \"set\",\n      value: function set(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/youtube/v3/thumbnails/set').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          mediaUrl: (rootUrl + '/upload/youtube/v3/thumbnails/set').replace(/([^:]\\/)\\/+/g, '$1'),\n          requiredParams: ['videoId'],\n          pathParams: [],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Thumbnails;\n  }();\n\n  youtube_v3.Resource$Thumbnails = Resource$Thumbnails;\n\n  var Resource$Videoabusereportreasons = /*#__PURE__*/function () {\n    function Resource$Videoabusereportreasons(context) {\n      _classCallCheck(this, Resource$Videoabusereportreasons);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Videoabusereportreasons, [{\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/youtube/v3/videoAbuseReportReasons').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['part'],\n          pathParams: [],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Videoabusereportreasons;\n  }();\n\n  youtube_v3.Resource$Videoabusereportreasons = Resource$Videoabusereportreasons;\n\n  var Resource$Videocategories = /*#__PURE__*/function () {\n    function Resource$Videocategories(context) {\n      _classCallCheck(this, Resource$Videocategories);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Videocategories, [{\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/youtube/v3/videoCategories').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['part'],\n          pathParams: [],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Videocategories;\n  }();\n\n  youtube_v3.Resource$Videocategories = Resource$Videocategories;\n\n  var Resource$Videos = /*#__PURE__*/function () {\n    function Resource$Videos(context) {\n      _classCallCheck(this, Resource$Videos);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Videos, [{\n      key: \"delete\",\n      value: function _delete(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/youtube/v3/videos').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'DELETE'\n          }, options),\n          params,\n          requiredParams: ['id'],\n          pathParams: [],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"getRating\",\n      value: function getRating(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/youtube/v3/videos/getRating').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['id'],\n          pathParams: [],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"insert\",\n      value: function insert(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/youtube/v3/videos').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          mediaUrl: (rootUrl + '/upload/youtube/v3/videos').replace(/([^:]\\/)\\/+/g, '$1'),\n          requiredParams: ['part'],\n          pathParams: [],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/youtube/v3/videos').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['part'],\n          pathParams: [],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"rate\",\n      value: function rate(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/youtube/v3/videos/rate').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['id', 'rating'],\n          pathParams: [],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"reportAbuse\",\n      value: function reportAbuse(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/youtube/v3/videos/reportAbuse').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: [],\n          pathParams: [],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"update\",\n      value: function update(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/youtube/v3/videos').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PUT'\n          }, options),\n          params,\n          requiredParams: ['part'],\n          pathParams: [],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Videos;\n  }();\n\n  youtube_v3.Resource$Videos = Resource$Videos;\n\n  var Resource$Watermarks = /*#__PURE__*/function () {\n    function Resource$Watermarks(context) {\n      _classCallCheck(this, Resource$Watermarks);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Watermarks, [{\n      key: \"set\",\n      value: function set(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/youtube/v3/watermarks/set').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          mediaUrl: (rootUrl + '/upload/youtube/v3/watermarks/set').replace(/([^:]\\/)\\/+/g, '$1'),\n          requiredParams: ['channelId'],\n          pathParams: [],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"unset\",\n      value: function unset(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/youtube/v3/watermarks/unset').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['channelId'],\n          pathParams: [],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Watermarks;\n  }();\n\n  youtube_v3.Resource$Watermarks = Resource$Watermarks;\n})(youtube_v3 = exports.youtube_v3 || (exports.youtube_v3 = {}));","map":{"version":3,"sources":["/Users/amandapoetker-alles/Desktop/campaign-dashboard/Campaign-Planner/node_modules/googleapis/build/src/apis/youtube/v3.js"],"names":["Object","defineProperty","exports","value","youtube_v3","googleapis_common_1","require","Youtube","options","google","context","_options","activities","Resource$Activities","captions","Resource$Captions","channelBanners","Resource$Channelbanners","channels","Resource$Channels","channelSections","Resource$Channelsections","comments","Resource$Comments","commentThreads","Resource$Commentthreads","guideCategories","Resource$Guidecategories","i18nLanguages","Resource$I18nlanguages","i18nRegions","Resource$I18nregions","liveBroadcasts","Resource$Livebroadcasts","liveChatBans","Resource$Livechatbans","liveChatMessages","Resource$Livechatmessages","liveChatModerators","Resource$Livechatmoderators","liveStreams","Resource$Livestreams","members","Resource$Members","membershipsLevels","Resource$Membershipslevels","playlistItems","Resource$Playlistitems","playlists","Resource$Playlists","search","Resource$Search","sponsors","Resource$Sponsors","subscriptions","Resource$Subscriptions","superChatEvents","Resource$Superchatevents","thumbnails","Resource$Thumbnails","videoAbuseReportReasons","Resource$Videoabusereportreasons","videoCategories","Resource$Videocategories","videos","Resource$Videos","watermarks","Resource$Watermarks","paramsOrCallback","optionsOrCallback","callback","params","rootUrl","parameters","assign","url","replace","method","requiredParams","pathParams","createAPIRequest","mediaUrl"],"mappings":"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","sourcesContent":["\"use strict\";\n// Copyright 2020 Google LLC\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//    http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.youtube_v3 = void 0;\n/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/class-name-casing */\n/* eslint-disable @typescript-eslint/no-unused-vars */\n/* eslint-disable @typescript-eslint/no-empty-interface */\n/* eslint-disable @typescript-eslint/no-namespace */\n/* eslint-disable no-irregular-whitespace */\nconst googleapis_common_1 = require(\"googleapis-common\");\nvar youtube_v3;\n(function (youtube_v3) {\n    /**\n     * YouTube Data API v3\n     *\n     * The YouTube Data API v3 is an API that provides access to YouTube data, such as videos, playlists, and channels.\n     *\n     * @example\n     * const {google} = require('googleapis');\n     * const youtube = google.youtube('v3');\n     *\n     * @namespace youtube\n     * @type {Function}\n     * @version v3\n     * @variation v3\n     * @param {object=} options Options for Youtube\n     */\n    class Youtube {\n        constructor(options, google) {\n            this.context = {\n                _options: options || {},\n                google,\n            };\n            this.activities = new Resource$Activities(this.context);\n            this.captions = new Resource$Captions(this.context);\n            this.channelBanners = new Resource$Channelbanners(this.context);\n            this.channels = new Resource$Channels(this.context);\n            this.channelSections = new Resource$Channelsections(this.context);\n            this.comments = new Resource$Comments(this.context);\n            this.commentThreads = new Resource$Commentthreads(this.context);\n            this.guideCategories = new Resource$Guidecategories(this.context);\n            this.i18nLanguages = new Resource$I18nlanguages(this.context);\n            this.i18nRegions = new Resource$I18nregions(this.context);\n            this.liveBroadcasts = new Resource$Livebroadcasts(this.context);\n            this.liveChatBans = new Resource$Livechatbans(this.context);\n            this.liveChatMessages = new Resource$Livechatmessages(this.context);\n            this.liveChatModerators = new Resource$Livechatmoderators(this.context);\n            this.liveStreams = new Resource$Livestreams(this.context);\n            this.members = new Resource$Members(this.context);\n            this.membershipsLevels = new Resource$Membershipslevels(this.context);\n            this.playlistItems = new Resource$Playlistitems(this.context);\n            this.playlists = new Resource$Playlists(this.context);\n            this.search = new Resource$Search(this.context);\n            this.sponsors = new Resource$Sponsors(this.context);\n            this.subscriptions = new Resource$Subscriptions(this.context);\n            this.superChatEvents = new Resource$Superchatevents(this.context);\n            this.thumbnails = new Resource$Thumbnails(this.context);\n            this.videoAbuseReportReasons = new Resource$Videoabusereportreasons(this.context);\n            this.videoCategories = new Resource$Videocategories(this.context);\n            this.videos = new Resource$Videos(this.context);\n            this.watermarks = new Resource$Watermarks(this.context);\n        }\n    }\n    youtube_v3.Youtube = Youtube;\n    class Resource$Activities {\n        constructor(context) {\n            this.context = context;\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/youtube/v3/activities').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['part'],\n                pathParams: [],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    youtube_v3.Resource$Activities = Resource$Activities;\n    class Resource$Captions {\n        constructor(context) {\n            this.context = context;\n        }\n        delete(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/youtube/v3/captions').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'DELETE',\n                }, options),\n                params,\n                requiredParams: ['id'],\n                pathParams: [],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        download(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/youtube/v3/captions/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['id'],\n                pathParams: ['id'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        insert(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/youtube/v3/captions').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                mediaUrl: (rootUrl + '/upload/youtube/v3/captions').replace(/([^:]\\/)\\/+/g, '$1'),\n                requiredParams: ['part'],\n                pathParams: [],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/youtube/v3/captions').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['videoId', 'part'],\n                pathParams: [],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        update(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/youtube/v3/captions').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PUT',\n                }, options),\n                params,\n                mediaUrl: (rootUrl + '/upload/youtube/v3/captions').replace(/([^:]\\/)\\/+/g, '$1'),\n                requiredParams: ['part'],\n                pathParams: [],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    youtube_v3.Resource$Captions = Resource$Captions;\n    class Resource$Channelbanners {\n        constructor(context) {\n            this.context = context;\n        }\n        insert(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/youtube/v3/channelBanners/insert').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                mediaUrl: (rootUrl + '/upload/youtube/v3/channelBanners/insert').replace(/([^:]\\/)\\/+/g, '$1'),\n                requiredParams: [],\n                pathParams: [],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    youtube_v3.Resource$Channelbanners = Resource$Channelbanners;\n    class Resource$Channels {\n        constructor(context) {\n            this.context = context;\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/youtube/v3/channels').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['part'],\n                pathParams: [],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        update(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/youtube/v3/channels').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PUT',\n                }, options),\n                params,\n                requiredParams: ['part'],\n                pathParams: [],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    youtube_v3.Resource$Channels = Resource$Channels;\n    class Resource$Channelsections {\n        constructor(context) {\n            this.context = context;\n        }\n        delete(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/youtube/v3/channelSections').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'DELETE',\n                }, options),\n                params,\n                requiredParams: ['id'],\n                pathParams: [],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        insert(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/youtube/v3/channelSections').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['part'],\n                pathParams: [],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/youtube/v3/channelSections').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['part'],\n                pathParams: [],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        update(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/youtube/v3/channelSections').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PUT',\n                }, options),\n                params,\n                requiredParams: ['part'],\n                pathParams: [],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    youtube_v3.Resource$Channelsections = Resource$Channelsections;\n    class Resource$Comments {\n        constructor(context) {\n            this.context = context;\n        }\n        delete(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/youtube/v3/comments').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'DELETE',\n                }, options),\n                params,\n                requiredParams: ['id'],\n                pathParams: [],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        insert(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/youtube/v3/comments').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['part'],\n                pathParams: [],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/youtube/v3/comments').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['part'],\n                pathParams: [],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        markAsSpam(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/youtube/v3/comments/markAsSpam').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['id'],\n                pathParams: [],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        setModerationStatus(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/youtube/v3/comments/setModerationStatus').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['id', 'moderationStatus'],\n                pathParams: [],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        update(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/youtube/v3/comments').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PUT',\n                }, options),\n                params,\n                requiredParams: ['part'],\n                pathParams: [],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    youtube_v3.Resource$Comments = Resource$Comments;\n    class Resource$Commentthreads {\n        constructor(context) {\n            this.context = context;\n        }\n        insert(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/youtube/v3/commentThreads').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['part'],\n                pathParams: [],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/youtube/v3/commentThreads').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['part'],\n                pathParams: [],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        update(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/youtube/v3/commentThreads').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PUT',\n                }, options),\n                params,\n                requiredParams: ['part'],\n                pathParams: [],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    youtube_v3.Resource$Commentthreads = Resource$Commentthreads;\n    class Resource$Guidecategories {\n        constructor(context) {\n            this.context = context;\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/youtube/v3/guideCategories').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['part'],\n                pathParams: [],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    youtube_v3.Resource$Guidecategories = Resource$Guidecategories;\n    class Resource$I18nlanguages {\n        constructor(context) {\n            this.context = context;\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/youtube/v3/i18nLanguages').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['part'],\n                pathParams: [],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    youtube_v3.Resource$I18nlanguages = Resource$I18nlanguages;\n    class Resource$I18nregions {\n        constructor(context) {\n            this.context = context;\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/youtube/v3/i18nRegions').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['part'],\n                pathParams: [],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    youtube_v3.Resource$I18nregions = Resource$I18nregions;\n    class Resource$Livebroadcasts {\n        constructor(context) {\n            this.context = context;\n        }\n        bind(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/youtube/v3/liveBroadcasts/bind').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['id', 'part'],\n                pathParams: [],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        control(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/youtube/v3/liveBroadcasts/control').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['id', 'part'],\n                pathParams: [],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        delete(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/youtube/v3/liveBroadcasts').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'DELETE',\n                }, options),\n                params,\n                requiredParams: ['id'],\n                pathParams: [],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        insert(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/youtube/v3/liveBroadcasts').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['part'],\n                pathParams: [],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/youtube/v3/liveBroadcasts').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['part'],\n                pathParams: [],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        transition(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/youtube/v3/liveBroadcasts/transition').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['id', 'broadcastStatus', 'part'],\n                pathParams: [],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        update(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/youtube/v3/liveBroadcasts').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PUT',\n                }, options),\n                params,\n                requiredParams: ['part'],\n                pathParams: [],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    youtube_v3.Resource$Livebroadcasts = Resource$Livebroadcasts;\n    class Resource$Livechatbans {\n        constructor(context) {\n            this.context = context;\n        }\n        delete(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/youtube/v3/liveChat/bans').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'DELETE',\n                }, options),\n                params,\n                requiredParams: ['id'],\n                pathParams: [],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        insert(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/youtube/v3/liveChat/bans').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['part'],\n                pathParams: [],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    youtube_v3.Resource$Livechatbans = Resource$Livechatbans;\n    class Resource$Livechatmessages {\n        constructor(context) {\n            this.context = context;\n        }\n        delete(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/youtube/v3/liveChat/messages').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'DELETE',\n                }, options),\n                params,\n                requiredParams: ['id'],\n                pathParams: [],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        insert(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/youtube/v3/liveChat/messages').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['part'],\n                pathParams: [],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/youtube/v3/liveChat/messages').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['liveChatId', 'part'],\n                pathParams: [],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    youtube_v3.Resource$Livechatmessages = Resource$Livechatmessages;\n    class Resource$Livechatmoderators {\n        constructor(context) {\n            this.context = context;\n        }\n        delete(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/youtube/v3/liveChat/moderators').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'DELETE',\n                }, options),\n                params,\n                requiredParams: ['id'],\n                pathParams: [],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        insert(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/youtube/v3/liveChat/moderators').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['part'],\n                pathParams: [],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/youtube/v3/liveChat/moderators').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['liveChatId', 'part'],\n                pathParams: [],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    youtube_v3.Resource$Livechatmoderators = Resource$Livechatmoderators;\n    class Resource$Livestreams {\n        constructor(context) {\n            this.context = context;\n        }\n        delete(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/youtube/v3/liveStreams').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'DELETE',\n                }, options),\n                params,\n                requiredParams: ['id'],\n                pathParams: [],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        insert(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/youtube/v3/liveStreams').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['part'],\n                pathParams: [],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/youtube/v3/liveStreams').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['part'],\n                pathParams: [],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        update(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/youtube/v3/liveStreams').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PUT',\n                }, options),\n                params,\n                requiredParams: ['part'],\n                pathParams: [],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    youtube_v3.Resource$Livestreams = Resource$Livestreams;\n    class Resource$Members {\n        constructor(context) {\n            this.context = context;\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/youtube/v3/members').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['part'],\n                pathParams: [],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    youtube_v3.Resource$Members = Resource$Members;\n    class Resource$Membershipslevels {\n        constructor(context) {\n            this.context = context;\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/youtube/v3/membershipsLevels').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['part'],\n                pathParams: [],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    youtube_v3.Resource$Membershipslevels = Resource$Membershipslevels;\n    class Resource$Playlistitems {\n        constructor(context) {\n            this.context = context;\n        }\n        delete(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/youtube/v3/playlistItems').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'DELETE',\n                }, options),\n                params,\n                requiredParams: ['id'],\n                pathParams: [],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        insert(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/youtube/v3/playlistItems').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['part'],\n                pathParams: [],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/youtube/v3/playlistItems').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['part'],\n                pathParams: [],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        update(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/youtube/v3/playlistItems').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PUT',\n                }, options),\n                params,\n                requiredParams: ['part'],\n                pathParams: [],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    youtube_v3.Resource$Playlistitems = Resource$Playlistitems;\n    class Resource$Playlists {\n        constructor(context) {\n            this.context = context;\n        }\n        delete(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/youtube/v3/playlists').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'DELETE',\n                }, options),\n                params,\n                requiredParams: ['id'],\n                pathParams: [],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        insert(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/youtube/v3/playlists').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['part'],\n                pathParams: [],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/youtube/v3/playlists').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['part'],\n                pathParams: [],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        update(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/youtube/v3/playlists').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PUT',\n                }, options),\n                params,\n                requiredParams: ['part'],\n                pathParams: [],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    youtube_v3.Resource$Playlists = Resource$Playlists;\n    class Resource$Search {\n        constructor(context) {\n            this.context = context;\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/youtube/v3/search').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['part'],\n                pathParams: [],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    youtube_v3.Resource$Search = Resource$Search;\n    class Resource$Sponsors {\n        constructor(context) {\n            this.context = context;\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/youtube/v3/sponsors').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['part'],\n                pathParams: [],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    youtube_v3.Resource$Sponsors = Resource$Sponsors;\n    class Resource$Subscriptions {\n        constructor(context) {\n            this.context = context;\n        }\n        delete(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/youtube/v3/subscriptions').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'DELETE',\n                }, options),\n                params,\n                requiredParams: ['id'],\n                pathParams: [],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        insert(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/youtube/v3/subscriptions').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['part'],\n                pathParams: [],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/youtube/v3/subscriptions').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['part'],\n                pathParams: [],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    youtube_v3.Resource$Subscriptions = Resource$Subscriptions;\n    class Resource$Superchatevents {\n        constructor(context) {\n            this.context = context;\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/youtube/v3/superChatEvents').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['part'],\n                pathParams: [],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    youtube_v3.Resource$Superchatevents = Resource$Superchatevents;\n    class Resource$Thumbnails {\n        constructor(context) {\n            this.context = context;\n        }\n        set(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/youtube/v3/thumbnails/set').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                mediaUrl: (rootUrl + '/upload/youtube/v3/thumbnails/set').replace(/([^:]\\/)\\/+/g, '$1'),\n                requiredParams: ['videoId'],\n                pathParams: [],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    youtube_v3.Resource$Thumbnails = Resource$Thumbnails;\n    class Resource$Videoabusereportreasons {\n        constructor(context) {\n            this.context = context;\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/youtube/v3/videoAbuseReportReasons').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['part'],\n                pathParams: [],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    youtube_v3.Resource$Videoabusereportreasons = Resource$Videoabusereportreasons;\n    class Resource$Videocategories {\n        constructor(context) {\n            this.context = context;\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/youtube/v3/videoCategories').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['part'],\n                pathParams: [],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    youtube_v3.Resource$Videocategories = Resource$Videocategories;\n    class Resource$Videos {\n        constructor(context) {\n            this.context = context;\n        }\n        delete(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/youtube/v3/videos').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'DELETE',\n                }, options),\n                params,\n                requiredParams: ['id'],\n                pathParams: [],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        getRating(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/youtube/v3/videos/getRating').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['id'],\n                pathParams: [],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        insert(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/youtube/v3/videos').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                mediaUrl: (rootUrl + '/upload/youtube/v3/videos').replace(/([^:]\\/)\\/+/g, '$1'),\n                requiredParams: ['part'],\n                pathParams: [],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/youtube/v3/videos').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['part'],\n                pathParams: [],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        rate(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/youtube/v3/videos/rate').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['id', 'rating'],\n                pathParams: [],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        reportAbuse(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/youtube/v3/videos/reportAbuse').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: [],\n                pathParams: [],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        update(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/youtube/v3/videos').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PUT',\n                }, options),\n                params,\n                requiredParams: ['part'],\n                pathParams: [],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    youtube_v3.Resource$Videos = Resource$Videos;\n    class Resource$Watermarks {\n        constructor(context) {\n            this.context = context;\n        }\n        set(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/youtube/v3/watermarks/set').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                mediaUrl: (rootUrl + '/upload/youtube/v3/watermarks/set').replace(/([^:]\\/)\\/+/g, '$1'),\n                requiredParams: ['channelId'],\n                pathParams: [],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        unset(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/youtube/v3/watermarks/unset').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['channelId'],\n                pathParams: [],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    youtube_v3.Resource$Watermarks = Resource$Watermarks;\n})(youtube_v3 = exports.youtube_v3 || (exports.youtube_v3 = {}));\n//# sourceMappingURL=v3.js.map"]},"metadata":{},"sourceType":"script"}