{"ast":null,"code":"var _jsxFileName = \"/Users/amandapoetker-alles/Desktop/campaign-dashboard/src/App.js\";\nimport React, { Component } from \"react\";\nimport \"./styles.css\";\nimport Dashboard from \"./components/Dashboard\";\n\nvar express = require(\"express\");\n\nvar bodyParser = require(\"body-parser\");\n\nvar ejs = require(\"ejs\");\n\nvar _ = require(\"lodash\");\n\nvar mongoose = require(\"mongoose\");\n\nvar app = express();\nvar PORT = 3000;\nmongoose.connect(\"mongodb://localhost:27017/campaignPlannerNotes\", {\n  useNewUrlParser: true,\n  useUnifiedTopology: true\n});\nvar notesSchema = new mongoose.Schema({\n  title: String,\n  content: String\n});\nvar Note = mongoose.model(\"Note\", notesSchema);\napp.set('view engine', 'ejs');\napp.use(bodyParser.urlencoded({\n  extended: true\n}));\napp.use(express.static(\"public\"));\napp.get(\"/\", function (req, res) {\n  Post.find({}, function (err, posts) {\n    res.render( /*#__PURE__*/React.createElement(Dashboard, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 16\n      }\n    }));\n  });\n});\nexport default function App() {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Dashboard, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }));\n}\napp.listen(PORT, function () {\n  console.log(\"Server started\");\n});","map":{"version":3,"sources":["/Users/amandapoetker-alles/Desktop/campaign-dashboard/src/App.js"],"names":["React","Component","Dashboard","express","require","bodyParser","ejs","_","mongoose","app","PORT","connect","useNewUrlParser","useUnifiedTopology","notesSchema","Schema","title","String","content","Note","model","set","use","urlencoded","extended","static","get","req","res","Post","find","err","posts","render","App","listen","console","log"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAO,cAAP;AACA,OAAOC,SAAP,MAAsB,wBAAtB;;AAEA,IAAMC,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AACA,IAAMC,UAAU,GAAGD,OAAO,CAAC,aAAD,CAA1B;;AACA,IAAME,GAAG,GAAGF,OAAO,CAAC,KAAD,CAAnB;;AACA,IAAMG,CAAC,GAAGH,OAAO,CAAC,QAAD,CAAjB;;AACA,IAAMI,QAAQ,GAAGJ,OAAO,CAAC,UAAD,CAAxB;;AAEA,IAAMK,GAAG,GAAGN,OAAO,EAAnB;AAEA,IAAMO,IAAI,GAAG,IAAb;AAEAF,QAAQ,CAACG,OAAT,CAAiB,gDAAjB,EAAmE;AAACC,EAAAA,eAAe,EAAE,IAAlB;AAAwBC,EAAAA,kBAAkB,EAAE;AAA5C,CAAnE;AAEA,IAAMC,WAAW,GAAG,IAAIN,QAAQ,CAACO,MAAb,CAAoB;AACtCC,EAAAA,KAAK,EAAEC,MAD+B;AAEtCC,EAAAA,OAAO,EAAED;AAF6B,CAApB,CAApB;AAKA,IAAME,IAAI,GAAGX,QAAQ,CAACY,KAAT,CAAe,MAAf,EAAuBN,WAAvB,CAAb;AAEAL,GAAG,CAACY,GAAJ,CAAQ,aAAR,EAAuB,KAAvB;AAEAZ,GAAG,CAACa,GAAJ,CAAQjB,UAAU,CAACkB,UAAX,CAAsB;AAACC,EAAAA,QAAQ,EAAE;AAAX,CAAtB,CAAR;AACAf,GAAG,CAACa,GAAJ,CAAQnB,OAAO,CAACsB,MAAR,CAAe,QAAf,CAAR;AAEAhB,GAAG,CAACiB,GAAJ,CAAQ,GAAR,EAAa,UAASC,GAAT,EAAcC,GAAd,EAAkB;AAC7BC,EAAAA,IAAI,CAACC,IAAL,CAAU,EAAV,EAAc,UAASC,GAAT,EAAcC,KAAd,EAAoB;AAChCJ,IAAAA,GAAG,CAACK,MAAJ,eAAW,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAX;AACD,GAFD;AAGD,CAJD;AAOA,eAAe,SAASC,GAAT,GAAe;AAC5B,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAKD;AAEDzB,GAAG,CAAC0B,MAAJ,CAAWzB,IAAX,EAAiB,YAAW;AAC1B0B,EAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACD,CAFD","sourcesContent":["import React, {Component} from \"react\";\nimport \"./styles.css\";\nimport Dashboard from \"./components/Dashboard\";\n\nconst express = require(\"express\");\nconst bodyParser = require(\"body-parser\");\nconst ejs = require(\"ejs\");\nconst _ = require(\"lodash\");\nconst mongoose = require(\"mongoose\");\n\nconst app = express();\n\nconst PORT = 3000;\n\nmongoose.connect(\"mongodb://localhost:27017/campaignPlannerNotes\", {useNewUrlParser: true, useUnifiedTopology: true});\n\nconst notesSchema = new mongoose.Schema({\n  title: String,\n  content: String,\n})\n\nconst Note = mongoose.model(\"Note\", notesSchema);\n\napp.set('view engine', 'ejs');\n\napp.use(bodyParser.urlencoded({extended: true}));\napp.use(express.static(\"public\"));\n\napp.get(\"/\", function(req, res){\n  Post.find({}, function(err, posts){\n    res.render(<Dashboard />);\n  })\n});\n\n\nexport default function App() {\n  return (\n    <div className=\"App\">\n      <Dashboard />\n    </div>\n  );\n}\n\napp.listen(PORT, function() {\n  console.log(\"Server started\");\n});"]},"metadata":{},"sourceType":"module"}