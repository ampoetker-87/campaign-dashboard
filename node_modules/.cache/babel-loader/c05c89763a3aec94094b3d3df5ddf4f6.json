{"ast":null,"code":"\"use strict\"; // Copyright 2020 Google LLC\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//    http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nvar _createClass = require(\"/Users/amandapoetker-alles/Desktop/campaign-dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _classCallCheck = require(\"/Users/amandapoetker-alles/Desktop/campaign-dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.content_v2_1 = void 0;\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\n/* eslint-disable @typescript-eslint/class-name-casing */\n\n/* eslint-disable @typescript-eslint/no-unused-vars */\n\n/* eslint-disable @typescript-eslint/no-empty-interface */\n\n/* eslint-disable @typescript-eslint/no-namespace */\n\n/* eslint-disable no-irregular-whitespace */\n\nvar googleapis_common_1 = require(\"googleapis-common\");\n\nvar content_v2_1;\n\n(function (content_v2_1) {\n  /**\n   * Content API for Shopping\n   *\n   * Manage your product listings and accounts for Google Shopping\n   *\n   * @example\n   * ```js\n   * const {google} = require('googleapis');\n   * const content = google.content('v2.1');\n   * ```\n   */\n  var Content = function Content(options, google) {\n    _classCallCheck(this, Content);\n\n    this.context = {\n      _options: options || {},\n      google\n    };\n    this.accounts = new Resource$Accounts(this.context);\n    this.accountstatuses = new Resource$Accountstatuses(this.context);\n    this.accounttax = new Resource$Accounttax(this.context);\n    this.csses = new Resource$Csses(this.context);\n    this.datafeeds = new Resource$Datafeeds(this.context);\n    this.datafeedstatuses = new Resource$Datafeedstatuses(this.context);\n    this.liasettings = new Resource$Liasettings(this.context);\n    this.localinventory = new Resource$Localinventory(this.context);\n    this.orderinvoices = new Resource$Orderinvoices(this.context);\n    this.orderreports = new Resource$Orderreports(this.context);\n    this.orderreturns = new Resource$Orderreturns(this.context);\n    this.orders = new Resource$Orders(this.context);\n    this.ordertrackingsignals = new Resource$Ordertrackingsignals(this.context);\n    this.pos = new Resource$Pos(this.context);\n    this.products = new Resource$Products(this.context);\n    this.productstatuses = new Resource$Productstatuses(this.context);\n    this.pubsubnotificationsettings = new Resource$Pubsubnotificationsettings(this.context);\n    this.regionalinventory = new Resource$Regionalinventory(this.context);\n    this.regions = new Resource$Regions(this.context);\n    this.repricingrules = new Resource$Repricingrules(this.context);\n    this.returnaddress = new Resource$Returnaddress(this.context);\n    this.returnpolicy = new Resource$Returnpolicy(this.context);\n    this.settlementreports = new Resource$Settlementreports(this.context);\n    this.settlementtransactions = new Resource$Settlementtransactions(this.context);\n    this.shippingsettings = new Resource$Shippingsettings(this.context);\n  };\n\n  content_v2_1.Content = Content;\n\n  var Resource$Accounts = /*#__PURE__*/function () {\n    function Resource$Accounts(context) {\n      _classCallCheck(this, Resource$Accounts);\n\n      this.context = context;\n      this.labels = new Resource$Accounts$Labels(this.context);\n    }\n\n    _createClass(Resource$Accounts, [{\n      key: \"authinfo\",\n      value: function authinfo(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2.1/accounts/authinfo').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: [],\n          pathParams: [],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"claimwebsite\",\n      value: function claimwebsite(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2.1/{merchantId}/accounts/{accountId}/claimwebsite').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['merchantId', 'accountId'],\n          pathParams: ['accountId', 'merchantId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"custombatch\",\n      value: function custombatch(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2.1/accounts/batch').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: [],\n          pathParams: [],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"delete\",\n      value: function _delete(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2.1/{merchantId}/accounts/{accountId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'DELETE'\n          }, options),\n          params,\n          requiredParams: ['merchantId', 'accountId'],\n          pathParams: ['accountId', 'merchantId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2.1/{merchantId}/accounts/{accountId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['merchantId', 'accountId'],\n          pathParams: ['accountId', 'merchantId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"insert\",\n      value: function insert(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2.1/{merchantId}/accounts').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['merchantId'],\n          pathParams: ['merchantId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"link\",\n      value: function link(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2.1/{merchantId}/accounts/{accountId}/link').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['merchantId', 'accountId'],\n          pathParams: ['accountId', 'merchantId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2.1/{merchantId}/accounts').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['merchantId'],\n          pathParams: ['merchantId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"listlinks\",\n      value: function listlinks(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2.1/{merchantId}/accounts/{accountId}/listlinks').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['merchantId', 'accountId'],\n          pathParams: ['accountId', 'merchantId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"update\",\n      value: function update(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2.1/{merchantId}/accounts/{accountId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PUT'\n          }, options),\n          params,\n          requiredParams: ['merchantId', 'accountId'],\n          pathParams: ['accountId', 'merchantId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"updatelabels\",\n      value: function updatelabels(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2.1/{merchantId}/accounts/{accountId}/updatelabels').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['merchantId', 'accountId'],\n          pathParams: ['accountId', 'merchantId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Accounts;\n  }();\n\n  content_v2_1.Resource$Accounts = Resource$Accounts;\n\n  var Resource$Accounts$Labels = /*#__PURE__*/function () {\n    function Resource$Accounts$Labels(context) {\n      _classCallCheck(this, Resource$Accounts$Labels);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Accounts$Labels, [{\n      key: \"create\",\n      value: function create(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2.1/accounts/{accountId}/labels').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['accountId'],\n          pathParams: ['accountId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"delete\",\n      value: function _delete(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2.1/accounts/{accountId}/labels/{labelId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'DELETE'\n          }, options),\n          params,\n          requiredParams: ['accountId', 'labelId'],\n          pathParams: ['accountId', 'labelId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2.1/accounts/{accountId}/labels').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['accountId'],\n          pathParams: ['accountId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"patch\",\n      value: function patch(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2.1/accounts/{accountId}/labels/{labelId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PATCH'\n          }, options),\n          params,\n          requiredParams: ['accountId', 'labelId'],\n          pathParams: ['accountId', 'labelId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Accounts$Labels;\n  }();\n\n  content_v2_1.Resource$Accounts$Labels = Resource$Accounts$Labels;\n\n  var Resource$Accountstatuses = /*#__PURE__*/function () {\n    function Resource$Accountstatuses(context) {\n      _classCallCheck(this, Resource$Accountstatuses);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Accountstatuses, [{\n      key: \"custombatch\",\n      value: function custombatch(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2.1/accountstatuses/batch').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: [],\n          pathParams: [],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2.1/{merchantId}/accountstatuses/{accountId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['merchantId', 'accountId'],\n          pathParams: ['accountId', 'merchantId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2.1/{merchantId}/accountstatuses').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['merchantId'],\n          pathParams: ['merchantId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Accountstatuses;\n  }();\n\n  content_v2_1.Resource$Accountstatuses = Resource$Accountstatuses;\n\n  var Resource$Accounttax = /*#__PURE__*/function () {\n    function Resource$Accounttax(context) {\n      _classCallCheck(this, Resource$Accounttax);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Accounttax, [{\n      key: \"custombatch\",\n      value: function custombatch(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2.1/accounttax/batch').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: [],\n          pathParams: [],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2.1/{merchantId}/accounttax/{accountId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['merchantId', 'accountId'],\n          pathParams: ['accountId', 'merchantId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2.1/{merchantId}/accounttax').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['merchantId'],\n          pathParams: ['merchantId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"update\",\n      value: function update(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2.1/{merchantId}/accounttax/{accountId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PUT'\n          }, options),\n          params,\n          requiredParams: ['merchantId', 'accountId'],\n          pathParams: ['accountId', 'merchantId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Accounttax;\n  }();\n\n  content_v2_1.Resource$Accounttax = Resource$Accounttax;\n\n  var Resource$Csses = /*#__PURE__*/function () {\n    function Resource$Csses(context) {\n      _classCallCheck(this, Resource$Csses);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Csses, [{\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2.1/{cssGroupId}/csses/{cssDomainId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['cssGroupId', 'cssDomainId'],\n          pathParams: ['cssDomainId', 'cssGroupId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2.1/{cssGroupId}/csses').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['cssGroupId'],\n          pathParams: ['cssGroupId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"updatelabels\",\n      value: function updatelabels(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2.1/{cssGroupId}/csses/{cssDomainId}/updatelabels').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['cssGroupId', 'cssDomainId'],\n          pathParams: ['cssDomainId', 'cssGroupId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Csses;\n  }();\n\n  content_v2_1.Resource$Csses = Resource$Csses;\n\n  var Resource$Datafeeds = /*#__PURE__*/function () {\n    function Resource$Datafeeds(context) {\n      _classCallCheck(this, Resource$Datafeeds);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Datafeeds, [{\n      key: \"custombatch\",\n      value: function custombatch(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2.1/datafeeds/batch').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: [],\n          pathParams: [],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"delete\",\n      value: function _delete(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2.1/{merchantId}/datafeeds/{datafeedId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'DELETE'\n          }, options),\n          params,\n          requiredParams: ['merchantId', 'datafeedId'],\n          pathParams: ['datafeedId', 'merchantId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"fetchnow\",\n      value: function fetchnow(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2.1/{merchantId}/datafeeds/{datafeedId}/fetchNow').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['merchantId', 'datafeedId'],\n          pathParams: ['datafeedId', 'merchantId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2.1/{merchantId}/datafeeds/{datafeedId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['merchantId', 'datafeedId'],\n          pathParams: ['datafeedId', 'merchantId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"insert\",\n      value: function insert(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2.1/{merchantId}/datafeeds').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['merchantId'],\n          pathParams: ['merchantId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2.1/{merchantId}/datafeeds').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['merchantId'],\n          pathParams: ['merchantId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"update\",\n      value: function update(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2.1/{merchantId}/datafeeds/{datafeedId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PUT'\n          }, options),\n          params,\n          requiredParams: ['merchantId', 'datafeedId'],\n          pathParams: ['datafeedId', 'merchantId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Datafeeds;\n  }();\n\n  content_v2_1.Resource$Datafeeds = Resource$Datafeeds;\n\n  var Resource$Datafeedstatuses = /*#__PURE__*/function () {\n    function Resource$Datafeedstatuses(context) {\n      _classCallCheck(this, Resource$Datafeedstatuses);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Datafeedstatuses, [{\n      key: \"custombatch\",\n      value: function custombatch(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2.1/datafeedstatuses/batch').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: [],\n          pathParams: [],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2.1/{merchantId}/datafeedstatuses/{datafeedId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['merchantId', 'datafeedId'],\n          pathParams: ['datafeedId', 'merchantId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2.1/{merchantId}/datafeedstatuses').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['merchantId'],\n          pathParams: ['merchantId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Datafeedstatuses;\n  }();\n\n  content_v2_1.Resource$Datafeedstatuses = Resource$Datafeedstatuses;\n\n  var Resource$Liasettings = /*#__PURE__*/function () {\n    function Resource$Liasettings(context) {\n      _classCallCheck(this, Resource$Liasettings);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Liasettings, [{\n      key: \"custombatch\",\n      value: function custombatch(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2.1/liasettings/batch').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: [],\n          pathParams: [],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2.1/{merchantId}/liasettings/{accountId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['merchantId', 'accountId'],\n          pathParams: ['accountId', 'merchantId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"getaccessiblegmbaccounts\",\n      value: function getaccessiblegmbaccounts(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2.1/{merchantId}/liasettings/{accountId}/accessiblegmbaccounts').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['merchantId', 'accountId'],\n          pathParams: ['accountId', 'merchantId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2.1/{merchantId}/liasettings').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['merchantId'],\n          pathParams: ['merchantId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"listposdataproviders\",\n      value: function listposdataproviders(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2.1/liasettings/posdataproviders').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: [],\n          pathParams: [],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"requestgmbaccess\",\n      value: function requestgmbaccess(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2.1/{merchantId}/liasettings/{accountId}/requestgmbaccess').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['merchantId', 'accountId', 'gmbEmail'],\n          pathParams: ['accountId', 'merchantId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"requestinventoryverification\",\n      value: function requestinventoryverification(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2.1/{merchantId}/liasettings/{accountId}/requestinventoryverification/{country}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['merchantId', 'accountId', 'country'],\n          pathParams: ['accountId', 'country', 'merchantId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"setinventoryverificationcontact\",\n      value: function setinventoryverificationcontact(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2.1/{merchantId}/liasettings/{accountId}/setinventoryverificationcontact').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['merchantId', 'accountId', 'country', 'language', 'contactName', 'contactEmail'],\n          pathParams: ['accountId', 'merchantId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"setposdataprovider\",\n      value: function setposdataprovider(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2.1/{merchantId}/liasettings/{accountId}/setposdataprovider').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['merchantId', 'accountId', 'country'],\n          pathParams: ['accountId', 'merchantId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"update\",\n      value: function update(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2.1/{merchantId}/liasettings/{accountId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PUT'\n          }, options),\n          params,\n          requiredParams: ['merchantId', 'accountId'],\n          pathParams: ['accountId', 'merchantId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Liasettings;\n  }();\n\n  content_v2_1.Resource$Liasettings = Resource$Liasettings;\n\n  var Resource$Localinventory = /*#__PURE__*/function () {\n    function Resource$Localinventory(context) {\n      _classCallCheck(this, Resource$Localinventory);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Localinventory, [{\n      key: \"custombatch\",\n      value: function custombatch(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2.1/localinventory/batch').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: [],\n          pathParams: [],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"insert\",\n      value: function insert(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2.1/{merchantId}/products/{productId}/localinventory').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['merchantId', 'productId'],\n          pathParams: ['merchantId', 'productId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Localinventory;\n  }();\n\n  content_v2_1.Resource$Localinventory = Resource$Localinventory;\n\n  var Resource$Orderinvoices = /*#__PURE__*/function () {\n    function Resource$Orderinvoices(context) {\n      _classCallCheck(this, Resource$Orderinvoices);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Orderinvoices, [{\n      key: \"createchargeinvoice\",\n      value: function createchargeinvoice(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2.1/{merchantId}/orderinvoices/{orderId}/createChargeInvoice').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['merchantId', 'orderId'],\n          pathParams: ['merchantId', 'orderId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"createrefundinvoice\",\n      value: function createrefundinvoice(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2.1/{merchantId}/orderinvoices/{orderId}/createRefundInvoice').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['merchantId', 'orderId'],\n          pathParams: ['merchantId', 'orderId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Orderinvoices;\n  }();\n\n  content_v2_1.Resource$Orderinvoices = Resource$Orderinvoices;\n\n  var Resource$Orderreports = /*#__PURE__*/function () {\n    function Resource$Orderreports(context) {\n      _classCallCheck(this, Resource$Orderreports);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Orderreports, [{\n      key: \"listdisbursements\",\n      value: function listdisbursements(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2.1/{merchantId}/orderreports/disbursements').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['merchantId'],\n          pathParams: ['merchantId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"listtransactions\",\n      value: function listtransactions(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2.1/{merchantId}/orderreports/disbursements/{disbursementId}/transactions').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['merchantId', 'disbursementId'],\n          pathParams: ['disbursementId', 'merchantId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Orderreports;\n  }();\n\n  content_v2_1.Resource$Orderreports = Resource$Orderreports;\n\n  var Resource$Orderreturns = /*#__PURE__*/function () {\n    function Resource$Orderreturns(context) {\n      _classCallCheck(this, Resource$Orderreturns);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Orderreturns, [{\n      key: \"acknowledge\",\n      value: function acknowledge(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2.1/{merchantId}/orderreturns/{returnId}/acknowledge').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['merchantId', 'returnId'],\n          pathParams: ['merchantId', 'returnId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"createorderreturn\",\n      value: function createorderreturn(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2.1/{merchantId}/orderreturns/createOrderReturn').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['merchantId'],\n          pathParams: ['merchantId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2.1/{merchantId}/orderreturns/{returnId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['merchantId', 'returnId'],\n          pathParams: ['merchantId', 'returnId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2.1/{merchantId}/orderreturns').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['merchantId'],\n          pathParams: ['merchantId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"process\",\n      value: function process(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2.1/{merchantId}/orderreturns/{returnId}/process').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['merchantId', 'returnId'],\n          pathParams: ['merchantId', 'returnId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Orderreturns;\n  }();\n\n  content_v2_1.Resource$Orderreturns = Resource$Orderreturns;\n\n  var Resource$Orders = /*#__PURE__*/function () {\n    function Resource$Orders(context) {\n      _classCallCheck(this, Resource$Orders);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Orders, [{\n      key: \"acknowledge\",\n      value: function acknowledge(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2.1/{merchantId}/orders/{orderId}/acknowledge').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['merchantId', 'orderId'],\n          pathParams: ['merchantId', 'orderId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"advancetestorder\",\n      value: function advancetestorder(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2.1/{merchantId}/testorders/{orderId}/advance').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['merchantId', 'orderId'],\n          pathParams: ['merchantId', 'orderId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"cancel\",\n      value: function cancel(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2.1/{merchantId}/orders/{orderId}/cancel').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['merchantId', 'orderId'],\n          pathParams: ['merchantId', 'orderId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"cancellineitem\",\n      value: function cancellineitem(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2.1/{merchantId}/orders/{orderId}/cancelLineItem').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['merchantId', 'orderId'],\n          pathParams: ['merchantId', 'orderId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"canceltestorderbycustomer\",\n      value: function canceltestorderbycustomer(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2.1/{merchantId}/testorders/{orderId}/cancelByCustomer').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['merchantId', 'orderId'],\n          pathParams: ['merchantId', 'orderId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"createtestorder\",\n      value: function createtestorder(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2.1/{merchantId}/testorders').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['merchantId'],\n          pathParams: ['merchantId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"createtestreturn\",\n      value: function createtestreturn(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2.1/{merchantId}/orders/{orderId}/testreturn').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['merchantId', 'orderId'],\n          pathParams: ['merchantId', 'orderId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2.1/{merchantId}/orders/{orderId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['merchantId', 'orderId'],\n          pathParams: ['merchantId', 'orderId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"getbymerchantorderid\",\n      value: function getbymerchantorderid(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2.1/{merchantId}/ordersbymerchantid/{merchantOrderId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['merchantId', 'merchantOrderId'],\n          pathParams: ['merchantId', 'merchantOrderId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"gettestordertemplate\",\n      value: function gettestordertemplate(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2.1/{merchantId}/testordertemplates/{templateName}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['merchantId', 'templateName'],\n          pathParams: ['merchantId', 'templateName'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"instorerefundlineitem\",\n      value: function instorerefundlineitem(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2.1/{merchantId}/orders/{orderId}/inStoreRefundLineItem').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['merchantId', 'orderId'],\n          pathParams: ['merchantId', 'orderId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2.1/{merchantId}/orders').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['merchantId'],\n          pathParams: ['merchantId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"refunditem\",\n      value: function refunditem(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2.1/{merchantId}/orders/{orderId}/refunditem').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['merchantId', 'orderId'],\n          pathParams: ['merchantId', 'orderId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"refundorder\",\n      value: function refundorder(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2.1/{merchantId}/orders/{orderId}/refundorder').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['merchantId', 'orderId'],\n          pathParams: ['merchantId', 'orderId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"rejectreturnlineitem\",\n      value: function rejectreturnlineitem(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2.1/{merchantId}/orders/{orderId}/rejectReturnLineItem').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['merchantId', 'orderId'],\n          pathParams: ['merchantId', 'orderId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"returnrefundlineitem\",\n      value: function returnrefundlineitem(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2.1/{merchantId}/orders/{orderId}/returnRefundLineItem').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['merchantId', 'orderId'],\n          pathParams: ['merchantId', 'orderId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"setlineitemmetadata\",\n      value: function setlineitemmetadata(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2.1/{merchantId}/orders/{orderId}/setLineItemMetadata').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['merchantId', 'orderId'],\n          pathParams: ['merchantId', 'orderId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"shiplineitems\",\n      value: function shiplineitems(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2.1/{merchantId}/orders/{orderId}/shipLineItems').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['merchantId', 'orderId'],\n          pathParams: ['merchantId', 'orderId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"updatelineitemshippingdetails\",\n      value: function updatelineitemshippingdetails(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2.1/{merchantId}/orders/{orderId}/updateLineItemShippingDetails').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['merchantId', 'orderId'],\n          pathParams: ['merchantId', 'orderId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"updatemerchantorderid\",\n      value: function updatemerchantorderid(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2.1/{merchantId}/orders/{orderId}/updateMerchantOrderId').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['merchantId', 'orderId'],\n          pathParams: ['merchantId', 'orderId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"updateshipment\",\n      value: function updateshipment(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2.1/{merchantId}/orders/{orderId}/updateShipment').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['merchantId', 'orderId'],\n          pathParams: ['merchantId', 'orderId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Orders;\n  }();\n\n  content_v2_1.Resource$Orders = Resource$Orders;\n\n  var Resource$Ordertrackingsignals = /*#__PURE__*/function () {\n    function Resource$Ordertrackingsignals(context) {\n      _classCallCheck(this, Resource$Ordertrackingsignals);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Ordertrackingsignals, [{\n      key: \"create\",\n      value: function create(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2.1/{merchantId}/ordertrackingsignals').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['merchantId'],\n          pathParams: ['merchantId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Ordertrackingsignals;\n  }();\n\n  content_v2_1.Resource$Ordertrackingsignals = Resource$Ordertrackingsignals;\n\n  var Resource$Pos = /*#__PURE__*/function () {\n    function Resource$Pos(context) {\n      _classCallCheck(this, Resource$Pos);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Pos, [{\n      key: \"custombatch\",\n      value: function custombatch(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2.1/pos/batch').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: [],\n          pathParams: [],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"delete\",\n      value: function _delete(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2.1/{merchantId}/pos/{targetMerchantId}/store/{storeCode}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'DELETE'\n          }, options),\n          params,\n          requiredParams: ['merchantId', 'targetMerchantId', 'storeCode'],\n          pathParams: ['merchantId', 'storeCode', 'targetMerchantId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2.1/{merchantId}/pos/{targetMerchantId}/store/{storeCode}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['merchantId', 'targetMerchantId', 'storeCode'],\n          pathParams: ['merchantId', 'storeCode', 'targetMerchantId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"insert\",\n      value: function insert(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2.1/{merchantId}/pos/{targetMerchantId}/store').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['merchantId', 'targetMerchantId'],\n          pathParams: ['merchantId', 'targetMerchantId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"inventory\",\n      value: function inventory(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2.1/{merchantId}/pos/{targetMerchantId}/inventory').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['merchantId', 'targetMerchantId'],\n          pathParams: ['merchantId', 'targetMerchantId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2.1/{merchantId}/pos/{targetMerchantId}/store').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['merchantId', 'targetMerchantId'],\n          pathParams: ['merchantId', 'targetMerchantId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"sale\",\n      value: function sale(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2.1/{merchantId}/pos/{targetMerchantId}/sale').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['merchantId', 'targetMerchantId'],\n          pathParams: ['merchantId', 'targetMerchantId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Pos;\n  }();\n\n  content_v2_1.Resource$Pos = Resource$Pos;\n\n  var Resource$Products = /*#__PURE__*/function () {\n    function Resource$Products(context) {\n      _classCallCheck(this, Resource$Products);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Products, [{\n      key: \"custombatch\",\n      value: function custombatch(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2.1/products/batch').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: [],\n          pathParams: [],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"delete\",\n      value: function _delete(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2.1/{merchantId}/products/{productId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'DELETE'\n          }, options),\n          params,\n          requiredParams: ['merchantId', 'productId'],\n          pathParams: ['merchantId', 'productId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2.1/{merchantId}/products/{productId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['merchantId', 'productId'],\n          pathParams: ['merchantId', 'productId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"insert\",\n      value: function insert(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2.1/{merchantId}/products').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['merchantId'],\n          pathParams: ['merchantId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2.1/{merchantId}/products').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['merchantId'],\n          pathParams: ['merchantId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Products;\n  }();\n\n  content_v2_1.Resource$Products = Resource$Products;\n\n  var Resource$Productstatuses = /*#__PURE__*/function () {\n    function Resource$Productstatuses(context) {\n      _classCallCheck(this, Resource$Productstatuses);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Productstatuses, [{\n      key: \"custombatch\",\n      value: function custombatch(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2.1/productstatuses/batch').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: [],\n          pathParams: [],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2.1/{merchantId}/productstatuses/{productId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['merchantId', 'productId'],\n          pathParams: ['merchantId', 'productId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2.1/{merchantId}/productstatuses').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['merchantId'],\n          pathParams: ['merchantId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Productstatuses;\n  }();\n\n  content_v2_1.Resource$Productstatuses = Resource$Productstatuses;\n\n  var Resource$Pubsubnotificationsettings = /*#__PURE__*/function () {\n    function Resource$Pubsubnotificationsettings(context) {\n      _classCallCheck(this, Resource$Pubsubnotificationsettings);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Pubsubnotificationsettings, [{\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2.1/{merchantId}/pubsubnotificationsettings').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['merchantId'],\n          pathParams: ['merchantId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"update\",\n      value: function update(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2.1/{merchantId}/pubsubnotificationsettings').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PUT'\n          }, options),\n          params,\n          requiredParams: ['merchantId'],\n          pathParams: ['merchantId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Pubsubnotificationsettings;\n  }();\n\n  content_v2_1.Resource$Pubsubnotificationsettings = Resource$Pubsubnotificationsettings;\n\n  var Resource$Regionalinventory = /*#__PURE__*/function () {\n    function Resource$Regionalinventory(context) {\n      _classCallCheck(this, Resource$Regionalinventory);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Regionalinventory, [{\n      key: \"custombatch\",\n      value: function custombatch(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2.1/regionalinventory/batch').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: [],\n          pathParams: [],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"insert\",\n      value: function insert(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2.1/{merchantId}/products/{productId}/regionalinventory').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['merchantId', 'productId'],\n          pathParams: ['merchantId', 'productId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Regionalinventory;\n  }();\n\n  content_v2_1.Resource$Regionalinventory = Resource$Regionalinventory;\n\n  var Resource$Regions = /*#__PURE__*/function () {\n    function Resource$Regions(context) {\n      _classCallCheck(this, Resource$Regions);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Regions, [{\n      key: \"create\",\n      value: function create(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2.1/{merchantId}/regions').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['merchantId'],\n          pathParams: ['merchantId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"delete\",\n      value: function _delete(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2.1/{merchantId}/regions/{regionId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'DELETE'\n          }, options),\n          params,\n          requiredParams: ['merchantId', 'regionId'],\n          pathParams: ['merchantId', 'regionId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2.1/{merchantId}/regions/{regionId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['merchantId', 'regionId'],\n          pathParams: ['merchantId', 'regionId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2.1/{merchantId}/regions').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['merchantId'],\n          pathParams: ['merchantId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"patch\",\n      value: function patch(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2.1/{merchantId}/regions/{regionId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PATCH'\n          }, options),\n          params,\n          requiredParams: ['merchantId', 'regionId'],\n          pathParams: ['merchantId', 'regionId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Regions;\n  }();\n\n  content_v2_1.Resource$Regions = Resource$Regions;\n\n  var Resource$Repricingrules = /*#__PURE__*/function () {\n    function Resource$Repricingrules(context) {\n      _classCallCheck(this, Resource$Repricingrules);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Repricingrules, [{\n      key: \"create\",\n      value: function create(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2.1/{merchantId}/repricingrules').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['merchantId'],\n          pathParams: ['merchantId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"delete\",\n      value: function _delete(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2.1/{merchantId}/repricingrules/{ruleId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'DELETE'\n          }, options),\n          params,\n          requiredParams: ['merchantId', 'ruleId'],\n          pathParams: ['merchantId', 'ruleId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2.1/{merchantId}/repricingrules/{ruleId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['merchantId', 'ruleId'],\n          pathParams: ['merchantId', 'ruleId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2.1/{merchantId}/repricingrules').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['merchantId'],\n          pathParams: ['merchantId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"patch\",\n      value: function patch(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2.1/{merchantId}/repricingrules/{ruleId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PATCH'\n          }, options),\n          params,\n          requiredParams: ['merchantId', 'ruleId'],\n          pathParams: ['merchantId', 'ruleId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Repricingrules;\n  }();\n\n  content_v2_1.Resource$Repricingrules = Resource$Repricingrules;\n\n  var Resource$Returnaddress = /*#__PURE__*/function () {\n    function Resource$Returnaddress(context) {\n      _classCallCheck(this, Resource$Returnaddress);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Returnaddress, [{\n      key: \"custombatch\",\n      value: function custombatch(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2.1/returnaddress/batch').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: [],\n          pathParams: [],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"delete\",\n      value: function _delete(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2.1/{merchantId}/returnaddress/{returnAddressId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'DELETE'\n          }, options),\n          params,\n          requiredParams: ['merchantId', 'returnAddressId'],\n          pathParams: ['merchantId', 'returnAddressId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2.1/{merchantId}/returnaddress/{returnAddressId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['merchantId', 'returnAddressId'],\n          pathParams: ['merchantId', 'returnAddressId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"insert\",\n      value: function insert(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2.1/{merchantId}/returnaddress').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['merchantId'],\n          pathParams: ['merchantId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2.1/{merchantId}/returnaddress').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['merchantId'],\n          pathParams: ['merchantId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Returnaddress;\n  }();\n\n  content_v2_1.Resource$Returnaddress = Resource$Returnaddress;\n\n  var Resource$Returnpolicy = /*#__PURE__*/function () {\n    function Resource$Returnpolicy(context) {\n      _classCallCheck(this, Resource$Returnpolicy);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Returnpolicy, [{\n      key: \"custombatch\",\n      value: function custombatch(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2.1/returnpolicy/batch').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: [],\n          pathParams: [],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"delete\",\n      value: function _delete(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2.1/{merchantId}/returnpolicy/{returnPolicyId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'DELETE'\n          }, options),\n          params,\n          requiredParams: ['merchantId', 'returnPolicyId'],\n          pathParams: ['merchantId', 'returnPolicyId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2.1/{merchantId}/returnpolicy/{returnPolicyId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['merchantId', 'returnPolicyId'],\n          pathParams: ['merchantId', 'returnPolicyId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"insert\",\n      value: function insert(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2.1/{merchantId}/returnpolicy').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['merchantId'],\n          pathParams: ['merchantId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2.1/{merchantId}/returnpolicy').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['merchantId'],\n          pathParams: ['merchantId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Returnpolicy;\n  }();\n\n  content_v2_1.Resource$Returnpolicy = Resource$Returnpolicy;\n\n  var Resource$Settlementreports = /*#__PURE__*/function () {\n    function Resource$Settlementreports(context) {\n      _classCallCheck(this, Resource$Settlementreports);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Settlementreports, [{\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2.1/{merchantId}/settlementreports/{settlementId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['merchantId', 'settlementId'],\n          pathParams: ['merchantId', 'settlementId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2.1/{merchantId}/settlementreports').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['merchantId'],\n          pathParams: ['merchantId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Settlementreports;\n  }();\n\n  content_v2_1.Resource$Settlementreports = Resource$Settlementreports;\n\n  var Resource$Settlementtransactions = /*#__PURE__*/function () {\n    function Resource$Settlementtransactions(context) {\n      _classCallCheck(this, Resource$Settlementtransactions);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Settlementtransactions, [{\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2.1/{merchantId}/settlementreports/{settlementId}/transactions').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['merchantId', 'settlementId'],\n          pathParams: ['merchantId', 'settlementId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Settlementtransactions;\n  }();\n\n  content_v2_1.Resource$Settlementtransactions = Resource$Settlementtransactions;\n\n  var Resource$Shippingsettings = /*#__PURE__*/function () {\n    function Resource$Shippingsettings(context) {\n      _classCallCheck(this, Resource$Shippingsettings);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Shippingsettings, [{\n      key: \"custombatch\",\n      value: function custombatch(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2.1/shippingsettings/batch').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: [],\n          pathParams: [],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2.1/{merchantId}/shippingsettings/{accountId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['merchantId', 'accountId'],\n          pathParams: ['accountId', 'merchantId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"getsupportedcarriers\",\n      value: function getsupportedcarriers(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2.1/{merchantId}/supportedCarriers').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['merchantId'],\n          pathParams: ['merchantId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"getsupportedholidays\",\n      value: function getsupportedholidays(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2.1/{merchantId}/supportedHolidays').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['merchantId'],\n          pathParams: ['merchantId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"getsupportedpickupservices\",\n      value: function getsupportedpickupservices(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2.1/{merchantId}/supportedPickupServices').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['merchantId'],\n          pathParams: ['merchantId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2.1/{merchantId}/shippingsettings').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['merchantId'],\n          pathParams: ['merchantId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"update\",\n      value: function update(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2.1/{merchantId}/shippingsettings/{accountId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PUT'\n          }, options),\n          params,\n          requiredParams: ['merchantId', 'accountId'],\n          pathParams: ['accountId', 'merchantId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Shippingsettings;\n  }();\n\n  content_v2_1.Resource$Shippingsettings = Resource$Shippingsettings;\n})(content_v2_1 = exports.content_v2_1 || (exports.content_v2_1 = {}));","map":{"version":3,"sources":["/Users/amandapoetker-alles/Desktop/campaign-dashboard/node_modules/googleapis/build/src/apis/content/v2.1.js"],"names":["Object","defineProperty","exports","value","content_v2_1","googleapis_common_1","require","Content","options","google","context","_options","accounts","Resource$Accounts","accountstatuses","Resource$Accountstatuses","accounttax","Resource$Accounttax","csses","Resource$Csses","datafeeds","Resource$Datafeeds","datafeedstatuses","Resource$Datafeedstatuses","liasettings","Resource$Liasettings","localinventory","Resource$Localinventory","orderinvoices","Resource$Orderinvoices","orderreports","Resource$Orderreports","orderreturns","Resource$Orderreturns","orders","Resource$Orders","ordertrackingsignals","Resource$Ordertrackingsignals","pos","Resource$Pos","products","Resource$Products","productstatuses","Resource$Productstatuses","pubsubnotificationsettings","Resource$Pubsubnotificationsettings","regionalinventory","Resource$Regionalinventory","regions","Resource$Regions","repricingrules","Resource$Repricingrules","returnaddress","Resource$Returnaddress","returnpolicy","Resource$Returnpolicy","settlementreports","Resource$Settlementreports","settlementtransactions","Resource$Settlementtransactions","shippingsettings","Resource$Shippingsettings","labels","Resource$Accounts$Labels","paramsOrCallback","optionsOrCallback","callback","params","rootUrl","parameters","assign","url","replace","method","requiredParams","pathParams","createAPIRequest"],"mappings":"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","sourcesContent":["\"use strict\";\n// Copyright 2020 Google LLC\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//    http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.content_v2_1 = void 0;\n/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/class-name-casing */\n/* eslint-disable @typescript-eslint/no-unused-vars */\n/* eslint-disable @typescript-eslint/no-empty-interface */\n/* eslint-disable @typescript-eslint/no-namespace */\n/* eslint-disable no-irregular-whitespace */\nconst googleapis_common_1 = require(\"googleapis-common\");\nvar content_v2_1;\n(function (content_v2_1) {\n    /**\n     * Content API for Shopping\n     *\n     * Manage your product listings and accounts for Google Shopping\n     *\n     * @example\n     * ```js\n     * const {google} = require('googleapis');\n     * const content = google.content('v2.1');\n     * ```\n     */\n    class Content {\n        constructor(options, google) {\n            this.context = {\n                _options: options || {},\n                google,\n            };\n            this.accounts = new Resource$Accounts(this.context);\n            this.accountstatuses = new Resource$Accountstatuses(this.context);\n            this.accounttax = new Resource$Accounttax(this.context);\n            this.csses = new Resource$Csses(this.context);\n            this.datafeeds = new Resource$Datafeeds(this.context);\n            this.datafeedstatuses = new Resource$Datafeedstatuses(this.context);\n            this.liasettings = new Resource$Liasettings(this.context);\n            this.localinventory = new Resource$Localinventory(this.context);\n            this.orderinvoices = new Resource$Orderinvoices(this.context);\n            this.orderreports = new Resource$Orderreports(this.context);\n            this.orderreturns = new Resource$Orderreturns(this.context);\n            this.orders = new Resource$Orders(this.context);\n            this.ordertrackingsignals = new Resource$Ordertrackingsignals(this.context);\n            this.pos = new Resource$Pos(this.context);\n            this.products = new Resource$Products(this.context);\n            this.productstatuses = new Resource$Productstatuses(this.context);\n            this.pubsubnotificationsettings = new Resource$Pubsubnotificationsettings(this.context);\n            this.regionalinventory = new Resource$Regionalinventory(this.context);\n            this.regions = new Resource$Regions(this.context);\n            this.repricingrules = new Resource$Repricingrules(this.context);\n            this.returnaddress = new Resource$Returnaddress(this.context);\n            this.returnpolicy = new Resource$Returnpolicy(this.context);\n            this.settlementreports = new Resource$Settlementreports(this.context);\n            this.settlementtransactions = new Resource$Settlementtransactions(this.context);\n            this.shippingsettings = new Resource$Shippingsettings(this.context);\n        }\n    }\n    content_v2_1.Content = Content;\n    class Resource$Accounts {\n        constructor(context) {\n            this.context = context;\n            this.labels = new Resource$Accounts$Labels(this.context);\n        }\n        authinfo(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/content/v2.1/accounts/authinfo').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: [],\n                pathParams: [],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        claimwebsite(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/content/v2.1/{merchantId}/accounts/{accountId}/claimwebsite').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['merchantId', 'accountId'],\n                pathParams: ['accountId', 'merchantId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        custombatch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/content/v2.1/accounts/batch').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: [],\n                pathParams: [],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        delete(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/content/v2.1/{merchantId}/accounts/{accountId}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'DELETE',\n                }, options),\n                params,\n                requiredParams: ['merchantId', 'accountId'],\n                pathParams: ['accountId', 'merchantId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/content/v2.1/{merchantId}/accounts/{accountId}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['merchantId', 'accountId'],\n                pathParams: ['accountId', 'merchantId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        insert(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/content/v2.1/{merchantId}/accounts').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['merchantId'],\n                pathParams: ['merchantId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        link(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/content/v2.1/{merchantId}/accounts/{accountId}/link').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['merchantId', 'accountId'],\n                pathParams: ['accountId', 'merchantId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/content/v2.1/{merchantId}/accounts').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['merchantId'],\n                pathParams: ['merchantId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        listlinks(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/content/v2.1/{merchantId}/accounts/{accountId}/listlinks').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['merchantId', 'accountId'],\n                pathParams: ['accountId', 'merchantId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        update(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/content/v2.1/{merchantId}/accounts/{accountId}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PUT',\n                }, options),\n                params,\n                requiredParams: ['merchantId', 'accountId'],\n                pathParams: ['accountId', 'merchantId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        updatelabels(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/content/v2.1/{merchantId}/accounts/{accountId}/updatelabels').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['merchantId', 'accountId'],\n                pathParams: ['accountId', 'merchantId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    content_v2_1.Resource$Accounts = Resource$Accounts;\n    class Resource$Accounts$Labels {\n        constructor(context) {\n            this.context = context;\n        }\n        create(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/content/v2.1/accounts/{accountId}/labels').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['accountId'],\n                pathParams: ['accountId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        delete(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/content/v2.1/accounts/{accountId}/labels/{labelId}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'DELETE',\n                }, options),\n                params,\n                requiredParams: ['accountId', 'labelId'],\n                pathParams: ['accountId', 'labelId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/content/v2.1/accounts/{accountId}/labels').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['accountId'],\n                pathParams: ['accountId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        patch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/content/v2.1/accounts/{accountId}/labels/{labelId}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PATCH',\n                }, options),\n                params,\n                requiredParams: ['accountId', 'labelId'],\n                pathParams: ['accountId', 'labelId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    content_v2_1.Resource$Accounts$Labels = Resource$Accounts$Labels;\n    class Resource$Accountstatuses {\n        constructor(context) {\n            this.context = context;\n        }\n        custombatch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/content/v2.1/accountstatuses/batch').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: [],\n                pathParams: [],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/content/v2.1/{merchantId}/accountstatuses/{accountId}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['merchantId', 'accountId'],\n                pathParams: ['accountId', 'merchantId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/content/v2.1/{merchantId}/accountstatuses').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['merchantId'],\n                pathParams: ['merchantId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    content_v2_1.Resource$Accountstatuses = Resource$Accountstatuses;\n    class Resource$Accounttax {\n        constructor(context) {\n            this.context = context;\n        }\n        custombatch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/content/v2.1/accounttax/batch').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: [],\n                pathParams: [],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/content/v2.1/{merchantId}/accounttax/{accountId}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['merchantId', 'accountId'],\n                pathParams: ['accountId', 'merchantId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/content/v2.1/{merchantId}/accounttax').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['merchantId'],\n                pathParams: ['merchantId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        update(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/content/v2.1/{merchantId}/accounttax/{accountId}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PUT',\n                }, options),\n                params,\n                requiredParams: ['merchantId', 'accountId'],\n                pathParams: ['accountId', 'merchantId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    content_v2_1.Resource$Accounttax = Resource$Accounttax;\n    class Resource$Csses {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/content/v2.1/{cssGroupId}/csses/{cssDomainId}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['cssGroupId', 'cssDomainId'],\n                pathParams: ['cssDomainId', 'cssGroupId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/content/v2.1/{cssGroupId}/csses').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['cssGroupId'],\n                pathParams: ['cssGroupId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        updatelabels(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/content/v2.1/{cssGroupId}/csses/{cssDomainId}/updatelabels').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['cssGroupId', 'cssDomainId'],\n                pathParams: ['cssDomainId', 'cssGroupId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    content_v2_1.Resource$Csses = Resource$Csses;\n    class Resource$Datafeeds {\n        constructor(context) {\n            this.context = context;\n        }\n        custombatch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/content/v2.1/datafeeds/batch').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: [],\n                pathParams: [],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        delete(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/content/v2.1/{merchantId}/datafeeds/{datafeedId}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'DELETE',\n                }, options),\n                params,\n                requiredParams: ['merchantId', 'datafeedId'],\n                pathParams: ['datafeedId', 'merchantId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        fetchnow(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/content/v2.1/{merchantId}/datafeeds/{datafeedId}/fetchNow').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['merchantId', 'datafeedId'],\n                pathParams: ['datafeedId', 'merchantId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/content/v2.1/{merchantId}/datafeeds/{datafeedId}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['merchantId', 'datafeedId'],\n                pathParams: ['datafeedId', 'merchantId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        insert(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/content/v2.1/{merchantId}/datafeeds').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['merchantId'],\n                pathParams: ['merchantId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/content/v2.1/{merchantId}/datafeeds').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['merchantId'],\n                pathParams: ['merchantId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        update(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/content/v2.1/{merchantId}/datafeeds/{datafeedId}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PUT',\n                }, options),\n                params,\n                requiredParams: ['merchantId', 'datafeedId'],\n                pathParams: ['datafeedId', 'merchantId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    content_v2_1.Resource$Datafeeds = Resource$Datafeeds;\n    class Resource$Datafeedstatuses {\n        constructor(context) {\n            this.context = context;\n        }\n        custombatch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/content/v2.1/datafeedstatuses/batch').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: [],\n                pathParams: [],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/content/v2.1/{merchantId}/datafeedstatuses/{datafeedId}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['merchantId', 'datafeedId'],\n                pathParams: ['datafeedId', 'merchantId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/content/v2.1/{merchantId}/datafeedstatuses').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['merchantId'],\n                pathParams: ['merchantId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    content_v2_1.Resource$Datafeedstatuses = Resource$Datafeedstatuses;\n    class Resource$Liasettings {\n        constructor(context) {\n            this.context = context;\n        }\n        custombatch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/content/v2.1/liasettings/batch').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: [],\n                pathParams: [],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/content/v2.1/{merchantId}/liasettings/{accountId}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['merchantId', 'accountId'],\n                pathParams: ['accountId', 'merchantId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        getaccessiblegmbaccounts(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/content/v2.1/{merchantId}/liasettings/{accountId}/accessiblegmbaccounts').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['merchantId', 'accountId'],\n                pathParams: ['accountId', 'merchantId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/content/v2.1/{merchantId}/liasettings').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['merchantId'],\n                pathParams: ['merchantId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        listposdataproviders(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/content/v2.1/liasettings/posdataproviders').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: [],\n                pathParams: [],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        requestgmbaccess(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/content/v2.1/{merchantId}/liasettings/{accountId}/requestgmbaccess').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['merchantId', 'accountId', 'gmbEmail'],\n                pathParams: ['accountId', 'merchantId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        requestinventoryverification(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/content/v2.1/{merchantId}/liasettings/{accountId}/requestinventoryverification/{country}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['merchantId', 'accountId', 'country'],\n                pathParams: ['accountId', 'country', 'merchantId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        setinventoryverificationcontact(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/content/v2.1/{merchantId}/liasettings/{accountId}/setinventoryverificationcontact').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: [\n                    'merchantId',\n                    'accountId',\n                    'country',\n                    'language',\n                    'contactName',\n                    'contactEmail',\n                ],\n                pathParams: ['accountId', 'merchantId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        setposdataprovider(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/content/v2.1/{merchantId}/liasettings/{accountId}/setposdataprovider').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['merchantId', 'accountId', 'country'],\n                pathParams: ['accountId', 'merchantId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        update(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/content/v2.1/{merchantId}/liasettings/{accountId}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PUT',\n                }, options),\n                params,\n                requiredParams: ['merchantId', 'accountId'],\n                pathParams: ['accountId', 'merchantId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    content_v2_1.Resource$Liasettings = Resource$Liasettings;\n    class Resource$Localinventory {\n        constructor(context) {\n            this.context = context;\n        }\n        custombatch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/content/v2.1/localinventory/batch').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: [],\n                pathParams: [],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        insert(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/content/v2.1/{merchantId}/products/{productId}/localinventory').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['merchantId', 'productId'],\n                pathParams: ['merchantId', 'productId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    content_v2_1.Resource$Localinventory = Resource$Localinventory;\n    class Resource$Orderinvoices {\n        constructor(context) {\n            this.context = context;\n        }\n        createchargeinvoice(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/content/v2.1/{merchantId}/orderinvoices/{orderId}/createChargeInvoice').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['merchantId', 'orderId'],\n                pathParams: ['merchantId', 'orderId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        createrefundinvoice(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/content/v2.1/{merchantId}/orderinvoices/{orderId}/createRefundInvoice').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['merchantId', 'orderId'],\n                pathParams: ['merchantId', 'orderId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    content_v2_1.Resource$Orderinvoices = Resource$Orderinvoices;\n    class Resource$Orderreports {\n        constructor(context) {\n            this.context = context;\n        }\n        listdisbursements(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/content/v2.1/{merchantId}/orderreports/disbursements').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['merchantId'],\n                pathParams: ['merchantId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        listtransactions(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/content/v2.1/{merchantId}/orderreports/disbursements/{disbursementId}/transactions').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['merchantId', 'disbursementId'],\n                pathParams: ['disbursementId', 'merchantId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    content_v2_1.Resource$Orderreports = Resource$Orderreports;\n    class Resource$Orderreturns {\n        constructor(context) {\n            this.context = context;\n        }\n        acknowledge(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/content/v2.1/{merchantId}/orderreturns/{returnId}/acknowledge').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['merchantId', 'returnId'],\n                pathParams: ['merchantId', 'returnId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        createorderreturn(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/content/v2.1/{merchantId}/orderreturns/createOrderReturn').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['merchantId'],\n                pathParams: ['merchantId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/content/v2.1/{merchantId}/orderreturns/{returnId}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['merchantId', 'returnId'],\n                pathParams: ['merchantId', 'returnId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/content/v2.1/{merchantId}/orderreturns').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['merchantId'],\n                pathParams: ['merchantId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        process(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/content/v2.1/{merchantId}/orderreturns/{returnId}/process').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['merchantId', 'returnId'],\n                pathParams: ['merchantId', 'returnId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    content_v2_1.Resource$Orderreturns = Resource$Orderreturns;\n    class Resource$Orders {\n        constructor(context) {\n            this.context = context;\n        }\n        acknowledge(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/content/v2.1/{merchantId}/orders/{orderId}/acknowledge').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['merchantId', 'orderId'],\n                pathParams: ['merchantId', 'orderId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        advancetestorder(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/content/v2.1/{merchantId}/testorders/{orderId}/advance').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['merchantId', 'orderId'],\n                pathParams: ['merchantId', 'orderId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        cancel(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/content/v2.1/{merchantId}/orders/{orderId}/cancel').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['merchantId', 'orderId'],\n                pathParams: ['merchantId', 'orderId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        cancellineitem(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/content/v2.1/{merchantId}/orders/{orderId}/cancelLineItem').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['merchantId', 'orderId'],\n                pathParams: ['merchantId', 'orderId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        canceltestorderbycustomer(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/content/v2.1/{merchantId}/testorders/{orderId}/cancelByCustomer').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['merchantId', 'orderId'],\n                pathParams: ['merchantId', 'orderId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        createtestorder(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/content/v2.1/{merchantId}/testorders').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['merchantId'],\n                pathParams: ['merchantId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        createtestreturn(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/content/v2.1/{merchantId}/orders/{orderId}/testreturn').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['merchantId', 'orderId'],\n                pathParams: ['merchantId', 'orderId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/content/v2.1/{merchantId}/orders/{orderId}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['merchantId', 'orderId'],\n                pathParams: ['merchantId', 'orderId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        getbymerchantorderid(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/content/v2.1/{merchantId}/ordersbymerchantid/{merchantOrderId}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['merchantId', 'merchantOrderId'],\n                pathParams: ['merchantId', 'merchantOrderId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        gettestordertemplate(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/content/v2.1/{merchantId}/testordertemplates/{templateName}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['merchantId', 'templateName'],\n                pathParams: ['merchantId', 'templateName'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        instorerefundlineitem(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/content/v2.1/{merchantId}/orders/{orderId}/inStoreRefundLineItem').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['merchantId', 'orderId'],\n                pathParams: ['merchantId', 'orderId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/content/v2.1/{merchantId}/orders').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['merchantId'],\n                pathParams: ['merchantId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        refunditem(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/content/v2.1/{merchantId}/orders/{orderId}/refunditem').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['merchantId', 'orderId'],\n                pathParams: ['merchantId', 'orderId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        refundorder(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/content/v2.1/{merchantId}/orders/{orderId}/refundorder').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['merchantId', 'orderId'],\n                pathParams: ['merchantId', 'orderId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        rejectreturnlineitem(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/content/v2.1/{merchantId}/orders/{orderId}/rejectReturnLineItem').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['merchantId', 'orderId'],\n                pathParams: ['merchantId', 'orderId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        returnrefundlineitem(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/content/v2.1/{merchantId}/orders/{orderId}/returnRefundLineItem').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['merchantId', 'orderId'],\n                pathParams: ['merchantId', 'orderId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        setlineitemmetadata(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/content/v2.1/{merchantId}/orders/{orderId}/setLineItemMetadata').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['merchantId', 'orderId'],\n                pathParams: ['merchantId', 'orderId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        shiplineitems(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/content/v2.1/{merchantId}/orders/{orderId}/shipLineItems').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['merchantId', 'orderId'],\n                pathParams: ['merchantId', 'orderId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        updatelineitemshippingdetails(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/content/v2.1/{merchantId}/orders/{orderId}/updateLineItemShippingDetails').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['merchantId', 'orderId'],\n                pathParams: ['merchantId', 'orderId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        updatemerchantorderid(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/content/v2.1/{merchantId}/orders/{orderId}/updateMerchantOrderId').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['merchantId', 'orderId'],\n                pathParams: ['merchantId', 'orderId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        updateshipment(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/content/v2.1/{merchantId}/orders/{orderId}/updateShipment').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['merchantId', 'orderId'],\n                pathParams: ['merchantId', 'orderId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    content_v2_1.Resource$Orders = Resource$Orders;\n    class Resource$Ordertrackingsignals {\n        constructor(context) {\n            this.context = context;\n        }\n        create(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/content/v2.1/{merchantId}/ordertrackingsignals').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['merchantId'],\n                pathParams: ['merchantId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    content_v2_1.Resource$Ordertrackingsignals = Resource$Ordertrackingsignals;\n    class Resource$Pos {\n        constructor(context) {\n            this.context = context;\n        }\n        custombatch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/content/v2.1/pos/batch').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: [],\n                pathParams: [],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        delete(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/content/v2.1/{merchantId}/pos/{targetMerchantId}/store/{storeCode}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'DELETE',\n                }, options),\n                params,\n                requiredParams: ['merchantId', 'targetMerchantId', 'storeCode'],\n                pathParams: ['merchantId', 'storeCode', 'targetMerchantId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/content/v2.1/{merchantId}/pos/{targetMerchantId}/store/{storeCode}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['merchantId', 'targetMerchantId', 'storeCode'],\n                pathParams: ['merchantId', 'storeCode', 'targetMerchantId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        insert(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/content/v2.1/{merchantId}/pos/{targetMerchantId}/store').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['merchantId', 'targetMerchantId'],\n                pathParams: ['merchantId', 'targetMerchantId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        inventory(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/content/v2.1/{merchantId}/pos/{targetMerchantId}/inventory').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['merchantId', 'targetMerchantId'],\n                pathParams: ['merchantId', 'targetMerchantId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/content/v2.1/{merchantId}/pos/{targetMerchantId}/store').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['merchantId', 'targetMerchantId'],\n                pathParams: ['merchantId', 'targetMerchantId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        sale(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/content/v2.1/{merchantId}/pos/{targetMerchantId}/sale').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['merchantId', 'targetMerchantId'],\n                pathParams: ['merchantId', 'targetMerchantId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    content_v2_1.Resource$Pos = Resource$Pos;\n    class Resource$Products {\n        constructor(context) {\n            this.context = context;\n        }\n        custombatch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/content/v2.1/products/batch').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: [],\n                pathParams: [],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        delete(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/content/v2.1/{merchantId}/products/{productId}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'DELETE',\n                }, options),\n                params,\n                requiredParams: ['merchantId', 'productId'],\n                pathParams: ['merchantId', 'productId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/content/v2.1/{merchantId}/products/{productId}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['merchantId', 'productId'],\n                pathParams: ['merchantId', 'productId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        insert(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/content/v2.1/{merchantId}/products').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['merchantId'],\n                pathParams: ['merchantId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/content/v2.1/{merchantId}/products').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['merchantId'],\n                pathParams: ['merchantId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    content_v2_1.Resource$Products = Resource$Products;\n    class Resource$Productstatuses {\n        constructor(context) {\n            this.context = context;\n        }\n        custombatch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/content/v2.1/productstatuses/batch').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: [],\n                pathParams: [],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/content/v2.1/{merchantId}/productstatuses/{productId}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['merchantId', 'productId'],\n                pathParams: ['merchantId', 'productId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/content/v2.1/{merchantId}/productstatuses').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['merchantId'],\n                pathParams: ['merchantId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    content_v2_1.Resource$Productstatuses = Resource$Productstatuses;\n    class Resource$Pubsubnotificationsettings {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/content/v2.1/{merchantId}/pubsubnotificationsettings').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['merchantId'],\n                pathParams: ['merchantId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        update(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/content/v2.1/{merchantId}/pubsubnotificationsettings').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PUT',\n                }, options),\n                params,\n                requiredParams: ['merchantId'],\n                pathParams: ['merchantId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    content_v2_1.Resource$Pubsubnotificationsettings = Resource$Pubsubnotificationsettings;\n    class Resource$Regionalinventory {\n        constructor(context) {\n            this.context = context;\n        }\n        custombatch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/content/v2.1/regionalinventory/batch').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: [],\n                pathParams: [],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        insert(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/content/v2.1/{merchantId}/products/{productId}/regionalinventory').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['merchantId', 'productId'],\n                pathParams: ['merchantId', 'productId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    content_v2_1.Resource$Regionalinventory = Resource$Regionalinventory;\n    class Resource$Regions {\n        constructor(context) {\n            this.context = context;\n        }\n        create(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/content/v2.1/{merchantId}/regions').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['merchantId'],\n                pathParams: ['merchantId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        delete(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/content/v2.1/{merchantId}/regions/{regionId}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'DELETE',\n                }, options),\n                params,\n                requiredParams: ['merchantId', 'regionId'],\n                pathParams: ['merchantId', 'regionId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/content/v2.1/{merchantId}/regions/{regionId}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['merchantId', 'regionId'],\n                pathParams: ['merchantId', 'regionId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/content/v2.1/{merchantId}/regions').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['merchantId'],\n                pathParams: ['merchantId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        patch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/content/v2.1/{merchantId}/regions/{regionId}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PATCH',\n                }, options),\n                params,\n                requiredParams: ['merchantId', 'regionId'],\n                pathParams: ['merchantId', 'regionId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    content_v2_1.Resource$Regions = Resource$Regions;\n    class Resource$Repricingrules {\n        constructor(context) {\n            this.context = context;\n        }\n        create(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/content/v2.1/{merchantId}/repricingrules').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['merchantId'],\n                pathParams: ['merchantId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        delete(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/content/v2.1/{merchantId}/repricingrules/{ruleId}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'DELETE',\n                }, options),\n                params,\n                requiredParams: ['merchantId', 'ruleId'],\n                pathParams: ['merchantId', 'ruleId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/content/v2.1/{merchantId}/repricingrules/{ruleId}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['merchantId', 'ruleId'],\n                pathParams: ['merchantId', 'ruleId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/content/v2.1/{merchantId}/repricingrules').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['merchantId'],\n                pathParams: ['merchantId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        patch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/content/v2.1/{merchantId}/repricingrules/{ruleId}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PATCH',\n                }, options),\n                params,\n                requiredParams: ['merchantId', 'ruleId'],\n                pathParams: ['merchantId', 'ruleId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    content_v2_1.Resource$Repricingrules = Resource$Repricingrules;\n    class Resource$Returnaddress {\n        constructor(context) {\n            this.context = context;\n        }\n        custombatch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/content/v2.1/returnaddress/batch').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: [],\n                pathParams: [],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        delete(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/content/v2.1/{merchantId}/returnaddress/{returnAddressId}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'DELETE',\n                }, options),\n                params,\n                requiredParams: ['merchantId', 'returnAddressId'],\n                pathParams: ['merchantId', 'returnAddressId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/content/v2.1/{merchantId}/returnaddress/{returnAddressId}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['merchantId', 'returnAddressId'],\n                pathParams: ['merchantId', 'returnAddressId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        insert(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/content/v2.1/{merchantId}/returnaddress').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['merchantId'],\n                pathParams: ['merchantId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/content/v2.1/{merchantId}/returnaddress').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['merchantId'],\n                pathParams: ['merchantId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    content_v2_1.Resource$Returnaddress = Resource$Returnaddress;\n    class Resource$Returnpolicy {\n        constructor(context) {\n            this.context = context;\n        }\n        custombatch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/content/v2.1/returnpolicy/batch').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: [],\n                pathParams: [],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        delete(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/content/v2.1/{merchantId}/returnpolicy/{returnPolicyId}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'DELETE',\n                }, options),\n                params,\n                requiredParams: ['merchantId', 'returnPolicyId'],\n                pathParams: ['merchantId', 'returnPolicyId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/content/v2.1/{merchantId}/returnpolicy/{returnPolicyId}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['merchantId', 'returnPolicyId'],\n                pathParams: ['merchantId', 'returnPolicyId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        insert(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/content/v2.1/{merchantId}/returnpolicy').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['merchantId'],\n                pathParams: ['merchantId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/content/v2.1/{merchantId}/returnpolicy').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['merchantId'],\n                pathParams: ['merchantId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    content_v2_1.Resource$Returnpolicy = Resource$Returnpolicy;\n    class Resource$Settlementreports {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/content/v2.1/{merchantId}/settlementreports/{settlementId}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['merchantId', 'settlementId'],\n                pathParams: ['merchantId', 'settlementId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/content/v2.1/{merchantId}/settlementreports').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['merchantId'],\n                pathParams: ['merchantId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    content_v2_1.Resource$Settlementreports = Resource$Settlementreports;\n    class Resource$Settlementtransactions {\n        constructor(context) {\n            this.context = context;\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/content/v2.1/{merchantId}/settlementreports/{settlementId}/transactions').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['merchantId', 'settlementId'],\n                pathParams: ['merchantId', 'settlementId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    content_v2_1.Resource$Settlementtransactions = Resource$Settlementtransactions;\n    class Resource$Shippingsettings {\n        constructor(context) {\n            this.context = context;\n        }\n        custombatch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/content/v2.1/shippingsettings/batch').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: [],\n                pathParams: [],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/content/v2.1/{merchantId}/shippingsettings/{accountId}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['merchantId', 'accountId'],\n                pathParams: ['accountId', 'merchantId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        getsupportedcarriers(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/content/v2.1/{merchantId}/supportedCarriers').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['merchantId'],\n                pathParams: ['merchantId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        getsupportedholidays(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/content/v2.1/{merchantId}/supportedHolidays').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['merchantId'],\n                pathParams: ['merchantId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        getsupportedpickupservices(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/content/v2.1/{merchantId}/supportedPickupServices').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['merchantId'],\n                pathParams: ['merchantId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/content/v2.1/{merchantId}/shippingsettings').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['merchantId'],\n                pathParams: ['merchantId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        update(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/content/v2.1/{merchantId}/shippingsettings/{accountId}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PUT',\n                }, options),\n                params,\n                requiredParams: ['merchantId', 'accountId'],\n                pathParams: ['accountId', 'merchantId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    content_v2_1.Resource$Shippingsettings = Resource$Shippingsettings;\n})(content_v2_1 = exports.content_v2_1 || (exports.content_v2_1 = {}));\n//# sourceMappingURL=v2.1.js.map"]},"metadata":{},"sourceType":"script"}