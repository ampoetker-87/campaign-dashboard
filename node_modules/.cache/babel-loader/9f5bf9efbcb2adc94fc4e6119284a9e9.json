{"ast":null,"code":"\"use strict\";\n/**\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar _createClass = require(\"/Users/amandapoetker-alles/Desktop/campaign-dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _classCallCheck = require(\"/Users/amandapoetker-alles/Desktop/campaign-dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar googleapis_common_1 = require(\"googleapis-common\"); // tslint:disable: no-any\n// tslint:disable: class-name\n// tslint:disable: variable-name\n// tslint:disable: jsdoc-format\n// tslint:disable: no-namespace\n\n\nvar adexchangebuyer2_v2beta1;\n\n(function (adexchangebuyer2_v2beta1) {\n  /**\n   * Ad Exchange Buyer API II\n   *\n   * Accesses the latest features for managing Authorized Buyers accounts,\n   * Real-Time Bidding configurations and auction metrics, and Marketplace\n   * programmatic deals.\n   *\n   * @example\n   * const {google} = require('googleapis');\n   * const adexchangebuyer2 = google.adexchangebuyer2('v2beta1');\n   *\n   * @namespace adexchangebuyer2\n   * @type {Function}\n   * @version v2beta1\n   * @variation v2beta1\n   * @param {object=} options Options for Adexchangebuyer2\n   */\n  var Adexchangebuyer2 = function Adexchangebuyer2(options, google) {\n    _classCallCheck(this, Adexchangebuyer2);\n\n    this.context = {\n      _options: options || {},\n      google\n    };\n    this.accounts = new Resource$Accounts(this.context);\n    this.bidders = new Resource$Bidders(this.context);\n  };\n\n  adexchangebuyer2_v2beta1.Adexchangebuyer2 = Adexchangebuyer2;\n\n  var Resource$Accounts = function Resource$Accounts(context) {\n    _classCallCheck(this, Resource$Accounts);\n\n    this.context = context;\n    this.clients = new Resource$Accounts$Clients(this.context);\n    this.creatives = new Resource$Accounts$Creatives(this.context);\n    this.finalizedProposals = new Resource$Accounts$Finalizedproposals(this.context);\n    this.products = new Resource$Accounts$Products(this.context);\n    this.proposals = new Resource$Accounts$Proposals(this.context);\n    this.publisherProfiles = new Resource$Accounts$Publisherprofiles(this.context);\n  };\n\n  adexchangebuyer2_v2beta1.Resource$Accounts = Resource$Accounts;\n\n  var Resource$Accounts$Clients = /*#__PURE__*/function () {\n    function Resource$Accounts$Clients(context) {\n      _classCallCheck(this, Resource$Accounts$Clients);\n\n      this.context = context;\n      this.invitations = new Resource$Accounts$Clients$Invitations(this.context);\n      this.users = new Resource$Accounts$Clients$Users(this.context);\n    }\n\n    _createClass(Resource$Accounts$Clients, [{\n      key: \"create\",\n      value: function create(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v2beta1/accounts/{accountId}/clients').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['accountId'],\n          pathParams: ['accountId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v2beta1/accounts/{accountId}/clients/{clientAccountId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['accountId', 'clientAccountId'],\n          pathParams: ['accountId', 'clientAccountId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v2beta1/accounts/{accountId}/clients').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['accountId'],\n          pathParams: ['accountId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"update\",\n      value: function update(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v2beta1/accounts/{accountId}/clients/{clientAccountId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PUT'\n          }, options),\n          params,\n          requiredParams: ['accountId', 'clientAccountId'],\n          pathParams: ['accountId', 'clientAccountId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Accounts$Clients;\n  }();\n\n  adexchangebuyer2_v2beta1.Resource$Accounts$Clients = Resource$Accounts$Clients;\n\n  var Resource$Accounts$Clients$Invitations = /*#__PURE__*/function () {\n    function Resource$Accounts$Clients$Invitations(context) {\n      _classCallCheck(this, Resource$Accounts$Clients$Invitations);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Accounts$Clients$Invitations, [{\n      key: \"create\",\n      value: function create(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v2beta1/accounts/{accountId}/clients/{clientAccountId}/invitations').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['accountId', 'clientAccountId'],\n          pathParams: ['accountId', 'clientAccountId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v2beta1/accounts/{accountId}/clients/{clientAccountId}/invitations/{invitationId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['accountId', 'clientAccountId', 'invitationId'],\n          pathParams: ['accountId', 'clientAccountId', 'invitationId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v2beta1/accounts/{accountId}/clients/{clientAccountId}/invitations').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['accountId', 'clientAccountId'],\n          pathParams: ['accountId', 'clientAccountId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Accounts$Clients$Invitations;\n  }();\n\n  adexchangebuyer2_v2beta1.Resource$Accounts$Clients$Invitations = Resource$Accounts$Clients$Invitations;\n\n  var Resource$Accounts$Clients$Users = /*#__PURE__*/function () {\n    function Resource$Accounts$Clients$Users(context) {\n      _classCallCheck(this, Resource$Accounts$Clients$Users);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Accounts$Clients$Users, [{\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v2beta1/accounts/{accountId}/clients/{clientAccountId}/users/{userId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['accountId', 'clientAccountId', 'userId'],\n          pathParams: ['accountId', 'clientAccountId', 'userId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v2beta1/accounts/{accountId}/clients/{clientAccountId}/users').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['accountId', 'clientAccountId'],\n          pathParams: ['accountId', 'clientAccountId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"update\",\n      value: function update(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v2beta1/accounts/{accountId}/clients/{clientAccountId}/users/{userId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PUT'\n          }, options),\n          params,\n          requiredParams: ['accountId', 'clientAccountId', 'userId'],\n          pathParams: ['accountId', 'clientAccountId', 'userId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Accounts$Clients$Users;\n  }();\n\n  adexchangebuyer2_v2beta1.Resource$Accounts$Clients$Users = Resource$Accounts$Clients$Users;\n\n  var Resource$Accounts$Creatives = /*#__PURE__*/function () {\n    function Resource$Accounts$Creatives(context) {\n      _classCallCheck(this, Resource$Accounts$Creatives);\n\n      this.context = context;\n      this.dealAssociations = new Resource$Accounts$Creatives$Dealassociations(this.context);\n    }\n\n    _createClass(Resource$Accounts$Creatives, [{\n      key: \"create\",\n      value: function create(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v2beta1/accounts/{accountId}/creatives').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['accountId'],\n          pathParams: ['accountId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v2beta1/accounts/{accountId}/creatives/{creativeId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['accountId', 'creativeId'],\n          pathParams: ['accountId', 'creativeId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v2beta1/accounts/{accountId}/creatives').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['accountId'],\n          pathParams: ['accountId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"stopWatching\",\n      value: function stopWatching(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v2beta1/accounts/{accountId}/creatives/{creativeId}:stopWatching').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['accountId', 'creativeId'],\n          pathParams: ['accountId', 'creativeId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"update\",\n      value: function update(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v2beta1/accounts/{accountId}/creatives/{creativeId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PUT'\n          }, options),\n          params,\n          requiredParams: ['accountId', 'creativeId'],\n          pathParams: ['accountId', 'creativeId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"watch\",\n      value: function watch(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v2beta1/accounts/{accountId}/creatives/{creativeId}:watch').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['accountId', 'creativeId'],\n          pathParams: ['accountId', 'creativeId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Accounts$Creatives;\n  }();\n\n  adexchangebuyer2_v2beta1.Resource$Accounts$Creatives = Resource$Accounts$Creatives;\n\n  var Resource$Accounts$Creatives$Dealassociations = /*#__PURE__*/function () {\n    function Resource$Accounts$Creatives$Dealassociations(context) {\n      _classCallCheck(this, Resource$Accounts$Creatives$Dealassociations);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Accounts$Creatives$Dealassociations, [{\n      key: \"add\",\n      value: function add(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v2beta1/accounts/{accountId}/creatives/{creativeId}/dealAssociations:add').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['accountId', 'creativeId'],\n          pathParams: ['accountId', 'creativeId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v2beta1/accounts/{accountId}/creatives/{creativeId}/dealAssociations').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['accountId', 'creativeId'],\n          pathParams: ['accountId', 'creativeId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"remove\",\n      value: function remove(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v2beta1/accounts/{accountId}/creatives/{creativeId}/dealAssociations:remove').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['accountId', 'creativeId'],\n          pathParams: ['accountId', 'creativeId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Accounts$Creatives$Dealassociations;\n  }();\n\n  adexchangebuyer2_v2beta1.Resource$Accounts$Creatives$Dealassociations = Resource$Accounts$Creatives$Dealassociations;\n\n  var Resource$Accounts$Finalizedproposals = /*#__PURE__*/function () {\n    function Resource$Accounts$Finalizedproposals(context) {\n      _classCallCheck(this, Resource$Accounts$Finalizedproposals);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Accounts$Finalizedproposals, [{\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v2beta1/accounts/{accountId}/finalizedProposals').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['accountId'],\n          pathParams: ['accountId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Accounts$Finalizedproposals;\n  }();\n\n  adexchangebuyer2_v2beta1.Resource$Accounts$Finalizedproposals = Resource$Accounts$Finalizedproposals;\n\n  var Resource$Accounts$Products = /*#__PURE__*/function () {\n    function Resource$Accounts$Products(context) {\n      _classCallCheck(this, Resource$Accounts$Products);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Accounts$Products, [{\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v2beta1/accounts/{accountId}/products/{productId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['accountId', 'productId'],\n          pathParams: ['accountId', 'productId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v2beta1/accounts/{accountId}/products').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['accountId'],\n          pathParams: ['accountId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Accounts$Products;\n  }();\n\n  adexchangebuyer2_v2beta1.Resource$Accounts$Products = Resource$Accounts$Products;\n\n  var Resource$Accounts$Proposals = /*#__PURE__*/function () {\n    function Resource$Accounts$Proposals(context) {\n      _classCallCheck(this, Resource$Accounts$Proposals);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Accounts$Proposals, [{\n      key: \"accept\",\n      value: function accept(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v2beta1/accounts/{accountId}/proposals/{proposalId}:accept').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['accountId', 'proposalId'],\n          pathParams: ['accountId', 'proposalId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"addNote\",\n      value: function addNote(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v2beta1/accounts/{accountId}/proposals/{proposalId}:addNote').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['accountId', 'proposalId'],\n          pathParams: ['accountId', 'proposalId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"cancelNegotiation\",\n      value: function cancelNegotiation(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v2beta1/accounts/{accountId}/proposals/{proposalId}:cancelNegotiation').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['accountId', 'proposalId'],\n          pathParams: ['accountId', 'proposalId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"completeSetup\",\n      value: function completeSetup(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v2beta1/accounts/{accountId}/proposals/{proposalId}:completeSetup').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['accountId', 'proposalId'],\n          pathParams: ['accountId', 'proposalId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"create\",\n      value: function create(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v2beta1/accounts/{accountId}/proposals').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['accountId'],\n          pathParams: ['accountId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v2beta1/accounts/{accountId}/proposals/{proposalId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['accountId', 'proposalId'],\n          pathParams: ['accountId', 'proposalId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v2beta1/accounts/{accountId}/proposals').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['accountId'],\n          pathParams: ['accountId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"pause\",\n      value: function pause(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v2beta1/accounts/{accountId}/proposals/{proposalId}:pause').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['accountId', 'proposalId'],\n          pathParams: ['accountId', 'proposalId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"resume\",\n      value: function resume(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v2beta1/accounts/{accountId}/proposals/{proposalId}:resume').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['accountId', 'proposalId'],\n          pathParams: ['accountId', 'proposalId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"update\",\n      value: function update(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v2beta1/accounts/{accountId}/proposals/{proposalId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PUT'\n          }, options),\n          params,\n          requiredParams: ['accountId', 'proposalId'],\n          pathParams: ['accountId', 'proposalId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Accounts$Proposals;\n  }();\n\n  adexchangebuyer2_v2beta1.Resource$Accounts$Proposals = Resource$Accounts$Proposals;\n\n  var Resource$Accounts$Publisherprofiles = /*#__PURE__*/function () {\n    function Resource$Accounts$Publisherprofiles(context) {\n      _classCallCheck(this, Resource$Accounts$Publisherprofiles);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Accounts$Publisherprofiles, [{\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v2beta1/accounts/{accountId}/publisherProfiles/{publisherProfileId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['accountId', 'publisherProfileId'],\n          pathParams: ['accountId', 'publisherProfileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v2beta1/accounts/{accountId}/publisherProfiles').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['accountId'],\n          pathParams: ['accountId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Accounts$Publisherprofiles;\n  }();\n\n  adexchangebuyer2_v2beta1.Resource$Accounts$Publisherprofiles = Resource$Accounts$Publisherprofiles;\n\n  var Resource$Bidders = function Resource$Bidders(context) {\n    _classCallCheck(this, Resource$Bidders);\n\n    this.context = context;\n    this.accounts = new Resource$Bidders$Accounts(this.context);\n    this.filterSets = new Resource$Bidders$Filtersets(this.context);\n  };\n\n  adexchangebuyer2_v2beta1.Resource$Bidders = Resource$Bidders;\n\n  var Resource$Bidders$Accounts = function Resource$Bidders$Accounts(context) {\n    _classCallCheck(this, Resource$Bidders$Accounts);\n\n    this.context = context;\n    this.creatives = new Resource$Bidders$Accounts$Creatives(this.context);\n    this.filterSets = new Resource$Bidders$Accounts$Filtersets(this.context);\n  };\n\n  adexchangebuyer2_v2beta1.Resource$Bidders$Accounts = Resource$Bidders$Accounts;\n\n  var Resource$Bidders$Accounts$Creatives = /*#__PURE__*/function () {\n    function Resource$Bidders$Accounts$Creatives(context) {\n      _classCallCheck(this, Resource$Bidders$Accounts$Creatives);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Bidders$Accounts$Creatives, [{\n      key: \"delete\",\n      value: function _delete(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v2beta1/{+ownerName}/creatives/{creativeId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'DELETE'\n          }, options),\n          params,\n          requiredParams: ['ownerName', 'creativeId'],\n          pathParams: ['creativeId', 'ownerName'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Bidders$Accounts$Creatives;\n  }();\n\n  adexchangebuyer2_v2beta1.Resource$Bidders$Accounts$Creatives = Resource$Bidders$Accounts$Creatives;\n\n  var Resource$Bidders$Accounts$Filtersets = /*#__PURE__*/function () {\n    function Resource$Bidders$Accounts$Filtersets(context) {\n      _classCallCheck(this, Resource$Bidders$Accounts$Filtersets);\n\n      this.context = context;\n      this.bidMetrics = new Resource$Bidders$Accounts$Filtersets$Bidmetrics(this.context);\n      this.bidResponseErrors = new Resource$Bidders$Accounts$Filtersets$Bidresponseerrors(this.context);\n      this.bidResponsesWithoutBids = new Resource$Bidders$Accounts$Filtersets$Bidresponseswithoutbids(this.context);\n      this.filteredBidRequests = new Resource$Bidders$Accounts$Filtersets$Filteredbidrequests(this.context);\n      this.filteredBids = new Resource$Bidders$Accounts$Filtersets$Filteredbids(this.context);\n      this.impressionMetrics = new Resource$Bidders$Accounts$Filtersets$Impressionmetrics(this.context);\n      this.losingBids = new Resource$Bidders$Accounts$Filtersets$Losingbids(this.context);\n      this.nonBillableWinningBids = new Resource$Bidders$Accounts$Filtersets$Nonbillablewinningbids(this.context);\n    }\n\n    _createClass(Resource$Bidders$Accounts$Filtersets, [{\n      key: \"create\",\n      value: function create(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v2beta1/{+ownerName}/filterSets').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['ownerName'],\n          pathParams: ['ownerName'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"delete\",\n      value: function _delete(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v2beta1/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'DELETE'\n          }, options),\n          params,\n          requiredParams: ['name'],\n          pathParams: ['name'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v2beta1/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['name'],\n          pathParams: ['name'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v2beta1/{+ownerName}/filterSets').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['ownerName'],\n          pathParams: ['ownerName'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Bidders$Accounts$Filtersets;\n  }();\n\n  adexchangebuyer2_v2beta1.Resource$Bidders$Accounts$Filtersets = Resource$Bidders$Accounts$Filtersets;\n\n  var Resource$Bidders$Accounts$Filtersets$Bidmetrics = /*#__PURE__*/function () {\n    function Resource$Bidders$Accounts$Filtersets$Bidmetrics(context) {\n      _classCallCheck(this, Resource$Bidders$Accounts$Filtersets$Bidmetrics);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Bidders$Accounts$Filtersets$Bidmetrics, [{\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v2beta1/{+filterSetName}/bidMetrics').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['filterSetName'],\n          pathParams: ['filterSetName'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Bidders$Accounts$Filtersets$Bidmetrics;\n  }();\n\n  adexchangebuyer2_v2beta1.Resource$Bidders$Accounts$Filtersets$Bidmetrics = Resource$Bidders$Accounts$Filtersets$Bidmetrics;\n\n  var Resource$Bidders$Accounts$Filtersets$Bidresponseerrors = /*#__PURE__*/function () {\n    function Resource$Bidders$Accounts$Filtersets$Bidresponseerrors(context) {\n      _classCallCheck(this, Resource$Bidders$Accounts$Filtersets$Bidresponseerrors);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Bidders$Accounts$Filtersets$Bidresponseerrors, [{\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v2beta1/{+filterSetName}/bidResponseErrors').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['filterSetName'],\n          pathParams: ['filterSetName'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Bidders$Accounts$Filtersets$Bidresponseerrors;\n  }();\n\n  adexchangebuyer2_v2beta1.Resource$Bidders$Accounts$Filtersets$Bidresponseerrors = Resource$Bidders$Accounts$Filtersets$Bidresponseerrors;\n\n  var Resource$Bidders$Accounts$Filtersets$Bidresponseswithoutbids = /*#__PURE__*/function () {\n    function Resource$Bidders$Accounts$Filtersets$Bidresponseswithoutbids(context) {\n      _classCallCheck(this, Resource$Bidders$Accounts$Filtersets$Bidresponseswithoutbids);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Bidders$Accounts$Filtersets$Bidresponseswithoutbids, [{\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v2beta1/{+filterSetName}/bidResponsesWithoutBids').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['filterSetName'],\n          pathParams: ['filterSetName'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Bidders$Accounts$Filtersets$Bidresponseswithoutbids;\n  }();\n\n  adexchangebuyer2_v2beta1.Resource$Bidders$Accounts$Filtersets$Bidresponseswithoutbids = Resource$Bidders$Accounts$Filtersets$Bidresponseswithoutbids;\n\n  var Resource$Bidders$Accounts$Filtersets$Filteredbidrequests = /*#__PURE__*/function () {\n    function Resource$Bidders$Accounts$Filtersets$Filteredbidrequests(context) {\n      _classCallCheck(this, Resource$Bidders$Accounts$Filtersets$Filteredbidrequests);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Bidders$Accounts$Filtersets$Filteredbidrequests, [{\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v2beta1/{+filterSetName}/filteredBidRequests').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['filterSetName'],\n          pathParams: ['filterSetName'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Bidders$Accounts$Filtersets$Filteredbidrequests;\n  }();\n\n  adexchangebuyer2_v2beta1.Resource$Bidders$Accounts$Filtersets$Filteredbidrequests = Resource$Bidders$Accounts$Filtersets$Filteredbidrequests;\n\n  var Resource$Bidders$Accounts$Filtersets$Filteredbids = /*#__PURE__*/function () {\n    function Resource$Bidders$Accounts$Filtersets$Filteredbids(context) {\n      _classCallCheck(this, Resource$Bidders$Accounts$Filtersets$Filteredbids);\n\n      this.context = context;\n      this.creatives = new Resource$Bidders$Accounts$Filtersets$Filteredbids$Creatives(this.context);\n      this.details = new Resource$Bidders$Accounts$Filtersets$Filteredbids$Details(this.context);\n    }\n\n    _createClass(Resource$Bidders$Accounts$Filtersets$Filteredbids, [{\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v2beta1/{+filterSetName}/filteredBids').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['filterSetName'],\n          pathParams: ['filterSetName'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Bidders$Accounts$Filtersets$Filteredbids;\n  }();\n\n  adexchangebuyer2_v2beta1.Resource$Bidders$Accounts$Filtersets$Filteredbids = Resource$Bidders$Accounts$Filtersets$Filteredbids;\n\n  var Resource$Bidders$Accounts$Filtersets$Filteredbids$Creatives = /*#__PURE__*/function () {\n    function Resource$Bidders$Accounts$Filtersets$Filteredbids$Creatives(context) {\n      _classCallCheck(this, Resource$Bidders$Accounts$Filtersets$Filteredbids$Creatives);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Bidders$Accounts$Filtersets$Filteredbids$Creatives, [{\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v2beta1/{+filterSetName}/filteredBids/{creativeStatusId}/creatives').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['filterSetName', 'creativeStatusId'],\n          pathParams: ['creativeStatusId', 'filterSetName'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Bidders$Accounts$Filtersets$Filteredbids$Creatives;\n  }();\n\n  adexchangebuyer2_v2beta1.Resource$Bidders$Accounts$Filtersets$Filteredbids$Creatives = Resource$Bidders$Accounts$Filtersets$Filteredbids$Creatives;\n\n  var Resource$Bidders$Accounts$Filtersets$Filteredbids$Details = /*#__PURE__*/function () {\n    function Resource$Bidders$Accounts$Filtersets$Filteredbids$Details(context) {\n      _classCallCheck(this, Resource$Bidders$Accounts$Filtersets$Filteredbids$Details);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Bidders$Accounts$Filtersets$Filteredbids$Details, [{\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v2beta1/{+filterSetName}/filteredBids/{creativeStatusId}/details').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['filterSetName', 'creativeStatusId'],\n          pathParams: ['creativeStatusId', 'filterSetName'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Bidders$Accounts$Filtersets$Filteredbids$Details;\n  }();\n\n  adexchangebuyer2_v2beta1.Resource$Bidders$Accounts$Filtersets$Filteredbids$Details = Resource$Bidders$Accounts$Filtersets$Filteredbids$Details;\n\n  var Resource$Bidders$Accounts$Filtersets$Impressionmetrics = /*#__PURE__*/function () {\n    function Resource$Bidders$Accounts$Filtersets$Impressionmetrics(context) {\n      _classCallCheck(this, Resource$Bidders$Accounts$Filtersets$Impressionmetrics);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Bidders$Accounts$Filtersets$Impressionmetrics, [{\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v2beta1/{+filterSetName}/impressionMetrics').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['filterSetName'],\n          pathParams: ['filterSetName'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Bidders$Accounts$Filtersets$Impressionmetrics;\n  }();\n\n  adexchangebuyer2_v2beta1.Resource$Bidders$Accounts$Filtersets$Impressionmetrics = Resource$Bidders$Accounts$Filtersets$Impressionmetrics;\n\n  var Resource$Bidders$Accounts$Filtersets$Losingbids = /*#__PURE__*/function () {\n    function Resource$Bidders$Accounts$Filtersets$Losingbids(context) {\n      _classCallCheck(this, Resource$Bidders$Accounts$Filtersets$Losingbids);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Bidders$Accounts$Filtersets$Losingbids, [{\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v2beta1/{+filterSetName}/losingBids').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['filterSetName'],\n          pathParams: ['filterSetName'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Bidders$Accounts$Filtersets$Losingbids;\n  }();\n\n  adexchangebuyer2_v2beta1.Resource$Bidders$Accounts$Filtersets$Losingbids = Resource$Bidders$Accounts$Filtersets$Losingbids;\n\n  var Resource$Bidders$Accounts$Filtersets$Nonbillablewinningbids = /*#__PURE__*/function () {\n    function Resource$Bidders$Accounts$Filtersets$Nonbillablewinningbids(context) {\n      _classCallCheck(this, Resource$Bidders$Accounts$Filtersets$Nonbillablewinningbids);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Bidders$Accounts$Filtersets$Nonbillablewinningbids, [{\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v2beta1/{+filterSetName}/nonBillableWinningBids').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['filterSetName'],\n          pathParams: ['filterSetName'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Bidders$Accounts$Filtersets$Nonbillablewinningbids;\n  }();\n\n  adexchangebuyer2_v2beta1.Resource$Bidders$Accounts$Filtersets$Nonbillablewinningbids = Resource$Bidders$Accounts$Filtersets$Nonbillablewinningbids;\n\n  var Resource$Bidders$Filtersets = /*#__PURE__*/function () {\n    function Resource$Bidders$Filtersets(context) {\n      _classCallCheck(this, Resource$Bidders$Filtersets);\n\n      this.context = context;\n      this.bidMetrics = new Resource$Bidders$Filtersets$Bidmetrics(this.context);\n      this.bidResponseErrors = new Resource$Bidders$Filtersets$Bidresponseerrors(this.context);\n      this.bidResponsesWithoutBids = new Resource$Bidders$Filtersets$Bidresponseswithoutbids(this.context);\n      this.filteredBidRequests = new Resource$Bidders$Filtersets$Filteredbidrequests(this.context);\n      this.filteredBids = new Resource$Bidders$Filtersets$Filteredbids(this.context);\n      this.impressionMetrics = new Resource$Bidders$Filtersets$Impressionmetrics(this.context);\n      this.losingBids = new Resource$Bidders$Filtersets$Losingbids(this.context);\n      this.nonBillableWinningBids = new Resource$Bidders$Filtersets$Nonbillablewinningbids(this.context);\n    }\n\n    _createClass(Resource$Bidders$Filtersets, [{\n      key: \"create\",\n      value: function create(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v2beta1/{+ownerName}/filterSets').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['ownerName'],\n          pathParams: ['ownerName'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"delete\",\n      value: function _delete(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v2beta1/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'DELETE'\n          }, options),\n          params,\n          requiredParams: ['name'],\n          pathParams: ['name'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v2beta1/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['name'],\n          pathParams: ['name'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v2beta1/{+ownerName}/filterSets').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['ownerName'],\n          pathParams: ['ownerName'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Bidders$Filtersets;\n  }();\n\n  adexchangebuyer2_v2beta1.Resource$Bidders$Filtersets = Resource$Bidders$Filtersets;\n\n  var Resource$Bidders$Filtersets$Bidmetrics = /*#__PURE__*/function () {\n    function Resource$Bidders$Filtersets$Bidmetrics(context) {\n      _classCallCheck(this, Resource$Bidders$Filtersets$Bidmetrics);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Bidders$Filtersets$Bidmetrics, [{\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v2beta1/{+filterSetName}/bidMetrics').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['filterSetName'],\n          pathParams: ['filterSetName'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Bidders$Filtersets$Bidmetrics;\n  }();\n\n  adexchangebuyer2_v2beta1.Resource$Bidders$Filtersets$Bidmetrics = Resource$Bidders$Filtersets$Bidmetrics;\n\n  var Resource$Bidders$Filtersets$Bidresponseerrors = /*#__PURE__*/function () {\n    function Resource$Bidders$Filtersets$Bidresponseerrors(context) {\n      _classCallCheck(this, Resource$Bidders$Filtersets$Bidresponseerrors);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Bidders$Filtersets$Bidresponseerrors, [{\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v2beta1/{+filterSetName}/bidResponseErrors').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['filterSetName'],\n          pathParams: ['filterSetName'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Bidders$Filtersets$Bidresponseerrors;\n  }();\n\n  adexchangebuyer2_v2beta1.Resource$Bidders$Filtersets$Bidresponseerrors = Resource$Bidders$Filtersets$Bidresponseerrors;\n\n  var Resource$Bidders$Filtersets$Bidresponseswithoutbids = /*#__PURE__*/function () {\n    function Resource$Bidders$Filtersets$Bidresponseswithoutbids(context) {\n      _classCallCheck(this, Resource$Bidders$Filtersets$Bidresponseswithoutbids);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Bidders$Filtersets$Bidresponseswithoutbids, [{\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v2beta1/{+filterSetName}/bidResponsesWithoutBids').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['filterSetName'],\n          pathParams: ['filterSetName'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Bidders$Filtersets$Bidresponseswithoutbids;\n  }();\n\n  adexchangebuyer2_v2beta1.Resource$Bidders$Filtersets$Bidresponseswithoutbids = Resource$Bidders$Filtersets$Bidresponseswithoutbids;\n\n  var Resource$Bidders$Filtersets$Filteredbidrequests = /*#__PURE__*/function () {\n    function Resource$Bidders$Filtersets$Filteredbidrequests(context) {\n      _classCallCheck(this, Resource$Bidders$Filtersets$Filteredbidrequests);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Bidders$Filtersets$Filteredbidrequests, [{\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v2beta1/{+filterSetName}/filteredBidRequests').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['filterSetName'],\n          pathParams: ['filterSetName'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Bidders$Filtersets$Filteredbidrequests;\n  }();\n\n  adexchangebuyer2_v2beta1.Resource$Bidders$Filtersets$Filteredbidrequests = Resource$Bidders$Filtersets$Filteredbidrequests;\n\n  var Resource$Bidders$Filtersets$Filteredbids = /*#__PURE__*/function () {\n    function Resource$Bidders$Filtersets$Filteredbids(context) {\n      _classCallCheck(this, Resource$Bidders$Filtersets$Filteredbids);\n\n      this.context = context;\n      this.creatives = new Resource$Bidders$Filtersets$Filteredbids$Creatives(this.context);\n      this.details = new Resource$Bidders$Filtersets$Filteredbids$Details(this.context);\n    }\n\n    _createClass(Resource$Bidders$Filtersets$Filteredbids, [{\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v2beta1/{+filterSetName}/filteredBids').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['filterSetName'],\n          pathParams: ['filterSetName'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Bidders$Filtersets$Filteredbids;\n  }();\n\n  adexchangebuyer2_v2beta1.Resource$Bidders$Filtersets$Filteredbids = Resource$Bidders$Filtersets$Filteredbids;\n\n  var Resource$Bidders$Filtersets$Filteredbids$Creatives = /*#__PURE__*/function () {\n    function Resource$Bidders$Filtersets$Filteredbids$Creatives(context) {\n      _classCallCheck(this, Resource$Bidders$Filtersets$Filteredbids$Creatives);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Bidders$Filtersets$Filteredbids$Creatives, [{\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v2beta1/{+filterSetName}/filteredBids/{creativeStatusId}/creatives').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['filterSetName', 'creativeStatusId'],\n          pathParams: ['creativeStatusId', 'filterSetName'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Bidders$Filtersets$Filteredbids$Creatives;\n  }();\n\n  adexchangebuyer2_v2beta1.Resource$Bidders$Filtersets$Filteredbids$Creatives = Resource$Bidders$Filtersets$Filteredbids$Creatives;\n\n  var Resource$Bidders$Filtersets$Filteredbids$Details = /*#__PURE__*/function () {\n    function Resource$Bidders$Filtersets$Filteredbids$Details(context) {\n      _classCallCheck(this, Resource$Bidders$Filtersets$Filteredbids$Details);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Bidders$Filtersets$Filteredbids$Details, [{\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v2beta1/{+filterSetName}/filteredBids/{creativeStatusId}/details').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['filterSetName', 'creativeStatusId'],\n          pathParams: ['creativeStatusId', 'filterSetName'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Bidders$Filtersets$Filteredbids$Details;\n  }();\n\n  adexchangebuyer2_v2beta1.Resource$Bidders$Filtersets$Filteredbids$Details = Resource$Bidders$Filtersets$Filteredbids$Details;\n\n  var Resource$Bidders$Filtersets$Impressionmetrics = /*#__PURE__*/function () {\n    function Resource$Bidders$Filtersets$Impressionmetrics(context) {\n      _classCallCheck(this, Resource$Bidders$Filtersets$Impressionmetrics);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Bidders$Filtersets$Impressionmetrics, [{\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v2beta1/{+filterSetName}/impressionMetrics').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['filterSetName'],\n          pathParams: ['filterSetName'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Bidders$Filtersets$Impressionmetrics;\n  }();\n\n  adexchangebuyer2_v2beta1.Resource$Bidders$Filtersets$Impressionmetrics = Resource$Bidders$Filtersets$Impressionmetrics;\n\n  var Resource$Bidders$Filtersets$Losingbids = /*#__PURE__*/function () {\n    function Resource$Bidders$Filtersets$Losingbids(context) {\n      _classCallCheck(this, Resource$Bidders$Filtersets$Losingbids);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Bidders$Filtersets$Losingbids, [{\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v2beta1/{+filterSetName}/losingBids').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['filterSetName'],\n          pathParams: ['filterSetName'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Bidders$Filtersets$Losingbids;\n  }();\n\n  adexchangebuyer2_v2beta1.Resource$Bidders$Filtersets$Losingbids = Resource$Bidders$Filtersets$Losingbids;\n\n  var Resource$Bidders$Filtersets$Nonbillablewinningbids = /*#__PURE__*/function () {\n    function Resource$Bidders$Filtersets$Nonbillablewinningbids(context) {\n      _classCallCheck(this, Resource$Bidders$Filtersets$Nonbillablewinningbids);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Bidders$Filtersets$Nonbillablewinningbids, [{\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v2beta1/{+filterSetName}/nonBillableWinningBids').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['filterSetName'],\n          pathParams: ['filterSetName'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Bidders$Filtersets$Nonbillablewinningbids;\n  }();\n\n  adexchangebuyer2_v2beta1.Resource$Bidders$Filtersets$Nonbillablewinningbids = Resource$Bidders$Filtersets$Nonbillablewinningbids;\n})(adexchangebuyer2_v2beta1 = exports.adexchangebuyer2_v2beta1 || (exports.adexchangebuyer2_v2beta1 = {}));","map":{"version":3,"sources":["/Users/amandapoetker-alles/Desktop/campaign-dashboard/node_modules/googleapis/build/src/apis/adexchangebuyer2/v2beta1.js"],"names":["Object","defineProperty","exports","value","googleapis_common_1","require","adexchangebuyer2_v2beta1","Adexchangebuyer2","options","google","context","_options","accounts","Resource$Accounts","bidders","Resource$Bidders","clients","Resource$Accounts$Clients","creatives","Resource$Accounts$Creatives","finalizedProposals","Resource$Accounts$Finalizedproposals","products","Resource$Accounts$Products","proposals","Resource$Accounts$Proposals","publisherProfiles","Resource$Accounts$Publisherprofiles","invitations","Resource$Accounts$Clients$Invitations","users","Resource$Accounts$Clients$Users","paramsOrCallback","optionsOrCallback","callback","params","rootUrl","parameters","assign","url","replace","method","requiredParams","pathParams","createAPIRequest","dealAssociations","Resource$Accounts$Creatives$Dealassociations","Resource$Bidders$Accounts","filterSets","Resource$Bidders$Filtersets","Resource$Bidders$Accounts$Creatives","Resource$Bidders$Accounts$Filtersets","bidMetrics","Resource$Bidders$Accounts$Filtersets$Bidmetrics","bidResponseErrors","Resource$Bidders$Accounts$Filtersets$Bidresponseerrors","bidResponsesWithoutBids","Resource$Bidders$Accounts$Filtersets$Bidresponseswithoutbids","filteredBidRequests","Resource$Bidders$Accounts$Filtersets$Filteredbidrequests","filteredBids","Resource$Bidders$Accounts$Filtersets$Filteredbids","impressionMetrics","Resource$Bidders$Accounts$Filtersets$Impressionmetrics","losingBids","Resource$Bidders$Accounts$Filtersets$Losingbids","nonBillableWinningBids","Resource$Bidders$Accounts$Filtersets$Nonbillablewinningbids","Resource$Bidders$Accounts$Filtersets$Filteredbids$Creatives","details","Resource$Bidders$Accounts$Filtersets$Filteredbids$Details","Resource$Bidders$Filtersets$Bidmetrics","Resource$Bidders$Filtersets$Bidresponseerrors","Resource$Bidders$Filtersets$Bidresponseswithoutbids","Resource$Bidders$Filtersets$Filteredbidrequests","Resource$Bidders$Filtersets$Filteredbids","Resource$Bidders$Filtersets$Impressionmetrics","Resource$Bidders$Filtersets$Losingbids","Resource$Bidders$Filtersets$Nonbillablewinningbids","Resource$Bidders$Filtersets$Filteredbids$Creatives","Resource$Bidders$Filtersets$Filteredbids$Details"],"mappings":"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","sourcesContent":["\"use strict\";\n/**\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst googleapis_common_1 = require(\"googleapis-common\");\n// tslint:disable: no-any\n// tslint:disable: class-name\n// tslint:disable: variable-name\n// tslint:disable: jsdoc-format\n// tslint:disable: no-namespace\nvar adexchangebuyer2_v2beta1;\n(function (adexchangebuyer2_v2beta1) {\n    /**\n     * Ad Exchange Buyer API II\n     *\n     * Accesses the latest features for managing Authorized Buyers accounts,\n     * Real-Time Bidding configurations and auction metrics, and Marketplace\n     * programmatic deals.\n     *\n     * @example\n     * const {google} = require('googleapis');\n     * const adexchangebuyer2 = google.adexchangebuyer2('v2beta1');\n     *\n     * @namespace adexchangebuyer2\n     * @type {Function}\n     * @version v2beta1\n     * @variation v2beta1\n     * @param {object=} options Options for Adexchangebuyer2\n     */\n    class Adexchangebuyer2 {\n        constructor(options, google) {\n            this.context = { _options: options || {}, google };\n            this.accounts = new Resource$Accounts(this.context);\n            this.bidders = new Resource$Bidders(this.context);\n        }\n    }\n    adexchangebuyer2_v2beta1.Adexchangebuyer2 = Adexchangebuyer2;\n    class Resource$Accounts {\n        constructor(context) {\n            this.context = context;\n            this.clients = new Resource$Accounts$Clients(this.context);\n            this.creatives = new Resource$Accounts$Creatives(this.context);\n            this.finalizedProposals =\n                new Resource$Accounts$Finalizedproposals(this.context);\n            this.products = new Resource$Accounts$Products(this.context);\n            this.proposals = new Resource$Accounts$Proposals(this.context);\n            this.publisherProfiles =\n                new Resource$Accounts$Publisherprofiles(this.context);\n        }\n    }\n    adexchangebuyer2_v2beta1.Resource$Accounts = Resource$Accounts;\n    class Resource$Accounts$Clients {\n        constructor(context) {\n            this.context = context;\n            this.invitations =\n                new Resource$Accounts$Clients$Invitations(this.context);\n            this.users = new Resource$Accounts$Clients$Users(this.context);\n        }\n        create(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2beta1/accounts/{accountId}/clients')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST'\n                }, options),\n                params,\n                requiredParams: ['accountId'],\n                pathParams: ['accountId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/v2beta1/accounts/{accountId}/clients/{clientAccountId}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['accountId', 'clientAccountId'],\n                pathParams: ['accountId', 'clientAccountId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2beta1/accounts/{accountId}/clients')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['accountId'],\n                pathParams: ['accountId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        update(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/v2beta1/accounts/{accountId}/clients/{clientAccountId}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PUT'\n                }, options),\n                params,\n                requiredParams: ['accountId', 'clientAccountId'],\n                pathParams: ['accountId', 'clientAccountId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    adexchangebuyer2_v2beta1.Resource$Accounts$Clients = Resource$Accounts$Clients;\n    class Resource$Accounts$Clients$Invitations {\n        constructor(context) {\n            this.context = context;\n        }\n        create(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/v2beta1/accounts/{accountId}/clients/{clientAccountId}/invitations')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST'\n                }, options),\n                params,\n                requiredParams: ['accountId', 'clientAccountId'],\n                pathParams: ['accountId', 'clientAccountId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/v2beta1/accounts/{accountId}/clients/{clientAccountId}/invitations/{invitationId}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['accountId', 'clientAccountId', 'invitationId'],\n                pathParams: ['accountId', 'clientAccountId', 'invitationId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/v2beta1/accounts/{accountId}/clients/{clientAccountId}/invitations')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['accountId', 'clientAccountId'],\n                pathParams: ['accountId', 'clientAccountId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    adexchangebuyer2_v2beta1.Resource$Accounts$Clients$Invitations = Resource$Accounts$Clients$Invitations;\n    class Resource$Accounts$Clients$Users {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/v2beta1/accounts/{accountId}/clients/{clientAccountId}/users/{userId}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['accountId', 'clientAccountId', 'userId'],\n                pathParams: ['accountId', 'clientAccountId', 'userId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/v2beta1/accounts/{accountId}/clients/{clientAccountId}/users')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['accountId', 'clientAccountId'],\n                pathParams: ['accountId', 'clientAccountId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        update(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/v2beta1/accounts/{accountId}/clients/{clientAccountId}/users/{userId}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PUT'\n                }, options),\n                params,\n                requiredParams: ['accountId', 'clientAccountId', 'userId'],\n                pathParams: ['accountId', 'clientAccountId', 'userId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    adexchangebuyer2_v2beta1.Resource$Accounts$Clients$Users = Resource$Accounts$Clients$Users;\n    class Resource$Accounts$Creatives {\n        constructor(context) {\n            this.context = context;\n            this.dealAssociations =\n                new Resource$Accounts$Creatives$Dealassociations(this.context);\n        }\n        create(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2beta1/accounts/{accountId}/creatives')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST'\n                }, options),\n                params,\n                requiredParams: ['accountId'],\n                pathParams: ['accountId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/v2beta1/accounts/{accountId}/creatives/{creativeId}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['accountId', 'creativeId'],\n                pathParams: ['accountId', 'creativeId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2beta1/accounts/{accountId}/creatives')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['accountId'],\n                pathParams: ['accountId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        stopWatching(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/v2beta1/accounts/{accountId}/creatives/{creativeId}:stopWatching')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST'\n                }, options),\n                params,\n                requiredParams: ['accountId', 'creativeId'],\n                pathParams: ['accountId', 'creativeId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        update(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/v2beta1/accounts/{accountId}/creatives/{creativeId}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PUT'\n                }, options),\n                params,\n                requiredParams: ['accountId', 'creativeId'],\n                pathParams: ['accountId', 'creativeId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        watch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/v2beta1/accounts/{accountId}/creatives/{creativeId}:watch')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST'\n                }, options),\n                params,\n                requiredParams: ['accountId', 'creativeId'],\n                pathParams: ['accountId', 'creativeId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    adexchangebuyer2_v2beta1.Resource$Accounts$Creatives = Resource$Accounts$Creatives;\n    class Resource$Accounts$Creatives$Dealassociations {\n        constructor(context) {\n            this.context = context;\n        }\n        add(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/v2beta1/accounts/{accountId}/creatives/{creativeId}/dealAssociations:add')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST'\n                }, options),\n                params,\n                requiredParams: ['accountId', 'creativeId'],\n                pathParams: ['accountId', 'creativeId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/v2beta1/accounts/{accountId}/creatives/{creativeId}/dealAssociations')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['accountId', 'creativeId'],\n                pathParams: ['accountId', 'creativeId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        remove(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/v2beta1/accounts/{accountId}/creatives/{creativeId}/dealAssociations:remove')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST'\n                }, options),\n                params,\n                requiredParams: ['accountId', 'creativeId'],\n                pathParams: ['accountId', 'creativeId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    adexchangebuyer2_v2beta1.Resource$Accounts$Creatives$Dealassociations = Resource$Accounts$Creatives$Dealassociations;\n    class Resource$Accounts$Finalizedproposals {\n        constructor(context) {\n            this.context = context;\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2beta1/accounts/{accountId}/finalizedProposals')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['accountId'],\n                pathParams: ['accountId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    adexchangebuyer2_v2beta1.Resource$Accounts$Finalizedproposals = Resource$Accounts$Finalizedproposals;\n    class Resource$Accounts$Products {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/v2beta1/accounts/{accountId}/products/{productId}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['accountId', 'productId'],\n                pathParams: ['accountId', 'productId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2beta1/accounts/{accountId}/products')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['accountId'],\n                pathParams: ['accountId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    adexchangebuyer2_v2beta1.Resource$Accounts$Products = Resource$Accounts$Products;\n    class Resource$Accounts$Proposals {\n        constructor(context) {\n            this.context = context;\n        }\n        accept(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/v2beta1/accounts/{accountId}/proposals/{proposalId}:accept')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST'\n                }, options),\n                params,\n                requiredParams: ['accountId', 'proposalId'],\n                pathParams: ['accountId', 'proposalId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        addNote(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/v2beta1/accounts/{accountId}/proposals/{proposalId}:addNote')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST'\n                }, options),\n                params,\n                requiredParams: ['accountId', 'proposalId'],\n                pathParams: ['accountId', 'proposalId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        cancelNegotiation(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/v2beta1/accounts/{accountId}/proposals/{proposalId}:cancelNegotiation')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST'\n                }, options),\n                params,\n                requiredParams: ['accountId', 'proposalId'],\n                pathParams: ['accountId', 'proposalId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        completeSetup(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/v2beta1/accounts/{accountId}/proposals/{proposalId}:completeSetup')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST'\n                }, options),\n                params,\n                requiredParams: ['accountId', 'proposalId'],\n                pathParams: ['accountId', 'proposalId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        create(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2beta1/accounts/{accountId}/proposals')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST'\n                }, options),\n                params,\n                requiredParams: ['accountId'],\n                pathParams: ['accountId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/v2beta1/accounts/{accountId}/proposals/{proposalId}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['accountId', 'proposalId'],\n                pathParams: ['accountId', 'proposalId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2beta1/accounts/{accountId}/proposals')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['accountId'],\n                pathParams: ['accountId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        pause(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/v2beta1/accounts/{accountId}/proposals/{proposalId}:pause')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST'\n                }, options),\n                params,\n                requiredParams: ['accountId', 'proposalId'],\n                pathParams: ['accountId', 'proposalId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        resume(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/v2beta1/accounts/{accountId}/proposals/{proposalId}:resume')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST'\n                }, options),\n                params,\n                requiredParams: ['accountId', 'proposalId'],\n                pathParams: ['accountId', 'proposalId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        update(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/v2beta1/accounts/{accountId}/proposals/{proposalId}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PUT'\n                }, options),\n                params,\n                requiredParams: ['accountId', 'proposalId'],\n                pathParams: ['accountId', 'proposalId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    adexchangebuyer2_v2beta1.Resource$Accounts$Proposals = Resource$Accounts$Proposals;\n    class Resource$Accounts$Publisherprofiles {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/v2beta1/accounts/{accountId}/publisherProfiles/{publisherProfileId}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['accountId', 'publisherProfileId'],\n                pathParams: ['accountId', 'publisherProfileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2beta1/accounts/{accountId}/publisherProfiles')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['accountId'],\n                pathParams: ['accountId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    adexchangebuyer2_v2beta1.Resource$Accounts$Publisherprofiles = Resource$Accounts$Publisherprofiles;\n    class Resource$Bidders {\n        constructor(context) {\n            this.context = context;\n            this.accounts = new Resource$Bidders$Accounts(this.context);\n            this.filterSets = new Resource$Bidders$Filtersets(this.context);\n        }\n    }\n    adexchangebuyer2_v2beta1.Resource$Bidders = Resource$Bidders;\n    class Resource$Bidders$Accounts {\n        constructor(context) {\n            this.context = context;\n            this.creatives = new Resource$Bidders$Accounts$Creatives(this.context);\n            this.filterSets = new Resource$Bidders$Accounts$Filtersets(this.context);\n        }\n    }\n    adexchangebuyer2_v2beta1.Resource$Bidders$Accounts = Resource$Bidders$Accounts;\n    class Resource$Bidders$Accounts$Creatives {\n        constructor(context) {\n            this.context = context;\n        }\n        delete(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2beta1/{+ownerName}/creatives/{creativeId}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'DELETE'\n                }, options),\n                params,\n                requiredParams: ['ownerName', 'creativeId'],\n                pathParams: ['creativeId', 'ownerName'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    adexchangebuyer2_v2beta1.Resource$Bidders$Accounts$Creatives = Resource$Bidders$Accounts$Creatives;\n    class Resource$Bidders$Accounts$Filtersets {\n        constructor(context) {\n            this.context = context;\n            this.bidMetrics =\n                new Resource$Bidders$Accounts$Filtersets$Bidmetrics(this.context);\n            this.bidResponseErrors =\n                new Resource$Bidders$Accounts$Filtersets$Bidresponseerrors(this.context);\n            this.bidResponsesWithoutBids =\n                new Resource$Bidders$Accounts$Filtersets$Bidresponseswithoutbids(this.context);\n            this.filteredBidRequests =\n                new Resource$Bidders$Accounts$Filtersets$Filteredbidrequests(this.context);\n            this.filteredBids =\n                new Resource$Bidders$Accounts$Filtersets$Filteredbids(this.context);\n            this.impressionMetrics =\n                new Resource$Bidders$Accounts$Filtersets$Impressionmetrics(this.context);\n            this.losingBids =\n                new Resource$Bidders$Accounts$Filtersets$Losingbids(this.context);\n            this.nonBillableWinningBids =\n                new Resource$Bidders$Accounts$Filtersets$Nonbillablewinningbids(this.context);\n        }\n        create(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2beta1/{+ownerName}/filterSets')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST'\n                }, options),\n                params,\n                requiredParams: ['ownerName'],\n                pathParams: ['ownerName'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        delete(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2beta1/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'DELETE'\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2beta1/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2beta1/{+ownerName}/filterSets')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['ownerName'],\n                pathParams: ['ownerName'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    adexchangebuyer2_v2beta1.Resource$Bidders$Accounts$Filtersets = Resource$Bidders$Accounts$Filtersets;\n    class Resource$Bidders$Accounts$Filtersets$Bidmetrics {\n        constructor(context) {\n            this.context = context;\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2beta1/{+filterSetName}/bidMetrics')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['filterSetName'],\n                pathParams: ['filterSetName'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    adexchangebuyer2_v2beta1.Resource$Bidders$Accounts$Filtersets$Bidmetrics = Resource$Bidders$Accounts$Filtersets$Bidmetrics;\n    class Resource$Bidders$Accounts$Filtersets$Bidresponseerrors {\n        constructor(context) {\n            this.context = context;\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2beta1/{+filterSetName}/bidResponseErrors')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['filterSetName'],\n                pathParams: ['filterSetName'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    adexchangebuyer2_v2beta1.Resource$Bidders$Accounts$Filtersets$Bidresponseerrors = Resource$Bidders$Accounts$Filtersets$Bidresponseerrors;\n    class Resource$Bidders$Accounts$Filtersets$Bidresponseswithoutbids {\n        constructor(context) {\n            this.context = context;\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/v2beta1/{+filterSetName}/bidResponsesWithoutBids')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['filterSetName'],\n                pathParams: ['filterSetName'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    adexchangebuyer2_v2beta1.Resource$Bidders$Accounts$Filtersets$Bidresponseswithoutbids = Resource$Bidders$Accounts$Filtersets$Bidresponseswithoutbids;\n    class Resource$Bidders$Accounts$Filtersets$Filteredbidrequests {\n        constructor(context) {\n            this.context = context;\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2beta1/{+filterSetName}/filteredBidRequests')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['filterSetName'],\n                pathParams: ['filterSetName'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    adexchangebuyer2_v2beta1.Resource$Bidders$Accounts$Filtersets$Filteredbidrequests = Resource$Bidders$Accounts$Filtersets$Filteredbidrequests;\n    class Resource$Bidders$Accounts$Filtersets$Filteredbids {\n        constructor(context) {\n            this.context = context;\n            this.creatives =\n                new Resource$Bidders$Accounts$Filtersets$Filteredbids$Creatives(this.context);\n            this.details =\n                new Resource$Bidders$Accounts$Filtersets$Filteredbids$Details(this.context);\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2beta1/{+filterSetName}/filteredBids')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['filterSetName'],\n                pathParams: ['filterSetName'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    adexchangebuyer2_v2beta1.Resource$Bidders$Accounts$Filtersets$Filteredbids = Resource$Bidders$Accounts$Filtersets$Filteredbids;\n    class Resource$Bidders$Accounts$Filtersets$Filteredbids$Creatives {\n        constructor(context) {\n            this.context = context;\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/v2beta1/{+filterSetName}/filteredBids/{creativeStatusId}/creatives')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['filterSetName', 'creativeStatusId'],\n                pathParams: ['creativeStatusId', 'filterSetName'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    adexchangebuyer2_v2beta1.Resource$Bidders$Accounts$Filtersets$Filteredbids$Creatives = Resource$Bidders$Accounts$Filtersets$Filteredbids$Creatives;\n    class Resource$Bidders$Accounts$Filtersets$Filteredbids$Details {\n        constructor(context) {\n            this.context = context;\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/v2beta1/{+filterSetName}/filteredBids/{creativeStatusId}/details')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['filterSetName', 'creativeStatusId'],\n                pathParams: ['creativeStatusId', 'filterSetName'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    adexchangebuyer2_v2beta1.Resource$Bidders$Accounts$Filtersets$Filteredbids$Details = Resource$Bidders$Accounts$Filtersets$Filteredbids$Details;\n    class Resource$Bidders$Accounts$Filtersets$Impressionmetrics {\n        constructor(context) {\n            this.context = context;\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2beta1/{+filterSetName}/impressionMetrics')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['filterSetName'],\n                pathParams: ['filterSetName'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    adexchangebuyer2_v2beta1.Resource$Bidders$Accounts$Filtersets$Impressionmetrics = Resource$Bidders$Accounts$Filtersets$Impressionmetrics;\n    class Resource$Bidders$Accounts$Filtersets$Losingbids {\n        constructor(context) {\n            this.context = context;\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2beta1/{+filterSetName}/losingBids')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['filterSetName'],\n                pathParams: ['filterSetName'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    adexchangebuyer2_v2beta1.Resource$Bidders$Accounts$Filtersets$Losingbids = Resource$Bidders$Accounts$Filtersets$Losingbids;\n    class Resource$Bidders$Accounts$Filtersets$Nonbillablewinningbids {\n        constructor(context) {\n            this.context = context;\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2beta1/{+filterSetName}/nonBillableWinningBids')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['filterSetName'],\n                pathParams: ['filterSetName'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    adexchangebuyer2_v2beta1.Resource$Bidders$Accounts$Filtersets$Nonbillablewinningbids = Resource$Bidders$Accounts$Filtersets$Nonbillablewinningbids;\n    class Resource$Bidders$Filtersets {\n        constructor(context) {\n            this.context = context;\n            this.bidMetrics =\n                new Resource$Bidders$Filtersets$Bidmetrics(this.context);\n            this.bidResponseErrors =\n                new Resource$Bidders$Filtersets$Bidresponseerrors(this.context);\n            this.bidResponsesWithoutBids =\n                new Resource$Bidders$Filtersets$Bidresponseswithoutbids(this.context);\n            this.filteredBidRequests =\n                new Resource$Bidders$Filtersets$Filteredbidrequests(this.context);\n            this.filteredBids =\n                new Resource$Bidders$Filtersets$Filteredbids(this.context);\n            this.impressionMetrics =\n                new Resource$Bidders$Filtersets$Impressionmetrics(this.context);\n            this.losingBids =\n                new Resource$Bidders$Filtersets$Losingbids(this.context);\n            this.nonBillableWinningBids =\n                new Resource$Bidders$Filtersets$Nonbillablewinningbids(this.context);\n        }\n        create(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2beta1/{+ownerName}/filterSets')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST'\n                }, options),\n                params,\n                requiredParams: ['ownerName'],\n                pathParams: ['ownerName'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        delete(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2beta1/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'DELETE'\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2beta1/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2beta1/{+ownerName}/filterSets')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['ownerName'],\n                pathParams: ['ownerName'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    adexchangebuyer2_v2beta1.Resource$Bidders$Filtersets = Resource$Bidders$Filtersets;\n    class Resource$Bidders$Filtersets$Bidmetrics {\n        constructor(context) {\n            this.context = context;\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2beta1/{+filterSetName}/bidMetrics')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['filterSetName'],\n                pathParams: ['filterSetName'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    adexchangebuyer2_v2beta1.Resource$Bidders$Filtersets$Bidmetrics = Resource$Bidders$Filtersets$Bidmetrics;\n    class Resource$Bidders$Filtersets$Bidresponseerrors {\n        constructor(context) {\n            this.context = context;\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2beta1/{+filterSetName}/bidResponseErrors')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['filterSetName'],\n                pathParams: ['filterSetName'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    adexchangebuyer2_v2beta1.Resource$Bidders$Filtersets$Bidresponseerrors = Resource$Bidders$Filtersets$Bidresponseerrors;\n    class Resource$Bidders$Filtersets$Bidresponseswithoutbids {\n        constructor(context) {\n            this.context = context;\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/v2beta1/{+filterSetName}/bidResponsesWithoutBids')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['filterSetName'],\n                pathParams: ['filterSetName'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    adexchangebuyer2_v2beta1.Resource$Bidders$Filtersets$Bidresponseswithoutbids = Resource$Bidders$Filtersets$Bidresponseswithoutbids;\n    class Resource$Bidders$Filtersets$Filteredbidrequests {\n        constructor(context) {\n            this.context = context;\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2beta1/{+filterSetName}/filteredBidRequests')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['filterSetName'],\n                pathParams: ['filterSetName'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    adexchangebuyer2_v2beta1.Resource$Bidders$Filtersets$Filteredbidrequests = Resource$Bidders$Filtersets$Filteredbidrequests;\n    class Resource$Bidders$Filtersets$Filteredbids {\n        constructor(context) {\n            this.context = context;\n            this.creatives =\n                new Resource$Bidders$Filtersets$Filteredbids$Creatives(this.context);\n            this.details =\n                new Resource$Bidders$Filtersets$Filteredbids$Details(this.context);\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2beta1/{+filterSetName}/filteredBids')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['filterSetName'],\n                pathParams: ['filterSetName'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    adexchangebuyer2_v2beta1.Resource$Bidders$Filtersets$Filteredbids = Resource$Bidders$Filtersets$Filteredbids;\n    class Resource$Bidders$Filtersets$Filteredbids$Creatives {\n        constructor(context) {\n            this.context = context;\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/v2beta1/{+filterSetName}/filteredBids/{creativeStatusId}/creatives')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['filterSetName', 'creativeStatusId'],\n                pathParams: ['creativeStatusId', 'filterSetName'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    adexchangebuyer2_v2beta1.Resource$Bidders$Filtersets$Filteredbids$Creatives = Resource$Bidders$Filtersets$Filteredbids$Creatives;\n    class Resource$Bidders$Filtersets$Filteredbids$Details {\n        constructor(context) {\n            this.context = context;\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/v2beta1/{+filterSetName}/filteredBids/{creativeStatusId}/details')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['filterSetName', 'creativeStatusId'],\n                pathParams: ['creativeStatusId', 'filterSetName'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    adexchangebuyer2_v2beta1.Resource$Bidders$Filtersets$Filteredbids$Details = Resource$Bidders$Filtersets$Filteredbids$Details;\n    class Resource$Bidders$Filtersets$Impressionmetrics {\n        constructor(context) {\n            this.context = context;\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2beta1/{+filterSetName}/impressionMetrics')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['filterSetName'],\n                pathParams: ['filterSetName'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    adexchangebuyer2_v2beta1.Resource$Bidders$Filtersets$Impressionmetrics = Resource$Bidders$Filtersets$Impressionmetrics;\n    class Resource$Bidders$Filtersets$Losingbids {\n        constructor(context) {\n            this.context = context;\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2beta1/{+filterSetName}/losingBids')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['filterSetName'],\n                pathParams: ['filterSetName'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    adexchangebuyer2_v2beta1.Resource$Bidders$Filtersets$Losingbids = Resource$Bidders$Filtersets$Losingbids;\n    class Resource$Bidders$Filtersets$Nonbillablewinningbids {\n        constructor(context) {\n            this.context = context;\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2beta1/{+filterSetName}/nonBillableWinningBids')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['filterSetName'],\n                pathParams: ['filterSetName'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    adexchangebuyer2_v2beta1.Resource$Bidders$Filtersets$Nonbillablewinningbids = Resource$Bidders$Filtersets$Nonbillablewinningbids;\n})(adexchangebuyer2_v2beta1 = exports.adexchangebuyer2_v2beta1 || (exports.adexchangebuyer2_v2beta1 = {}));\n//# sourceMappingURL=v2beta1.js.map"]},"metadata":{},"sourceType":"script"}