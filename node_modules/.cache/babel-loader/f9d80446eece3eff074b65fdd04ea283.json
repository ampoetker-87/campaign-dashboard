{"ast":null,"code":"\"use strict\";\n/**\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar _createClass = require(\"/Users/amandapoetker-alles/Desktop/campaign-dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _classCallCheck = require(\"/Users/amandapoetker-alles/Desktop/campaign-dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar googleapis_common_1 = require(\"googleapis-common\"); // tslint:disable: no-any\n// tslint:disable: class-name\n// tslint:disable: variable-name\n// tslint:disable: jsdoc-format\n// tslint:disable: no-namespace\n\n\nvar analytics_v3;\n\n(function (analytics_v3) {\n  /**\n   * Google Analytics API\n   *\n   * Views and manages your Google Analytics data.\n   *\n   * @example\n   * const {google} = require('googleapis');\n   * const analytics = google.analytics('v3');\n   *\n   * @namespace analytics\n   * @type {Function}\n   * @version v3\n   * @variation v3\n   * @param {object=} options Options for Analytics\n   */\n  var Analytics = function Analytics(options, google) {\n    _classCallCheck(this, Analytics);\n\n    this.context = {\n      _options: options || {},\n      google\n    };\n    this.data = new Resource$Data(this.context);\n    this.management = new Resource$Management(this.context);\n    this.metadata = new Resource$Metadata(this.context);\n    this.provisioning = new Resource$Provisioning(this.context);\n    this.userDeletion = new Resource$Userdeletion(this.context);\n  };\n\n  analytics_v3.Analytics = Analytics;\n\n  var Resource$Data = function Resource$Data(context) {\n    _classCallCheck(this, Resource$Data);\n\n    this.context = context;\n    this.ga = new Resource$Data$Ga(this.context);\n    this.mcf = new Resource$Data$Mcf(this.context);\n    this.realtime = new Resource$Data$Realtime(this.context);\n  };\n\n  analytics_v3.Resource$Data = Resource$Data;\n\n  var Resource$Data$Ga = /*#__PURE__*/function () {\n    function Resource$Data$Ga(context) {\n      _classCallCheck(this, Resource$Data$Ga);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Data$Ga, [{\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/analytics/v3/data/ga').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['ids', 'start-date', 'end-date', 'metrics'],\n          pathParams: [],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Data$Ga;\n  }();\n\n  analytics_v3.Resource$Data$Ga = Resource$Data$Ga;\n\n  var Resource$Data$Mcf = /*#__PURE__*/function () {\n    function Resource$Data$Mcf(context) {\n      _classCallCheck(this, Resource$Data$Mcf);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Data$Mcf, [{\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/analytics/v3/data/mcf').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['ids', 'start-date', 'end-date', 'metrics'],\n          pathParams: [],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Data$Mcf;\n  }();\n\n  analytics_v3.Resource$Data$Mcf = Resource$Data$Mcf;\n\n  var Resource$Data$Realtime = /*#__PURE__*/function () {\n    function Resource$Data$Realtime(context) {\n      _classCallCheck(this, Resource$Data$Realtime);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Data$Realtime, [{\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/analytics/v3/data/realtime').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['ids', 'metrics'],\n          pathParams: [],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Data$Realtime;\n  }();\n\n  analytics_v3.Resource$Data$Realtime = Resource$Data$Realtime;\n\n  var Resource$Management = function Resource$Management(context) {\n    _classCallCheck(this, Resource$Management);\n\n    this.context = context;\n    this.accounts = new Resource$Management$Accounts(this.context);\n    this.accountSummaries = new Resource$Management$Accountsummaries(this.context);\n    this.accountUserLinks = new Resource$Management$Accountuserlinks(this.context);\n    this.clientId = new Resource$Management$Clientid(this.context);\n    this.customDataSources = new Resource$Management$Customdatasources(this.context);\n    this.customDimensions = new Resource$Management$Customdimensions(this.context);\n    this.customMetrics = new Resource$Management$Custommetrics(this.context);\n    this.experiments = new Resource$Management$Experiments(this.context);\n    this.filters = new Resource$Management$Filters(this.context);\n    this.goals = new Resource$Management$Goals(this.context);\n    this.profileFilterLinks = new Resource$Management$Profilefilterlinks(this.context);\n    this.profiles = new Resource$Management$Profiles(this.context);\n    this.profileUserLinks = new Resource$Management$Profileuserlinks(this.context);\n    this.remarketingAudience = new Resource$Management$Remarketingaudience(this.context);\n    this.segments = new Resource$Management$Segments(this.context);\n    this.unsampledReports = new Resource$Management$Unsampledreports(this.context);\n    this.uploads = new Resource$Management$Uploads(this.context);\n    this.webproperties = new Resource$Management$Webproperties(this.context);\n    this.webPropertyAdWordsLinks = new Resource$Management$Webpropertyadwordslinks(this.context);\n    this.webpropertyUserLinks = new Resource$Management$Webpropertyuserlinks(this.context);\n  };\n\n  analytics_v3.Resource$Management = Resource$Management;\n\n  var Resource$Management$Accounts = /*#__PURE__*/function () {\n    function Resource$Management$Accounts(context) {\n      _classCallCheck(this, Resource$Management$Accounts);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Management$Accounts, [{\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/analytics/v3/management/accounts').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: [],\n          pathParams: [],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Management$Accounts;\n  }();\n\n  analytics_v3.Resource$Management$Accounts = Resource$Management$Accounts;\n\n  var Resource$Management$Accountsummaries = /*#__PURE__*/function () {\n    function Resource$Management$Accountsummaries(context) {\n      _classCallCheck(this, Resource$Management$Accountsummaries);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Management$Accountsummaries, [{\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/analytics/v3/management/accountSummaries').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: [],\n          pathParams: [],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Management$Accountsummaries;\n  }();\n\n  analytics_v3.Resource$Management$Accountsummaries = Resource$Management$Accountsummaries;\n\n  var Resource$Management$Accountuserlinks = /*#__PURE__*/function () {\n    function Resource$Management$Accountuserlinks(context) {\n      _classCallCheck(this, Resource$Management$Accountuserlinks);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Management$Accountuserlinks, [{\n      key: \"delete\",\n      value: function _delete(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/analytics/v3/management/accounts/{accountId}/entityUserLinks/{linkId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'DELETE'\n          }, options),\n          params,\n          requiredParams: ['accountId', 'linkId'],\n          pathParams: ['accountId', 'linkId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"insert\",\n      value: function insert(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/analytics/v3/management/accounts/{accountId}/entityUserLinks').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['accountId'],\n          pathParams: ['accountId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/analytics/v3/management/accounts/{accountId}/entityUserLinks').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['accountId'],\n          pathParams: ['accountId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"update\",\n      value: function update(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/analytics/v3/management/accounts/{accountId}/entityUserLinks/{linkId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PUT'\n          }, options),\n          params,\n          requiredParams: ['accountId', 'linkId'],\n          pathParams: ['accountId', 'linkId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Management$Accountuserlinks;\n  }();\n\n  analytics_v3.Resource$Management$Accountuserlinks = Resource$Management$Accountuserlinks;\n\n  var Resource$Management$Clientid = /*#__PURE__*/function () {\n    function Resource$Management$Clientid(context) {\n      _classCallCheck(this, Resource$Management$Clientid);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Management$Clientid, [{\n      key: \"hashClientId\",\n      value: function hashClientId(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/analytics/v3/management/clientId:hashClientId').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: [],\n          pathParams: [],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Management$Clientid;\n  }();\n\n  analytics_v3.Resource$Management$Clientid = Resource$Management$Clientid;\n\n  var Resource$Management$Customdatasources = /*#__PURE__*/function () {\n    function Resource$Management$Customdatasources(context) {\n      _classCallCheck(this, Resource$Management$Customdatasources);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Management$Customdatasources, [{\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/analytics/v3/management/accounts/{accountId}/webproperties/{webPropertyId}/customDataSources').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['accountId', 'webPropertyId'],\n          pathParams: ['accountId', 'webPropertyId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Management$Customdatasources;\n  }();\n\n  analytics_v3.Resource$Management$Customdatasources = Resource$Management$Customdatasources;\n\n  var Resource$Management$Customdimensions = /*#__PURE__*/function () {\n    function Resource$Management$Customdimensions(context) {\n      _classCallCheck(this, Resource$Management$Customdimensions);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Management$Customdimensions, [{\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/analytics/v3/management/accounts/{accountId}/webproperties/{webPropertyId}/customDimensions/{customDimensionId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['accountId', 'webPropertyId', 'customDimensionId'],\n          pathParams: ['accountId', 'customDimensionId', 'webPropertyId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"insert\",\n      value: function insert(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/analytics/v3/management/accounts/{accountId}/webproperties/{webPropertyId}/customDimensions').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['accountId', 'webPropertyId'],\n          pathParams: ['accountId', 'webPropertyId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/analytics/v3/management/accounts/{accountId}/webproperties/{webPropertyId}/customDimensions').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['accountId', 'webPropertyId'],\n          pathParams: ['accountId', 'webPropertyId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"patch\",\n      value: function patch(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/analytics/v3/management/accounts/{accountId}/webproperties/{webPropertyId}/customDimensions/{customDimensionId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PATCH'\n          }, options),\n          params,\n          requiredParams: ['accountId', 'webPropertyId', 'customDimensionId'],\n          pathParams: ['accountId', 'customDimensionId', 'webPropertyId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"update\",\n      value: function update(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/analytics/v3/management/accounts/{accountId}/webproperties/{webPropertyId}/customDimensions/{customDimensionId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PUT'\n          }, options),\n          params,\n          requiredParams: ['accountId', 'webPropertyId', 'customDimensionId'],\n          pathParams: ['accountId', 'customDimensionId', 'webPropertyId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Management$Customdimensions;\n  }();\n\n  analytics_v3.Resource$Management$Customdimensions = Resource$Management$Customdimensions;\n\n  var Resource$Management$Custommetrics = /*#__PURE__*/function () {\n    function Resource$Management$Custommetrics(context) {\n      _classCallCheck(this, Resource$Management$Custommetrics);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Management$Custommetrics, [{\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/analytics/v3/management/accounts/{accountId}/webproperties/{webPropertyId}/customMetrics/{customMetricId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['accountId', 'webPropertyId', 'customMetricId'],\n          pathParams: ['accountId', 'customMetricId', 'webPropertyId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"insert\",\n      value: function insert(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/analytics/v3/management/accounts/{accountId}/webproperties/{webPropertyId}/customMetrics').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['accountId', 'webPropertyId'],\n          pathParams: ['accountId', 'webPropertyId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/analytics/v3/management/accounts/{accountId}/webproperties/{webPropertyId}/customMetrics').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['accountId', 'webPropertyId'],\n          pathParams: ['accountId', 'webPropertyId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"patch\",\n      value: function patch(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/analytics/v3/management/accounts/{accountId}/webproperties/{webPropertyId}/customMetrics/{customMetricId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PATCH'\n          }, options),\n          params,\n          requiredParams: ['accountId', 'webPropertyId', 'customMetricId'],\n          pathParams: ['accountId', 'customMetricId', 'webPropertyId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"update\",\n      value: function update(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/analytics/v3/management/accounts/{accountId}/webproperties/{webPropertyId}/customMetrics/{customMetricId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PUT'\n          }, options),\n          params,\n          requiredParams: ['accountId', 'webPropertyId', 'customMetricId'],\n          pathParams: ['accountId', 'customMetricId', 'webPropertyId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Management$Custommetrics;\n  }();\n\n  analytics_v3.Resource$Management$Custommetrics = Resource$Management$Custommetrics;\n\n  var Resource$Management$Experiments = /*#__PURE__*/function () {\n    function Resource$Management$Experiments(context) {\n      _classCallCheck(this, Resource$Management$Experiments);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Management$Experiments, [{\n      key: \"delete\",\n      value: function _delete(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/analytics/v3/management/accounts/{accountId}/webproperties/{webPropertyId}/profiles/{profileId}/experiments/{experimentId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'DELETE'\n          }, options),\n          params,\n          requiredParams: ['accountId', 'webPropertyId', 'profileId', 'experimentId'],\n          pathParams: ['accountId', 'experimentId', 'profileId', 'webPropertyId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/analytics/v3/management/accounts/{accountId}/webproperties/{webPropertyId}/profiles/{profileId}/experiments/{experimentId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['accountId', 'webPropertyId', 'profileId', 'experimentId'],\n          pathParams: ['accountId', 'experimentId', 'profileId', 'webPropertyId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"insert\",\n      value: function insert(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/analytics/v3/management/accounts/{accountId}/webproperties/{webPropertyId}/profiles/{profileId}/experiments').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['accountId', 'webPropertyId', 'profileId'],\n          pathParams: ['accountId', 'profileId', 'webPropertyId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/analytics/v3/management/accounts/{accountId}/webproperties/{webPropertyId}/profiles/{profileId}/experiments').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['accountId', 'webPropertyId', 'profileId'],\n          pathParams: ['accountId', 'profileId', 'webPropertyId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"patch\",\n      value: function patch(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/analytics/v3/management/accounts/{accountId}/webproperties/{webPropertyId}/profiles/{profileId}/experiments/{experimentId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PATCH'\n          }, options),\n          params,\n          requiredParams: ['accountId', 'webPropertyId', 'profileId', 'experimentId'],\n          pathParams: ['accountId', 'experimentId', 'profileId', 'webPropertyId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"update\",\n      value: function update(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/analytics/v3/management/accounts/{accountId}/webproperties/{webPropertyId}/profiles/{profileId}/experiments/{experimentId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PUT'\n          }, options),\n          params,\n          requiredParams: ['accountId', 'webPropertyId', 'profileId', 'experimentId'],\n          pathParams: ['accountId', 'experimentId', 'profileId', 'webPropertyId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Management$Experiments;\n  }();\n\n  analytics_v3.Resource$Management$Experiments = Resource$Management$Experiments;\n\n  var Resource$Management$Filters = /*#__PURE__*/function () {\n    function Resource$Management$Filters(context) {\n      _classCallCheck(this, Resource$Management$Filters);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Management$Filters, [{\n      key: \"delete\",\n      value: function _delete(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/analytics/v3/management/accounts/{accountId}/filters/{filterId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'DELETE'\n          }, options),\n          params,\n          requiredParams: ['accountId', 'filterId'],\n          pathParams: ['accountId', 'filterId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/analytics/v3/management/accounts/{accountId}/filters/{filterId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['accountId', 'filterId'],\n          pathParams: ['accountId', 'filterId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"insert\",\n      value: function insert(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/analytics/v3/management/accounts/{accountId}/filters').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['accountId'],\n          pathParams: ['accountId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/analytics/v3/management/accounts/{accountId}/filters').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['accountId'],\n          pathParams: ['accountId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"patch\",\n      value: function patch(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/analytics/v3/management/accounts/{accountId}/filters/{filterId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PATCH'\n          }, options),\n          params,\n          requiredParams: ['accountId', 'filterId'],\n          pathParams: ['accountId', 'filterId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"update\",\n      value: function update(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/analytics/v3/management/accounts/{accountId}/filters/{filterId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PUT'\n          }, options),\n          params,\n          requiredParams: ['accountId', 'filterId'],\n          pathParams: ['accountId', 'filterId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Management$Filters;\n  }();\n\n  analytics_v3.Resource$Management$Filters = Resource$Management$Filters;\n\n  var Resource$Management$Goals = /*#__PURE__*/function () {\n    function Resource$Management$Goals(context) {\n      _classCallCheck(this, Resource$Management$Goals);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Management$Goals, [{\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/analytics/v3/management/accounts/{accountId}/webproperties/{webPropertyId}/profiles/{profileId}/goals/{goalId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['accountId', 'webPropertyId', 'profileId', 'goalId'],\n          pathParams: ['accountId', 'goalId', 'profileId', 'webPropertyId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"insert\",\n      value: function insert(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/analytics/v3/management/accounts/{accountId}/webproperties/{webPropertyId}/profiles/{profileId}/goals').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['accountId', 'webPropertyId', 'profileId'],\n          pathParams: ['accountId', 'profileId', 'webPropertyId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/analytics/v3/management/accounts/{accountId}/webproperties/{webPropertyId}/profiles/{profileId}/goals').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['accountId', 'webPropertyId', 'profileId'],\n          pathParams: ['accountId', 'profileId', 'webPropertyId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"patch\",\n      value: function patch(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/analytics/v3/management/accounts/{accountId}/webproperties/{webPropertyId}/profiles/{profileId}/goals/{goalId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PATCH'\n          }, options),\n          params,\n          requiredParams: ['accountId', 'webPropertyId', 'profileId', 'goalId'],\n          pathParams: ['accountId', 'goalId', 'profileId', 'webPropertyId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"update\",\n      value: function update(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/analytics/v3/management/accounts/{accountId}/webproperties/{webPropertyId}/profiles/{profileId}/goals/{goalId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PUT'\n          }, options),\n          params,\n          requiredParams: ['accountId', 'webPropertyId', 'profileId', 'goalId'],\n          pathParams: ['accountId', 'goalId', 'profileId', 'webPropertyId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Management$Goals;\n  }();\n\n  analytics_v3.Resource$Management$Goals = Resource$Management$Goals;\n\n  var Resource$Management$Profilefilterlinks = /*#__PURE__*/function () {\n    function Resource$Management$Profilefilterlinks(context) {\n      _classCallCheck(this, Resource$Management$Profilefilterlinks);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Management$Profilefilterlinks, [{\n      key: \"delete\",\n      value: function _delete(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/analytics/v3/management/accounts/{accountId}/webproperties/{webPropertyId}/profiles/{profileId}/profileFilterLinks/{linkId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'DELETE'\n          }, options),\n          params,\n          requiredParams: ['accountId', 'webPropertyId', 'profileId', 'linkId'],\n          pathParams: ['accountId', 'linkId', 'profileId', 'webPropertyId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/analytics/v3/management/accounts/{accountId}/webproperties/{webPropertyId}/profiles/{profileId}/profileFilterLinks/{linkId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['accountId', 'webPropertyId', 'profileId', 'linkId'],\n          pathParams: ['accountId', 'linkId', 'profileId', 'webPropertyId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"insert\",\n      value: function insert(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/analytics/v3/management/accounts/{accountId}/webproperties/{webPropertyId}/profiles/{profileId}/profileFilterLinks').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['accountId', 'webPropertyId', 'profileId'],\n          pathParams: ['accountId', 'profileId', 'webPropertyId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/analytics/v3/management/accounts/{accountId}/webproperties/{webPropertyId}/profiles/{profileId}/profileFilterLinks').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['accountId', 'webPropertyId', 'profileId'],\n          pathParams: ['accountId', 'profileId', 'webPropertyId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"patch\",\n      value: function patch(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/analytics/v3/management/accounts/{accountId}/webproperties/{webPropertyId}/profiles/{profileId}/profileFilterLinks/{linkId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PATCH'\n          }, options),\n          params,\n          requiredParams: ['accountId', 'webPropertyId', 'profileId', 'linkId'],\n          pathParams: ['accountId', 'linkId', 'profileId', 'webPropertyId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"update\",\n      value: function update(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/analytics/v3/management/accounts/{accountId}/webproperties/{webPropertyId}/profiles/{profileId}/profileFilterLinks/{linkId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PUT'\n          }, options),\n          params,\n          requiredParams: ['accountId', 'webPropertyId', 'profileId', 'linkId'],\n          pathParams: ['accountId', 'linkId', 'profileId', 'webPropertyId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Management$Profilefilterlinks;\n  }();\n\n  analytics_v3.Resource$Management$Profilefilterlinks = Resource$Management$Profilefilterlinks;\n\n  var Resource$Management$Profiles = /*#__PURE__*/function () {\n    function Resource$Management$Profiles(context) {\n      _classCallCheck(this, Resource$Management$Profiles);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Management$Profiles, [{\n      key: \"delete\",\n      value: function _delete(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/analytics/v3/management/accounts/{accountId}/webproperties/{webPropertyId}/profiles/{profileId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'DELETE'\n          }, options),\n          params,\n          requiredParams: ['accountId', 'webPropertyId', 'profileId'],\n          pathParams: ['accountId', 'profileId', 'webPropertyId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/analytics/v3/management/accounts/{accountId}/webproperties/{webPropertyId}/profiles/{profileId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['accountId', 'webPropertyId', 'profileId'],\n          pathParams: ['accountId', 'profileId', 'webPropertyId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"insert\",\n      value: function insert(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/analytics/v3/management/accounts/{accountId}/webproperties/{webPropertyId}/profiles').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['accountId', 'webPropertyId'],\n          pathParams: ['accountId', 'webPropertyId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/analytics/v3/management/accounts/{accountId}/webproperties/{webPropertyId}/profiles').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['accountId', 'webPropertyId'],\n          pathParams: ['accountId', 'webPropertyId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"patch\",\n      value: function patch(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/analytics/v3/management/accounts/{accountId}/webproperties/{webPropertyId}/profiles/{profileId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PATCH'\n          }, options),\n          params,\n          requiredParams: ['accountId', 'webPropertyId', 'profileId'],\n          pathParams: ['accountId', 'profileId', 'webPropertyId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"update\",\n      value: function update(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/analytics/v3/management/accounts/{accountId}/webproperties/{webPropertyId}/profiles/{profileId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PUT'\n          }, options),\n          params,\n          requiredParams: ['accountId', 'webPropertyId', 'profileId'],\n          pathParams: ['accountId', 'profileId', 'webPropertyId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Management$Profiles;\n  }();\n\n  analytics_v3.Resource$Management$Profiles = Resource$Management$Profiles;\n\n  var Resource$Management$Profileuserlinks = /*#__PURE__*/function () {\n    function Resource$Management$Profileuserlinks(context) {\n      _classCallCheck(this, Resource$Management$Profileuserlinks);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Management$Profileuserlinks, [{\n      key: \"delete\",\n      value: function _delete(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/analytics/v3/management/accounts/{accountId}/webproperties/{webPropertyId}/profiles/{profileId}/entityUserLinks/{linkId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'DELETE'\n          }, options),\n          params,\n          requiredParams: ['accountId', 'webPropertyId', 'profileId', 'linkId'],\n          pathParams: ['accountId', 'linkId', 'profileId', 'webPropertyId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"insert\",\n      value: function insert(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/analytics/v3/management/accounts/{accountId}/webproperties/{webPropertyId}/profiles/{profileId}/entityUserLinks').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['accountId', 'webPropertyId', 'profileId'],\n          pathParams: ['accountId', 'profileId', 'webPropertyId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/analytics/v3/management/accounts/{accountId}/webproperties/{webPropertyId}/profiles/{profileId}/entityUserLinks').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['accountId', 'webPropertyId', 'profileId'],\n          pathParams: ['accountId', 'profileId', 'webPropertyId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"update\",\n      value: function update(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/analytics/v3/management/accounts/{accountId}/webproperties/{webPropertyId}/profiles/{profileId}/entityUserLinks/{linkId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PUT'\n          }, options),\n          params,\n          requiredParams: ['accountId', 'webPropertyId', 'profileId', 'linkId'],\n          pathParams: ['accountId', 'linkId', 'profileId', 'webPropertyId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Management$Profileuserlinks;\n  }();\n\n  analytics_v3.Resource$Management$Profileuserlinks = Resource$Management$Profileuserlinks;\n\n  var Resource$Management$Remarketingaudience = /*#__PURE__*/function () {\n    function Resource$Management$Remarketingaudience(context) {\n      _classCallCheck(this, Resource$Management$Remarketingaudience);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Management$Remarketingaudience, [{\n      key: \"delete\",\n      value: function _delete(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/analytics/v3/management/accounts/{accountId}/webproperties/{webPropertyId}/remarketingAudiences/{remarketingAudienceId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'DELETE'\n          }, options),\n          params,\n          requiredParams: ['accountId', 'webPropertyId', 'remarketingAudienceId'],\n          pathParams: ['accountId', 'remarketingAudienceId', 'webPropertyId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/analytics/v3/management/accounts/{accountId}/webproperties/{webPropertyId}/remarketingAudiences/{remarketingAudienceId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['accountId', 'webPropertyId', 'remarketingAudienceId'],\n          pathParams: ['accountId', 'remarketingAudienceId', 'webPropertyId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"insert\",\n      value: function insert(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/analytics/v3/management/accounts/{accountId}/webproperties/{webPropertyId}/remarketingAudiences').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['accountId', 'webPropertyId'],\n          pathParams: ['accountId', 'webPropertyId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/analytics/v3/management/accounts/{accountId}/webproperties/{webPropertyId}/remarketingAudiences').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['accountId', 'webPropertyId'],\n          pathParams: ['accountId', 'webPropertyId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"patch\",\n      value: function patch(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/analytics/v3/management/accounts/{accountId}/webproperties/{webPropertyId}/remarketingAudiences/{remarketingAudienceId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PATCH'\n          }, options),\n          params,\n          requiredParams: ['accountId', 'webPropertyId', 'remarketingAudienceId'],\n          pathParams: ['accountId', 'remarketingAudienceId', 'webPropertyId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"update\",\n      value: function update(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/analytics/v3/management/accounts/{accountId}/webproperties/{webPropertyId}/remarketingAudiences/{remarketingAudienceId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PUT'\n          }, options),\n          params,\n          requiredParams: ['accountId', 'webPropertyId', 'remarketingAudienceId'],\n          pathParams: ['accountId', 'remarketingAudienceId', 'webPropertyId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Management$Remarketingaudience;\n  }();\n\n  analytics_v3.Resource$Management$Remarketingaudience = Resource$Management$Remarketingaudience;\n\n  var Resource$Management$Segments = /*#__PURE__*/function () {\n    function Resource$Management$Segments(context) {\n      _classCallCheck(this, Resource$Management$Segments);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Management$Segments, [{\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/analytics/v3/management/segments').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: [],\n          pathParams: [],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Management$Segments;\n  }();\n\n  analytics_v3.Resource$Management$Segments = Resource$Management$Segments;\n\n  var Resource$Management$Unsampledreports = /*#__PURE__*/function () {\n    function Resource$Management$Unsampledreports(context) {\n      _classCallCheck(this, Resource$Management$Unsampledreports);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Management$Unsampledreports, [{\n      key: \"delete\",\n      value: function _delete(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/analytics/v3/management/accounts/{accountId}/webproperties/{webPropertyId}/profiles/{profileId}/unsampledReports/{unsampledReportId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'DELETE'\n          }, options),\n          params,\n          requiredParams: ['accountId', 'webPropertyId', 'profileId', 'unsampledReportId'],\n          pathParams: ['accountId', 'profileId', 'unsampledReportId', 'webPropertyId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/analytics/v3/management/accounts/{accountId}/webproperties/{webPropertyId}/profiles/{profileId}/unsampledReports/{unsampledReportId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['accountId', 'webPropertyId', 'profileId', 'unsampledReportId'],\n          pathParams: ['accountId', 'profileId', 'unsampledReportId', 'webPropertyId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"insert\",\n      value: function insert(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/analytics/v3/management/accounts/{accountId}/webproperties/{webPropertyId}/profiles/{profileId}/unsampledReports').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['accountId', 'webPropertyId', 'profileId'],\n          pathParams: ['accountId', 'profileId', 'webPropertyId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/analytics/v3/management/accounts/{accountId}/webproperties/{webPropertyId}/profiles/{profileId}/unsampledReports').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['accountId', 'webPropertyId', 'profileId'],\n          pathParams: ['accountId', 'profileId', 'webPropertyId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Management$Unsampledreports;\n  }();\n\n  analytics_v3.Resource$Management$Unsampledreports = Resource$Management$Unsampledreports;\n\n  var Resource$Management$Uploads = /*#__PURE__*/function () {\n    function Resource$Management$Uploads(context) {\n      _classCallCheck(this, Resource$Management$Uploads);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Management$Uploads, [{\n      key: \"deleteUploadData\",\n      value: function deleteUploadData(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/analytics/v3/management/accounts/{accountId}/webproperties/{webPropertyId}/customDataSources/{customDataSourceId}/deleteUploadData').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['accountId', 'webPropertyId', 'customDataSourceId'],\n          pathParams: ['accountId', 'customDataSourceId', 'webPropertyId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/analytics/v3/management/accounts/{accountId}/webproperties/{webPropertyId}/customDataSources/{customDataSourceId}/uploads/{uploadId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['accountId', 'webPropertyId', 'customDataSourceId', 'uploadId'],\n          pathParams: ['accountId', 'customDataSourceId', 'uploadId', 'webPropertyId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/analytics/v3/management/accounts/{accountId}/webproperties/{webPropertyId}/customDataSources/{customDataSourceId}/uploads').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['accountId', 'webPropertyId', 'customDataSourceId'],\n          pathParams: ['accountId', 'customDataSourceId', 'webPropertyId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"uploadData\",\n      value: function uploadData(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/analytics/v3/management/accounts/{accountId}/webproperties/{webPropertyId}/customDataSources/{customDataSourceId}/uploads').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          mediaUrl: (rootUrl + '/upload/analytics/v3/management/accounts/{accountId}/webproperties/{webPropertyId}/customDataSources/{customDataSourceId}/uploads').replace(/([^:]\\/)\\/+/g, '$1'),\n          requiredParams: ['accountId', 'webPropertyId', 'customDataSourceId'],\n          pathParams: ['accountId', 'customDataSourceId', 'webPropertyId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Management$Uploads;\n  }();\n\n  analytics_v3.Resource$Management$Uploads = Resource$Management$Uploads;\n\n  var Resource$Management$Webproperties = /*#__PURE__*/function () {\n    function Resource$Management$Webproperties(context) {\n      _classCallCheck(this, Resource$Management$Webproperties);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Management$Webproperties, [{\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/analytics/v3/management/accounts/{accountId}/webproperties/{webPropertyId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['accountId', 'webPropertyId'],\n          pathParams: ['accountId', 'webPropertyId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"insert\",\n      value: function insert(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/analytics/v3/management/accounts/{accountId}/webproperties').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['accountId'],\n          pathParams: ['accountId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/analytics/v3/management/accounts/{accountId}/webproperties').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['accountId'],\n          pathParams: ['accountId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"patch\",\n      value: function patch(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/analytics/v3/management/accounts/{accountId}/webproperties/{webPropertyId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PATCH'\n          }, options),\n          params,\n          requiredParams: ['accountId', 'webPropertyId'],\n          pathParams: ['accountId', 'webPropertyId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"update\",\n      value: function update(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/analytics/v3/management/accounts/{accountId}/webproperties/{webPropertyId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PUT'\n          }, options),\n          params,\n          requiredParams: ['accountId', 'webPropertyId'],\n          pathParams: ['accountId', 'webPropertyId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Management$Webproperties;\n  }();\n\n  analytics_v3.Resource$Management$Webproperties = Resource$Management$Webproperties;\n\n  var Resource$Management$Webpropertyadwordslinks = /*#__PURE__*/function () {\n    function Resource$Management$Webpropertyadwordslinks(context) {\n      _classCallCheck(this, Resource$Management$Webpropertyadwordslinks);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Management$Webpropertyadwordslinks, [{\n      key: \"delete\",\n      value: function _delete(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/analytics/v3/management/accounts/{accountId}/webproperties/{webPropertyId}/entityAdWordsLinks/{webPropertyAdWordsLinkId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'DELETE'\n          }, options),\n          params,\n          requiredParams: ['accountId', 'webPropertyId', 'webPropertyAdWordsLinkId'],\n          pathParams: ['accountId', 'webPropertyAdWordsLinkId', 'webPropertyId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/analytics/v3/management/accounts/{accountId}/webproperties/{webPropertyId}/entityAdWordsLinks/{webPropertyAdWordsLinkId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['accountId', 'webPropertyId', 'webPropertyAdWordsLinkId'],\n          pathParams: ['accountId', 'webPropertyAdWordsLinkId', 'webPropertyId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"insert\",\n      value: function insert(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/analytics/v3/management/accounts/{accountId}/webproperties/{webPropertyId}/entityAdWordsLinks').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['accountId', 'webPropertyId'],\n          pathParams: ['accountId', 'webPropertyId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/analytics/v3/management/accounts/{accountId}/webproperties/{webPropertyId}/entityAdWordsLinks').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['accountId', 'webPropertyId'],\n          pathParams: ['accountId', 'webPropertyId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"patch\",\n      value: function patch(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/analytics/v3/management/accounts/{accountId}/webproperties/{webPropertyId}/entityAdWordsLinks/{webPropertyAdWordsLinkId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PATCH'\n          }, options),\n          params,\n          requiredParams: ['accountId', 'webPropertyId', 'webPropertyAdWordsLinkId'],\n          pathParams: ['accountId', 'webPropertyAdWordsLinkId', 'webPropertyId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"update\",\n      value: function update(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/analytics/v3/management/accounts/{accountId}/webproperties/{webPropertyId}/entityAdWordsLinks/{webPropertyAdWordsLinkId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PUT'\n          }, options),\n          params,\n          requiredParams: ['accountId', 'webPropertyId', 'webPropertyAdWordsLinkId'],\n          pathParams: ['accountId', 'webPropertyAdWordsLinkId', 'webPropertyId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Management$Webpropertyadwordslinks;\n  }();\n\n  analytics_v3.Resource$Management$Webpropertyadwordslinks = Resource$Management$Webpropertyadwordslinks;\n\n  var Resource$Management$Webpropertyuserlinks = /*#__PURE__*/function () {\n    function Resource$Management$Webpropertyuserlinks(context) {\n      _classCallCheck(this, Resource$Management$Webpropertyuserlinks);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Management$Webpropertyuserlinks, [{\n      key: \"delete\",\n      value: function _delete(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/analytics/v3/management/accounts/{accountId}/webproperties/{webPropertyId}/entityUserLinks/{linkId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'DELETE'\n          }, options),\n          params,\n          requiredParams: ['accountId', 'webPropertyId', 'linkId'],\n          pathParams: ['accountId', 'linkId', 'webPropertyId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"insert\",\n      value: function insert(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/analytics/v3/management/accounts/{accountId}/webproperties/{webPropertyId}/entityUserLinks').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['accountId', 'webPropertyId'],\n          pathParams: ['accountId', 'webPropertyId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/analytics/v3/management/accounts/{accountId}/webproperties/{webPropertyId}/entityUserLinks').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['accountId', 'webPropertyId'],\n          pathParams: ['accountId', 'webPropertyId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"update\",\n      value: function update(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/analytics/v3/management/accounts/{accountId}/webproperties/{webPropertyId}/entityUserLinks/{linkId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PUT'\n          }, options),\n          params,\n          requiredParams: ['accountId', 'webPropertyId', 'linkId'],\n          pathParams: ['accountId', 'linkId', 'webPropertyId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Management$Webpropertyuserlinks;\n  }();\n\n  analytics_v3.Resource$Management$Webpropertyuserlinks = Resource$Management$Webpropertyuserlinks;\n\n  var Resource$Metadata = function Resource$Metadata(context) {\n    _classCallCheck(this, Resource$Metadata);\n\n    this.context = context;\n    this.columns = new Resource$Metadata$Columns(this.context);\n  };\n\n  analytics_v3.Resource$Metadata = Resource$Metadata;\n\n  var Resource$Metadata$Columns = /*#__PURE__*/function () {\n    function Resource$Metadata$Columns(context) {\n      _classCallCheck(this, Resource$Metadata$Columns);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Metadata$Columns, [{\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/analytics/v3/metadata/{reportType}/columns').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['reportType'],\n          pathParams: ['reportType'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Metadata$Columns;\n  }();\n\n  analytics_v3.Resource$Metadata$Columns = Resource$Metadata$Columns;\n\n  var Resource$Provisioning = /*#__PURE__*/function () {\n    function Resource$Provisioning(context) {\n      _classCallCheck(this, Resource$Provisioning);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Provisioning, [{\n      key: \"createAccountTicket\",\n      value: function createAccountTicket(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/analytics/v3/provisioning/createAccountTicket').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: [],\n          pathParams: [],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"createAccountTree\",\n      value: function createAccountTree(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/analytics/v3/provisioning/createAccountTree').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: [],\n          pathParams: [],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Provisioning;\n  }();\n\n  analytics_v3.Resource$Provisioning = Resource$Provisioning;\n\n  var Resource$Userdeletion = function Resource$Userdeletion(context) {\n    _classCallCheck(this, Resource$Userdeletion);\n\n    this.context = context;\n    this.userDeletionRequest = new Resource$Userdeletion$Userdeletionrequest(this.context);\n  };\n\n  analytics_v3.Resource$Userdeletion = Resource$Userdeletion;\n\n  var Resource$Userdeletion$Userdeletionrequest = /*#__PURE__*/function () {\n    function Resource$Userdeletion$Userdeletionrequest(context) {\n      _classCallCheck(this, Resource$Userdeletion$Userdeletionrequest);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Userdeletion$Userdeletionrequest, [{\n      key: \"upsert\",\n      value: function upsert(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/analytics/v3/userDeletion/userDeletionRequests:upsert').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: [],\n          pathParams: [],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Userdeletion$Userdeletionrequest;\n  }();\n\n  analytics_v3.Resource$Userdeletion$Userdeletionrequest = Resource$Userdeletion$Userdeletionrequest;\n})(analytics_v3 = exports.analytics_v3 || (exports.analytics_v3 = {}));","map":{"version":3,"sources":["/Users/amandapoetker-alles/Desktop/campaign-dashboard/node_modules/googleapis/build/src/apis/analytics/v3.js"],"names":["Object","defineProperty","exports","value","googleapis_common_1","require","analytics_v3","Analytics","options","google","context","_options","data","Resource$Data","management","Resource$Management","metadata","Resource$Metadata","provisioning","Resource$Provisioning","userDeletion","Resource$Userdeletion","ga","Resource$Data$Ga","mcf","Resource$Data$Mcf","realtime","Resource$Data$Realtime","paramsOrCallback","optionsOrCallback","callback","params","rootUrl","parameters","assign","url","replace","method","requiredParams","pathParams","createAPIRequest","accounts","Resource$Management$Accounts","accountSummaries","Resource$Management$Accountsummaries","accountUserLinks","Resource$Management$Accountuserlinks","clientId","Resource$Management$Clientid","customDataSources","Resource$Management$Customdatasources","customDimensions","Resource$Management$Customdimensions","customMetrics","Resource$Management$Custommetrics","experiments","Resource$Management$Experiments","filters","Resource$Management$Filters","goals","Resource$Management$Goals","profileFilterLinks","Resource$Management$Profilefilterlinks","profiles","Resource$Management$Profiles","profileUserLinks","Resource$Management$Profileuserlinks","remarketingAudience","Resource$Management$Remarketingaudience","segments","Resource$Management$Segments","unsampledReports","Resource$Management$Unsampledreports","uploads","Resource$Management$Uploads","webproperties","Resource$Management$Webproperties","webPropertyAdWordsLinks","Resource$Management$Webpropertyadwordslinks","webpropertyUserLinks","Resource$Management$Webpropertyuserlinks","mediaUrl","columns","Resource$Metadata$Columns","userDeletionRequest","Resource$Userdeletion$Userdeletionrequest"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,IAAMC,mBAAmB,GAAGC,OAAO,CAAC,mBAAD,CAAnC,C,CACA;AACA;AACA;AACA;AACA;;;AACA,IAAIC,YAAJ;;AACA,CAAC,UAAUA,YAAV,EAAwB;AACrB;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAfyB,MAgBfC,SAhBe,GAiBjB,mBAAYC,OAAZ,EAAqBC,MAArB,EAA6B;AAAA;;AACzB,SAAKC,OAAL,GAAe;AAAEC,MAAAA,QAAQ,EAAEH,OAAO,IAAI,EAAvB;AAA2BC,MAAAA;AAA3B,KAAf;AACA,SAAKG,IAAL,GAAY,IAAIC,aAAJ,CAAkB,KAAKH,OAAvB,CAAZ;AACA,SAAKI,UAAL,GAAkB,IAAIC,mBAAJ,CAAwB,KAAKL,OAA7B,CAAlB;AACA,SAAKM,QAAL,GAAgB,IAAIC,iBAAJ,CAAsB,KAAKP,OAA3B,CAAhB;AACA,SAAKQ,YAAL,GAAoB,IAAIC,qBAAJ,CAA0B,KAAKT,OAA/B,CAApB;AACA,SAAKU,YAAL,GAAoB,IAAIC,qBAAJ,CAA0B,KAAKX,OAA/B,CAApB;AACH,GAxBgB;;AA0BrBJ,EAAAA,YAAY,CAACC,SAAb,GAAyBA,SAAzB;;AA1BqB,MA2BfM,aA3Be,GA4BjB,uBAAYH,OAAZ,EAAqB;AAAA;;AACjB,SAAKA,OAAL,GAAeA,OAAf;AACA,SAAKY,EAAL,GAAU,IAAIC,gBAAJ,CAAqB,KAAKb,OAA1B,CAAV;AACA,SAAKc,GAAL,GAAW,IAAIC,iBAAJ,CAAsB,KAAKf,OAA3B,CAAX;AACA,SAAKgB,QAAL,GAAgB,IAAIC,sBAAJ,CAA2B,KAAKjB,OAAhC,CAAhB;AACH,GAjCgB;;AAmCrBJ,EAAAA,YAAY,CAACO,aAAb,GAA6BA,aAA7B;;AAnCqB,MAoCfU,gBApCe;AAqCjB,8BAAYb,OAAZ,EAAqB;AAAA;;AACjB,WAAKA,OAAL,GAAeA,OAAf;AACH;;AAvCgB;AAAA;AAAA,0BAwCbkB,gBAxCa,EAwCKC,iBAxCL,EAwCwBC,QAxCxB,EAwCkC;AAC/C,YAAIC,MAAM,GAAIH,gBAAgB,IAAI,EAAlC;AACA,YAAIpB,OAAO,GAAIqB,iBAAiB,IAAI,EAApC;;AACA,YAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;AACxCE,UAAAA,QAAQ,GAAGF,gBAAX;AACAG,UAAAA,MAAM,GAAG,EAAT;AACAvB,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAI,OAAOqB,iBAAP,KAA6B,UAAjC,EAA6C;AACzCC,UAAAA,QAAQ,GAAGD,iBAAX;AACArB,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAMwB,OAAO,GAAGxB,OAAO,CAACwB,OAAR,IAAmB,6BAAnC;AACA,YAAMC,UAAU,GAAG;AACfzB,UAAAA,OAAO,EAAER,MAAM,CAACkC,MAAP,CAAc;AACnBC,YAAAA,GAAG,EAAE,CAACH,OAAO,GAAG,uBAAX,EACAI,OADA,CACQ,cADR,EACwB,IADxB,CADc;AAGnBC,YAAAA,MAAM,EAAE;AAHW,WAAd,EAIN7B,OAJM,CADM;AAMfuB,UAAAA,MANe;AAOfO,UAAAA,cAAc,EAAE,CAAC,KAAD,EAAQ,YAAR,EAAsB,UAAtB,EAAkC,SAAlC,CAPD;AAQfC,UAAAA,UAAU,EAAE,EARG;AASf7B,UAAAA,OAAO,EAAE,KAAKA;AATC,SAAnB;;AAWA,YAAIoB,QAAJ,EAAc;AACV1B,UAAAA,mBAAmB,CAACoC,gBAApB,CAAqCP,UAArC,EAAiDH,QAAjD;AACH,SAFD,MAGK;AACD,iBAAO1B,mBAAmB,CAACoC,gBAApB,CAAqCP,UAArC,CAAP;AACH;AACJ;AAtEgB;;AAAA;AAAA;;AAwErB3B,EAAAA,YAAY,CAACiB,gBAAb,GAAgCA,gBAAhC;;AAxEqB,MAyEfE,iBAzEe;AA0EjB,+BAAYf,OAAZ,EAAqB;AAAA;;AACjB,WAAKA,OAAL,GAAeA,OAAf;AACH;;AA5EgB;AAAA;AAAA,0BA6EbkB,gBA7Ea,EA6EKC,iBA7EL,EA6EwBC,QA7ExB,EA6EkC;AAC/C,YAAIC,MAAM,GAAIH,gBAAgB,IAAI,EAAlC;AACA,YAAIpB,OAAO,GAAIqB,iBAAiB,IAAI,EAApC;;AACA,YAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;AACxCE,UAAAA,QAAQ,GAAGF,gBAAX;AACAG,UAAAA,MAAM,GAAG,EAAT;AACAvB,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAI,OAAOqB,iBAAP,KAA6B,UAAjC,EAA6C;AACzCC,UAAAA,QAAQ,GAAGD,iBAAX;AACArB,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAMwB,OAAO,GAAGxB,OAAO,CAACwB,OAAR,IAAmB,6BAAnC;AACA,YAAMC,UAAU,GAAG;AACfzB,UAAAA,OAAO,EAAER,MAAM,CAACkC,MAAP,CAAc;AACnBC,YAAAA,GAAG,EAAE,CAACH,OAAO,GAAG,wBAAX,EACAI,OADA,CACQ,cADR,EACwB,IADxB,CADc;AAGnBC,YAAAA,MAAM,EAAE;AAHW,WAAd,EAIN7B,OAJM,CADM;AAMfuB,UAAAA,MANe;AAOfO,UAAAA,cAAc,EAAE,CAAC,KAAD,EAAQ,YAAR,EAAsB,UAAtB,EAAkC,SAAlC,CAPD;AAQfC,UAAAA,UAAU,EAAE,EARG;AASf7B,UAAAA,OAAO,EAAE,KAAKA;AATC,SAAnB;;AAWA,YAAIoB,QAAJ,EAAc;AACV1B,UAAAA,mBAAmB,CAACoC,gBAApB,CAAqCP,UAArC,EAAiDH,QAAjD;AACH,SAFD,MAGK;AACD,iBAAO1B,mBAAmB,CAACoC,gBAApB,CAAqCP,UAArC,CAAP;AACH;AACJ;AA3GgB;;AAAA;AAAA;;AA6GrB3B,EAAAA,YAAY,CAACmB,iBAAb,GAAiCA,iBAAjC;;AA7GqB,MA8GfE,sBA9Ge;AA+GjB,oCAAYjB,OAAZ,EAAqB;AAAA;;AACjB,WAAKA,OAAL,GAAeA,OAAf;AACH;;AAjHgB;AAAA;AAAA,0BAkHbkB,gBAlHa,EAkHKC,iBAlHL,EAkHwBC,QAlHxB,EAkHkC;AAC/C,YAAIC,MAAM,GAAIH,gBAAgB,IAAI,EAAlC;AACA,YAAIpB,OAAO,GAAIqB,iBAAiB,IAAI,EAApC;;AACA,YAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;AACxCE,UAAAA,QAAQ,GAAGF,gBAAX;AACAG,UAAAA,MAAM,GAAG,EAAT;AACAvB,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAI,OAAOqB,iBAAP,KAA6B,UAAjC,EAA6C;AACzCC,UAAAA,QAAQ,GAAGD,iBAAX;AACArB,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAMwB,OAAO,GAAGxB,OAAO,CAACwB,OAAR,IAAmB,6BAAnC;AACA,YAAMC,UAAU,GAAG;AACfzB,UAAAA,OAAO,EAAER,MAAM,CAACkC,MAAP,CAAc;AACnBC,YAAAA,GAAG,EAAE,CAACH,OAAO,GAAG,6BAAX,EACAI,OADA,CACQ,cADR,EACwB,IADxB,CADc;AAGnBC,YAAAA,MAAM,EAAE;AAHW,WAAd,EAIN7B,OAJM,CADM;AAMfuB,UAAAA,MANe;AAOfO,UAAAA,cAAc,EAAE,CAAC,KAAD,EAAQ,SAAR,CAPD;AAQfC,UAAAA,UAAU,EAAE,EARG;AASf7B,UAAAA,OAAO,EAAE,KAAKA;AATC,SAAnB;;AAWA,YAAIoB,QAAJ,EAAc;AACV1B,UAAAA,mBAAmB,CAACoC,gBAApB,CAAqCP,UAArC,EAAiDH,QAAjD;AACH,SAFD,MAGK;AACD,iBAAO1B,mBAAmB,CAACoC,gBAApB,CAAqCP,UAArC,CAAP;AACH;AACJ;AAhJgB;;AAAA;AAAA;;AAkJrB3B,EAAAA,YAAY,CAACqB,sBAAb,GAAsCA,sBAAtC;;AAlJqB,MAmJfZ,mBAnJe,GAoJjB,6BAAYL,OAAZ,EAAqB;AAAA;;AACjB,SAAKA,OAAL,GAAeA,OAAf;AACA,SAAK+B,QAAL,GAAgB,IAAIC,4BAAJ,CAAiC,KAAKhC,OAAtC,CAAhB;AACA,SAAKiC,gBAAL,GACI,IAAIC,oCAAJ,CAAyC,KAAKlC,OAA9C,CADJ;AAEA,SAAKmC,gBAAL,GACI,IAAIC,oCAAJ,CAAyC,KAAKpC,OAA9C,CADJ;AAEA,SAAKqC,QAAL,GAAgB,IAAIC,4BAAJ,CAAiC,KAAKtC,OAAtC,CAAhB;AACA,SAAKuC,iBAAL,GACI,IAAIC,qCAAJ,CAA0C,KAAKxC,OAA/C,CADJ;AAEA,SAAKyC,gBAAL,GACI,IAAIC,oCAAJ,CAAyC,KAAK1C,OAA9C,CADJ;AAEA,SAAK2C,aAAL,GAAqB,IAAIC,iCAAJ,CAAsC,KAAK5C,OAA3C,CAArB;AACA,SAAK6C,WAAL,GAAmB,IAAIC,+BAAJ,CAAoC,KAAK9C,OAAzC,CAAnB;AACA,SAAK+C,OAAL,GAAe,IAAIC,2BAAJ,CAAgC,KAAKhD,OAArC,CAAf;AACA,SAAKiD,KAAL,GAAa,IAAIC,yBAAJ,CAA8B,KAAKlD,OAAnC,CAAb;AACA,SAAKmD,kBAAL,GACI,IAAIC,sCAAJ,CAA2C,KAAKpD,OAAhD,CADJ;AAEA,SAAKqD,QAAL,GAAgB,IAAIC,4BAAJ,CAAiC,KAAKtD,OAAtC,CAAhB;AACA,SAAKuD,gBAAL,GACI,IAAIC,oCAAJ,CAAyC,KAAKxD,OAA9C,CADJ;AAEA,SAAKyD,mBAAL,GACI,IAAIC,uCAAJ,CAA4C,KAAK1D,OAAjD,CADJ;AAEA,SAAK2D,QAAL,GAAgB,IAAIC,4BAAJ,CAAiC,KAAK5D,OAAtC,CAAhB;AACA,SAAK6D,gBAAL,GACI,IAAIC,oCAAJ,CAAyC,KAAK9D,OAA9C,CADJ;AAEA,SAAK+D,OAAL,GAAe,IAAIC,2BAAJ,CAAgC,KAAKhE,OAArC,CAAf;AACA,SAAKiE,aAAL,GAAqB,IAAIC,iCAAJ,CAAsC,KAAKlE,OAA3C,CAArB;AACA,SAAKmE,uBAAL,GACI,IAAIC,2CAAJ,CAAgD,KAAKpE,OAArD,CADJ;AAEA,SAAKqE,oBAAL,GACI,IAAIC,wCAAJ,CAA6C,KAAKtE,OAAlD,CADJ;AAEH,GApLgB;;AAsLrBJ,EAAAA,YAAY,CAACS,mBAAb,GAAmCA,mBAAnC;;AAtLqB,MAuLf2B,4BAvLe;AAwLjB,0CAAYhC,OAAZ,EAAqB;AAAA;;AACjB,WAAKA,OAAL,GAAeA,OAAf;AACH;;AA1LgB;AAAA;AAAA,2BA2LZkB,gBA3LY,EA2LMC,iBA3LN,EA2LyBC,QA3LzB,EA2LmC;AAChD,YAAIC,MAAM,GAAIH,gBAAgB,IAAI,EAAlC;AACA,YAAIpB,OAAO,GAAIqB,iBAAiB,IAAI,EAApC;;AACA,YAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;AACxCE,UAAAA,QAAQ,GAAGF,gBAAX;AACAG,UAAAA,MAAM,GAAG,EAAT;AACAvB,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAI,OAAOqB,iBAAP,KAA6B,UAAjC,EAA6C;AACzCC,UAAAA,QAAQ,GAAGD,iBAAX;AACArB,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAMwB,OAAO,GAAGxB,OAAO,CAACwB,OAAR,IAAmB,6BAAnC;AACA,YAAMC,UAAU,GAAG;AACfzB,UAAAA,OAAO,EAAER,MAAM,CAACkC,MAAP,CAAc;AACnBC,YAAAA,GAAG,EAAE,CAACH,OAAO,GAAG,mCAAX,EACAI,OADA,CACQ,cADR,EACwB,IADxB,CADc;AAGnBC,YAAAA,MAAM,EAAE;AAHW,WAAd,EAIN7B,OAJM,CADM;AAMfuB,UAAAA,MANe;AAOfO,UAAAA,cAAc,EAAE,EAPD;AAQfC,UAAAA,UAAU,EAAE,EARG;AASf7B,UAAAA,OAAO,EAAE,KAAKA;AATC,SAAnB;;AAWA,YAAIoB,QAAJ,EAAc;AACV1B,UAAAA,mBAAmB,CAACoC,gBAApB,CAAqCP,UAArC,EAAiDH,QAAjD;AACH,SAFD,MAGK;AACD,iBAAO1B,mBAAmB,CAACoC,gBAApB,CAAqCP,UAArC,CAAP;AACH;AACJ;AAzNgB;;AAAA;AAAA;;AA2NrB3B,EAAAA,YAAY,CAACoC,4BAAb,GAA4CA,4BAA5C;;AA3NqB,MA4NfE,oCA5Ne;AA6NjB,kDAAYlC,OAAZ,EAAqB;AAAA;;AACjB,WAAKA,OAAL,GAAeA,OAAf;AACH;;AA/NgB;AAAA;AAAA,2BAgOZkB,gBAhOY,EAgOMC,iBAhON,EAgOyBC,QAhOzB,EAgOmC;AAChD,YAAIC,MAAM,GAAIH,gBAAgB,IAAI,EAAlC;AACA,YAAIpB,OAAO,GAAIqB,iBAAiB,IAAI,EAApC;;AACA,YAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;AACxCE,UAAAA,QAAQ,GAAGF,gBAAX;AACAG,UAAAA,MAAM,GAAG,EAAT;AACAvB,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAI,OAAOqB,iBAAP,KAA6B,UAAjC,EAA6C;AACzCC,UAAAA,QAAQ,GAAGD,iBAAX;AACArB,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAMwB,OAAO,GAAGxB,OAAO,CAACwB,OAAR,IAAmB,6BAAnC;AACA,YAAMC,UAAU,GAAG;AACfzB,UAAAA,OAAO,EAAER,MAAM,CAACkC,MAAP,CAAc;AACnBC,YAAAA,GAAG,EAAE,CAACH,OAAO,GAAG,2CAAX,EACAI,OADA,CACQ,cADR,EACwB,IADxB,CADc;AAGnBC,YAAAA,MAAM,EAAE;AAHW,WAAd,EAIN7B,OAJM,CADM;AAMfuB,UAAAA,MANe;AAOfO,UAAAA,cAAc,EAAE,EAPD;AAQfC,UAAAA,UAAU,EAAE,EARG;AASf7B,UAAAA,OAAO,EAAE,KAAKA;AATC,SAAnB;;AAWA,YAAIoB,QAAJ,EAAc;AACV1B,UAAAA,mBAAmB,CAACoC,gBAApB,CAAqCP,UAArC,EAAiDH,QAAjD;AACH,SAFD,MAGK;AACD,iBAAO1B,mBAAmB,CAACoC,gBAApB,CAAqCP,UAArC,CAAP;AACH;AACJ;AA9PgB;;AAAA;AAAA;;AAgQrB3B,EAAAA,YAAY,CAACsC,oCAAb,GAAoDA,oCAApD;;AAhQqB,MAiQfE,oCAjQe;AAkQjB,kDAAYpC,OAAZ,EAAqB;AAAA;;AACjB,WAAKA,OAAL,GAAeA,OAAf;AACH;;AApQgB;AAAA;AAAA,8BAqQVkB,gBArQU,EAqQQC,iBArQR,EAqQ2BC,QArQ3B,EAqQqC;AAClD,YAAIC,MAAM,GAAIH,gBAAgB,IAAI,EAAlC;AACA,YAAIpB,OAAO,GAAIqB,iBAAiB,IAAI,EAApC;;AACA,YAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;AACxCE,UAAAA,QAAQ,GAAGF,gBAAX;AACAG,UAAAA,MAAM,GAAG,EAAT;AACAvB,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAI,OAAOqB,iBAAP,KAA6B,UAAjC,EAA6C;AACzCC,UAAAA,QAAQ,GAAGD,iBAAX;AACArB,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAMwB,OAAO,GAAGxB,OAAO,CAACwB,OAAR,IAAmB,6BAAnC;AACA,YAAMC,UAAU,GAAG;AACfzB,UAAAA,OAAO,EAAER,MAAM,CAACkC,MAAP,CAAc;AACnBC,YAAAA,GAAG,EAAE,CAACH,OAAO,GACT,wEADC,EAEAI,OAFA,CAEQ,cAFR,EAEwB,IAFxB,CADc;AAInBC,YAAAA,MAAM,EAAE;AAJW,WAAd,EAKN7B,OALM,CADM;AAOfuB,UAAAA,MAPe;AAQfO,UAAAA,cAAc,EAAE,CAAC,WAAD,EAAc,QAAd,CARD;AASfC,UAAAA,UAAU,EAAE,CAAC,WAAD,EAAc,QAAd,CATG;AAUf7B,UAAAA,OAAO,EAAE,KAAKA;AAVC,SAAnB;;AAYA,YAAIoB,QAAJ,EAAc;AACV1B,UAAAA,mBAAmB,CAACoC,gBAApB,CAAqCP,UAArC,EAAiDH,QAAjD;AACH,SAFD,MAGK;AACD,iBAAO1B,mBAAmB,CAACoC,gBAApB,CAAqCP,UAArC,CAAP;AACH;AACJ;AApSgB;AAAA;AAAA,6BAqSVL,gBArSU,EAqSQC,iBArSR,EAqS2BC,QArS3B,EAqSqC;AAClD,YAAIC,MAAM,GAAIH,gBAAgB,IAAI,EAAlC;AACA,YAAIpB,OAAO,GAAIqB,iBAAiB,IAAI,EAApC;;AACA,YAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;AACxCE,UAAAA,QAAQ,GAAGF,gBAAX;AACAG,UAAAA,MAAM,GAAG,EAAT;AACAvB,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAI,OAAOqB,iBAAP,KAA6B,UAAjC,EAA6C;AACzCC,UAAAA,QAAQ,GAAGD,iBAAX;AACArB,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAMwB,OAAO,GAAGxB,OAAO,CAACwB,OAAR,IAAmB,6BAAnC;AACA,YAAMC,UAAU,GAAG;AACfzB,UAAAA,OAAO,EAAER,MAAM,CAACkC,MAAP,CAAc;AACnBC,YAAAA,GAAG,EAAE,CAACH,OAAO,GACT,+DADC,EAEAI,OAFA,CAEQ,cAFR,EAEwB,IAFxB,CADc;AAInBC,YAAAA,MAAM,EAAE;AAJW,WAAd,EAKN7B,OALM,CADM;AAOfuB,UAAAA,MAPe;AAQfO,UAAAA,cAAc,EAAE,CAAC,WAAD,CARD;AASfC,UAAAA,UAAU,EAAE,CAAC,WAAD,CATG;AAUf7B,UAAAA,OAAO,EAAE,KAAKA;AAVC,SAAnB;;AAYA,YAAIoB,QAAJ,EAAc;AACV1B,UAAAA,mBAAmB,CAACoC,gBAApB,CAAqCP,UAArC,EAAiDH,QAAjD;AACH,SAFD,MAGK;AACD,iBAAO1B,mBAAmB,CAACoC,gBAApB,CAAqCP,UAArC,CAAP;AACH;AACJ;AApUgB;AAAA;AAAA,2BAqUZL,gBArUY,EAqUMC,iBArUN,EAqUyBC,QArUzB,EAqUmC;AAChD,YAAIC,MAAM,GAAIH,gBAAgB,IAAI,EAAlC;AACA,YAAIpB,OAAO,GAAIqB,iBAAiB,IAAI,EAApC;;AACA,YAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;AACxCE,UAAAA,QAAQ,GAAGF,gBAAX;AACAG,UAAAA,MAAM,GAAG,EAAT;AACAvB,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAI,OAAOqB,iBAAP,KAA6B,UAAjC,EAA6C;AACzCC,UAAAA,QAAQ,GAAGD,iBAAX;AACArB,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAMwB,OAAO,GAAGxB,OAAO,CAACwB,OAAR,IAAmB,6BAAnC;AACA,YAAMC,UAAU,GAAG;AACfzB,UAAAA,OAAO,EAAER,MAAM,CAACkC,MAAP,CAAc;AACnBC,YAAAA,GAAG,EAAE,CAACH,OAAO,GACT,+DADC,EAEAI,OAFA,CAEQ,cAFR,EAEwB,IAFxB,CADc;AAInBC,YAAAA,MAAM,EAAE;AAJW,WAAd,EAKN7B,OALM,CADM;AAOfuB,UAAAA,MAPe;AAQfO,UAAAA,cAAc,EAAE,CAAC,WAAD,CARD;AASfC,UAAAA,UAAU,EAAE,CAAC,WAAD,CATG;AAUf7B,UAAAA,OAAO,EAAE,KAAKA;AAVC,SAAnB;;AAYA,YAAIoB,QAAJ,EAAc;AACV1B,UAAAA,mBAAmB,CAACoC,gBAApB,CAAqCP,UAArC,EAAiDH,QAAjD;AACH,SAFD,MAGK;AACD,iBAAO1B,mBAAmB,CAACoC,gBAApB,CAAqCP,UAArC,CAAP;AACH;AACJ;AApWgB;AAAA;AAAA,6BAqWVL,gBArWU,EAqWQC,iBArWR,EAqW2BC,QArW3B,EAqWqC;AAClD,YAAIC,MAAM,GAAIH,gBAAgB,IAAI,EAAlC;AACA,YAAIpB,OAAO,GAAIqB,iBAAiB,IAAI,EAApC;;AACA,YAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;AACxCE,UAAAA,QAAQ,GAAGF,gBAAX;AACAG,UAAAA,MAAM,GAAG,EAAT;AACAvB,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAI,OAAOqB,iBAAP,KAA6B,UAAjC,EAA6C;AACzCC,UAAAA,QAAQ,GAAGD,iBAAX;AACArB,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAMwB,OAAO,GAAGxB,OAAO,CAACwB,OAAR,IAAmB,6BAAnC;AACA,YAAMC,UAAU,GAAG;AACfzB,UAAAA,OAAO,EAAER,MAAM,CAACkC,MAAP,CAAc;AACnBC,YAAAA,GAAG,EAAE,CAACH,OAAO,GACT,wEADC,EAEAI,OAFA,CAEQ,cAFR,EAEwB,IAFxB,CADc;AAInBC,YAAAA,MAAM,EAAE;AAJW,WAAd,EAKN7B,OALM,CADM;AAOfuB,UAAAA,MAPe;AAQfO,UAAAA,cAAc,EAAE,CAAC,WAAD,EAAc,QAAd,CARD;AASfC,UAAAA,UAAU,EAAE,CAAC,WAAD,EAAc,QAAd,CATG;AAUf7B,UAAAA,OAAO,EAAE,KAAKA;AAVC,SAAnB;;AAYA,YAAIoB,QAAJ,EAAc;AACV1B,UAAAA,mBAAmB,CAACoC,gBAApB,CAAqCP,UAArC,EAAiDH,QAAjD;AACH,SAFD,MAGK;AACD,iBAAO1B,mBAAmB,CAACoC,gBAApB,CAAqCP,UAArC,CAAP;AACH;AACJ;AApYgB;;AAAA;AAAA;;AAsYrB3B,EAAAA,YAAY,CAACwC,oCAAb,GAAoDA,oCAApD;;AAtYqB,MAuYfE,4BAvYe;AAwYjB,0CAAYtC,OAAZ,EAAqB;AAAA;;AACjB,WAAKA,OAAL,GAAeA,OAAf;AACH;;AA1YgB;AAAA;AAAA,mCA2YJkB,gBA3YI,EA2YcC,iBA3Yd,EA2YiCC,QA3YjC,EA2Y2C;AACxD,YAAIC,MAAM,GAAIH,gBAAgB,IAAI,EAAlC;AACA,YAAIpB,OAAO,GAAIqB,iBAAiB,IAAI,EAApC;;AACA,YAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;AACxCE,UAAAA,QAAQ,GAAGF,gBAAX;AACAG,UAAAA,MAAM,GAAG,EAAT;AACAvB,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAI,OAAOqB,iBAAP,KAA6B,UAAjC,EAA6C;AACzCC,UAAAA,QAAQ,GAAGD,iBAAX;AACArB,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAMwB,OAAO,GAAGxB,OAAO,CAACwB,OAAR,IAAmB,6BAAnC;AACA,YAAMC,UAAU,GAAG;AACfzB,UAAAA,OAAO,EAAER,MAAM,CAACkC,MAAP,CAAc;AACnBC,YAAAA,GAAG,EAAE,CAACH,OAAO,GAAG,gDAAX,EACAI,OADA,CACQ,cADR,EACwB,IADxB,CADc;AAGnBC,YAAAA,MAAM,EAAE;AAHW,WAAd,EAIN7B,OAJM,CADM;AAMfuB,UAAAA,MANe;AAOfO,UAAAA,cAAc,EAAE,EAPD;AAQfC,UAAAA,UAAU,EAAE,EARG;AASf7B,UAAAA,OAAO,EAAE,KAAKA;AATC,SAAnB;;AAWA,YAAIoB,QAAJ,EAAc;AACV1B,UAAAA,mBAAmB,CAACoC,gBAApB,CAAqCP,UAArC,EAAiDH,QAAjD;AACH,SAFD,MAGK;AACD,iBAAO1B,mBAAmB,CAACoC,gBAApB,CAAqCP,UAArC,CAAP;AACH;AACJ;AAzagB;;AAAA;AAAA;;AA2arB3B,EAAAA,YAAY,CAAC0C,4BAAb,GAA4CA,4BAA5C;;AA3aqB,MA4afE,qCA5ae;AA6ajB,mDAAYxC,OAAZ,EAAqB;AAAA;;AACjB,WAAKA,OAAL,GAAeA,OAAf;AACH;;AA/agB;AAAA;AAAA,2BAgbZkB,gBAhbY,EAgbMC,iBAhbN,EAgbyBC,QAhbzB,EAgbmC;AAChD,YAAIC,MAAM,GAAIH,gBAAgB,IAAI,EAAlC;AACA,YAAIpB,OAAO,GAAIqB,iBAAiB,IAAI,EAApC;;AACA,YAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;AACxCE,UAAAA,QAAQ,GAAGF,gBAAX;AACAG,UAAAA,MAAM,GAAG,EAAT;AACAvB,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAI,OAAOqB,iBAAP,KAA6B,UAAjC,EAA6C;AACzCC,UAAAA,QAAQ,GAAGD,iBAAX;AACArB,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAMwB,OAAO,GAAGxB,OAAO,CAACwB,OAAR,IAAmB,6BAAnC;AACA,YAAMC,UAAU,GAAG;AACfzB,UAAAA,OAAO,EAAER,MAAM,CAACkC,MAAP,CAAc;AACnBC,YAAAA,GAAG,EAAE,CAACH,OAAO,GACT,+FADC,EAEAI,OAFA,CAEQ,cAFR,EAEwB,IAFxB,CADc;AAInBC,YAAAA,MAAM,EAAE;AAJW,WAAd,EAKN7B,OALM,CADM;AAOfuB,UAAAA,MAPe;AAQfO,UAAAA,cAAc,EAAE,CAAC,WAAD,EAAc,eAAd,CARD;AASfC,UAAAA,UAAU,EAAE,CAAC,WAAD,EAAc,eAAd,CATG;AAUf7B,UAAAA,OAAO,EAAE,KAAKA;AAVC,SAAnB;;AAYA,YAAIoB,QAAJ,EAAc;AACV1B,UAAAA,mBAAmB,CAACoC,gBAApB,CAAqCP,UAArC,EAAiDH,QAAjD;AACH,SAFD,MAGK;AACD,iBAAO1B,mBAAmB,CAACoC,gBAApB,CAAqCP,UAArC,CAAP;AACH;AACJ;AA/cgB;;AAAA;AAAA;;AAidrB3B,EAAAA,YAAY,CAAC4C,qCAAb,GAAqDA,qCAArD;;AAjdqB,MAkdfE,oCAlde;AAmdjB,kDAAY1C,OAAZ,EAAqB;AAAA;;AACjB,WAAKA,OAAL,GAAeA,OAAf;AACH;;AArdgB;AAAA;AAAA,0BAsdbkB,gBAtda,EAsdKC,iBAtdL,EAsdwBC,QAtdxB,EAsdkC;AAC/C,YAAIC,MAAM,GAAIH,gBAAgB,IAAI,EAAlC;AACA,YAAIpB,OAAO,GAAIqB,iBAAiB,IAAI,EAApC;;AACA,YAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;AACxCE,UAAAA,QAAQ,GAAGF,gBAAX;AACAG,UAAAA,MAAM,GAAG,EAAT;AACAvB,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAI,OAAOqB,iBAAP,KAA6B,UAAjC,EAA6C;AACzCC,UAAAA,QAAQ,GAAGD,iBAAX;AACArB,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAMwB,OAAO,GAAGxB,OAAO,CAACwB,OAAR,IAAmB,6BAAnC;AACA,YAAMC,UAAU,GAAG;AACfzB,UAAAA,OAAO,EAAER,MAAM,CAACkC,MAAP,CAAc;AACnBC,YAAAA,GAAG,EAAE,CAACH,OAAO,GACT,kHADC,EAEAI,OAFA,CAEQ,cAFR,EAEwB,IAFxB,CADc;AAInBC,YAAAA,MAAM,EAAE;AAJW,WAAd,EAKN7B,OALM,CADM;AAOfuB,UAAAA,MAPe;AAQfO,UAAAA,cAAc,EAAE,CAAC,WAAD,EAAc,eAAd,EAA+B,mBAA/B,CARD;AASfC,UAAAA,UAAU,EAAE,CAAC,WAAD,EAAc,mBAAd,EAAmC,eAAnC,CATG;AAUf7B,UAAAA,OAAO,EAAE,KAAKA;AAVC,SAAnB;;AAYA,YAAIoB,QAAJ,EAAc;AACV1B,UAAAA,mBAAmB,CAACoC,gBAApB,CAAqCP,UAArC,EAAiDH,QAAjD;AACH,SAFD,MAGK;AACD,iBAAO1B,mBAAmB,CAACoC,gBAApB,CAAqCP,UAArC,CAAP;AACH;AACJ;AArfgB;AAAA;AAAA,6BAsfVL,gBAtfU,EAsfQC,iBAtfR,EAsf2BC,QAtf3B,EAsfqC;AAClD,YAAIC,MAAM,GAAIH,gBAAgB,IAAI,EAAlC;AACA,YAAIpB,OAAO,GAAIqB,iBAAiB,IAAI,EAApC;;AACA,YAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;AACxCE,UAAAA,QAAQ,GAAGF,gBAAX;AACAG,UAAAA,MAAM,GAAG,EAAT;AACAvB,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAI,OAAOqB,iBAAP,KAA6B,UAAjC,EAA6C;AACzCC,UAAAA,QAAQ,GAAGD,iBAAX;AACArB,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAMwB,OAAO,GAAGxB,OAAO,CAACwB,OAAR,IAAmB,6BAAnC;AACA,YAAMC,UAAU,GAAG;AACfzB,UAAAA,OAAO,EAAER,MAAM,CAACkC,MAAP,CAAc;AACnBC,YAAAA,GAAG,EAAE,CAACH,OAAO,GACT,8FADC,EAEAI,OAFA,CAEQ,cAFR,EAEwB,IAFxB,CADc;AAInBC,YAAAA,MAAM,EAAE;AAJW,WAAd,EAKN7B,OALM,CADM;AAOfuB,UAAAA,MAPe;AAQfO,UAAAA,cAAc,EAAE,CAAC,WAAD,EAAc,eAAd,CARD;AASfC,UAAAA,UAAU,EAAE,CAAC,WAAD,EAAc,eAAd,CATG;AAUf7B,UAAAA,OAAO,EAAE,KAAKA;AAVC,SAAnB;;AAYA,YAAIoB,QAAJ,EAAc;AACV1B,UAAAA,mBAAmB,CAACoC,gBAApB,CAAqCP,UAArC,EAAiDH,QAAjD;AACH,SAFD,MAGK;AACD,iBAAO1B,mBAAmB,CAACoC,gBAApB,CAAqCP,UAArC,CAAP;AACH;AACJ;AArhBgB;AAAA;AAAA,2BAshBZL,gBAthBY,EAshBMC,iBAthBN,EAshByBC,QAthBzB,EAshBmC;AAChD,YAAIC,MAAM,GAAIH,gBAAgB,IAAI,EAAlC;AACA,YAAIpB,OAAO,GAAIqB,iBAAiB,IAAI,EAApC;;AACA,YAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;AACxCE,UAAAA,QAAQ,GAAGF,gBAAX;AACAG,UAAAA,MAAM,GAAG,EAAT;AACAvB,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAI,OAAOqB,iBAAP,KAA6B,UAAjC,EAA6C;AACzCC,UAAAA,QAAQ,GAAGD,iBAAX;AACArB,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAMwB,OAAO,GAAGxB,OAAO,CAACwB,OAAR,IAAmB,6BAAnC;AACA,YAAMC,UAAU,GAAG;AACfzB,UAAAA,OAAO,EAAER,MAAM,CAACkC,MAAP,CAAc;AACnBC,YAAAA,GAAG,EAAE,CAACH,OAAO,GACT,8FADC,EAEAI,OAFA,CAEQ,cAFR,EAEwB,IAFxB,CADc;AAInBC,YAAAA,MAAM,EAAE;AAJW,WAAd,EAKN7B,OALM,CADM;AAOfuB,UAAAA,MAPe;AAQfO,UAAAA,cAAc,EAAE,CAAC,WAAD,EAAc,eAAd,CARD;AASfC,UAAAA,UAAU,EAAE,CAAC,WAAD,EAAc,eAAd,CATG;AAUf7B,UAAAA,OAAO,EAAE,KAAKA;AAVC,SAAnB;;AAYA,YAAIoB,QAAJ,EAAc;AACV1B,UAAAA,mBAAmB,CAACoC,gBAApB,CAAqCP,UAArC,EAAiDH,QAAjD;AACH,SAFD,MAGK;AACD,iBAAO1B,mBAAmB,CAACoC,gBAApB,CAAqCP,UAArC,CAAP;AACH;AACJ;AArjBgB;AAAA;AAAA,4BAsjBXL,gBAtjBW,EAsjBOC,iBAtjBP,EAsjB0BC,QAtjB1B,EAsjBoC;AACjD,YAAIC,MAAM,GAAIH,gBAAgB,IAAI,EAAlC;AACA,YAAIpB,OAAO,GAAIqB,iBAAiB,IAAI,EAApC;;AACA,YAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;AACxCE,UAAAA,QAAQ,GAAGF,gBAAX;AACAG,UAAAA,MAAM,GAAG,EAAT;AACAvB,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAI,OAAOqB,iBAAP,KAA6B,UAAjC,EAA6C;AACzCC,UAAAA,QAAQ,GAAGD,iBAAX;AACArB,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAMwB,OAAO,GAAGxB,OAAO,CAACwB,OAAR,IAAmB,6BAAnC;AACA,YAAMC,UAAU,GAAG;AACfzB,UAAAA,OAAO,EAAER,MAAM,CAACkC,MAAP,CAAc;AACnBC,YAAAA,GAAG,EAAE,CAACH,OAAO,GACT,kHADC,EAEAI,OAFA,CAEQ,cAFR,EAEwB,IAFxB,CADc;AAInBC,YAAAA,MAAM,EAAE;AAJW,WAAd,EAKN7B,OALM,CADM;AAOfuB,UAAAA,MAPe;AAQfO,UAAAA,cAAc,EAAE,CAAC,WAAD,EAAc,eAAd,EAA+B,mBAA/B,CARD;AASfC,UAAAA,UAAU,EAAE,CAAC,WAAD,EAAc,mBAAd,EAAmC,eAAnC,CATG;AAUf7B,UAAAA,OAAO,EAAE,KAAKA;AAVC,SAAnB;;AAYA,YAAIoB,QAAJ,EAAc;AACV1B,UAAAA,mBAAmB,CAACoC,gBAApB,CAAqCP,UAArC,EAAiDH,QAAjD;AACH,SAFD,MAGK;AACD,iBAAO1B,mBAAmB,CAACoC,gBAApB,CAAqCP,UAArC,CAAP;AACH;AACJ;AArlBgB;AAAA;AAAA,6BAslBVL,gBAtlBU,EAslBQC,iBAtlBR,EAslB2BC,QAtlB3B,EAslBqC;AAClD,YAAIC,MAAM,GAAIH,gBAAgB,IAAI,EAAlC;AACA,YAAIpB,OAAO,GAAIqB,iBAAiB,IAAI,EAApC;;AACA,YAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;AACxCE,UAAAA,QAAQ,GAAGF,gBAAX;AACAG,UAAAA,MAAM,GAAG,EAAT;AACAvB,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAI,OAAOqB,iBAAP,KAA6B,UAAjC,EAA6C;AACzCC,UAAAA,QAAQ,GAAGD,iBAAX;AACArB,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAMwB,OAAO,GAAGxB,OAAO,CAACwB,OAAR,IAAmB,6BAAnC;AACA,YAAMC,UAAU,GAAG;AACfzB,UAAAA,OAAO,EAAER,MAAM,CAACkC,MAAP,CAAc;AACnBC,YAAAA,GAAG,EAAE,CAACH,OAAO,GACT,kHADC,EAEAI,OAFA,CAEQ,cAFR,EAEwB,IAFxB,CADc;AAInBC,YAAAA,MAAM,EAAE;AAJW,WAAd,EAKN7B,OALM,CADM;AAOfuB,UAAAA,MAPe;AAQfO,UAAAA,cAAc,EAAE,CAAC,WAAD,EAAc,eAAd,EAA+B,mBAA/B,CARD;AASfC,UAAAA,UAAU,EAAE,CAAC,WAAD,EAAc,mBAAd,EAAmC,eAAnC,CATG;AAUf7B,UAAAA,OAAO,EAAE,KAAKA;AAVC,SAAnB;;AAYA,YAAIoB,QAAJ,EAAc;AACV1B,UAAAA,mBAAmB,CAACoC,gBAApB,CAAqCP,UAArC,EAAiDH,QAAjD;AACH,SAFD,MAGK;AACD,iBAAO1B,mBAAmB,CAACoC,gBAApB,CAAqCP,UAArC,CAAP;AACH;AACJ;AArnBgB;;AAAA;AAAA;;AAunBrB3B,EAAAA,YAAY,CAAC8C,oCAAb,GAAoDA,oCAApD;;AAvnBqB,MAwnBfE,iCAxnBe;AAynBjB,+CAAY5C,OAAZ,EAAqB;AAAA;;AACjB,WAAKA,OAAL,GAAeA,OAAf;AACH;;AA3nBgB;AAAA;AAAA,0BA4nBbkB,gBA5nBa,EA4nBKC,iBA5nBL,EA4nBwBC,QA5nBxB,EA4nBkC;AAC/C,YAAIC,MAAM,GAAIH,gBAAgB,IAAI,EAAlC;AACA,YAAIpB,OAAO,GAAIqB,iBAAiB,IAAI,EAApC;;AACA,YAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;AACxCE,UAAAA,QAAQ,GAAGF,gBAAX;AACAG,UAAAA,MAAM,GAAG,EAAT;AACAvB,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAI,OAAOqB,iBAAP,KAA6B,UAAjC,EAA6C;AACzCC,UAAAA,QAAQ,GAAGD,iBAAX;AACArB,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAMwB,OAAO,GAAGxB,OAAO,CAACwB,OAAR,IAAmB,6BAAnC;AACA,YAAMC,UAAU,GAAG;AACfzB,UAAAA,OAAO,EAAER,MAAM,CAACkC,MAAP,CAAc;AACnBC,YAAAA,GAAG,EAAE,CAACH,OAAO,GACT,4GADC,EAEAI,OAFA,CAEQ,cAFR,EAEwB,IAFxB,CADc;AAInBC,YAAAA,MAAM,EAAE;AAJW,WAAd,EAKN7B,OALM,CADM;AAOfuB,UAAAA,MAPe;AAQfO,UAAAA,cAAc,EAAE,CAAC,WAAD,EAAc,eAAd,EAA+B,gBAA/B,CARD;AASfC,UAAAA,UAAU,EAAE,CAAC,WAAD,EAAc,gBAAd,EAAgC,eAAhC,CATG;AAUf7B,UAAAA,OAAO,EAAE,KAAKA;AAVC,SAAnB;;AAYA,YAAIoB,QAAJ,EAAc;AACV1B,UAAAA,mBAAmB,CAACoC,gBAApB,CAAqCP,UAArC,EAAiDH,QAAjD;AACH,SAFD,MAGK;AACD,iBAAO1B,mBAAmB,CAACoC,gBAApB,CAAqCP,UAArC,CAAP;AACH;AACJ;AA3pBgB;AAAA;AAAA,6BA4pBVL,gBA5pBU,EA4pBQC,iBA5pBR,EA4pB2BC,QA5pB3B,EA4pBqC;AAClD,YAAIC,MAAM,GAAIH,gBAAgB,IAAI,EAAlC;AACA,YAAIpB,OAAO,GAAIqB,iBAAiB,IAAI,EAApC;;AACA,YAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;AACxCE,UAAAA,QAAQ,GAAGF,gBAAX;AACAG,UAAAA,MAAM,GAAG,EAAT;AACAvB,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAI,OAAOqB,iBAAP,KAA6B,UAAjC,EAA6C;AACzCC,UAAAA,QAAQ,GAAGD,iBAAX;AACArB,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAMwB,OAAO,GAAGxB,OAAO,CAACwB,OAAR,IAAmB,6BAAnC;AACA,YAAMC,UAAU,GAAG;AACfzB,UAAAA,OAAO,EAAER,MAAM,CAACkC,MAAP,CAAc;AACnBC,YAAAA,GAAG,EAAE,CAACH,OAAO,GACT,2FADC,EAEAI,OAFA,CAEQ,cAFR,EAEwB,IAFxB,CADc;AAInBC,YAAAA,MAAM,EAAE;AAJW,WAAd,EAKN7B,OALM,CADM;AAOfuB,UAAAA,MAPe;AAQfO,UAAAA,cAAc,EAAE,CAAC,WAAD,EAAc,eAAd,CARD;AASfC,UAAAA,UAAU,EAAE,CAAC,WAAD,EAAc,eAAd,CATG;AAUf7B,UAAAA,OAAO,EAAE,KAAKA;AAVC,SAAnB;;AAYA,YAAIoB,QAAJ,EAAc;AACV1B,UAAAA,mBAAmB,CAACoC,gBAApB,CAAqCP,UAArC,EAAiDH,QAAjD;AACH,SAFD,MAGK;AACD,iBAAO1B,mBAAmB,CAACoC,gBAApB,CAAqCP,UAArC,CAAP;AACH;AACJ;AA3rBgB;AAAA;AAAA,2BA4rBZL,gBA5rBY,EA4rBMC,iBA5rBN,EA4rByBC,QA5rBzB,EA4rBmC;AAChD,YAAIC,MAAM,GAAIH,gBAAgB,IAAI,EAAlC;AACA,YAAIpB,OAAO,GAAIqB,iBAAiB,IAAI,EAApC;;AACA,YAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;AACxCE,UAAAA,QAAQ,GAAGF,gBAAX;AACAG,UAAAA,MAAM,GAAG,EAAT;AACAvB,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAI,OAAOqB,iBAAP,KAA6B,UAAjC,EAA6C;AACzCC,UAAAA,QAAQ,GAAGD,iBAAX;AACArB,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAMwB,OAAO,GAAGxB,OAAO,CAACwB,OAAR,IAAmB,6BAAnC;AACA,YAAMC,UAAU,GAAG;AACfzB,UAAAA,OAAO,EAAER,MAAM,CAACkC,MAAP,CAAc;AACnBC,YAAAA,GAAG,EAAE,CAACH,OAAO,GACT,2FADC,EAEAI,OAFA,CAEQ,cAFR,EAEwB,IAFxB,CADc;AAInBC,YAAAA,MAAM,EAAE;AAJW,WAAd,EAKN7B,OALM,CADM;AAOfuB,UAAAA,MAPe;AAQfO,UAAAA,cAAc,EAAE,CAAC,WAAD,EAAc,eAAd,CARD;AASfC,UAAAA,UAAU,EAAE,CAAC,WAAD,EAAc,eAAd,CATG;AAUf7B,UAAAA,OAAO,EAAE,KAAKA;AAVC,SAAnB;;AAYA,YAAIoB,QAAJ,EAAc;AACV1B,UAAAA,mBAAmB,CAACoC,gBAApB,CAAqCP,UAArC,EAAiDH,QAAjD;AACH,SAFD,MAGK;AACD,iBAAO1B,mBAAmB,CAACoC,gBAApB,CAAqCP,UAArC,CAAP;AACH;AACJ;AA3tBgB;AAAA;AAAA,4BA4tBXL,gBA5tBW,EA4tBOC,iBA5tBP,EA4tB0BC,QA5tB1B,EA4tBoC;AACjD,YAAIC,MAAM,GAAIH,gBAAgB,IAAI,EAAlC;AACA,YAAIpB,OAAO,GAAIqB,iBAAiB,IAAI,EAApC;;AACA,YAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;AACxCE,UAAAA,QAAQ,GAAGF,gBAAX;AACAG,UAAAA,MAAM,GAAG,EAAT;AACAvB,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAI,OAAOqB,iBAAP,KAA6B,UAAjC,EAA6C;AACzCC,UAAAA,QAAQ,GAAGD,iBAAX;AACArB,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAMwB,OAAO,GAAGxB,OAAO,CAACwB,OAAR,IAAmB,6BAAnC;AACA,YAAMC,UAAU,GAAG;AACfzB,UAAAA,OAAO,EAAER,MAAM,CAACkC,MAAP,CAAc;AACnBC,YAAAA,GAAG,EAAE,CAACH,OAAO,GACT,4GADC,EAEAI,OAFA,CAEQ,cAFR,EAEwB,IAFxB,CADc;AAInBC,YAAAA,MAAM,EAAE;AAJW,WAAd,EAKN7B,OALM,CADM;AAOfuB,UAAAA,MAPe;AAQfO,UAAAA,cAAc,EAAE,CAAC,WAAD,EAAc,eAAd,EAA+B,gBAA/B,CARD;AASfC,UAAAA,UAAU,EAAE,CAAC,WAAD,EAAc,gBAAd,EAAgC,eAAhC,CATG;AAUf7B,UAAAA,OAAO,EAAE,KAAKA;AAVC,SAAnB;;AAYA,YAAIoB,QAAJ,EAAc;AACV1B,UAAAA,mBAAmB,CAACoC,gBAApB,CAAqCP,UAArC,EAAiDH,QAAjD;AACH,SAFD,MAGK;AACD,iBAAO1B,mBAAmB,CAACoC,gBAApB,CAAqCP,UAArC,CAAP;AACH;AACJ;AA3vBgB;AAAA;AAAA,6BA4vBVL,gBA5vBU,EA4vBQC,iBA5vBR,EA4vB2BC,QA5vB3B,EA4vBqC;AAClD,YAAIC,MAAM,GAAIH,gBAAgB,IAAI,EAAlC;AACA,YAAIpB,OAAO,GAAIqB,iBAAiB,IAAI,EAApC;;AACA,YAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;AACxCE,UAAAA,QAAQ,GAAGF,gBAAX;AACAG,UAAAA,MAAM,GAAG,EAAT;AACAvB,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAI,OAAOqB,iBAAP,KAA6B,UAAjC,EAA6C;AACzCC,UAAAA,QAAQ,GAAGD,iBAAX;AACArB,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAMwB,OAAO,GAAGxB,OAAO,CAACwB,OAAR,IAAmB,6BAAnC;AACA,YAAMC,UAAU,GAAG;AACfzB,UAAAA,OAAO,EAAER,MAAM,CAACkC,MAAP,CAAc;AACnBC,YAAAA,GAAG,EAAE,CAACH,OAAO,GACT,4GADC,EAEAI,OAFA,CAEQ,cAFR,EAEwB,IAFxB,CADc;AAInBC,YAAAA,MAAM,EAAE;AAJW,WAAd,EAKN7B,OALM,CADM;AAOfuB,UAAAA,MAPe;AAQfO,UAAAA,cAAc,EAAE,CAAC,WAAD,EAAc,eAAd,EAA+B,gBAA/B,CARD;AASfC,UAAAA,UAAU,EAAE,CAAC,WAAD,EAAc,gBAAd,EAAgC,eAAhC,CATG;AAUf7B,UAAAA,OAAO,EAAE,KAAKA;AAVC,SAAnB;;AAYA,YAAIoB,QAAJ,EAAc;AACV1B,UAAAA,mBAAmB,CAACoC,gBAApB,CAAqCP,UAArC,EAAiDH,QAAjD;AACH,SAFD,MAGK;AACD,iBAAO1B,mBAAmB,CAACoC,gBAApB,CAAqCP,UAArC,CAAP;AACH;AACJ;AA3xBgB;;AAAA;AAAA;;AA6xBrB3B,EAAAA,YAAY,CAACgD,iCAAb,GAAiDA,iCAAjD;;AA7xBqB,MA8xBfE,+BA9xBe;AA+xBjB,6CAAY9C,OAAZ,EAAqB;AAAA;;AACjB,WAAKA,OAAL,GAAeA,OAAf;AACH;;AAjyBgB;AAAA;AAAA,8BAkyBVkB,gBAlyBU,EAkyBQC,iBAlyBR,EAkyB2BC,QAlyB3B,EAkyBqC;AAClD,YAAIC,MAAM,GAAIH,gBAAgB,IAAI,EAAlC;AACA,YAAIpB,OAAO,GAAIqB,iBAAiB,IAAI,EAApC;;AACA,YAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;AACxCE,UAAAA,QAAQ,GAAGF,gBAAX;AACAG,UAAAA,MAAM,GAAG,EAAT;AACAvB,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAI,OAAOqB,iBAAP,KAA6B,UAAjC,EAA6C;AACzCC,UAAAA,QAAQ,GAAGD,iBAAX;AACArB,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAMwB,OAAO,GAAGxB,OAAO,CAACwB,OAAR,IAAmB,6BAAnC;AACA,YAAMC,UAAU,GAAG;AACfzB,UAAAA,OAAO,EAAER,MAAM,CAACkC,MAAP,CAAc;AACnBC,YAAAA,GAAG,EAAE,CAACH,OAAO,GACT,6HADC,EAEAI,OAFA,CAEQ,cAFR,EAEwB,IAFxB,CADc;AAInBC,YAAAA,MAAM,EAAE;AAJW,WAAd,EAKN7B,OALM,CADM;AAOfuB,UAAAA,MAPe;AAQfO,UAAAA,cAAc,EAAE,CAAC,WAAD,EAAc,eAAd,EAA+B,WAA/B,EAA4C,cAA5C,CARD;AASfC,UAAAA,UAAU,EAAE,CAAC,WAAD,EAAc,cAAd,EAA8B,WAA9B,EAA2C,eAA3C,CATG;AAUf7B,UAAAA,OAAO,EAAE,KAAKA;AAVC,SAAnB;;AAYA,YAAIoB,QAAJ,EAAc;AACV1B,UAAAA,mBAAmB,CAACoC,gBAApB,CAAqCP,UAArC,EAAiDH,QAAjD;AACH,SAFD,MAGK;AACD,iBAAO1B,mBAAmB,CAACoC,gBAApB,CAAqCP,UAArC,CAAP;AACH;AACJ;AAj0BgB;AAAA;AAAA,0BAk0BbL,gBAl0Ba,EAk0BKC,iBAl0BL,EAk0BwBC,QAl0BxB,EAk0BkC;AAC/C,YAAIC,MAAM,GAAIH,gBAAgB,IAAI,EAAlC;AACA,YAAIpB,OAAO,GAAIqB,iBAAiB,IAAI,EAApC;;AACA,YAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;AACxCE,UAAAA,QAAQ,GAAGF,gBAAX;AACAG,UAAAA,MAAM,GAAG,EAAT;AACAvB,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAI,OAAOqB,iBAAP,KAA6B,UAAjC,EAA6C;AACzCC,UAAAA,QAAQ,GAAGD,iBAAX;AACArB,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAMwB,OAAO,GAAGxB,OAAO,CAACwB,OAAR,IAAmB,6BAAnC;AACA,YAAMC,UAAU,GAAG;AACfzB,UAAAA,OAAO,EAAER,MAAM,CAACkC,MAAP,CAAc;AACnBC,YAAAA,GAAG,EAAE,CAACH,OAAO,GACT,6HADC,EAEAI,OAFA,CAEQ,cAFR,EAEwB,IAFxB,CADc;AAInBC,YAAAA,MAAM,EAAE;AAJW,WAAd,EAKN7B,OALM,CADM;AAOfuB,UAAAA,MAPe;AAQfO,UAAAA,cAAc,EAAE,CAAC,WAAD,EAAc,eAAd,EAA+B,WAA/B,EAA4C,cAA5C,CARD;AASfC,UAAAA,UAAU,EAAE,CAAC,WAAD,EAAc,cAAd,EAA8B,WAA9B,EAA2C,eAA3C,CATG;AAUf7B,UAAAA,OAAO,EAAE,KAAKA;AAVC,SAAnB;;AAYA,YAAIoB,QAAJ,EAAc;AACV1B,UAAAA,mBAAmB,CAACoC,gBAApB,CAAqCP,UAArC,EAAiDH,QAAjD;AACH,SAFD,MAGK;AACD,iBAAO1B,mBAAmB,CAACoC,gBAApB,CAAqCP,UAArC,CAAP;AACH;AACJ;AAj2BgB;AAAA;AAAA,6BAk2BVL,gBAl2BU,EAk2BQC,iBAl2BR,EAk2B2BC,QAl2B3B,EAk2BqC;AAClD,YAAIC,MAAM,GAAIH,gBAAgB,IAAI,EAAlC;AACA,YAAIpB,OAAO,GAAIqB,iBAAiB,IAAI,EAApC;;AACA,YAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;AACxCE,UAAAA,QAAQ,GAAGF,gBAAX;AACAG,UAAAA,MAAM,GAAG,EAAT;AACAvB,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAI,OAAOqB,iBAAP,KAA6B,UAAjC,EAA6C;AACzCC,UAAAA,QAAQ,GAAGD,iBAAX;AACArB,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAMwB,OAAO,GAAGxB,OAAO,CAACwB,OAAR,IAAmB,6BAAnC;AACA,YAAMC,UAAU,GAAG;AACfzB,UAAAA,OAAO,EAAER,MAAM,CAACkC,MAAP,CAAc;AACnBC,YAAAA,GAAG,EAAE,CAACH,OAAO,GACT,8GADC,EAEAI,OAFA,CAEQ,cAFR,EAEwB,IAFxB,CADc;AAInBC,YAAAA,MAAM,EAAE;AAJW,WAAd,EAKN7B,OALM,CADM;AAOfuB,UAAAA,MAPe;AAQfO,UAAAA,cAAc,EAAE,CAAC,WAAD,EAAc,eAAd,EAA+B,WAA/B,CARD;AASfC,UAAAA,UAAU,EAAE,CAAC,WAAD,EAAc,WAAd,EAA2B,eAA3B,CATG;AAUf7B,UAAAA,OAAO,EAAE,KAAKA;AAVC,SAAnB;;AAYA,YAAIoB,QAAJ,EAAc;AACV1B,UAAAA,mBAAmB,CAACoC,gBAApB,CAAqCP,UAArC,EAAiDH,QAAjD;AACH,SAFD,MAGK;AACD,iBAAO1B,mBAAmB,CAACoC,gBAApB,CAAqCP,UAArC,CAAP;AACH;AACJ;AAj4BgB;AAAA;AAAA,2BAk4BZL,gBAl4BY,EAk4BMC,iBAl4BN,EAk4ByBC,QAl4BzB,EAk4BmC;AAChD,YAAIC,MAAM,GAAIH,gBAAgB,IAAI,EAAlC;AACA,YAAIpB,OAAO,GAAIqB,iBAAiB,IAAI,EAApC;;AACA,YAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;AACxCE,UAAAA,QAAQ,GAAGF,gBAAX;AACAG,UAAAA,MAAM,GAAG,EAAT;AACAvB,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAI,OAAOqB,iBAAP,KAA6B,UAAjC,EAA6C;AACzCC,UAAAA,QAAQ,GAAGD,iBAAX;AACArB,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAMwB,OAAO,GAAGxB,OAAO,CAACwB,OAAR,IAAmB,6BAAnC;AACA,YAAMC,UAAU,GAAG;AACfzB,UAAAA,OAAO,EAAER,MAAM,CAACkC,MAAP,CAAc;AACnBC,YAAAA,GAAG,EAAE,CAACH,OAAO,GACT,8GADC,EAEAI,OAFA,CAEQ,cAFR,EAEwB,IAFxB,CADc;AAInBC,YAAAA,MAAM,EAAE;AAJW,WAAd,EAKN7B,OALM,CADM;AAOfuB,UAAAA,MAPe;AAQfO,UAAAA,cAAc,EAAE,CAAC,WAAD,EAAc,eAAd,EAA+B,WAA/B,CARD;AASfC,UAAAA,UAAU,EAAE,CAAC,WAAD,EAAc,WAAd,EAA2B,eAA3B,CATG;AAUf7B,UAAAA,OAAO,EAAE,KAAKA;AAVC,SAAnB;;AAYA,YAAIoB,QAAJ,EAAc;AACV1B,UAAAA,mBAAmB,CAACoC,gBAApB,CAAqCP,UAArC,EAAiDH,QAAjD;AACH,SAFD,MAGK;AACD,iBAAO1B,mBAAmB,CAACoC,gBAApB,CAAqCP,UAArC,CAAP;AACH;AACJ;AAj6BgB;AAAA;AAAA,4BAk6BXL,gBAl6BW,EAk6BOC,iBAl6BP,EAk6B0BC,QAl6B1B,EAk6BoC;AACjD,YAAIC,MAAM,GAAIH,gBAAgB,IAAI,EAAlC;AACA,YAAIpB,OAAO,GAAIqB,iBAAiB,IAAI,EAApC;;AACA,YAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;AACxCE,UAAAA,QAAQ,GAAGF,gBAAX;AACAG,UAAAA,MAAM,GAAG,EAAT;AACAvB,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAI,OAAOqB,iBAAP,KAA6B,UAAjC,EAA6C;AACzCC,UAAAA,QAAQ,GAAGD,iBAAX;AACArB,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAMwB,OAAO,GAAGxB,OAAO,CAACwB,OAAR,IAAmB,6BAAnC;AACA,YAAMC,UAAU,GAAG;AACfzB,UAAAA,OAAO,EAAER,MAAM,CAACkC,MAAP,CAAc;AACnBC,YAAAA,GAAG,EAAE,CAACH,OAAO,GACT,6HADC,EAEAI,OAFA,CAEQ,cAFR,EAEwB,IAFxB,CADc;AAInBC,YAAAA,MAAM,EAAE;AAJW,WAAd,EAKN7B,OALM,CADM;AAOfuB,UAAAA,MAPe;AAQfO,UAAAA,cAAc,EAAE,CAAC,WAAD,EAAc,eAAd,EAA+B,WAA/B,EAA4C,cAA5C,CARD;AASfC,UAAAA,UAAU,EAAE,CAAC,WAAD,EAAc,cAAd,EAA8B,WAA9B,EAA2C,eAA3C,CATG;AAUf7B,UAAAA,OAAO,EAAE,KAAKA;AAVC,SAAnB;;AAYA,YAAIoB,QAAJ,EAAc;AACV1B,UAAAA,mBAAmB,CAACoC,gBAApB,CAAqCP,UAArC,EAAiDH,QAAjD;AACH,SAFD,MAGK;AACD,iBAAO1B,mBAAmB,CAACoC,gBAApB,CAAqCP,UAArC,CAAP;AACH;AACJ;AAj8BgB;AAAA;AAAA,6BAk8BVL,gBAl8BU,EAk8BQC,iBAl8BR,EAk8B2BC,QAl8B3B,EAk8BqC;AAClD,YAAIC,MAAM,GAAIH,gBAAgB,IAAI,EAAlC;AACA,YAAIpB,OAAO,GAAIqB,iBAAiB,IAAI,EAApC;;AACA,YAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;AACxCE,UAAAA,QAAQ,GAAGF,gBAAX;AACAG,UAAAA,MAAM,GAAG,EAAT;AACAvB,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAI,OAAOqB,iBAAP,KAA6B,UAAjC,EAA6C;AACzCC,UAAAA,QAAQ,GAAGD,iBAAX;AACArB,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAMwB,OAAO,GAAGxB,OAAO,CAACwB,OAAR,IAAmB,6BAAnC;AACA,YAAMC,UAAU,GAAG;AACfzB,UAAAA,OAAO,EAAER,MAAM,CAACkC,MAAP,CAAc;AACnBC,YAAAA,GAAG,EAAE,CAACH,OAAO,GACT,6HADC,EAEAI,OAFA,CAEQ,cAFR,EAEwB,IAFxB,CADc;AAInBC,YAAAA,MAAM,EAAE;AAJW,WAAd,EAKN7B,OALM,CADM;AAOfuB,UAAAA,MAPe;AAQfO,UAAAA,cAAc,EAAE,CAAC,WAAD,EAAc,eAAd,EAA+B,WAA/B,EAA4C,cAA5C,CARD;AASfC,UAAAA,UAAU,EAAE,CAAC,WAAD,EAAc,cAAd,EAA8B,WAA9B,EAA2C,eAA3C,CATG;AAUf7B,UAAAA,OAAO,EAAE,KAAKA;AAVC,SAAnB;;AAYA,YAAIoB,QAAJ,EAAc;AACV1B,UAAAA,mBAAmB,CAACoC,gBAApB,CAAqCP,UAArC,EAAiDH,QAAjD;AACH,SAFD,MAGK;AACD,iBAAO1B,mBAAmB,CAACoC,gBAApB,CAAqCP,UAArC,CAAP;AACH;AACJ;AAj+BgB;;AAAA;AAAA;;AAm+BrB3B,EAAAA,YAAY,CAACkD,+BAAb,GAA+CA,+BAA/C;;AAn+BqB,MAo+BfE,2BAp+Be;AAq+BjB,yCAAYhD,OAAZ,EAAqB;AAAA;;AACjB,WAAKA,OAAL,GAAeA,OAAf;AACH;;AAv+BgB;AAAA;AAAA,8BAw+BVkB,gBAx+BU,EAw+BQC,iBAx+BR,EAw+B2BC,QAx+B3B,EAw+BqC;AAClD,YAAIC,MAAM,GAAIH,gBAAgB,IAAI,EAAlC;AACA,YAAIpB,OAAO,GAAIqB,iBAAiB,IAAI,EAApC;;AACA,YAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;AACxCE,UAAAA,QAAQ,GAAGF,gBAAX;AACAG,UAAAA,MAAM,GAAG,EAAT;AACAvB,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAI,OAAOqB,iBAAP,KAA6B,UAAjC,EAA6C;AACzCC,UAAAA,QAAQ,GAAGD,iBAAX;AACArB,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAMwB,OAAO,GAAGxB,OAAO,CAACwB,OAAR,IAAmB,6BAAnC;AACA,YAAMC,UAAU,GAAG;AACfzB,UAAAA,OAAO,EAAER,MAAM,CAACkC,MAAP,CAAc;AACnBC,YAAAA,GAAG,EAAE,CAACH,OAAO,GACT,kEADC,EAEAI,OAFA,CAEQ,cAFR,EAEwB,IAFxB,CADc;AAInBC,YAAAA,MAAM,EAAE;AAJW,WAAd,EAKN7B,OALM,CADM;AAOfuB,UAAAA,MAPe;AAQfO,UAAAA,cAAc,EAAE,CAAC,WAAD,EAAc,UAAd,CARD;AASfC,UAAAA,UAAU,EAAE,CAAC,WAAD,EAAc,UAAd,CATG;AAUf7B,UAAAA,OAAO,EAAE,KAAKA;AAVC,SAAnB;;AAYA,YAAIoB,QAAJ,EAAc;AACV1B,UAAAA,mBAAmB,CAACoC,gBAApB,CAAqCP,UAArC,EAAiDH,QAAjD;AACH,SAFD,MAGK;AACD,iBAAO1B,mBAAmB,CAACoC,gBAApB,CAAqCP,UAArC,CAAP;AACH;AACJ;AAvgCgB;AAAA;AAAA,0BAwgCbL,gBAxgCa,EAwgCKC,iBAxgCL,EAwgCwBC,QAxgCxB,EAwgCkC;AAC/C,YAAIC,MAAM,GAAIH,gBAAgB,IAAI,EAAlC;AACA,YAAIpB,OAAO,GAAIqB,iBAAiB,IAAI,EAApC;;AACA,YAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;AACxCE,UAAAA,QAAQ,GAAGF,gBAAX;AACAG,UAAAA,MAAM,GAAG,EAAT;AACAvB,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAI,OAAOqB,iBAAP,KAA6B,UAAjC,EAA6C;AACzCC,UAAAA,QAAQ,GAAGD,iBAAX;AACArB,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAMwB,OAAO,GAAGxB,OAAO,CAACwB,OAAR,IAAmB,6BAAnC;AACA,YAAMC,UAAU,GAAG;AACfzB,UAAAA,OAAO,EAAER,MAAM,CAACkC,MAAP,CAAc;AACnBC,YAAAA,GAAG,EAAE,CAACH,OAAO,GACT,kEADC,EAEAI,OAFA,CAEQ,cAFR,EAEwB,IAFxB,CADc;AAInBC,YAAAA,MAAM,EAAE;AAJW,WAAd,EAKN7B,OALM,CADM;AAOfuB,UAAAA,MAPe;AAQfO,UAAAA,cAAc,EAAE,CAAC,WAAD,EAAc,UAAd,CARD;AASfC,UAAAA,UAAU,EAAE,CAAC,WAAD,EAAc,UAAd,CATG;AAUf7B,UAAAA,OAAO,EAAE,KAAKA;AAVC,SAAnB;;AAYA,YAAIoB,QAAJ,EAAc;AACV1B,UAAAA,mBAAmB,CAACoC,gBAApB,CAAqCP,UAArC,EAAiDH,QAAjD;AACH,SAFD,MAGK;AACD,iBAAO1B,mBAAmB,CAACoC,gBAApB,CAAqCP,UAArC,CAAP;AACH;AACJ;AAviCgB;AAAA;AAAA,6BAwiCVL,gBAxiCU,EAwiCQC,iBAxiCR,EAwiC2BC,QAxiC3B,EAwiCqC;AAClD,YAAIC,MAAM,GAAIH,gBAAgB,IAAI,EAAlC;AACA,YAAIpB,OAAO,GAAIqB,iBAAiB,IAAI,EAApC;;AACA,YAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;AACxCE,UAAAA,QAAQ,GAAGF,gBAAX;AACAG,UAAAA,MAAM,GAAG,EAAT;AACAvB,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAI,OAAOqB,iBAAP,KAA6B,UAAjC,EAA6C;AACzCC,UAAAA,QAAQ,GAAGD,iBAAX;AACArB,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAMwB,OAAO,GAAGxB,OAAO,CAACwB,OAAR,IAAmB,6BAAnC;AACA,YAAMC,UAAU,GAAG;AACfzB,UAAAA,OAAO,EAAER,MAAM,CAACkC,MAAP,CAAc;AACnBC,YAAAA,GAAG,EAAE,CAACH,OAAO,GACT,uDADC,EAEAI,OAFA,CAEQ,cAFR,EAEwB,IAFxB,CADc;AAInBC,YAAAA,MAAM,EAAE;AAJW,WAAd,EAKN7B,OALM,CADM;AAOfuB,UAAAA,MAPe;AAQfO,UAAAA,cAAc,EAAE,CAAC,WAAD,CARD;AASfC,UAAAA,UAAU,EAAE,CAAC,WAAD,CATG;AAUf7B,UAAAA,OAAO,EAAE,KAAKA;AAVC,SAAnB;;AAYA,YAAIoB,QAAJ,EAAc;AACV1B,UAAAA,mBAAmB,CAACoC,gBAApB,CAAqCP,UAArC,EAAiDH,QAAjD;AACH,SAFD,MAGK;AACD,iBAAO1B,mBAAmB,CAACoC,gBAApB,CAAqCP,UAArC,CAAP;AACH;AACJ;AAvkCgB;AAAA;AAAA,2BAwkCZL,gBAxkCY,EAwkCMC,iBAxkCN,EAwkCyBC,QAxkCzB,EAwkCmC;AAChD,YAAIC,MAAM,GAAIH,gBAAgB,IAAI,EAAlC;AACA,YAAIpB,OAAO,GAAIqB,iBAAiB,IAAI,EAApC;;AACA,YAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;AACxCE,UAAAA,QAAQ,GAAGF,gBAAX;AACAG,UAAAA,MAAM,GAAG,EAAT;AACAvB,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAI,OAAOqB,iBAAP,KAA6B,UAAjC,EAA6C;AACzCC,UAAAA,QAAQ,GAAGD,iBAAX;AACArB,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAMwB,OAAO,GAAGxB,OAAO,CAACwB,OAAR,IAAmB,6BAAnC;AACA,YAAMC,UAAU,GAAG;AACfzB,UAAAA,OAAO,EAAER,MAAM,CAACkC,MAAP,CAAc;AACnBC,YAAAA,GAAG,EAAE,CAACH,OAAO,GACT,uDADC,EAEAI,OAFA,CAEQ,cAFR,EAEwB,IAFxB,CADc;AAInBC,YAAAA,MAAM,EAAE;AAJW,WAAd,EAKN7B,OALM,CADM;AAOfuB,UAAAA,MAPe;AAQfO,UAAAA,cAAc,EAAE,CAAC,WAAD,CARD;AASfC,UAAAA,UAAU,EAAE,CAAC,WAAD,CATG;AAUf7B,UAAAA,OAAO,EAAE,KAAKA;AAVC,SAAnB;;AAYA,YAAIoB,QAAJ,EAAc;AACV1B,UAAAA,mBAAmB,CAACoC,gBAApB,CAAqCP,UAArC,EAAiDH,QAAjD;AACH,SAFD,MAGK;AACD,iBAAO1B,mBAAmB,CAACoC,gBAApB,CAAqCP,UAArC,CAAP;AACH;AACJ;AAvmCgB;AAAA;AAAA,4BAwmCXL,gBAxmCW,EAwmCOC,iBAxmCP,EAwmC0BC,QAxmC1B,EAwmCoC;AACjD,YAAIC,MAAM,GAAIH,gBAAgB,IAAI,EAAlC;AACA,YAAIpB,OAAO,GAAIqB,iBAAiB,IAAI,EAApC;;AACA,YAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;AACxCE,UAAAA,QAAQ,GAAGF,gBAAX;AACAG,UAAAA,MAAM,GAAG,EAAT;AACAvB,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAI,OAAOqB,iBAAP,KAA6B,UAAjC,EAA6C;AACzCC,UAAAA,QAAQ,GAAGD,iBAAX;AACArB,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAMwB,OAAO,GAAGxB,OAAO,CAACwB,OAAR,IAAmB,6BAAnC;AACA,YAAMC,UAAU,GAAG;AACfzB,UAAAA,OAAO,EAAER,MAAM,CAACkC,MAAP,CAAc;AACnBC,YAAAA,GAAG,EAAE,CAACH,OAAO,GACT,kEADC,EAEAI,OAFA,CAEQ,cAFR,EAEwB,IAFxB,CADc;AAInBC,YAAAA,MAAM,EAAE;AAJW,WAAd,EAKN7B,OALM,CADM;AAOfuB,UAAAA,MAPe;AAQfO,UAAAA,cAAc,EAAE,CAAC,WAAD,EAAc,UAAd,CARD;AASfC,UAAAA,UAAU,EAAE,CAAC,WAAD,EAAc,UAAd,CATG;AAUf7B,UAAAA,OAAO,EAAE,KAAKA;AAVC,SAAnB;;AAYA,YAAIoB,QAAJ,EAAc;AACV1B,UAAAA,mBAAmB,CAACoC,gBAApB,CAAqCP,UAArC,EAAiDH,QAAjD;AACH,SAFD,MAGK;AACD,iBAAO1B,mBAAmB,CAACoC,gBAApB,CAAqCP,UAArC,CAAP;AACH;AACJ;AAvoCgB;AAAA;AAAA,6BAwoCVL,gBAxoCU,EAwoCQC,iBAxoCR,EAwoC2BC,QAxoC3B,EAwoCqC;AAClD,YAAIC,MAAM,GAAIH,gBAAgB,IAAI,EAAlC;AACA,YAAIpB,OAAO,GAAIqB,iBAAiB,IAAI,EAApC;;AACA,YAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;AACxCE,UAAAA,QAAQ,GAAGF,gBAAX;AACAG,UAAAA,MAAM,GAAG,EAAT;AACAvB,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAI,OAAOqB,iBAAP,KAA6B,UAAjC,EAA6C;AACzCC,UAAAA,QAAQ,GAAGD,iBAAX;AACArB,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAMwB,OAAO,GAAGxB,OAAO,CAACwB,OAAR,IAAmB,6BAAnC;AACA,YAAMC,UAAU,GAAG;AACfzB,UAAAA,OAAO,EAAER,MAAM,CAACkC,MAAP,CAAc;AACnBC,YAAAA,GAAG,EAAE,CAACH,OAAO,GACT,kEADC,EAEAI,OAFA,CAEQ,cAFR,EAEwB,IAFxB,CADc;AAInBC,YAAAA,MAAM,EAAE;AAJW,WAAd,EAKN7B,OALM,CADM;AAOfuB,UAAAA,MAPe;AAQfO,UAAAA,cAAc,EAAE,CAAC,WAAD,EAAc,UAAd,CARD;AASfC,UAAAA,UAAU,EAAE,CAAC,WAAD,EAAc,UAAd,CATG;AAUf7B,UAAAA,OAAO,EAAE,KAAKA;AAVC,SAAnB;;AAYA,YAAIoB,QAAJ,EAAc;AACV1B,UAAAA,mBAAmB,CAACoC,gBAApB,CAAqCP,UAArC,EAAiDH,QAAjD;AACH,SAFD,MAGK;AACD,iBAAO1B,mBAAmB,CAACoC,gBAApB,CAAqCP,UAArC,CAAP;AACH;AACJ;AAvqCgB;;AAAA;AAAA;;AAyqCrB3B,EAAAA,YAAY,CAACoD,2BAAb,GAA2CA,2BAA3C;;AAzqCqB,MA0qCfE,yBA1qCe;AA2qCjB,uCAAYlD,OAAZ,EAAqB;AAAA;;AACjB,WAAKA,OAAL,GAAeA,OAAf;AACH;;AA7qCgB;AAAA;AAAA,0BA8qCbkB,gBA9qCa,EA8qCKC,iBA9qCL,EA8qCwBC,QA9qCxB,EA8qCkC;AAC/C,YAAIC,MAAM,GAAIH,gBAAgB,IAAI,EAAlC;AACA,YAAIpB,OAAO,GAAIqB,iBAAiB,IAAI,EAApC;;AACA,YAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;AACxCE,UAAAA,QAAQ,GAAGF,gBAAX;AACAG,UAAAA,MAAM,GAAG,EAAT;AACAvB,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAI,OAAOqB,iBAAP,KAA6B,UAAjC,EAA6C;AACzCC,UAAAA,QAAQ,GAAGD,iBAAX;AACArB,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAMwB,OAAO,GAAGxB,OAAO,CAACwB,OAAR,IAAmB,6BAAnC;AACA,YAAMC,UAAU,GAAG;AACfzB,UAAAA,OAAO,EAAER,MAAM,CAACkC,MAAP,CAAc;AACnBC,YAAAA,GAAG,EAAE,CAACH,OAAO,GACT,iHADC,EAEAI,OAFA,CAEQ,cAFR,EAEwB,IAFxB,CADc;AAInBC,YAAAA,MAAM,EAAE;AAJW,WAAd,EAKN7B,OALM,CADM;AAOfuB,UAAAA,MAPe;AAQfO,UAAAA,cAAc,EAAE,CAAC,WAAD,EAAc,eAAd,EAA+B,WAA/B,EAA4C,QAA5C,CARD;AASfC,UAAAA,UAAU,EAAE,CAAC,WAAD,EAAc,QAAd,EAAwB,WAAxB,EAAqC,eAArC,CATG;AAUf7B,UAAAA,OAAO,EAAE,KAAKA;AAVC,SAAnB;;AAYA,YAAIoB,QAAJ,EAAc;AACV1B,UAAAA,mBAAmB,CAACoC,gBAApB,CAAqCP,UAArC,EAAiDH,QAAjD;AACH,SAFD,MAGK;AACD,iBAAO1B,mBAAmB,CAACoC,gBAApB,CAAqCP,UAArC,CAAP;AACH;AACJ;AA7sCgB;AAAA;AAAA,6BA8sCVL,gBA9sCU,EA8sCQC,iBA9sCR,EA8sC2BC,QA9sC3B,EA8sCqC;AAClD,YAAIC,MAAM,GAAIH,gBAAgB,IAAI,EAAlC;AACA,YAAIpB,OAAO,GAAIqB,iBAAiB,IAAI,EAApC;;AACA,YAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;AACxCE,UAAAA,QAAQ,GAAGF,gBAAX;AACAG,UAAAA,MAAM,GAAG,EAAT;AACAvB,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAI,OAAOqB,iBAAP,KAA6B,UAAjC,EAA6C;AACzCC,UAAAA,QAAQ,GAAGD,iBAAX;AACArB,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAMwB,OAAO,GAAGxB,OAAO,CAACwB,OAAR,IAAmB,6BAAnC;AACA,YAAMC,UAAU,GAAG;AACfzB,UAAAA,OAAO,EAAER,MAAM,CAACkC,MAAP,CAAc;AACnBC,YAAAA,GAAG,EAAE,CAACH,OAAO,GACT,wGADC,EAEAI,OAFA,CAEQ,cAFR,EAEwB,IAFxB,CADc;AAInBC,YAAAA,MAAM,EAAE;AAJW,WAAd,EAKN7B,OALM,CADM;AAOfuB,UAAAA,MAPe;AAQfO,UAAAA,cAAc,EAAE,CAAC,WAAD,EAAc,eAAd,EAA+B,WAA/B,CARD;AASfC,UAAAA,UAAU,EAAE,CAAC,WAAD,EAAc,WAAd,EAA2B,eAA3B,CATG;AAUf7B,UAAAA,OAAO,EAAE,KAAKA;AAVC,SAAnB;;AAYA,YAAIoB,QAAJ,EAAc;AACV1B,UAAAA,mBAAmB,CAACoC,gBAApB,CAAqCP,UAArC,EAAiDH,QAAjD;AACH,SAFD,MAGK;AACD,iBAAO1B,mBAAmB,CAACoC,gBAApB,CAAqCP,UAArC,CAAP;AACH;AACJ;AA7uCgB;AAAA;AAAA,2BA8uCZL,gBA9uCY,EA8uCMC,iBA9uCN,EA8uCyBC,QA9uCzB,EA8uCmC;AAChD,YAAIC,MAAM,GAAIH,gBAAgB,IAAI,EAAlC;AACA,YAAIpB,OAAO,GAAIqB,iBAAiB,IAAI,EAApC;;AACA,YAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;AACxCE,UAAAA,QAAQ,GAAGF,gBAAX;AACAG,UAAAA,MAAM,GAAG,EAAT;AACAvB,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAI,OAAOqB,iBAAP,KAA6B,UAAjC,EAA6C;AACzCC,UAAAA,QAAQ,GAAGD,iBAAX;AACArB,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAMwB,OAAO,GAAGxB,OAAO,CAACwB,OAAR,IAAmB,6BAAnC;AACA,YAAMC,UAAU,GAAG;AACfzB,UAAAA,OAAO,EAAER,MAAM,CAACkC,MAAP,CAAc;AACnBC,YAAAA,GAAG,EAAE,CAACH,OAAO,GACT,wGADC,EAEAI,OAFA,CAEQ,cAFR,EAEwB,IAFxB,CADc;AAInBC,YAAAA,MAAM,EAAE;AAJW,WAAd,EAKN7B,OALM,CADM;AAOfuB,UAAAA,MAPe;AAQfO,UAAAA,cAAc,EAAE,CAAC,WAAD,EAAc,eAAd,EAA+B,WAA/B,CARD;AASfC,UAAAA,UAAU,EAAE,CAAC,WAAD,EAAc,WAAd,EAA2B,eAA3B,CATG;AAUf7B,UAAAA,OAAO,EAAE,KAAKA;AAVC,SAAnB;;AAYA,YAAIoB,QAAJ,EAAc;AACV1B,UAAAA,mBAAmB,CAACoC,gBAApB,CAAqCP,UAArC,EAAiDH,QAAjD;AACH,SAFD,MAGK;AACD,iBAAO1B,mBAAmB,CAACoC,gBAApB,CAAqCP,UAArC,CAAP;AACH;AACJ;AA7wCgB;AAAA;AAAA,4BA8wCXL,gBA9wCW,EA8wCOC,iBA9wCP,EA8wC0BC,QA9wC1B,EA8wCoC;AACjD,YAAIC,MAAM,GAAIH,gBAAgB,IAAI,EAAlC;AACA,YAAIpB,OAAO,GAAIqB,iBAAiB,IAAI,EAApC;;AACA,YAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;AACxCE,UAAAA,QAAQ,GAAGF,gBAAX;AACAG,UAAAA,MAAM,GAAG,EAAT;AACAvB,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAI,OAAOqB,iBAAP,KAA6B,UAAjC,EAA6C;AACzCC,UAAAA,QAAQ,GAAGD,iBAAX;AACArB,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAMwB,OAAO,GAAGxB,OAAO,CAACwB,OAAR,IAAmB,6BAAnC;AACA,YAAMC,UAAU,GAAG;AACfzB,UAAAA,OAAO,EAAER,MAAM,CAACkC,MAAP,CAAc;AACnBC,YAAAA,GAAG,EAAE,CAACH,OAAO,GACT,iHADC,EAEAI,OAFA,CAEQ,cAFR,EAEwB,IAFxB,CADc;AAInBC,YAAAA,MAAM,EAAE;AAJW,WAAd,EAKN7B,OALM,CADM;AAOfuB,UAAAA,MAPe;AAQfO,UAAAA,cAAc,EAAE,CAAC,WAAD,EAAc,eAAd,EAA+B,WAA/B,EAA4C,QAA5C,CARD;AASfC,UAAAA,UAAU,EAAE,CAAC,WAAD,EAAc,QAAd,EAAwB,WAAxB,EAAqC,eAArC,CATG;AAUf7B,UAAAA,OAAO,EAAE,KAAKA;AAVC,SAAnB;;AAYA,YAAIoB,QAAJ,EAAc;AACV1B,UAAAA,mBAAmB,CAACoC,gBAApB,CAAqCP,UAArC,EAAiDH,QAAjD;AACH,SAFD,MAGK;AACD,iBAAO1B,mBAAmB,CAACoC,gBAApB,CAAqCP,UAArC,CAAP;AACH;AACJ;AA7yCgB;AAAA;AAAA,6BA8yCVL,gBA9yCU,EA8yCQC,iBA9yCR,EA8yC2BC,QA9yC3B,EA8yCqC;AAClD,YAAIC,MAAM,GAAIH,gBAAgB,IAAI,EAAlC;AACA,YAAIpB,OAAO,GAAIqB,iBAAiB,IAAI,EAApC;;AACA,YAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;AACxCE,UAAAA,QAAQ,GAAGF,gBAAX;AACAG,UAAAA,MAAM,GAAG,EAAT;AACAvB,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAI,OAAOqB,iBAAP,KAA6B,UAAjC,EAA6C;AACzCC,UAAAA,QAAQ,GAAGD,iBAAX;AACArB,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAMwB,OAAO,GAAGxB,OAAO,CAACwB,OAAR,IAAmB,6BAAnC;AACA,YAAMC,UAAU,GAAG;AACfzB,UAAAA,OAAO,EAAER,MAAM,CAACkC,MAAP,CAAc;AACnBC,YAAAA,GAAG,EAAE,CAACH,OAAO,GACT,iHADC,EAEAI,OAFA,CAEQ,cAFR,EAEwB,IAFxB,CADc;AAInBC,YAAAA,MAAM,EAAE;AAJW,WAAd,EAKN7B,OALM,CADM;AAOfuB,UAAAA,MAPe;AAQfO,UAAAA,cAAc,EAAE,CAAC,WAAD,EAAc,eAAd,EAA+B,WAA/B,EAA4C,QAA5C,CARD;AASfC,UAAAA,UAAU,EAAE,CAAC,WAAD,EAAc,QAAd,EAAwB,WAAxB,EAAqC,eAArC,CATG;AAUf7B,UAAAA,OAAO,EAAE,KAAKA;AAVC,SAAnB;;AAYA,YAAIoB,QAAJ,EAAc;AACV1B,UAAAA,mBAAmB,CAACoC,gBAApB,CAAqCP,UAArC,EAAiDH,QAAjD;AACH,SAFD,MAGK;AACD,iBAAO1B,mBAAmB,CAACoC,gBAApB,CAAqCP,UAArC,CAAP;AACH;AACJ;AA70CgB;;AAAA;AAAA;;AA+0CrB3B,EAAAA,YAAY,CAACsD,yBAAb,GAAyCA,yBAAzC;;AA/0CqB,MAg1CfE,sCAh1Ce;AAi1CjB,oDAAYpD,OAAZ,EAAqB;AAAA;;AACjB,WAAKA,OAAL,GAAeA,OAAf;AACH;;AAn1CgB;AAAA;AAAA,8BAo1CVkB,gBAp1CU,EAo1CQC,iBAp1CR,EAo1C2BC,QAp1C3B,EAo1CqC;AAClD,YAAIC,MAAM,GAAIH,gBAAgB,IAAI,EAAlC;AACA,YAAIpB,OAAO,GAAIqB,iBAAiB,IAAI,EAApC;;AACA,YAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;AACxCE,UAAAA,QAAQ,GAAGF,gBAAX;AACAG,UAAAA,MAAM,GAAG,EAAT;AACAvB,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAI,OAAOqB,iBAAP,KAA6B,UAAjC,EAA6C;AACzCC,UAAAA,QAAQ,GAAGD,iBAAX;AACArB,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAMwB,OAAO,GAAGxB,OAAO,CAACwB,OAAR,IAAmB,6BAAnC;AACA,YAAMC,UAAU,GAAG;AACfzB,UAAAA,OAAO,EAAER,MAAM,CAACkC,MAAP,CAAc;AACnBC,YAAAA,GAAG,EAAE,CAACH,OAAO,GACT,8HADC,EAEAI,OAFA,CAEQ,cAFR,EAEwB,IAFxB,CADc;AAInBC,YAAAA,MAAM,EAAE;AAJW,WAAd,EAKN7B,OALM,CADM;AAOfuB,UAAAA,MAPe;AAQfO,UAAAA,cAAc,EAAE,CAAC,WAAD,EAAc,eAAd,EAA+B,WAA/B,EAA4C,QAA5C,CARD;AASfC,UAAAA,UAAU,EAAE,CAAC,WAAD,EAAc,QAAd,EAAwB,WAAxB,EAAqC,eAArC,CATG;AAUf7B,UAAAA,OAAO,EAAE,KAAKA;AAVC,SAAnB;;AAYA,YAAIoB,QAAJ,EAAc;AACV1B,UAAAA,mBAAmB,CAACoC,gBAApB,CAAqCP,UAArC,EAAiDH,QAAjD;AACH,SAFD,MAGK;AACD,iBAAO1B,mBAAmB,CAACoC,gBAApB,CAAqCP,UAArC,CAAP;AACH;AACJ;AAn3CgB;AAAA;AAAA,0BAo3CbL,gBAp3Ca,EAo3CKC,iBAp3CL,EAo3CwBC,QAp3CxB,EAo3CkC;AAC/C,YAAIC,MAAM,GAAIH,gBAAgB,IAAI,EAAlC;AACA,YAAIpB,OAAO,GAAIqB,iBAAiB,IAAI,EAApC;;AACA,YAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;AACxCE,UAAAA,QAAQ,GAAGF,gBAAX;AACAG,UAAAA,MAAM,GAAG,EAAT;AACAvB,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAI,OAAOqB,iBAAP,KAA6B,UAAjC,EAA6C;AACzCC,UAAAA,QAAQ,GAAGD,iBAAX;AACArB,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAMwB,OAAO,GAAGxB,OAAO,CAACwB,OAAR,IAAmB,6BAAnC;AACA,YAAMC,UAAU,GAAG;AACfzB,UAAAA,OAAO,EAAER,MAAM,CAACkC,MAAP,CAAc;AACnBC,YAAAA,GAAG,EAAE,CAACH,OAAO,GACT,8HADC,EAEAI,OAFA,CAEQ,cAFR,EAEwB,IAFxB,CADc;AAInBC,YAAAA,MAAM,EAAE;AAJW,WAAd,EAKN7B,OALM,CADM;AAOfuB,UAAAA,MAPe;AAQfO,UAAAA,cAAc,EAAE,CAAC,WAAD,EAAc,eAAd,EAA+B,WAA/B,EAA4C,QAA5C,CARD;AASfC,UAAAA,UAAU,EAAE,CAAC,WAAD,EAAc,QAAd,EAAwB,WAAxB,EAAqC,eAArC,CATG;AAUf7B,UAAAA,OAAO,EAAE,KAAKA;AAVC,SAAnB;;AAYA,YAAIoB,QAAJ,EAAc;AACV1B,UAAAA,mBAAmB,CAACoC,gBAApB,CAAqCP,UAArC,EAAiDH,QAAjD;AACH,SAFD,MAGK;AACD,iBAAO1B,mBAAmB,CAACoC,gBAApB,CAAqCP,UAArC,CAAP;AACH;AACJ;AAn5CgB;AAAA;AAAA,6BAo5CVL,gBAp5CU,EAo5CQC,iBAp5CR,EAo5C2BC,QAp5C3B,EAo5CqC;AAClD,YAAIC,MAAM,GAAIH,gBAAgB,IAAI,EAAlC;AACA,YAAIpB,OAAO,GAAIqB,iBAAiB,IAAI,EAApC;;AACA,YAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;AACxCE,UAAAA,QAAQ,GAAGF,gBAAX;AACAG,UAAAA,MAAM,GAAG,EAAT;AACAvB,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAI,OAAOqB,iBAAP,KAA6B,UAAjC,EAA6C;AACzCC,UAAAA,QAAQ,GAAGD,iBAAX;AACArB,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAMwB,OAAO,GAAGxB,OAAO,CAACwB,OAAR,IAAmB,6BAAnC;AACA,YAAMC,UAAU,GAAG;AACfzB,UAAAA,OAAO,EAAER,MAAM,CAACkC,MAAP,CAAc;AACnBC,YAAAA,GAAG,EAAE,CAACH,OAAO,GACT,qHADC,EAEAI,OAFA,CAEQ,cAFR,EAEwB,IAFxB,CADc;AAInBC,YAAAA,MAAM,EAAE;AAJW,WAAd,EAKN7B,OALM,CADM;AAOfuB,UAAAA,MAPe;AAQfO,UAAAA,cAAc,EAAE,CAAC,WAAD,EAAc,eAAd,EAA+B,WAA/B,CARD;AASfC,UAAAA,UAAU,EAAE,CAAC,WAAD,EAAc,WAAd,EAA2B,eAA3B,CATG;AAUf7B,UAAAA,OAAO,EAAE,KAAKA;AAVC,SAAnB;;AAYA,YAAIoB,QAAJ,EAAc;AACV1B,UAAAA,mBAAmB,CAACoC,gBAApB,CAAqCP,UAArC,EAAiDH,QAAjD;AACH,SAFD,MAGK;AACD,iBAAO1B,mBAAmB,CAACoC,gBAApB,CAAqCP,UAArC,CAAP;AACH;AACJ;AAn7CgB;AAAA;AAAA,2BAo7CZL,gBAp7CY,EAo7CMC,iBAp7CN,EAo7CyBC,QAp7CzB,EAo7CmC;AAChD,YAAIC,MAAM,GAAIH,gBAAgB,IAAI,EAAlC;AACA,YAAIpB,OAAO,GAAIqB,iBAAiB,IAAI,EAApC;;AACA,YAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;AACxCE,UAAAA,QAAQ,GAAGF,gBAAX;AACAG,UAAAA,MAAM,GAAG,EAAT;AACAvB,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAI,OAAOqB,iBAAP,KAA6B,UAAjC,EAA6C;AACzCC,UAAAA,QAAQ,GAAGD,iBAAX;AACArB,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAMwB,OAAO,GAAGxB,OAAO,CAACwB,OAAR,IAAmB,6BAAnC;AACA,YAAMC,UAAU,GAAG;AACfzB,UAAAA,OAAO,EAAER,MAAM,CAACkC,MAAP,CAAc;AACnBC,YAAAA,GAAG,EAAE,CAACH,OAAO,GACT,qHADC,EAEAI,OAFA,CAEQ,cAFR,EAEwB,IAFxB,CADc;AAInBC,YAAAA,MAAM,EAAE;AAJW,WAAd,EAKN7B,OALM,CADM;AAOfuB,UAAAA,MAPe;AAQfO,UAAAA,cAAc,EAAE,CAAC,WAAD,EAAc,eAAd,EAA+B,WAA/B,CARD;AASfC,UAAAA,UAAU,EAAE,CAAC,WAAD,EAAc,WAAd,EAA2B,eAA3B,CATG;AAUf7B,UAAAA,OAAO,EAAE,KAAKA;AAVC,SAAnB;;AAYA,YAAIoB,QAAJ,EAAc;AACV1B,UAAAA,mBAAmB,CAACoC,gBAApB,CAAqCP,UAArC,EAAiDH,QAAjD;AACH,SAFD,MAGK;AACD,iBAAO1B,mBAAmB,CAACoC,gBAApB,CAAqCP,UAArC,CAAP;AACH;AACJ;AAn9CgB;AAAA;AAAA,4BAo9CXL,gBAp9CW,EAo9COC,iBAp9CP,EAo9C0BC,QAp9C1B,EAo9CoC;AACjD,YAAIC,MAAM,GAAIH,gBAAgB,IAAI,EAAlC;AACA,YAAIpB,OAAO,GAAIqB,iBAAiB,IAAI,EAApC;;AACA,YAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;AACxCE,UAAAA,QAAQ,GAAGF,gBAAX;AACAG,UAAAA,MAAM,GAAG,EAAT;AACAvB,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAI,OAAOqB,iBAAP,KAA6B,UAAjC,EAA6C;AACzCC,UAAAA,QAAQ,GAAGD,iBAAX;AACArB,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAMwB,OAAO,GAAGxB,OAAO,CAACwB,OAAR,IAAmB,6BAAnC;AACA,YAAMC,UAAU,GAAG;AACfzB,UAAAA,OAAO,EAAER,MAAM,CAACkC,MAAP,CAAc;AACnBC,YAAAA,GAAG,EAAE,CAACH,OAAO,GACT,8HADC,EAEAI,OAFA,CAEQ,cAFR,EAEwB,IAFxB,CADc;AAInBC,YAAAA,MAAM,EAAE;AAJW,WAAd,EAKN7B,OALM,CADM;AAOfuB,UAAAA,MAPe;AAQfO,UAAAA,cAAc,EAAE,CAAC,WAAD,EAAc,eAAd,EAA+B,WAA/B,EAA4C,QAA5C,CARD;AASfC,UAAAA,UAAU,EAAE,CAAC,WAAD,EAAc,QAAd,EAAwB,WAAxB,EAAqC,eAArC,CATG;AAUf7B,UAAAA,OAAO,EAAE,KAAKA;AAVC,SAAnB;;AAYA,YAAIoB,QAAJ,EAAc;AACV1B,UAAAA,mBAAmB,CAACoC,gBAApB,CAAqCP,UAArC,EAAiDH,QAAjD;AACH,SAFD,MAGK;AACD,iBAAO1B,mBAAmB,CAACoC,gBAApB,CAAqCP,UAArC,CAAP;AACH;AACJ;AAn/CgB;AAAA;AAAA,6BAo/CVL,gBAp/CU,EAo/CQC,iBAp/CR,EAo/C2BC,QAp/C3B,EAo/CqC;AAClD,YAAIC,MAAM,GAAIH,gBAAgB,IAAI,EAAlC;AACA,YAAIpB,OAAO,GAAIqB,iBAAiB,IAAI,EAApC;;AACA,YAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;AACxCE,UAAAA,QAAQ,GAAGF,gBAAX;AACAG,UAAAA,MAAM,GAAG,EAAT;AACAvB,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAI,OAAOqB,iBAAP,KAA6B,UAAjC,EAA6C;AACzCC,UAAAA,QAAQ,GAAGD,iBAAX;AACArB,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAMwB,OAAO,GAAGxB,OAAO,CAACwB,OAAR,IAAmB,6BAAnC;AACA,YAAMC,UAAU,GAAG;AACfzB,UAAAA,OAAO,EAAER,MAAM,CAACkC,MAAP,CAAc;AACnBC,YAAAA,GAAG,EAAE,CAACH,OAAO,GACT,8HADC,EAEAI,OAFA,CAEQ,cAFR,EAEwB,IAFxB,CADc;AAInBC,YAAAA,MAAM,EAAE;AAJW,WAAd,EAKN7B,OALM,CADM;AAOfuB,UAAAA,MAPe;AAQfO,UAAAA,cAAc,EAAE,CAAC,WAAD,EAAc,eAAd,EAA+B,WAA/B,EAA4C,QAA5C,CARD;AASfC,UAAAA,UAAU,EAAE,CAAC,WAAD,EAAc,QAAd,EAAwB,WAAxB,EAAqC,eAArC,CATG;AAUf7B,UAAAA,OAAO,EAAE,KAAKA;AAVC,SAAnB;;AAYA,YAAIoB,QAAJ,EAAc;AACV1B,UAAAA,mBAAmB,CAACoC,gBAApB,CAAqCP,UAArC,EAAiDH,QAAjD;AACH,SAFD,MAGK;AACD,iBAAO1B,mBAAmB,CAACoC,gBAApB,CAAqCP,UAArC,CAAP;AACH;AACJ;AAnhDgB;;AAAA;AAAA;;AAqhDrB3B,EAAAA,YAAY,CAACwD,sCAAb,GAAsDA,sCAAtD;;AArhDqB,MAshDfE,4BAthDe;AAuhDjB,0CAAYtD,OAAZ,EAAqB;AAAA;;AACjB,WAAKA,OAAL,GAAeA,OAAf;AACH;;AAzhDgB;AAAA;AAAA,8BA0hDVkB,gBA1hDU,EA0hDQC,iBA1hDR,EA0hD2BC,QA1hD3B,EA0hDqC;AAClD,YAAIC,MAAM,GAAIH,gBAAgB,IAAI,EAAlC;AACA,YAAIpB,OAAO,GAAIqB,iBAAiB,IAAI,EAApC;;AACA,YAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;AACxCE,UAAAA,QAAQ,GAAGF,gBAAX;AACAG,UAAAA,MAAM,GAAG,EAAT;AACAvB,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAI,OAAOqB,iBAAP,KAA6B,UAAjC,EAA6C;AACzCC,UAAAA,QAAQ,GAAGD,iBAAX;AACArB,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAMwB,OAAO,GAAGxB,OAAO,CAACwB,OAAR,IAAmB,6BAAnC;AACA,YAAMC,UAAU,GAAG;AACfzB,UAAAA,OAAO,EAAER,MAAM,CAACkC,MAAP,CAAc;AACnBC,YAAAA,GAAG,EAAE,CAACH,OAAO,GACT,kGADC,EAEAI,OAFA,CAEQ,cAFR,EAEwB,IAFxB,CADc;AAInBC,YAAAA,MAAM,EAAE;AAJW,WAAd,EAKN7B,OALM,CADM;AAOfuB,UAAAA,MAPe;AAQfO,UAAAA,cAAc,EAAE,CAAC,WAAD,EAAc,eAAd,EAA+B,WAA/B,CARD;AASfC,UAAAA,UAAU,EAAE,CAAC,WAAD,EAAc,WAAd,EAA2B,eAA3B,CATG;AAUf7B,UAAAA,OAAO,EAAE,KAAKA;AAVC,SAAnB;;AAYA,YAAIoB,QAAJ,EAAc;AACV1B,UAAAA,mBAAmB,CAACoC,gBAApB,CAAqCP,UAArC,EAAiDH,QAAjD;AACH,SAFD,MAGK;AACD,iBAAO1B,mBAAmB,CAACoC,gBAApB,CAAqCP,UAArC,CAAP;AACH;AACJ;AAzjDgB;AAAA;AAAA,0BA0jDbL,gBA1jDa,EA0jDKC,iBA1jDL,EA0jDwBC,QA1jDxB,EA0jDkC;AAC/C,YAAIC,MAAM,GAAIH,gBAAgB,IAAI,EAAlC;AACA,YAAIpB,OAAO,GAAIqB,iBAAiB,IAAI,EAApC;;AACA,YAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;AACxCE,UAAAA,QAAQ,GAAGF,gBAAX;AACAG,UAAAA,MAAM,GAAG,EAAT;AACAvB,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAI,OAAOqB,iBAAP,KAA6B,UAAjC,EAA6C;AACzCC,UAAAA,QAAQ,GAAGD,iBAAX;AACArB,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAMwB,OAAO,GAAGxB,OAAO,CAACwB,OAAR,IAAmB,6BAAnC;AACA,YAAMC,UAAU,GAAG;AACfzB,UAAAA,OAAO,EAAER,MAAM,CAACkC,MAAP,CAAc;AACnBC,YAAAA,GAAG,EAAE,CAACH,OAAO,GACT,kGADC,EAEAI,OAFA,CAEQ,cAFR,EAEwB,IAFxB,CADc;AAInBC,YAAAA,MAAM,EAAE;AAJW,WAAd,EAKN7B,OALM,CADM;AAOfuB,UAAAA,MAPe;AAQfO,UAAAA,cAAc,EAAE,CAAC,WAAD,EAAc,eAAd,EAA+B,WAA/B,CARD;AASfC,UAAAA,UAAU,EAAE,CAAC,WAAD,EAAc,WAAd,EAA2B,eAA3B,CATG;AAUf7B,UAAAA,OAAO,EAAE,KAAKA;AAVC,SAAnB;;AAYA,YAAIoB,QAAJ,EAAc;AACV1B,UAAAA,mBAAmB,CAACoC,gBAApB,CAAqCP,UAArC,EAAiDH,QAAjD;AACH,SAFD,MAGK;AACD,iBAAO1B,mBAAmB,CAACoC,gBAApB,CAAqCP,UAArC,CAAP;AACH;AACJ;AAzlDgB;AAAA;AAAA,6BA0lDVL,gBA1lDU,EA0lDQC,iBA1lDR,EA0lD2BC,QA1lD3B,EA0lDqC;AAClD,YAAIC,MAAM,GAAIH,gBAAgB,IAAI,EAAlC;AACA,YAAIpB,OAAO,GAAIqB,iBAAiB,IAAI,EAApC;;AACA,YAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;AACxCE,UAAAA,QAAQ,GAAGF,gBAAX;AACAG,UAAAA,MAAM,GAAG,EAAT;AACAvB,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAI,OAAOqB,iBAAP,KAA6B,UAAjC,EAA6C;AACzCC,UAAAA,QAAQ,GAAGD,iBAAX;AACArB,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAMwB,OAAO,GAAGxB,OAAO,CAACwB,OAAR,IAAmB,6BAAnC;AACA,YAAMC,UAAU,GAAG;AACfzB,UAAAA,OAAO,EAAER,MAAM,CAACkC,MAAP,CAAc;AACnBC,YAAAA,GAAG,EAAE,CAACH,OAAO,GACT,sFADC,EAEAI,OAFA,CAEQ,cAFR,EAEwB,IAFxB,CADc;AAInBC,YAAAA,MAAM,EAAE;AAJW,WAAd,EAKN7B,OALM,CADM;AAOfuB,UAAAA,MAPe;AAQfO,UAAAA,cAAc,EAAE,CAAC,WAAD,EAAc,eAAd,CARD;AASfC,UAAAA,UAAU,EAAE,CAAC,WAAD,EAAc,eAAd,CATG;AAUf7B,UAAAA,OAAO,EAAE,KAAKA;AAVC,SAAnB;;AAYA,YAAIoB,QAAJ,EAAc;AACV1B,UAAAA,mBAAmB,CAACoC,gBAApB,CAAqCP,UAArC,EAAiDH,QAAjD;AACH,SAFD,MAGK;AACD,iBAAO1B,mBAAmB,CAACoC,gBAApB,CAAqCP,UAArC,CAAP;AACH;AACJ;AAznDgB;AAAA;AAAA,2BA0nDZL,gBA1nDY,EA0nDMC,iBA1nDN,EA0nDyBC,QA1nDzB,EA0nDmC;AAChD,YAAIC,MAAM,GAAIH,gBAAgB,IAAI,EAAlC;AACA,YAAIpB,OAAO,GAAIqB,iBAAiB,IAAI,EAApC;;AACA,YAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;AACxCE,UAAAA,QAAQ,GAAGF,gBAAX;AACAG,UAAAA,MAAM,GAAG,EAAT;AACAvB,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAI,OAAOqB,iBAAP,KAA6B,UAAjC,EAA6C;AACzCC,UAAAA,QAAQ,GAAGD,iBAAX;AACArB,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAMwB,OAAO,GAAGxB,OAAO,CAACwB,OAAR,IAAmB,6BAAnC;AACA,YAAMC,UAAU,GAAG;AACfzB,UAAAA,OAAO,EAAER,MAAM,CAACkC,MAAP,CAAc;AACnBC,YAAAA,GAAG,EAAE,CAACH,OAAO,GACT,sFADC,EAEAI,OAFA,CAEQ,cAFR,EAEwB,IAFxB,CADc;AAInBC,YAAAA,MAAM,EAAE;AAJW,WAAd,EAKN7B,OALM,CADM;AAOfuB,UAAAA,MAPe;AAQfO,UAAAA,cAAc,EAAE,CAAC,WAAD,EAAc,eAAd,CARD;AASfC,UAAAA,UAAU,EAAE,CAAC,WAAD,EAAc,eAAd,CATG;AAUf7B,UAAAA,OAAO,EAAE,KAAKA;AAVC,SAAnB;;AAYA,YAAIoB,QAAJ,EAAc;AACV1B,UAAAA,mBAAmB,CAACoC,gBAApB,CAAqCP,UAArC,EAAiDH,QAAjD;AACH,SAFD,MAGK;AACD,iBAAO1B,mBAAmB,CAACoC,gBAApB,CAAqCP,UAArC,CAAP;AACH;AACJ;AAzpDgB;AAAA;AAAA,4BA0pDXL,gBA1pDW,EA0pDOC,iBA1pDP,EA0pD0BC,QA1pD1B,EA0pDoC;AACjD,YAAIC,MAAM,GAAIH,gBAAgB,IAAI,EAAlC;AACA,YAAIpB,OAAO,GAAIqB,iBAAiB,IAAI,EAApC;;AACA,YAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;AACxCE,UAAAA,QAAQ,GAAGF,gBAAX;AACAG,UAAAA,MAAM,GAAG,EAAT;AACAvB,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAI,OAAOqB,iBAAP,KAA6B,UAAjC,EAA6C;AACzCC,UAAAA,QAAQ,GAAGD,iBAAX;AACArB,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAMwB,OAAO,GAAGxB,OAAO,CAACwB,OAAR,IAAmB,6BAAnC;AACA,YAAMC,UAAU,GAAG;AACfzB,UAAAA,OAAO,EAAER,MAAM,CAACkC,MAAP,CAAc;AACnBC,YAAAA,GAAG,EAAE,CAACH,OAAO,GACT,kGADC,EAEAI,OAFA,CAEQ,cAFR,EAEwB,IAFxB,CADc;AAInBC,YAAAA,MAAM,EAAE;AAJW,WAAd,EAKN7B,OALM,CADM;AAOfuB,UAAAA,MAPe;AAQfO,UAAAA,cAAc,EAAE,CAAC,WAAD,EAAc,eAAd,EAA+B,WAA/B,CARD;AASfC,UAAAA,UAAU,EAAE,CAAC,WAAD,EAAc,WAAd,EAA2B,eAA3B,CATG;AAUf7B,UAAAA,OAAO,EAAE,KAAKA;AAVC,SAAnB;;AAYA,YAAIoB,QAAJ,EAAc;AACV1B,UAAAA,mBAAmB,CAACoC,gBAApB,CAAqCP,UAArC,EAAiDH,QAAjD;AACH,SAFD,MAGK;AACD,iBAAO1B,mBAAmB,CAACoC,gBAApB,CAAqCP,UAArC,CAAP;AACH;AACJ;AAzrDgB;AAAA;AAAA,6BA0rDVL,gBA1rDU,EA0rDQC,iBA1rDR,EA0rD2BC,QA1rD3B,EA0rDqC;AAClD,YAAIC,MAAM,GAAIH,gBAAgB,IAAI,EAAlC;AACA,YAAIpB,OAAO,GAAIqB,iBAAiB,IAAI,EAApC;;AACA,YAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;AACxCE,UAAAA,QAAQ,GAAGF,gBAAX;AACAG,UAAAA,MAAM,GAAG,EAAT;AACAvB,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAI,OAAOqB,iBAAP,KAA6B,UAAjC,EAA6C;AACzCC,UAAAA,QAAQ,GAAGD,iBAAX;AACArB,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAMwB,OAAO,GAAGxB,OAAO,CAACwB,OAAR,IAAmB,6BAAnC;AACA,YAAMC,UAAU,GAAG;AACfzB,UAAAA,OAAO,EAAER,MAAM,CAACkC,MAAP,CAAc;AACnBC,YAAAA,GAAG,EAAE,CAACH,OAAO,GACT,kGADC,EAEAI,OAFA,CAEQ,cAFR,EAEwB,IAFxB,CADc;AAInBC,YAAAA,MAAM,EAAE;AAJW,WAAd,EAKN7B,OALM,CADM;AAOfuB,UAAAA,MAPe;AAQfO,UAAAA,cAAc,EAAE,CAAC,WAAD,EAAc,eAAd,EAA+B,WAA/B,CARD;AASfC,UAAAA,UAAU,EAAE,CAAC,WAAD,EAAc,WAAd,EAA2B,eAA3B,CATG;AAUf7B,UAAAA,OAAO,EAAE,KAAKA;AAVC,SAAnB;;AAYA,YAAIoB,QAAJ,EAAc;AACV1B,UAAAA,mBAAmB,CAACoC,gBAApB,CAAqCP,UAArC,EAAiDH,QAAjD;AACH,SAFD,MAGK;AACD,iBAAO1B,mBAAmB,CAACoC,gBAApB,CAAqCP,UAArC,CAAP;AACH;AACJ;AAztDgB;;AAAA;AAAA;;AA2tDrB3B,EAAAA,YAAY,CAAC0D,4BAAb,GAA4CA,4BAA5C;;AA3tDqB,MA4tDfE,oCA5tDe;AA6tDjB,kDAAYxD,OAAZ,EAAqB;AAAA;;AACjB,WAAKA,OAAL,GAAeA,OAAf;AACH;;AA/tDgB;AAAA;AAAA,8BAguDVkB,gBAhuDU,EAguDQC,iBAhuDR,EAguD2BC,QAhuD3B,EAguDqC;AAClD,YAAIC,MAAM,GAAIH,gBAAgB,IAAI,EAAlC;AACA,YAAIpB,OAAO,GAAIqB,iBAAiB,IAAI,EAApC;;AACA,YAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;AACxCE,UAAAA,QAAQ,GAAGF,gBAAX;AACAG,UAAAA,MAAM,GAAG,EAAT;AACAvB,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAI,OAAOqB,iBAAP,KAA6B,UAAjC,EAA6C;AACzCC,UAAAA,QAAQ,GAAGD,iBAAX;AACArB,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAMwB,OAAO,GAAGxB,OAAO,CAACwB,OAAR,IAAmB,6BAAnC;AACA,YAAMC,UAAU,GAAG;AACfzB,UAAAA,OAAO,EAAER,MAAM,CAACkC,MAAP,CAAc;AACnBC,YAAAA,GAAG,EAAE,CAACH,OAAO,GACT,2HADC,EAEAI,OAFA,CAEQ,cAFR,EAEwB,IAFxB,CADc;AAInBC,YAAAA,MAAM,EAAE;AAJW,WAAd,EAKN7B,OALM,CADM;AAOfuB,UAAAA,MAPe;AAQfO,UAAAA,cAAc,EAAE,CAAC,WAAD,EAAc,eAAd,EAA+B,WAA/B,EAA4C,QAA5C,CARD;AASfC,UAAAA,UAAU,EAAE,CAAC,WAAD,EAAc,QAAd,EAAwB,WAAxB,EAAqC,eAArC,CATG;AAUf7B,UAAAA,OAAO,EAAE,KAAKA;AAVC,SAAnB;;AAYA,YAAIoB,QAAJ,EAAc;AACV1B,UAAAA,mBAAmB,CAACoC,gBAApB,CAAqCP,UAArC,EAAiDH,QAAjD;AACH,SAFD,MAGK;AACD,iBAAO1B,mBAAmB,CAACoC,gBAApB,CAAqCP,UAArC,CAAP;AACH;AACJ;AA/vDgB;AAAA;AAAA,6BAgwDVL,gBAhwDU,EAgwDQC,iBAhwDR,EAgwD2BC,QAhwD3B,EAgwDqC;AAClD,YAAIC,MAAM,GAAIH,gBAAgB,IAAI,EAAlC;AACA,YAAIpB,OAAO,GAAIqB,iBAAiB,IAAI,EAApC;;AACA,YAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;AACxCE,UAAAA,QAAQ,GAAGF,gBAAX;AACAG,UAAAA,MAAM,GAAG,EAAT;AACAvB,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAI,OAAOqB,iBAAP,KAA6B,UAAjC,EAA6C;AACzCC,UAAAA,QAAQ,GAAGD,iBAAX;AACArB,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAMwB,OAAO,GAAGxB,OAAO,CAACwB,OAAR,IAAmB,6BAAnC;AACA,YAAMC,UAAU,GAAG;AACfzB,UAAAA,OAAO,EAAER,MAAM,CAACkC,MAAP,CAAc;AACnBC,YAAAA,GAAG,EAAE,CAACH,OAAO,GACT,kHADC,EAEAI,OAFA,CAEQ,cAFR,EAEwB,IAFxB,CADc;AAInBC,YAAAA,MAAM,EAAE;AAJW,WAAd,EAKN7B,OALM,CADM;AAOfuB,UAAAA,MAPe;AAQfO,UAAAA,cAAc,EAAE,CAAC,WAAD,EAAc,eAAd,EAA+B,WAA/B,CARD;AASfC,UAAAA,UAAU,EAAE,CAAC,WAAD,EAAc,WAAd,EAA2B,eAA3B,CATG;AAUf7B,UAAAA,OAAO,EAAE,KAAKA;AAVC,SAAnB;;AAYA,YAAIoB,QAAJ,EAAc;AACV1B,UAAAA,mBAAmB,CAACoC,gBAApB,CAAqCP,UAArC,EAAiDH,QAAjD;AACH,SAFD,MAGK;AACD,iBAAO1B,mBAAmB,CAACoC,gBAApB,CAAqCP,UAArC,CAAP;AACH;AACJ;AA/xDgB;AAAA;AAAA,2BAgyDZL,gBAhyDY,EAgyDMC,iBAhyDN,EAgyDyBC,QAhyDzB,EAgyDmC;AAChD,YAAIC,MAAM,GAAIH,gBAAgB,IAAI,EAAlC;AACA,YAAIpB,OAAO,GAAIqB,iBAAiB,IAAI,EAApC;;AACA,YAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;AACxCE,UAAAA,QAAQ,GAAGF,gBAAX;AACAG,UAAAA,MAAM,GAAG,EAAT;AACAvB,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAI,OAAOqB,iBAAP,KAA6B,UAAjC,EAA6C;AACzCC,UAAAA,QAAQ,GAAGD,iBAAX;AACArB,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAMwB,OAAO,GAAGxB,OAAO,CAACwB,OAAR,IAAmB,6BAAnC;AACA,YAAMC,UAAU,GAAG;AACfzB,UAAAA,OAAO,EAAER,MAAM,CAACkC,MAAP,CAAc;AACnBC,YAAAA,GAAG,EAAE,CAACH,OAAO,GACT,kHADC,EAEAI,OAFA,CAEQ,cAFR,EAEwB,IAFxB,CADc;AAInBC,YAAAA,MAAM,EAAE;AAJW,WAAd,EAKN7B,OALM,CADM;AAOfuB,UAAAA,MAPe;AAQfO,UAAAA,cAAc,EAAE,CAAC,WAAD,EAAc,eAAd,EAA+B,WAA/B,CARD;AASfC,UAAAA,UAAU,EAAE,CAAC,WAAD,EAAc,WAAd,EAA2B,eAA3B,CATG;AAUf7B,UAAAA,OAAO,EAAE,KAAKA;AAVC,SAAnB;;AAYA,YAAIoB,QAAJ,EAAc;AACV1B,UAAAA,mBAAmB,CAACoC,gBAApB,CAAqCP,UAArC,EAAiDH,QAAjD;AACH,SAFD,MAGK;AACD,iBAAO1B,mBAAmB,CAACoC,gBAApB,CAAqCP,UAArC,CAAP;AACH;AACJ;AA/zDgB;AAAA;AAAA,6BAg0DVL,gBAh0DU,EAg0DQC,iBAh0DR,EAg0D2BC,QAh0D3B,EAg0DqC;AAClD,YAAIC,MAAM,GAAIH,gBAAgB,IAAI,EAAlC;AACA,YAAIpB,OAAO,GAAIqB,iBAAiB,IAAI,EAApC;;AACA,YAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;AACxCE,UAAAA,QAAQ,GAAGF,gBAAX;AACAG,UAAAA,MAAM,GAAG,EAAT;AACAvB,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAI,OAAOqB,iBAAP,KAA6B,UAAjC,EAA6C;AACzCC,UAAAA,QAAQ,GAAGD,iBAAX;AACArB,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAMwB,OAAO,GAAGxB,OAAO,CAACwB,OAAR,IAAmB,6BAAnC;AACA,YAAMC,UAAU,GAAG;AACfzB,UAAAA,OAAO,EAAER,MAAM,CAACkC,MAAP,CAAc;AACnBC,YAAAA,GAAG,EAAE,CAACH,OAAO,GACT,2HADC,EAEAI,OAFA,CAEQ,cAFR,EAEwB,IAFxB,CADc;AAInBC,YAAAA,MAAM,EAAE;AAJW,WAAd,EAKN7B,OALM,CADM;AAOfuB,UAAAA,MAPe;AAQfO,UAAAA,cAAc,EAAE,CAAC,WAAD,EAAc,eAAd,EAA+B,WAA/B,EAA4C,QAA5C,CARD;AASfC,UAAAA,UAAU,EAAE,CAAC,WAAD,EAAc,QAAd,EAAwB,WAAxB,EAAqC,eAArC,CATG;AAUf7B,UAAAA,OAAO,EAAE,KAAKA;AAVC,SAAnB;;AAYA,YAAIoB,QAAJ,EAAc;AACV1B,UAAAA,mBAAmB,CAACoC,gBAApB,CAAqCP,UAArC,EAAiDH,QAAjD;AACH,SAFD,MAGK;AACD,iBAAO1B,mBAAmB,CAACoC,gBAApB,CAAqCP,UAArC,CAAP;AACH;AACJ;AA/1DgB;;AAAA;AAAA;;AAi2DrB3B,EAAAA,YAAY,CAAC4D,oCAAb,GAAoDA,oCAApD;;AAj2DqB,MAk2DfE,uCAl2De;AAm2DjB,qDAAY1D,OAAZ,EAAqB;AAAA;;AACjB,WAAKA,OAAL,GAAeA,OAAf;AACH;;AAr2DgB;AAAA;AAAA,8BAs2DVkB,gBAt2DU,EAs2DQC,iBAt2DR,EAs2D2BC,QAt2D3B,EAs2DqC;AAClD,YAAIC,MAAM,GAAIH,gBAAgB,IAAI,EAAlC;AACA,YAAIpB,OAAO,GAAIqB,iBAAiB,IAAI,EAApC;;AACA,YAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;AACxCE,UAAAA,QAAQ,GAAGF,gBAAX;AACAG,UAAAA,MAAM,GAAG,EAAT;AACAvB,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAI,OAAOqB,iBAAP,KAA6B,UAAjC,EAA6C;AACzCC,UAAAA,QAAQ,GAAGD,iBAAX;AACArB,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAMwB,OAAO,GAAGxB,OAAO,CAACwB,OAAR,IAAmB,6BAAnC;AACA,YAAMC,UAAU,GAAG;AACfzB,UAAAA,OAAO,EAAER,MAAM,CAACkC,MAAP,CAAc;AACnBC,YAAAA,GAAG,EAAE,CAACH,OAAO,GACT,0HADC,EAEAI,OAFA,CAEQ,cAFR,EAEwB,IAFxB,CADc;AAInBC,YAAAA,MAAM,EAAE;AAJW,WAAd,EAKN7B,OALM,CADM;AAOfuB,UAAAA,MAPe;AAQfO,UAAAA,cAAc,EAAE,CAAC,WAAD,EAAc,eAAd,EAA+B,uBAA/B,CARD;AASfC,UAAAA,UAAU,EAAE,CAAC,WAAD,EAAc,uBAAd,EAAuC,eAAvC,CATG;AAUf7B,UAAAA,OAAO,EAAE,KAAKA;AAVC,SAAnB;;AAYA,YAAIoB,QAAJ,EAAc;AACV1B,UAAAA,mBAAmB,CAACoC,gBAApB,CAAqCP,UAArC,EAAiDH,QAAjD;AACH,SAFD,MAGK;AACD,iBAAO1B,mBAAmB,CAACoC,gBAApB,CAAqCP,UAArC,CAAP;AACH;AACJ;AAr4DgB;AAAA;AAAA,0BAs4DbL,gBAt4Da,EAs4DKC,iBAt4DL,EAs4DwBC,QAt4DxB,EAs4DkC;AAC/C,YAAIC,MAAM,GAAIH,gBAAgB,IAAI,EAAlC;AACA,YAAIpB,OAAO,GAAIqB,iBAAiB,IAAI,EAApC;;AACA,YAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;AACxCE,UAAAA,QAAQ,GAAGF,gBAAX;AACAG,UAAAA,MAAM,GAAG,EAAT;AACAvB,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAI,OAAOqB,iBAAP,KAA6B,UAAjC,EAA6C;AACzCC,UAAAA,QAAQ,GAAGD,iBAAX;AACArB,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAMwB,OAAO,GAAGxB,OAAO,CAACwB,OAAR,IAAmB,6BAAnC;AACA,YAAMC,UAAU,GAAG;AACfzB,UAAAA,OAAO,EAAER,MAAM,CAACkC,MAAP,CAAc;AACnBC,YAAAA,GAAG,EAAE,CAACH,OAAO,GACT,0HADC,EAEAI,OAFA,CAEQ,cAFR,EAEwB,IAFxB,CADc;AAInBC,YAAAA,MAAM,EAAE;AAJW,WAAd,EAKN7B,OALM,CADM;AAOfuB,UAAAA,MAPe;AAQfO,UAAAA,cAAc,EAAE,CAAC,WAAD,EAAc,eAAd,EAA+B,uBAA/B,CARD;AASfC,UAAAA,UAAU,EAAE,CAAC,WAAD,EAAc,uBAAd,EAAuC,eAAvC,CATG;AAUf7B,UAAAA,OAAO,EAAE,KAAKA;AAVC,SAAnB;;AAYA,YAAIoB,QAAJ,EAAc;AACV1B,UAAAA,mBAAmB,CAACoC,gBAApB,CAAqCP,UAArC,EAAiDH,QAAjD;AACH,SAFD,MAGK;AACD,iBAAO1B,mBAAmB,CAACoC,gBAApB,CAAqCP,UAArC,CAAP;AACH;AACJ;AAr6DgB;AAAA;AAAA,6BAs6DVL,gBAt6DU,EAs6DQC,iBAt6DR,EAs6D2BC,QAt6D3B,EAs6DqC;AAClD,YAAIC,MAAM,GAAIH,gBAAgB,IAAI,EAAlC;AACA,YAAIpB,OAAO,GAAIqB,iBAAiB,IAAI,EAApC;;AACA,YAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;AACxCE,UAAAA,QAAQ,GAAGF,gBAAX;AACAG,UAAAA,MAAM,GAAG,EAAT;AACAvB,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAI,OAAOqB,iBAAP,KAA6B,UAAjC,EAA6C;AACzCC,UAAAA,QAAQ,GAAGD,iBAAX;AACArB,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAMwB,OAAO,GAAGxB,OAAO,CAACwB,OAAR,IAAmB,6BAAnC;AACA,YAAMC,UAAU,GAAG;AACfzB,UAAAA,OAAO,EAAER,MAAM,CAACkC,MAAP,CAAc;AACnBC,YAAAA,GAAG,EAAE,CAACH,OAAO,GACT,kGADC,EAEAI,OAFA,CAEQ,cAFR,EAEwB,IAFxB,CADc;AAInBC,YAAAA,MAAM,EAAE;AAJW,WAAd,EAKN7B,OALM,CADM;AAOfuB,UAAAA,MAPe;AAQfO,UAAAA,cAAc,EAAE,CAAC,WAAD,EAAc,eAAd,CARD;AASfC,UAAAA,UAAU,EAAE,CAAC,WAAD,EAAc,eAAd,CATG;AAUf7B,UAAAA,OAAO,EAAE,KAAKA;AAVC,SAAnB;;AAYA,YAAIoB,QAAJ,EAAc;AACV1B,UAAAA,mBAAmB,CAACoC,gBAApB,CAAqCP,UAArC,EAAiDH,QAAjD;AACH,SAFD,MAGK;AACD,iBAAO1B,mBAAmB,CAACoC,gBAApB,CAAqCP,UAArC,CAAP;AACH;AACJ;AAr8DgB;AAAA;AAAA,2BAs8DZL,gBAt8DY,EAs8DMC,iBAt8DN,EAs8DyBC,QAt8DzB,EAs8DmC;AAChD,YAAIC,MAAM,GAAIH,gBAAgB,IAAI,EAAlC;AACA,YAAIpB,OAAO,GAAIqB,iBAAiB,IAAI,EAApC;;AACA,YAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;AACxCE,UAAAA,QAAQ,GAAGF,gBAAX;AACAG,UAAAA,MAAM,GAAG,EAAT;AACAvB,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAI,OAAOqB,iBAAP,KAA6B,UAAjC,EAA6C;AACzCC,UAAAA,QAAQ,GAAGD,iBAAX;AACArB,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAMwB,OAAO,GAAGxB,OAAO,CAACwB,OAAR,IAAmB,6BAAnC;AACA,YAAMC,UAAU,GAAG;AACfzB,UAAAA,OAAO,EAAER,MAAM,CAACkC,MAAP,CAAc;AACnBC,YAAAA,GAAG,EAAE,CAACH,OAAO,GACT,kGADC,EAEAI,OAFA,CAEQ,cAFR,EAEwB,IAFxB,CADc;AAInBC,YAAAA,MAAM,EAAE;AAJW,WAAd,EAKN7B,OALM,CADM;AAOfuB,UAAAA,MAPe;AAQfO,UAAAA,cAAc,EAAE,CAAC,WAAD,EAAc,eAAd,CARD;AASfC,UAAAA,UAAU,EAAE,CAAC,WAAD,EAAc,eAAd,CATG;AAUf7B,UAAAA,OAAO,EAAE,KAAKA;AAVC,SAAnB;;AAYA,YAAIoB,QAAJ,EAAc;AACV1B,UAAAA,mBAAmB,CAACoC,gBAApB,CAAqCP,UAArC,EAAiDH,QAAjD;AACH,SAFD,MAGK;AACD,iBAAO1B,mBAAmB,CAACoC,gBAApB,CAAqCP,UAArC,CAAP;AACH;AACJ;AAr+DgB;AAAA;AAAA,4BAs+DXL,gBAt+DW,EAs+DOC,iBAt+DP,EAs+D0BC,QAt+D1B,EAs+DoC;AACjD,YAAIC,MAAM,GAAIH,gBAAgB,IAAI,EAAlC;AACA,YAAIpB,OAAO,GAAIqB,iBAAiB,IAAI,EAApC;;AACA,YAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;AACxCE,UAAAA,QAAQ,GAAGF,gBAAX;AACAG,UAAAA,MAAM,GAAG,EAAT;AACAvB,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAI,OAAOqB,iBAAP,KAA6B,UAAjC,EAA6C;AACzCC,UAAAA,QAAQ,GAAGD,iBAAX;AACArB,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAMwB,OAAO,GAAGxB,OAAO,CAACwB,OAAR,IAAmB,6BAAnC;AACA,YAAMC,UAAU,GAAG;AACfzB,UAAAA,OAAO,EAAER,MAAM,CAACkC,MAAP,CAAc;AACnBC,YAAAA,GAAG,EAAE,CAACH,OAAO,GACT,0HADC,EAEAI,OAFA,CAEQ,cAFR,EAEwB,IAFxB,CADc;AAInBC,YAAAA,MAAM,EAAE;AAJW,WAAd,EAKN7B,OALM,CADM;AAOfuB,UAAAA,MAPe;AAQfO,UAAAA,cAAc,EAAE,CAAC,WAAD,EAAc,eAAd,EAA+B,uBAA/B,CARD;AASfC,UAAAA,UAAU,EAAE,CAAC,WAAD,EAAc,uBAAd,EAAuC,eAAvC,CATG;AAUf7B,UAAAA,OAAO,EAAE,KAAKA;AAVC,SAAnB;;AAYA,YAAIoB,QAAJ,EAAc;AACV1B,UAAAA,mBAAmB,CAACoC,gBAApB,CAAqCP,UAArC,EAAiDH,QAAjD;AACH,SAFD,MAGK;AACD,iBAAO1B,mBAAmB,CAACoC,gBAApB,CAAqCP,UAArC,CAAP;AACH;AACJ;AArgEgB;AAAA;AAAA,6BAsgEVL,gBAtgEU,EAsgEQC,iBAtgER,EAsgE2BC,QAtgE3B,EAsgEqC;AAClD,YAAIC,MAAM,GAAIH,gBAAgB,IAAI,EAAlC;AACA,YAAIpB,OAAO,GAAIqB,iBAAiB,IAAI,EAApC;;AACA,YAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;AACxCE,UAAAA,QAAQ,GAAGF,gBAAX;AACAG,UAAAA,MAAM,GAAG,EAAT;AACAvB,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAI,OAAOqB,iBAAP,KAA6B,UAAjC,EAA6C;AACzCC,UAAAA,QAAQ,GAAGD,iBAAX;AACArB,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAMwB,OAAO,GAAGxB,OAAO,CAACwB,OAAR,IAAmB,6BAAnC;AACA,YAAMC,UAAU,GAAG;AACfzB,UAAAA,OAAO,EAAER,MAAM,CAACkC,MAAP,CAAc;AACnBC,YAAAA,GAAG,EAAE,CAACH,OAAO,GACT,0HADC,EAEAI,OAFA,CAEQ,cAFR,EAEwB,IAFxB,CADc;AAInBC,YAAAA,MAAM,EAAE;AAJW,WAAd,EAKN7B,OALM,CADM;AAOfuB,UAAAA,MAPe;AAQfO,UAAAA,cAAc,EAAE,CAAC,WAAD,EAAc,eAAd,EAA+B,uBAA/B,CARD;AASfC,UAAAA,UAAU,EAAE,CAAC,WAAD,EAAc,uBAAd,EAAuC,eAAvC,CATG;AAUf7B,UAAAA,OAAO,EAAE,KAAKA;AAVC,SAAnB;;AAYA,YAAIoB,QAAJ,EAAc;AACV1B,UAAAA,mBAAmB,CAACoC,gBAApB,CAAqCP,UAArC,EAAiDH,QAAjD;AACH,SAFD,MAGK;AACD,iBAAO1B,mBAAmB,CAACoC,gBAApB,CAAqCP,UAArC,CAAP;AACH;AACJ;AAriEgB;;AAAA;AAAA;;AAuiErB3B,EAAAA,YAAY,CAAC8D,uCAAb,GAAuDA,uCAAvD;;AAviEqB,MAwiEfE,4BAxiEe;AAyiEjB,0CAAY5D,OAAZ,EAAqB;AAAA;;AACjB,WAAKA,OAAL,GAAeA,OAAf;AACH;;AA3iEgB;AAAA;AAAA,2BA4iEZkB,gBA5iEY,EA4iEMC,iBA5iEN,EA4iEyBC,QA5iEzB,EA4iEmC;AAChD,YAAIC,MAAM,GAAIH,gBAAgB,IAAI,EAAlC;AACA,YAAIpB,OAAO,GAAIqB,iBAAiB,IAAI,EAApC;;AACA,YAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;AACxCE,UAAAA,QAAQ,GAAGF,gBAAX;AACAG,UAAAA,MAAM,GAAG,EAAT;AACAvB,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAI,OAAOqB,iBAAP,KAA6B,UAAjC,EAA6C;AACzCC,UAAAA,QAAQ,GAAGD,iBAAX;AACArB,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAMwB,OAAO,GAAGxB,OAAO,CAACwB,OAAR,IAAmB,6BAAnC;AACA,YAAMC,UAAU,GAAG;AACfzB,UAAAA,OAAO,EAAER,MAAM,CAACkC,MAAP,CAAc;AACnBC,YAAAA,GAAG,EAAE,CAACH,OAAO,GAAG,mCAAX,EACAI,OADA,CACQ,cADR,EACwB,IADxB,CADc;AAGnBC,YAAAA,MAAM,EAAE;AAHW,WAAd,EAIN7B,OAJM,CADM;AAMfuB,UAAAA,MANe;AAOfO,UAAAA,cAAc,EAAE,EAPD;AAQfC,UAAAA,UAAU,EAAE,EARG;AASf7B,UAAAA,OAAO,EAAE,KAAKA;AATC,SAAnB;;AAWA,YAAIoB,QAAJ,EAAc;AACV1B,UAAAA,mBAAmB,CAACoC,gBAApB,CAAqCP,UAArC,EAAiDH,QAAjD;AACH,SAFD,MAGK;AACD,iBAAO1B,mBAAmB,CAACoC,gBAApB,CAAqCP,UAArC,CAAP;AACH;AACJ;AA1kEgB;;AAAA;AAAA;;AA4kErB3B,EAAAA,YAAY,CAACgE,4BAAb,GAA4CA,4BAA5C;;AA5kEqB,MA6kEfE,oCA7kEe;AA8kEjB,kDAAY9D,OAAZ,EAAqB;AAAA;;AACjB,WAAKA,OAAL,GAAeA,OAAf;AACH;;AAhlEgB;AAAA;AAAA,8BAilEVkB,gBAjlEU,EAilEQC,iBAjlER,EAilE2BC,QAjlE3B,EAilEqC;AAClD,YAAIC,MAAM,GAAIH,gBAAgB,IAAI,EAAlC;AACA,YAAIpB,OAAO,GAAIqB,iBAAiB,IAAI,EAApC;;AACA,YAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;AACxCE,UAAAA,QAAQ,GAAGF,gBAAX;AACAG,UAAAA,MAAM,GAAG,EAAT;AACAvB,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAI,OAAOqB,iBAAP,KAA6B,UAAjC,EAA6C;AACzCC,UAAAA,QAAQ,GAAGD,iBAAX;AACArB,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAMwB,OAAO,GAAGxB,OAAO,CAACwB,OAAR,IAAmB,6BAAnC;AACA,YAAMC,UAAU,GAAG;AACfzB,UAAAA,OAAO,EAAER,MAAM,CAACkC,MAAP,CAAc;AACnBC,YAAAA,GAAG,EAAE,CAACH,OAAO,GACT,uIADC,EAEAI,OAFA,CAEQ,cAFR,EAEwB,IAFxB,CADc;AAInBC,YAAAA,MAAM,EAAE;AAJW,WAAd,EAKN7B,OALM,CADM;AAOfuB,UAAAA,MAPe;AAQfO,UAAAA,cAAc,EAAE,CAAC,WAAD,EAAc,eAAd,EAA+B,WAA/B,EAA4C,mBAA5C,CARD;AASfC,UAAAA,UAAU,EAAE,CAAC,WAAD,EAAc,WAAd,EAA2B,mBAA3B,EAAgD,eAAhD,CATG;AAUf7B,UAAAA,OAAO,EAAE,KAAKA;AAVC,SAAnB;;AAYA,YAAIoB,QAAJ,EAAc;AACV1B,UAAAA,mBAAmB,CAACoC,gBAApB,CAAqCP,UAArC,EAAiDH,QAAjD;AACH,SAFD,MAGK;AACD,iBAAO1B,mBAAmB,CAACoC,gBAApB,CAAqCP,UAArC,CAAP;AACH;AACJ;AAhnEgB;AAAA;AAAA,0BAinEbL,gBAjnEa,EAinEKC,iBAjnEL,EAinEwBC,QAjnExB,EAinEkC;AAC/C,YAAIC,MAAM,GAAIH,gBAAgB,IAAI,EAAlC;AACA,YAAIpB,OAAO,GAAIqB,iBAAiB,IAAI,EAApC;;AACA,YAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;AACxCE,UAAAA,QAAQ,GAAGF,gBAAX;AACAG,UAAAA,MAAM,GAAG,EAAT;AACAvB,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAI,OAAOqB,iBAAP,KAA6B,UAAjC,EAA6C;AACzCC,UAAAA,QAAQ,GAAGD,iBAAX;AACArB,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAMwB,OAAO,GAAGxB,OAAO,CAACwB,OAAR,IAAmB,6BAAnC;AACA,YAAMC,UAAU,GAAG;AACfzB,UAAAA,OAAO,EAAER,MAAM,CAACkC,MAAP,CAAc;AACnBC,YAAAA,GAAG,EAAE,CAACH,OAAO,GACT,uIADC,EAEAI,OAFA,CAEQ,cAFR,EAEwB,IAFxB,CADc;AAInBC,YAAAA,MAAM,EAAE;AAJW,WAAd,EAKN7B,OALM,CADM;AAOfuB,UAAAA,MAPe;AAQfO,UAAAA,cAAc,EAAE,CAAC,WAAD,EAAc,eAAd,EAA+B,WAA/B,EAA4C,mBAA5C,CARD;AASfC,UAAAA,UAAU,EAAE,CAAC,WAAD,EAAc,WAAd,EAA2B,mBAA3B,EAAgD,eAAhD,CATG;AAUf7B,UAAAA,OAAO,EAAE,KAAKA;AAVC,SAAnB;;AAYA,YAAIoB,QAAJ,EAAc;AACV1B,UAAAA,mBAAmB,CAACoC,gBAApB,CAAqCP,UAArC,EAAiDH,QAAjD;AACH,SAFD,MAGK;AACD,iBAAO1B,mBAAmB,CAACoC,gBAApB,CAAqCP,UAArC,CAAP;AACH;AACJ;AAhpEgB;AAAA;AAAA,6BAipEVL,gBAjpEU,EAipEQC,iBAjpER,EAipE2BC,QAjpE3B,EAipEqC;AAClD,YAAIC,MAAM,GAAIH,gBAAgB,IAAI,EAAlC;AACA,YAAIpB,OAAO,GAAIqB,iBAAiB,IAAI,EAApC;;AACA,YAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;AACxCE,UAAAA,QAAQ,GAAGF,gBAAX;AACAG,UAAAA,MAAM,GAAG,EAAT;AACAvB,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAI,OAAOqB,iBAAP,KAA6B,UAAjC,EAA6C;AACzCC,UAAAA,QAAQ,GAAGD,iBAAX;AACArB,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAMwB,OAAO,GAAGxB,OAAO,CAACwB,OAAR,IAAmB,6BAAnC;AACA,YAAMC,UAAU,GAAG;AACfzB,UAAAA,OAAO,EAAER,MAAM,CAACkC,MAAP,CAAc;AACnBC,YAAAA,GAAG,EAAE,CAACH,OAAO,GACT,mHADC,EAEAI,OAFA,CAEQ,cAFR,EAEwB,IAFxB,CADc;AAInBC,YAAAA,MAAM,EAAE;AAJW,WAAd,EAKN7B,OALM,CADM;AAOfuB,UAAAA,MAPe;AAQfO,UAAAA,cAAc,EAAE,CAAC,WAAD,EAAc,eAAd,EAA+B,WAA/B,CARD;AASfC,UAAAA,UAAU,EAAE,CAAC,WAAD,EAAc,WAAd,EAA2B,eAA3B,CATG;AAUf7B,UAAAA,OAAO,EAAE,KAAKA;AAVC,SAAnB;;AAYA,YAAIoB,QAAJ,EAAc;AACV1B,UAAAA,mBAAmB,CAACoC,gBAApB,CAAqCP,UAArC,EAAiDH,QAAjD;AACH,SAFD,MAGK;AACD,iBAAO1B,mBAAmB,CAACoC,gBAApB,CAAqCP,UAArC,CAAP;AACH;AACJ;AAhrEgB;AAAA;AAAA,2BAirEZL,gBAjrEY,EAirEMC,iBAjrEN,EAirEyBC,QAjrEzB,EAirEmC;AAChD,YAAIC,MAAM,GAAIH,gBAAgB,IAAI,EAAlC;AACA,YAAIpB,OAAO,GAAIqB,iBAAiB,IAAI,EAApC;;AACA,YAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;AACxCE,UAAAA,QAAQ,GAAGF,gBAAX;AACAG,UAAAA,MAAM,GAAG,EAAT;AACAvB,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAI,OAAOqB,iBAAP,KAA6B,UAAjC,EAA6C;AACzCC,UAAAA,QAAQ,GAAGD,iBAAX;AACArB,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAMwB,OAAO,GAAGxB,OAAO,CAACwB,OAAR,IAAmB,6BAAnC;AACA,YAAMC,UAAU,GAAG;AACfzB,UAAAA,OAAO,EAAER,MAAM,CAACkC,MAAP,CAAc;AACnBC,YAAAA,GAAG,EAAE,CAACH,OAAO,GACT,mHADC,EAEAI,OAFA,CAEQ,cAFR,EAEwB,IAFxB,CADc;AAInBC,YAAAA,MAAM,EAAE;AAJW,WAAd,EAKN7B,OALM,CADM;AAOfuB,UAAAA,MAPe;AAQfO,UAAAA,cAAc,EAAE,CAAC,WAAD,EAAc,eAAd,EAA+B,WAA/B,CARD;AASfC,UAAAA,UAAU,EAAE,CAAC,WAAD,EAAc,WAAd,EAA2B,eAA3B,CATG;AAUf7B,UAAAA,OAAO,EAAE,KAAKA;AAVC,SAAnB;;AAYA,YAAIoB,QAAJ,EAAc;AACV1B,UAAAA,mBAAmB,CAACoC,gBAApB,CAAqCP,UAArC,EAAiDH,QAAjD;AACH,SAFD,MAGK;AACD,iBAAO1B,mBAAmB,CAACoC,gBAApB,CAAqCP,UAArC,CAAP;AACH;AACJ;AAhtEgB;;AAAA;AAAA;;AAktErB3B,EAAAA,YAAY,CAACkE,oCAAb,GAAoDA,oCAApD;;AAltEqB,MAmtEfE,2BAntEe;AAotEjB,yCAAYhE,OAAZ,EAAqB;AAAA;;AACjB,WAAKA,OAAL,GAAeA,OAAf;AACH;;AAttEgB;AAAA;AAAA,uCAutEAkB,gBAvtEA,EAutEkBC,iBAvtElB,EAutEqCC,QAvtErC,EAutE+C;AAC5D,YAAIC,MAAM,GAAIH,gBAAgB,IAAI,EAAlC;AACA,YAAIpB,OAAO,GAAIqB,iBAAiB,IAAI,EAApC;;AACA,YAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;AACxCE,UAAAA,QAAQ,GAAGF,gBAAX;AACAG,UAAAA,MAAM,GAAG,EAAT;AACAvB,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAI,OAAOqB,iBAAP,KAA6B,UAAjC,EAA6C;AACzCC,UAAAA,QAAQ,GAAGD,iBAAX;AACArB,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAMwB,OAAO,GAAGxB,OAAO,CAACwB,OAAR,IAAmB,6BAAnC;AACA,YAAMC,UAAU,GAAG;AACfzB,UAAAA,OAAO,EAAER,MAAM,CAACkC,MAAP,CAAc;AACnBC,YAAAA,GAAG,EAAE,CAACH,OAAO,GACT,qIADC,EAEAI,OAFA,CAEQ,cAFR,EAEwB,IAFxB,CADc;AAInBC,YAAAA,MAAM,EAAE;AAJW,WAAd,EAKN7B,OALM,CADM;AAOfuB,UAAAA,MAPe;AAQfO,UAAAA,cAAc,EAAE,CAAC,WAAD,EAAc,eAAd,EAA+B,oBAA/B,CARD;AASfC,UAAAA,UAAU,EAAE,CAAC,WAAD,EAAc,oBAAd,EAAoC,eAApC,CATG;AAUf7B,UAAAA,OAAO,EAAE,KAAKA;AAVC,SAAnB;;AAYA,YAAIoB,QAAJ,EAAc;AACV1B,UAAAA,mBAAmB,CAACoC,gBAApB,CAAqCP,UAArC,EAAiDH,QAAjD;AACH,SAFD,MAGK;AACD,iBAAO1B,mBAAmB,CAACoC,gBAApB,CAAqCP,UAArC,CAAP;AACH;AACJ;AAtvEgB;AAAA;AAAA,0BAuvEbL,gBAvvEa,EAuvEKC,iBAvvEL,EAuvEwBC,QAvvExB,EAuvEkC;AAC/C,YAAIC,MAAM,GAAIH,gBAAgB,IAAI,EAAlC;AACA,YAAIpB,OAAO,GAAIqB,iBAAiB,IAAI,EAApC;;AACA,YAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;AACxCE,UAAAA,QAAQ,GAAGF,gBAAX;AACAG,UAAAA,MAAM,GAAG,EAAT;AACAvB,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAI,OAAOqB,iBAAP,KAA6B,UAAjC,EAA6C;AACzCC,UAAAA,QAAQ,GAAGD,iBAAX;AACArB,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAMwB,OAAO,GAAGxB,OAAO,CAACwB,OAAR,IAAmB,6BAAnC;AACA,YAAMC,UAAU,GAAG;AACfzB,UAAAA,OAAO,EAAER,MAAM,CAACkC,MAAP,CAAc;AACnBC,YAAAA,GAAG,EAAE,CAACH,OAAO,GACT,uIADC,EAEAI,OAFA,CAEQ,cAFR,EAEwB,IAFxB,CADc;AAInBC,YAAAA,MAAM,EAAE;AAJW,WAAd,EAKN7B,OALM,CADM;AAOfuB,UAAAA,MAPe;AAQfO,UAAAA,cAAc,EAAE,CAAC,WAAD,EAAc,eAAd,EAA+B,oBAA/B,EAAqD,UAArD,CARD;AASfC,UAAAA,UAAU,EAAE,CAAC,WAAD,EAAc,oBAAd,EAAoC,UAApC,EAAgD,eAAhD,CATG;AAUf7B,UAAAA,OAAO,EAAE,KAAKA;AAVC,SAAnB;;AAYA,YAAIoB,QAAJ,EAAc;AACV1B,UAAAA,mBAAmB,CAACoC,gBAApB,CAAqCP,UAArC,EAAiDH,QAAjD;AACH,SAFD,MAGK;AACD,iBAAO1B,mBAAmB,CAACoC,gBAApB,CAAqCP,UAArC,CAAP;AACH;AACJ;AAtxEgB;AAAA;AAAA,2BAuxEZL,gBAvxEY,EAuxEMC,iBAvxEN,EAuxEyBC,QAvxEzB,EAuxEmC;AAChD,YAAIC,MAAM,GAAIH,gBAAgB,IAAI,EAAlC;AACA,YAAIpB,OAAO,GAAIqB,iBAAiB,IAAI,EAApC;;AACA,YAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;AACxCE,UAAAA,QAAQ,GAAGF,gBAAX;AACAG,UAAAA,MAAM,GAAG,EAAT;AACAvB,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAI,OAAOqB,iBAAP,KAA6B,UAAjC,EAA6C;AACzCC,UAAAA,QAAQ,GAAGD,iBAAX;AACArB,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAMwB,OAAO,GAAGxB,OAAO,CAACwB,OAAR,IAAmB,6BAAnC;AACA,YAAMC,UAAU,GAAG;AACfzB,UAAAA,OAAO,EAAER,MAAM,CAACkC,MAAP,CAAc;AACnBC,YAAAA,GAAG,EAAE,CAACH,OAAO,GACT,4HADC,EAEAI,OAFA,CAEQ,cAFR,EAEwB,IAFxB,CADc;AAInBC,YAAAA,MAAM,EAAE;AAJW,WAAd,EAKN7B,OALM,CADM;AAOfuB,UAAAA,MAPe;AAQfO,UAAAA,cAAc,EAAE,CAAC,WAAD,EAAc,eAAd,EAA+B,oBAA/B,CARD;AASfC,UAAAA,UAAU,EAAE,CAAC,WAAD,EAAc,oBAAd,EAAoC,eAApC,CATG;AAUf7B,UAAAA,OAAO,EAAE,KAAKA;AAVC,SAAnB;;AAYA,YAAIoB,QAAJ,EAAc;AACV1B,UAAAA,mBAAmB,CAACoC,gBAApB,CAAqCP,UAArC,EAAiDH,QAAjD;AACH,SAFD,MAGK;AACD,iBAAO1B,mBAAmB,CAACoC,gBAApB,CAAqCP,UAArC,CAAP;AACH;AACJ;AAtzEgB;AAAA;AAAA,iCAuzENL,gBAvzEM,EAuzEYC,iBAvzEZ,EAuzE+BC,QAvzE/B,EAuzEyC;AACtD,YAAIC,MAAM,GAAIH,gBAAgB,IAAI,EAAlC;AACA,YAAIpB,OAAO,GAAIqB,iBAAiB,IAAI,EAApC;;AACA,YAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;AACxCE,UAAAA,QAAQ,GAAGF,gBAAX;AACAG,UAAAA,MAAM,GAAG,EAAT;AACAvB,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAI,OAAOqB,iBAAP,KAA6B,UAAjC,EAA6C;AACzCC,UAAAA,QAAQ,GAAGD,iBAAX;AACArB,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAMwB,OAAO,GAAGxB,OAAO,CAACwB,OAAR,IAAmB,6BAAnC;AACA,YAAMC,UAAU,GAAG;AACfzB,UAAAA,OAAO,EAAER,MAAM,CAACkC,MAAP,CAAc;AACnBC,YAAAA,GAAG,EAAE,CAACH,OAAO,GACT,4HADC,EAEAI,OAFA,CAEQ,cAFR,EAEwB,IAFxB,CADc;AAInBC,YAAAA,MAAM,EAAE;AAJW,WAAd,EAKN7B,OALM,CADM;AAOfuB,UAAAA,MAPe;AAQfkD,UAAAA,QAAQ,EAAE,CAACjD,OAAO,GACd,mIADM,EAELI,OAFK,CAEG,cAFH,EAEmB,IAFnB,CARK;AAWfE,UAAAA,cAAc,EAAE,CAAC,WAAD,EAAc,eAAd,EAA+B,oBAA/B,CAXD;AAYfC,UAAAA,UAAU,EAAE,CAAC,WAAD,EAAc,oBAAd,EAAoC,eAApC,CAZG;AAaf7B,UAAAA,OAAO,EAAE,KAAKA;AAbC,SAAnB;;AAeA,YAAIoB,QAAJ,EAAc;AACV1B,UAAAA,mBAAmB,CAACoC,gBAApB,CAAqCP,UAArC,EAAiDH,QAAjD;AACH,SAFD,MAGK;AACD,iBAAO1B,mBAAmB,CAACoC,gBAApB,CAAqCP,UAArC,CAAP;AACH;AACJ;AAz1EgB;;AAAA;AAAA;;AA21ErB3B,EAAAA,YAAY,CAACoE,2BAAb,GAA2CA,2BAA3C;;AA31EqB,MA41EfE,iCA51Ee;AA61EjB,+CAAYlE,OAAZ,EAAqB;AAAA;;AACjB,WAAKA,OAAL,GAAeA,OAAf;AACH;;AA/1EgB;AAAA;AAAA,0BAg2EbkB,gBAh2Ea,EAg2EKC,iBAh2EL,EAg2EwBC,QAh2ExB,EAg2EkC;AAC/C,YAAIC,MAAM,GAAIH,gBAAgB,IAAI,EAAlC;AACA,YAAIpB,OAAO,GAAIqB,iBAAiB,IAAI,EAApC;;AACA,YAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;AACxCE,UAAAA,QAAQ,GAAGF,gBAAX;AACAG,UAAAA,MAAM,GAAG,EAAT;AACAvB,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAI,OAAOqB,iBAAP,KAA6B,UAAjC,EAA6C;AACzCC,UAAAA,QAAQ,GAAGD,iBAAX;AACArB,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAMwB,OAAO,GAAGxB,OAAO,CAACwB,OAAR,IAAmB,6BAAnC;AACA,YAAMC,UAAU,GAAG;AACfzB,UAAAA,OAAO,EAAER,MAAM,CAACkC,MAAP,CAAc;AACnBC,YAAAA,GAAG,EAAE,CAACH,OAAO,GACT,6EADC,EAEAI,OAFA,CAEQ,cAFR,EAEwB,IAFxB,CADc;AAInBC,YAAAA,MAAM,EAAE;AAJW,WAAd,EAKN7B,OALM,CADM;AAOfuB,UAAAA,MAPe;AAQfO,UAAAA,cAAc,EAAE,CAAC,WAAD,EAAc,eAAd,CARD;AASfC,UAAAA,UAAU,EAAE,CAAC,WAAD,EAAc,eAAd,CATG;AAUf7B,UAAAA,OAAO,EAAE,KAAKA;AAVC,SAAnB;;AAYA,YAAIoB,QAAJ,EAAc;AACV1B,UAAAA,mBAAmB,CAACoC,gBAApB,CAAqCP,UAArC,EAAiDH,QAAjD;AACH,SAFD,MAGK;AACD,iBAAO1B,mBAAmB,CAACoC,gBAApB,CAAqCP,UAArC,CAAP;AACH;AACJ;AA/3EgB;AAAA;AAAA,6BAg4EVL,gBAh4EU,EAg4EQC,iBAh4ER,EAg4E2BC,QAh4E3B,EAg4EqC;AAClD,YAAIC,MAAM,GAAIH,gBAAgB,IAAI,EAAlC;AACA,YAAIpB,OAAO,GAAIqB,iBAAiB,IAAI,EAApC;;AACA,YAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;AACxCE,UAAAA,QAAQ,GAAGF,gBAAX;AACAG,UAAAA,MAAM,GAAG,EAAT;AACAvB,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAI,OAAOqB,iBAAP,KAA6B,UAAjC,EAA6C;AACzCC,UAAAA,QAAQ,GAAGD,iBAAX;AACArB,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAMwB,OAAO,GAAGxB,OAAO,CAACwB,OAAR,IAAmB,6BAAnC;AACA,YAAMC,UAAU,GAAG;AACfzB,UAAAA,OAAO,EAAER,MAAM,CAACkC,MAAP,CAAc;AACnBC,YAAAA,GAAG,EAAE,CAACH,OAAO,GACT,6DADC,EAEAI,OAFA,CAEQ,cAFR,EAEwB,IAFxB,CADc;AAInBC,YAAAA,MAAM,EAAE;AAJW,WAAd,EAKN7B,OALM,CADM;AAOfuB,UAAAA,MAPe;AAQfO,UAAAA,cAAc,EAAE,CAAC,WAAD,CARD;AASfC,UAAAA,UAAU,EAAE,CAAC,WAAD,CATG;AAUf7B,UAAAA,OAAO,EAAE,KAAKA;AAVC,SAAnB;;AAYA,YAAIoB,QAAJ,EAAc;AACV1B,UAAAA,mBAAmB,CAACoC,gBAApB,CAAqCP,UAArC,EAAiDH,QAAjD;AACH,SAFD,MAGK;AACD,iBAAO1B,mBAAmB,CAACoC,gBAApB,CAAqCP,UAArC,CAAP;AACH;AACJ;AA/5EgB;AAAA;AAAA,2BAg6EZL,gBAh6EY,EAg6EMC,iBAh6EN,EAg6EyBC,QAh6EzB,EAg6EmC;AAChD,YAAIC,MAAM,GAAIH,gBAAgB,IAAI,EAAlC;AACA,YAAIpB,OAAO,GAAIqB,iBAAiB,IAAI,EAApC;;AACA,YAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;AACxCE,UAAAA,QAAQ,GAAGF,gBAAX;AACAG,UAAAA,MAAM,GAAG,EAAT;AACAvB,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAI,OAAOqB,iBAAP,KAA6B,UAAjC,EAA6C;AACzCC,UAAAA,QAAQ,GAAGD,iBAAX;AACArB,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAMwB,OAAO,GAAGxB,OAAO,CAACwB,OAAR,IAAmB,6BAAnC;AACA,YAAMC,UAAU,GAAG;AACfzB,UAAAA,OAAO,EAAER,MAAM,CAACkC,MAAP,CAAc;AACnBC,YAAAA,GAAG,EAAE,CAACH,OAAO,GACT,6DADC,EAEAI,OAFA,CAEQ,cAFR,EAEwB,IAFxB,CADc;AAInBC,YAAAA,MAAM,EAAE;AAJW,WAAd,EAKN7B,OALM,CADM;AAOfuB,UAAAA,MAPe;AAQfO,UAAAA,cAAc,EAAE,CAAC,WAAD,CARD;AASfC,UAAAA,UAAU,EAAE,CAAC,WAAD,CATG;AAUf7B,UAAAA,OAAO,EAAE,KAAKA;AAVC,SAAnB;;AAYA,YAAIoB,QAAJ,EAAc;AACV1B,UAAAA,mBAAmB,CAACoC,gBAApB,CAAqCP,UAArC,EAAiDH,QAAjD;AACH,SAFD,MAGK;AACD,iBAAO1B,mBAAmB,CAACoC,gBAApB,CAAqCP,UAArC,CAAP;AACH;AACJ;AA/7EgB;AAAA;AAAA,4BAg8EXL,gBAh8EW,EAg8EOC,iBAh8EP,EAg8E0BC,QAh8E1B,EAg8EoC;AACjD,YAAIC,MAAM,GAAIH,gBAAgB,IAAI,EAAlC;AACA,YAAIpB,OAAO,GAAIqB,iBAAiB,IAAI,EAApC;;AACA,YAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;AACxCE,UAAAA,QAAQ,GAAGF,gBAAX;AACAG,UAAAA,MAAM,GAAG,EAAT;AACAvB,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAI,OAAOqB,iBAAP,KAA6B,UAAjC,EAA6C;AACzCC,UAAAA,QAAQ,GAAGD,iBAAX;AACArB,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAMwB,OAAO,GAAGxB,OAAO,CAACwB,OAAR,IAAmB,6BAAnC;AACA,YAAMC,UAAU,GAAG;AACfzB,UAAAA,OAAO,EAAER,MAAM,CAACkC,MAAP,CAAc;AACnBC,YAAAA,GAAG,EAAE,CAACH,OAAO,GACT,6EADC,EAEAI,OAFA,CAEQ,cAFR,EAEwB,IAFxB,CADc;AAInBC,YAAAA,MAAM,EAAE;AAJW,WAAd,EAKN7B,OALM,CADM;AAOfuB,UAAAA,MAPe;AAQfO,UAAAA,cAAc,EAAE,CAAC,WAAD,EAAc,eAAd,CARD;AASfC,UAAAA,UAAU,EAAE,CAAC,WAAD,EAAc,eAAd,CATG;AAUf7B,UAAAA,OAAO,EAAE,KAAKA;AAVC,SAAnB;;AAYA,YAAIoB,QAAJ,EAAc;AACV1B,UAAAA,mBAAmB,CAACoC,gBAApB,CAAqCP,UAArC,EAAiDH,QAAjD;AACH,SAFD,MAGK;AACD,iBAAO1B,mBAAmB,CAACoC,gBAApB,CAAqCP,UAArC,CAAP;AACH;AACJ;AA/9EgB;AAAA;AAAA,6BAg+EVL,gBAh+EU,EAg+EQC,iBAh+ER,EAg+E2BC,QAh+E3B,EAg+EqC;AAClD,YAAIC,MAAM,GAAIH,gBAAgB,IAAI,EAAlC;AACA,YAAIpB,OAAO,GAAIqB,iBAAiB,IAAI,EAApC;;AACA,YAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;AACxCE,UAAAA,QAAQ,GAAGF,gBAAX;AACAG,UAAAA,MAAM,GAAG,EAAT;AACAvB,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAI,OAAOqB,iBAAP,KAA6B,UAAjC,EAA6C;AACzCC,UAAAA,QAAQ,GAAGD,iBAAX;AACArB,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAMwB,OAAO,GAAGxB,OAAO,CAACwB,OAAR,IAAmB,6BAAnC;AACA,YAAMC,UAAU,GAAG;AACfzB,UAAAA,OAAO,EAAER,MAAM,CAACkC,MAAP,CAAc;AACnBC,YAAAA,GAAG,EAAE,CAACH,OAAO,GACT,6EADC,EAEAI,OAFA,CAEQ,cAFR,EAEwB,IAFxB,CADc;AAInBC,YAAAA,MAAM,EAAE;AAJW,WAAd,EAKN7B,OALM,CADM;AAOfuB,UAAAA,MAPe;AAQfO,UAAAA,cAAc,EAAE,CAAC,WAAD,EAAc,eAAd,CARD;AASfC,UAAAA,UAAU,EAAE,CAAC,WAAD,EAAc,eAAd,CATG;AAUf7B,UAAAA,OAAO,EAAE,KAAKA;AAVC,SAAnB;;AAYA,YAAIoB,QAAJ,EAAc;AACV1B,UAAAA,mBAAmB,CAACoC,gBAApB,CAAqCP,UAArC,EAAiDH,QAAjD;AACH,SAFD,MAGK;AACD,iBAAO1B,mBAAmB,CAACoC,gBAApB,CAAqCP,UAArC,CAAP;AACH;AACJ;AA//EgB;;AAAA;AAAA;;AAigFrB3B,EAAAA,YAAY,CAACsE,iCAAb,GAAiDA,iCAAjD;;AAjgFqB,MAkgFfE,2CAlgFe;AAmgFjB,yDAAYpE,OAAZ,EAAqB;AAAA;;AACjB,WAAKA,OAAL,GAAeA,OAAf;AACH;;AArgFgB;AAAA;AAAA,8BAsgFVkB,gBAtgFU,EAsgFQC,iBAtgFR,EAsgF2BC,QAtgF3B,EAsgFqC;AAClD,YAAIC,MAAM,GAAIH,gBAAgB,IAAI,EAAlC;AACA,YAAIpB,OAAO,GAAIqB,iBAAiB,IAAI,EAApC;;AACA,YAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;AACxCE,UAAAA,QAAQ,GAAGF,gBAAX;AACAG,UAAAA,MAAM,GAAG,EAAT;AACAvB,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAI,OAAOqB,iBAAP,KAA6B,UAAjC,EAA6C;AACzCC,UAAAA,QAAQ,GAAGD,iBAAX;AACArB,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAMwB,OAAO,GAAGxB,OAAO,CAACwB,OAAR,IAAmB,6BAAnC;AACA,YAAMC,UAAU,GAAG;AACfzB,UAAAA,OAAO,EAAER,MAAM,CAACkC,MAAP,CAAc;AACnBC,YAAAA,GAAG,EAAE,CAACH,OAAO,GACT,2HADC,EAEAI,OAFA,CAEQ,cAFR,EAEwB,IAFxB,CADc;AAInBC,YAAAA,MAAM,EAAE;AAJW,WAAd,EAKN7B,OALM,CADM;AAOfuB,UAAAA,MAPe;AAQfO,UAAAA,cAAc,EAAE,CAAC,WAAD,EAAc,eAAd,EAA+B,0BAA/B,CARD;AASfC,UAAAA,UAAU,EAAE,CAAC,WAAD,EAAc,0BAAd,EAA0C,eAA1C,CATG;AAUf7B,UAAAA,OAAO,EAAE,KAAKA;AAVC,SAAnB;;AAYA,YAAIoB,QAAJ,EAAc;AACV1B,UAAAA,mBAAmB,CAACoC,gBAApB,CAAqCP,UAArC,EAAiDH,QAAjD;AACH,SAFD,MAGK;AACD,iBAAO1B,mBAAmB,CAACoC,gBAApB,CAAqCP,UAArC,CAAP;AACH;AACJ;AAriFgB;AAAA;AAAA,0BAsiFbL,gBAtiFa,EAsiFKC,iBAtiFL,EAsiFwBC,QAtiFxB,EAsiFkC;AAC/C,YAAIC,MAAM,GAAIH,gBAAgB,IAAI,EAAlC;AACA,YAAIpB,OAAO,GAAIqB,iBAAiB,IAAI,EAApC;;AACA,YAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;AACxCE,UAAAA,QAAQ,GAAGF,gBAAX;AACAG,UAAAA,MAAM,GAAG,EAAT;AACAvB,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAI,OAAOqB,iBAAP,KAA6B,UAAjC,EAA6C;AACzCC,UAAAA,QAAQ,GAAGD,iBAAX;AACArB,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAMwB,OAAO,GAAGxB,OAAO,CAACwB,OAAR,IAAmB,6BAAnC;AACA,YAAMC,UAAU,GAAG;AACfzB,UAAAA,OAAO,EAAER,MAAM,CAACkC,MAAP,CAAc;AACnBC,YAAAA,GAAG,EAAE,CAACH,OAAO,GACT,2HADC,EAEAI,OAFA,CAEQ,cAFR,EAEwB,IAFxB,CADc;AAInBC,YAAAA,MAAM,EAAE;AAJW,WAAd,EAKN7B,OALM,CADM;AAOfuB,UAAAA,MAPe;AAQfO,UAAAA,cAAc,EAAE,CAAC,WAAD,EAAc,eAAd,EAA+B,0BAA/B,CARD;AASfC,UAAAA,UAAU,EAAE,CAAC,WAAD,EAAc,0BAAd,EAA0C,eAA1C,CATG;AAUf7B,UAAAA,OAAO,EAAE,KAAKA;AAVC,SAAnB;;AAYA,YAAIoB,QAAJ,EAAc;AACV1B,UAAAA,mBAAmB,CAACoC,gBAApB,CAAqCP,UAArC,EAAiDH,QAAjD;AACH,SAFD,MAGK;AACD,iBAAO1B,mBAAmB,CAACoC,gBAApB,CAAqCP,UAArC,CAAP;AACH;AACJ;AArkFgB;AAAA;AAAA,6BAskFVL,gBAtkFU,EAskFQC,iBAtkFR,EAskF2BC,QAtkF3B,EAskFqC;AAClD,YAAIC,MAAM,GAAIH,gBAAgB,IAAI,EAAlC;AACA,YAAIpB,OAAO,GAAIqB,iBAAiB,IAAI,EAApC;;AACA,YAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;AACxCE,UAAAA,QAAQ,GAAGF,gBAAX;AACAG,UAAAA,MAAM,GAAG,EAAT;AACAvB,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAI,OAAOqB,iBAAP,KAA6B,UAAjC,EAA6C;AACzCC,UAAAA,QAAQ,GAAGD,iBAAX;AACArB,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAMwB,OAAO,GAAGxB,OAAO,CAACwB,OAAR,IAAmB,6BAAnC;AACA,YAAMC,UAAU,GAAG;AACfzB,UAAAA,OAAO,EAAER,MAAM,CAACkC,MAAP,CAAc;AACnBC,YAAAA,GAAG,EAAE,CAACH,OAAO,GACT,gGADC,EAEAI,OAFA,CAEQ,cAFR,EAEwB,IAFxB,CADc;AAInBC,YAAAA,MAAM,EAAE;AAJW,WAAd,EAKN7B,OALM,CADM;AAOfuB,UAAAA,MAPe;AAQfO,UAAAA,cAAc,EAAE,CAAC,WAAD,EAAc,eAAd,CARD;AASfC,UAAAA,UAAU,EAAE,CAAC,WAAD,EAAc,eAAd,CATG;AAUf7B,UAAAA,OAAO,EAAE,KAAKA;AAVC,SAAnB;;AAYA,YAAIoB,QAAJ,EAAc;AACV1B,UAAAA,mBAAmB,CAACoC,gBAApB,CAAqCP,UAArC,EAAiDH,QAAjD;AACH,SAFD,MAGK;AACD,iBAAO1B,mBAAmB,CAACoC,gBAApB,CAAqCP,UAArC,CAAP;AACH;AACJ;AArmFgB;AAAA;AAAA,2BAsmFZL,gBAtmFY,EAsmFMC,iBAtmFN,EAsmFyBC,QAtmFzB,EAsmFmC;AAChD,YAAIC,MAAM,GAAIH,gBAAgB,IAAI,EAAlC;AACA,YAAIpB,OAAO,GAAIqB,iBAAiB,IAAI,EAApC;;AACA,YAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;AACxCE,UAAAA,QAAQ,GAAGF,gBAAX;AACAG,UAAAA,MAAM,GAAG,EAAT;AACAvB,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAI,OAAOqB,iBAAP,KAA6B,UAAjC,EAA6C;AACzCC,UAAAA,QAAQ,GAAGD,iBAAX;AACArB,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAMwB,OAAO,GAAGxB,OAAO,CAACwB,OAAR,IAAmB,6BAAnC;AACA,YAAMC,UAAU,GAAG;AACfzB,UAAAA,OAAO,EAAER,MAAM,CAACkC,MAAP,CAAc;AACnBC,YAAAA,GAAG,EAAE,CAACH,OAAO,GACT,gGADC,EAEAI,OAFA,CAEQ,cAFR,EAEwB,IAFxB,CADc;AAInBC,YAAAA,MAAM,EAAE;AAJW,WAAd,EAKN7B,OALM,CADM;AAOfuB,UAAAA,MAPe;AAQfO,UAAAA,cAAc,EAAE,CAAC,WAAD,EAAc,eAAd,CARD;AASfC,UAAAA,UAAU,EAAE,CAAC,WAAD,EAAc,eAAd,CATG;AAUf7B,UAAAA,OAAO,EAAE,KAAKA;AAVC,SAAnB;;AAYA,YAAIoB,QAAJ,EAAc;AACV1B,UAAAA,mBAAmB,CAACoC,gBAApB,CAAqCP,UAArC,EAAiDH,QAAjD;AACH,SAFD,MAGK;AACD,iBAAO1B,mBAAmB,CAACoC,gBAApB,CAAqCP,UAArC,CAAP;AACH;AACJ;AAroFgB;AAAA;AAAA,4BAsoFXL,gBAtoFW,EAsoFOC,iBAtoFP,EAsoF0BC,QAtoF1B,EAsoFoC;AACjD,YAAIC,MAAM,GAAIH,gBAAgB,IAAI,EAAlC;AACA,YAAIpB,OAAO,GAAIqB,iBAAiB,IAAI,EAApC;;AACA,YAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;AACxCE,UAAAA,QAAQ,GAAGF,gBAAX;AACAG,UAAAA,MAAM,GAAG,EAAT;AACAvB,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAI,OAAOqB,iBAAP,KAA6B,UAAjC,EAA6C;AACzCC,UAAAA,QAAQ,GAAGD,iBAAX;AACArB,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAMwB,OAAO,GAAGxB,OAAO,CAACwB,OAAR,IAAmB,6BAAnC;AACA,YAAMC,UAAU,GAAG;AACfzB,UAAAA,OAAO,EAAER,MAAM,CAACkC,MAAP,CAAc;AACnBC,YAAAA,GAAG,EAAE,CAACH,OAAO,GACT,2HADC,EAEAI,OAFA,CAEQ,cAFR,EAEwB,IAFxB,CADc;AAInBC,YAAAA,MAAM,EAAE;AAJW,WAAd,EAKN7B,OALM,CADM;AAOfuB,UAAAA,MAPe;AAQfO,UAAAA,cAAc,EAAE,CAAC,WAAD,EAAc,eAAd,EAA+B,0BAA/B,CARD;AASfC,UAAAA,UAAU,EAAE,CAAC,WAAD,EAAc,0BAAd,EAA0C,eAA1C,CATG;AAUf7B,UAAAA,OAAO,EAAE,KAAKA;AAVC,SAAnB;;AAYA,YAAIoB,QAAJ,EAAc;AACV1B,UAAAA,mBAAmB,CAACoC,gBAApB,CAAqCP,UAArC,EAAiDH,QAAjD;AACH,SAFD,MAGK;AACD,iBAAO1B,mBAAmB,CAACoC,gBAApB,CAAqCP,UAArC,CAAP;AACH;AACJ;AArqFgB;AAAA;AAAA,6BAsqFVL,gBAtqFU,EAsqFQC,iBAtqFR,EAsqF2BC,QAtqF3B,EAsqFqC;AAClD,YAAIC,MAAM,GAAIH,gBAAgB,IAAI,EAAlC;AACA,YAAIpB,OAAO,GAAIqB,iBAAiB,IAAI,EAApC;;AACA,YAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;AACxCE,UAAAA,QAAQ,GAAGF,gBAAX;AACAG,UAAAA,MAAM,GAAG,EAAT;AACAvB,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAI,OAAOqB,iBAAP,KAA6B,UAAjC,EAA6C;AACzCC,UAAAA,QAAQ,GAAGD,iBAAX;AACArB,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAMwB,OAAO,GAAGxB,OAAO,CAACwB,OAAR,IAAmB,6BAAnC;AACA,YAAMC,UAAU,GAAG;AACfzB,UAAAA,OAAO,EAAER,MAAM,CAACkC,MAAP,CAAc;AACnBC,YAAAA,GAAG,EAAE,CAACH,OAAO,GACT,2HADC,EAEAI,OAFA,CAEQ,cAFR,EAEwB,IAFxB,CADc;AAInBC,YAAAA,MAAM,EAAE;AAJW,WAAd,EAKN7B,OALM,CADM;AAOfuB,UAAAA,MAPe;AAQfO,UAAAA,cAAc,EAAE,CAAC,WAAD,EAAc,eAAd,EAA+B,0BAA/B,CARD;AASfC,UAAAA,UAAU,EAAE,CAAC,WAAD,EAAc,0BAAd,EAA0C,eAA1C,CATG;AAUf7B,UAAAA,OAAO,EAAE,KAAKA;AAVC,SAAnB;;AAYA,YAAIoB,QAAJ,EAAc;AACV1B,UAAAA,mBAAmB,CAACoC,gBAApB,CAAqCP,UAArC,EAAiDH,QAAjD;AACH,SAFD,MAGK;AACD,iBAAO1B,mBAAmB,CAACoC,gBAApB,CAAqCP,UAArC,CAAP;AACH;AACJ;AArsFgB;;AAAA;AAAA;;AAusFrB3B,EAAAA,YAAY,CAACwE,2CAAb,GAA2DA,2CAA3D;;AAvsFqB,MAwsFfE,wCAxsFe;AAysFjB,sDAAYtE,OAAZ,EAAqB;AAAA;;AACjB,WAAKA,OAAL,GAAeA,OAAf;AACH;;AA3sFgB;AAAA;AAAA,8BA4sFVkB,gBA5sFU,EA4sFQC,iBA5sFR,EA4sF2BC,QA5sF3B,EA4sFqC;AAClD,YAAIC,MAAM,GAAIH,gBAAgB,IAAI,EAAlC;AACA,YAAIpB,OAAO,GAAIqB,iBAAiB,IAAI,EAApC;;AACA,YAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;AACxCE,UAAAA,QAAQ,GAAGF,gBAAX;AACAG,UAAAA,MAAM,GAAG,EAAT;AACAvB,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAI,OAAOqB,iBAAP,KAA6B,UAAjC,EAA6C;AACzCC,UAAAA,QAAQ,GAAGD,iBAAX;AACArB,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAMwB,OAAO,GAAGxB,OAAO,CAACwB,OAAR,IAAmB,6BAAnC;AACA,YAAMC,UAAU,GAAG;AACfzB,UAAAA,OAAO,EAAER,MAAM,CAACkC,MAAP,CAAc;AACnBC,YAAAA,GAAG,EAAE,CAACH,OAAO,GACT,sGADC,EAEAI,OAFA,CAEQ,cAFR,EAEwB,IAFxB,CADc;AAInBC,YAAAA,MAAM,EAAE;AAJW,WAAd,EAKN7B,OALM,CADM;AAOfuB,UAAAA,MAPe;AAQfO,UAAAA,cAAc,EAAE,CAAC,WAAD,EAAc,eAAd,EAA+B,QAA/B,CARD;AASfC,UAAAA,UAAU,EAAE,CAAC,WAAD,EAAc,QAAd,EAAwB,eAAxB,CATG;AAUf7B,UAAAA,OAAO,EAAE,KAAKA;AAVC,SAAnB;;AAYA,YAAIoB,QAAJ,EAAc;AACV1B,UAAAA,mBAAmB,CAACoC,gBAApB,CAAqCP,UAArC,EAAiDH,QAAjD;AACH,SAFD,MAGK;AACD,iBAAO1B,mBAAmB,CAACoC,gBAApB,CAAqCP,UAArC,CAAP;AACH;AACJ;AA3uFgB;AAAA;AAAA,6BA4uFVL,gBA5uFU,EA4uFQC,iBA5uFR,EA4uF2BC,QA5uF3B,EA4uFqC;AAClD,YAAIC,MAAM,GAAIH,gBAAgB,IAAI,EAAlC;AACA,YAAIpB,OAAO,GAAIqB,iBAAiB,IAAI,EAApC;;AACA,YAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;AACxCE,UAAAA,QAAQ,GAAGF,gBAAX;AACAG,UAAAA,MAAM,GAAG,EAAT;AACAvB,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAI,OAAOqB,iBAAP,KAA6B,UAAjC,EAA6C;AACzCC,UAAAA,QAAQ,GAAGD,iBAAX;AACArB,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAMwB,OAAO,GAAGxB,OAAO,CAACwB,OAAR,IAAmB,6BAAnC;AACA,YAAMC,UAAU,GAAG;AACfzB,UAAAA,OAAO,EAAER,MAAM,CAACkC,MAAP,CAAc;AACnBC,YAAAA,GAAG,EAAE,CAACH,OAAO,GACT,6FADC,EAEAI,OAFA,CAEQ,cAFR,EAEwB,IAFxB,CADc;AAInBC,YAAAA,MAAM,EAAE;AAJW,WAAd,EAKN7B,OALM,CADM;AAOfuB,UAAAA,MAPe;AAQfO,UAAAA,cAAc,EAAE,CAAC,WAAD,EAAc,eAAd,CARD;AASfC,UAAAA,UAAU,EAAE,CAAC,WAAD,EAAc,eAAd,CATG;AAUf7B,UAAAA,OAAO,EAAE,KAAKA;AAVC,SAAnB;;AAYA,YAAIoB,QAAJ,EAAc;AACV1B,UAAAA,mBAAmB,CAACoC,gBAApB,CAAqCP,UAArC,EAAiDH,QAAjD;AACH,SAFD,MAGK;AACD,iBAAO1B,mBAAmB,CAACoC,gBAApB,CAAqCP,UAArC,CAAP;AACH;AACJ;AA3wFgB;AAAA;AAAA,2BA4wFZL,gBA5wFY,EA4wFMC,iBA5wFN,EA4wFyBC,QA5wFzB,EA4wFmC;AAChD,YAAIC,MAAM,GAAIH,gBAAgB,IAAI,EAAlC;AACA,YAAIpB,OAAO,GAAIqB,iBAAiB,IAAI,EAApC;;AACA,YAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;AACxCE,UAAAA,QAAQ,GAAGF,gBAAX;AACAG,UAAAA,MAAM,GAAG,EAAT;AACAvB,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAI,OAAOqB,iBAAP,KAA6B,UAAjC,EAA6C;AACzCC,UAAAA,QAAQ,GAAGD,iBAAX;AACArB,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAMwB,OAAO,GAAGxB,OAAO,CAACwB,OAAR,IAAmB,6BAAnC;AACA,YAAMC,UAAU,GAAG;AACfzB,UAAAA,OAAO,EAAER,MAAM,CAACkC,MAAP,CAAc;AACnBC,YAAAA,GAAG,EAAE,CAACH,OAAO,GACT,6FADC,EAEAI,OAFA,CAEQ,cAFR,EAEwB,IAFxB,CADc;AAInBC,YAAAA,MAAM,EAAE;AAJW,WAAd,EAKN7B,OALM,CADM;AAOfuB,UAAAA,MAPe;AAQfO,UAAAA,cAAc,EAAE,CAAC,WAAD,EAAc,eAAd,CARD;AASfC,UAAAA,UAAU,EAAE,CAAC,WAAD,EAAc,eAAd,CATG;AAUf7B,UAAAA,OAAO,EAAE,KAAKA;AAVC,SAAnB;;AAYA,YAAIoB,QAAJ,EAAc;AACV1B,UAAAA,mBAAmB,CAACoC,gBAApB,CAAqCP,UAArC,EAAiDH,QAAjD;AACH,SAFD,MAGK;AACD,iBAAO1B,mBAAmB,CAACoC,gBAApB,CAAqCP,UAArC,CAAP;AACH;AACJ;AA3yFgB;AAAA;AAAA,6BA4yFVL,gBA5yFU,EA4yFQC,iBA5yFR,EA4yF2BC,QA5yF3B,EA4yFqC;AAClD,YAAIC,MAAM,GAAIH,gBAAgB,IAAI,EAAlC;AACA,YAAIpB,OAAO,GAAIqB,iBAAiB,IAAI,EAApC;;AACA,YAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;AACxCE,UAAAA,QAAQ,GAAGF,gBAAX;AACAG,UAAAA,MAAM,GAAG,EAAT;AACAvB,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAI,OAAOqB,iBAAP,KAA6B,UAAjC,EAA6C;AACzCC,UAAAA,QAAQ,GAAGD,iBAAX;AACArB,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAMwB,OAAO,GAAGxB,OAAO,CAACwB,OAAR,IAAmB,6BAAnC;AACA,YAAMC,UAAU,GAAG;AACfzB,UAAAA,OAAO,EAAER,MAAM,CAACkC,MAAP,CAAc;AACnBC,YAAAA,GAAG,EAAE,CAACH,OAAO,GACT,sGADC,EAEAI,OAFA,CAEQ,cAFR,EAEwB,IAFxB,CADc;AAInBC,YAAAA,MAAM,EAAE;AAJW,WAAd,EAKN7B,OALM,CADM;AAOfuB,UAAAA,MAPe;AAQfO,UAAAA,cAAc,EAAE,CAAC,WAAD,EAAc,eAAd,EAA+B,QAA/B,CARD;AASfC,UAAAA,UAAU,EAAE,CAAC,WAAD,EAAc,QAAd,EAAwB,eAAxB,CATG;AAUf7B,UAAAA,OAAO,EAAE,KAAKA;AAVC,SAAnB;;AAYA,YAAIoB,QAAJ,EAAc;AACV1B,UAAAA,mBAAmB,CAACoC,gBAApB,CAAqCP,UAArC,EAAiDH,QAAjD;AACH,SAFD,MAGK;AACD,iBAAO1B,mBAAmB,CAACoC,gBAApB,CAAqCP,UAArC,CAAP;AACH;AACJ;AA30FgB;;AAAA;AAAA;;AA60FrB3B,EAAAA,YAAY,CAAC0E,wCAAb,GAAwDA,wCAAxD;;AA70FqB,MA80Ff/D,iBA90Fe,GA+0FjB,2BAAYP,OAAZ,EAAqB;AAAA;;AACjB,SAAKA,OAAL,GAAeA,OAAf;AACA,SAAKwE,OAAL,GAAe,IAAIC,yBAAJ,CAA8B,KAAKzE,OAAnC,CAAf;AACH,GAl1FgB;;AAo1FrBJ,EAAAA,YAAY,CAACW,iBAAb,GAAiCA,iBAAjC;;AAp1FqB,MAq1FfkE,yBAr1Fe;AAs1FjB,uCAAYzE,OAAZ,EAAqB;AAAA;;AACjB,WAAKA,OAAL,GAAeA,OAAf;AACH;;AAx1FgB;AAAA;AAAA,2BAy1FZkB,gBAz1FY,EAy1FMC,iBAz1FN,EAy1FyBC,QAz1FzB,EAy1FmC;AAChD,YAAIC,MAAM,GAAIH,gBAAgB,IAAI,EAAlC;AACA,YAAIpB,OAAO,GAAIqB,iBAAiB,IAAI,EAApC;;AACA,YAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;AACxCE,UAAAA,QAAQ,GAAGF,gBAAX;AACAG,UAAAA,MAAM,GAAG,EAAT;AACAvB,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAI,OAAOqB,iBAAP,KAA6B,UAAjC,EAA6C;AACzCC,UAAAA,QAAQ,GAAGD,iBAAX;AACArB,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAMwB,OAAO,GAAGxB,OAAO,CAACwB,OAAR,IAAmB,6BAAnC;AACA,YAAMC,UAAU,GAAG;AACfzB,UAAAA,OAAO,EAAER,MAAM,CAACkC,MAAP,CAAc;AACnBC,YAAAA,GAAG,EAAE,CAACH,OAAO,GAAG,6CAAX,EACAI,OADA,CACQ,cADR,EACwB,IADxB,CADc;AAGnBC,YAAAA,MAAM,EAAE;AAHW,WAAd,EAIN7B,OAJM,CADM;AAMfuB,UAAAA,MANe;AAOfO,UAAAA,cAAc,EAAE,CAAC,YAAD,CAPD;AAQfC,UAAAA,UAAU,EAAE,CAAC,YAAD,CARG;AASf7B,UAAAA,OAAO,EAAE,KAAKA;AATC,SAAnB;;AAWA,YAAIoB,QAAJ,EAAc;AACV1B,UAAAA,mBAAmB,CAACoC,gBAApB,CAAqCP,UAArC,EAAiDH,QAAjD;AACH,SAFD,MAGK;AACD,iBAAO1B,mBAAmB,CAACoC,gBAApB,CAAqCP,UAArC,CAAP;AACH;AACJ;AAv3FgB;;AAAA;AAAA;;AAy3FrB3B,EAAAA,YAAY,CAAC6E,yBAAb,GAAyCA,yBAAzC;;AAz3FqB,MA03FfhE,qBA13Fe;AA23FjB,mCAAYT,OAAZ,EAAqB;AAAA;;AACjB,WAAKA,OAAL,GAAeA,OAAf;AACH;;AA73FgB;AAAA;AAAA,0CA83FGkB,gBA93FH,EA83FqBC,iBA93FrB,EA83FwCC,QA93FxC,EA83FkD;AAC/D,YAAIC,MAAM,GAAIH,gBAAgB,IAAI,EAAlC;AACA,YAAIpB,OAAO,GAAIqB,iBAAiB,IAAI,EAApC;;AACA,YAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;AACxCE,UAAAA,QAAQ,GAAGF,gBAAX;AACAG,UAAAA,MAAM,GAAG,EAAT;AACAvB,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAI,OAAOqB,iBAAP,KAA6B,UAAjC,EAA6C;AACzCC,UAAAA,QAAQ,GAAGD,iBAAX;AACArB,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAMwB,OAAO,GAAGxB,OAAO,CAACwB,OAAR,IAAmB,6BAAnC;AACA,YAAMC,UAAU,GAAG;AACfzB,UAAAA,OAAO,EAAER,MAAM,CAACkC,MAAP,CAAc;AACnBC,YAAAA,GAAG,EAAE,CAACH,OAAO,GAAG,gDAAX,EACAI,OADA,CACQ,cADR,EACwB,IADxB,CADc;AAGnBC,YAAAA,MAAM,EAAE;AAHW,WAAd,EAIN7B,OAJM,CADM;AAMfuB,UAAAA,MANe;AAOfO,UAAAA,cAAc,EAAE,EAPD;AAQfC,UAAAA,UAAU,EAAE,EARG;AASf7B,UAAAA,OAAO,EAAE,KAAKA;AATC,SAAnB;;AAWA,YAAIoB,QAAJ,EAAc;AACV1B,UAAAA,mBAAmB,CAACoC,gBAApB,CAAqCP,UAArC,EAAiDH,QAAjD;AACH,SAFD,MAGK;AACD,iBAAO1B,mBAAmB,CAACoC,gBAApB,CAAqCP,UAArC,CAAP;AACH;AACJ;AA55FgB;AAAA;AAAA,wCA65FCL,gBA75FD,EA65FmBC,iBA75FnB,EA65FsCC,QA75FtC,EA65FgD;AAC7D,YAAIC,MAAM,GAAIH,gBAAgB,IAAI,EAAlC;AACA,YAAIpB,OAAO,GAAIqB,iBAAiB,IAAI,EAApC;;AACA,YAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;AACxCE,UAAAA,QAAQ,GAAGF,gBAAX;AACAG,UAAAA,MAAM,GAAG,EAAT;AACAvB,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAI,OAAOqB,iBAAP,KAA6B,UAAjC,EAA6C;AACzCC,UAAAA,QAAQ,GAAGD,iBAAX;AACArB,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAMwB,OAAO,GAAGxB,OAAO,CAACwB,OAAR,IAAmB,6BAAnC;AACA,YAAMC,UAAU,GAAG;AACfzB,UAAAA,OAAO,EAAER,MAAM,CAACkC,MAAP,CAAc;AACnBC,YAAAA,GAAG,EAAE,CAACH,OAAO,GAAG,8CAAX,EACAI,OADA,CACQ,cADR,EACwB,IADxB,CADc;AAGnBC,YAAAA,MAAM,EAAE;AAHW,WAAd,EAIN7B,OAJM,CADM;AAMfuB,UAAAA,MANe;AAOfO,UAAAA,cAAc,EAAE,EAPD;AAQfC,UAAAA,UAAU,EAAE,EARG;AASf7B,UAAAA,OAAO,EAAE,KAAKA;AATC,SAAnB;;AAWA,YAAIoB,QAAJ,EAAc;AACV1B,UAAAA,mBAAmB,CAACoC,gBAApB,CAAqCP,UAArC,EAAiDH,QAAjD;AACH,SAFD,MAGK;AACD,iBAAO1B,mBAAmB,CAACoC,gBAApB,CAAqCP,UAArC,CAAP;AACH;AACJ;AA37FgB;;AAAA;AAAA;;AA67FrB3B,EAAAA,YAAY,CAACa,qBAAb,GAAqCA,qBAArC;;AA77FqB,MA87FfE,qBA97Fe,GA+7FjB,+BAAYX,OAAZ,EAAqB;AAAA;;AACjB,SAAKA,OAAL,GAAeA,OAAf;AACA,SAAK0E,mBAAL,GACI,IAAIC,yCAAJ,CAA8C,KAAK3E,OAAnD,CADJ;AAEH,GAn8FgB;;AAq8FrBJ,EAAAA,YAAY,CAACe,qBAAb,GAAqCA,qBAArC;;AAr8FqB,MAs8FfgE,yCAt8Fe;AAu8FjB,uDAAY3E,OAAZ,EAAqB;AAAA;;AACjB,WAAKA,OAAL,GAAeA,OAAf;AACH;;AAz8FgB;AAAA;AAAA,6BA08FVkB,gBA18FU,EA08FQC,iBA18FR,EA08F2BC,QA18F3B,EA08FqC;AAClD,YAAIC,MAAM,GAAIH,gBAAgB,IAAI,EAAlC;AACA,YAAIpB,OAAO,GAAIqB,iBAAiB,IAAI,EAApC;;AACA,YAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;AACxCE,UAAAA,QAAQ,GAAGF,gBAAX;AACAG,UAAAA,MAAM,GAAG,EAAT;AACAvB,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAI,OAAOqB,iBAAP,KAA6B,UAAjC,EAA6C;AACzCC,UAAAA,QAAQ,GAAGD,iBAAX;AACArB,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAMwB,OAAO,GAAGxB,OAAO,CAACwB,OAAR,IAAmB,6BAAnC;AACA,YAAMC,UAAU,GAAG;AACfzB,UAAAA,OAAO,EAAER,MAAM,CAACkC,MAAP,CAAc;AACnBC,YAAAA,GAAG,EAAE,CAACH,OAAO,GACT,wDADC,EAEAI,OAFA,CAEQ,cAFR,EAEwB,IAFxB,CADc;AAInBC,YAAAA,MAAM,EAAE;AAJW,WAAd,EAKN7B,OALM,CADM;AAOfuB,UAAAA,MAPe;AAQfO,UAAAA,cAAc,EAAE,EARD;AASfC,UAAAA,UAAU,EAAE,EATG;AAUf7B,UAAAA,OAAO,EAAE,KAAKA;AAVC,SAAnB;;AAYA,YAAIoB,QAAJ,EAAc;AACV1B,UAAAA,mBAAmB,CAACoC,gBAApB,CAAqCP,UAArC,EAAiDH,QAAjD;AACH,SAFD,MAGK;AACD,iBAAO1B,mBAAmB,CAACoC,gBAApB,CAAqCP,UAArC,CAAP;AACH;AACJ;AAz+FgB;;AAAA;AAAA;;AA2+FrB3B,EAAAA,YAAY,CAAC+E,yCAAb,GAAyDA,yCAAzD;AACH,CA5+FD,EA4+FG/E,YAAY,GAAGJ,OAAO,CAACI,YAAR,KAAyBJ,OAAO,CAACI,YAAR,GAAuB,EAAhD,CA5+FlB","sourcesContent":["\"use strict\";\n/**\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst googleapis_common_1 = require(\"googleapis-common\");\n// tslint:disable: no-any\n// tslint:disable: class-name\n// tslint:disable: variable-name\n// tslint:disable: jsdoc-format\n// tslint:disable: no-namespace\nvar analytics_v3;\n(function (analytics_v3) {\n    /**\n     * Google Analytics API\n     *\n     * Views and manages your Google Analytics data.\n     *\n     * @example\n     * const {google} = require('googleapis');\n     * const analytics = google.analytics('v3');\n     *\n     * @namespace analytics\n     * @type {Function}\n     * @version v3\n     * @variation v3\n     * @param {object=} options Options for Analytics\n     */\n    class Analytics {\n        constructor(options, google) {\n            this.context = { _options: options || {}, google };\n            this.data = new Resource$Data(this.context);\n            this.management = new Resource$Management(this.context);\n            this.metadata = new Resource$Metadata(this.context);\n            this.provisioning = new Resource$Provisioning(this.context);\n            this.userDeletion = new Resource$Userdeletion(this.context);\n        }\n    }\n    analytics_v3.Analytics = Analytics;\n    class Resource$Data {\n        constructor(context) {\n            this.context = context;\n            this.ga = new Resource$Data$Ga(this.context);\n            this.mcf = new Resource$Data$Mcf(this.context);\n            this.realtime = new Resource$Data$Realtime(this.context);\n        }\n    }\n    analytics_v3.Resource$Data = Resource$Data;\n    class Resource$Data$Ga {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/analytics/v3/data/ga')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['ids', 'start-date', 'end-date', 'metrics'],\n                pathParams: [],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    analytics_v3.Resource$Data$Ga = Resource$Data$Ga;\n    class Resource$Data$Mcf {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/analytics/v3/data/mcf')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['ids', 'start-date', 'end-date', 'metrics'],\n                pathParams: [],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    analytics_v3.Resource$Data$Mcf = Resource$Data$Mcf;\n    class Resource$Data$Realtime {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/analytics/v3/data/realtime')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['ids', 'metrics'],\n                pathParams: [],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    analytics_v3.Resource$Data$Realtime = Resource$Data$Realtime;\n    class Resource$Management {\n        constructor(context) {\n            this.context = context;\n            this.accounts = new Resource$Management$Accounts(this.context);\n            this.accountSummaries =\n                new Resource$Management$Accountsummaries(this.context);\n            this.accountUserLinks =\n                new Resource$Management$Accountuserlinks(this.context);\n            this.clientId = new Resource$Management$Clientid(this.context);\n            this.customDataSources =\n                new Resource$Management$Customdatasources(this.context);\n            this.customDimensions =\n                new Resource$Management$Customdimensions(this.context);\n            this.customMetrics = new Resource$Management$Custommetrics(this.context);\n            this.experiments = new Resource$Management$Experiments(this.context);\n            this.filters = new Resource$Management$Filters(this.context);\n            this.goals = new Resource$Management$Goals(this.context);\n            this.profileFilterLinks =\n                new Resource$Management$Profilefilterlinks(this.context);\n            this.profiles = new Resource$Management$Profiles(this.context);\n            this.profileUserLinks =\n                new Resource$Management$Profileuserlinks(this.context);\n            this.remarketingAudience =\n                new Resource$Management$Remarketingaudience(this.context);\n            this.segments = new Resource$Management$Segments(this.context);\n            this.unsampledReports =\n                new Resource$Management$Unsampledreports(this.context);\n            this.uploads = new Resource$Management$Uploads(this.context);\n            this.webproperties = new Resource$Management$Webproperties(this.context);\n            this.webPropertyAdWordsLinks =\n                new Resource$Management$Webpropertyadwordslinks(this.context);\n            this.webpropertyUserLinks =\n                new Resource$Management$Webpropertyuserlinks(this.context);\n        }\n    }\n    analytics_v3.Resource$Management = Resource$Management;\n    class Resource$Management$Accounts {\n        constructor(context) {\n            this.context = context;\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/analytics/v3/management/accounts')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: [],\n                pathParams: [],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    analytics_v3.Resource$Management$Accounts = Resource$Management$Accounts;\n    class Resource$Management$Accountsummaries {\n        constructor(context) {\n            this.context = context;\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/analytics/v3/management/accountSummaries')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: [],\n                pathParams: [],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    analytics_v3.Resource$Management$Accountsummaries = Resource$Management$Accountsummaries;\n    class Resource$Management$Accountuserlinks {\n        constructor(context) {\n            this.context = context;\n        }\n        delete(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/analytics/v3/management/accounts/{accountId}/entityUserLinks/{linkId}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'DELETE'\n                }, options),\n                params,\n                requiredParams: ['accountId', 'linkId'],\n                pathParams: ['accountId', 'linkId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        insert(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/analytics/v3/management/accounts/{accountId}/entityUserLinks')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST'\n                }, options),\n                params,\n                requiredParams: ['accountId'],\n                pathParams: ['accountId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/analytics/v3/management/accounts/{accountId}/entityUserLinks')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['accountId'],\n                pathParams: ['accountId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        update(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/analytics/v3/management/accounts/{accountId}/entityUserLinks/{linkId}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PUT'\n                }, options),\n                params,\n                requiredParams: ['accountId', 'linkId'],\n                pathParams: ['accountId', 'linkId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    analytics_v3.Resource$Management$Accountuserlinks = Resource$Management$Accountuserlinks;\n    class Resource$Management$Clientid {\n        constructor(context) {\n            this.context = context;\n        }\n        hashClientId(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/analytics/v3/management/clientId:hashClientId')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST'\n                }, options),\n                params,\n                requiredParams: [],\n                pathParams: [],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    analytics_v3.Resource$Management$Clientid = Resource$Management$Clientid;\n    class Resource$Management$Customdatasources {\n        constructor(context) {\n            this.context = context;\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/analytics/v3/management/accounts/{accountId}/webproperties/{webPropertyId}/customDataSources')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['accountId', 'webPropertyId'],\n                pathParams: ['accountId', 'webPropertyId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    analytics_v3.Resource$Management$Customdatasources = Resource$Management$Customdatasources;\n    class Resource$Management$Customdimensions {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/analytics/v3/management/accounts/{accountId}/webproperties/{webPropertyId}/customDimensions/{customDimensionId}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['accountId', 'webPropertyId', 'customDimensionId'],\n                pathParams: ['accountId', 'customDimensionId', 'webPropertyId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        insert(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/analytics/v3/management/accounts/{accountId}/webproperties/{webPropertyId}/customDimensions')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST'\n                }, options),\n                params,\n                requiredParams: ['accountId', 'webPropertyId'],\n                pathParams: ['accountId', 'webPropertyId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/analytics/v3/management/accounts/{accountId}/webproperties/{webPropertyId}/customDimensions')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['accountId', 'webPropertyId'],\n                pathParams: ['accountId', 'webPropertyId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        patch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/analytics/v3/management/accounts/{accountId}/webproperties/{webPropertyId}/customDimensions/{customDimensionId}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PATCH'\n                }, options),\n                params,\n                requiredParams: ['accountId', 'webPropertyId', 'customDimensionId'],\n                pathParams: ['accountId', 'customDimensionId', 'webPropertyId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        update(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/analytics/v3/management/accounts/{accountId}/webproperties/{webPropertyId}/customDimensions/{customDimensionId}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PUT'\n                }, options),\n                params,\n                requiredParams: ['accountId', 'webPropertyId', 'customDimensionId'],\n                pathParams: ['accountId', 'customDimensionId', 'webPropertyId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    analytics_v3.Resource$Management$Customdimensions = Resource$Management$Customdimensions;\n    class Resource$Management$Custommetrics {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/analytics/v3/management/accounts/{accountId}/webproperties/{webPropertyId}/customMetrics/{customMetricId}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['accountId', 'webPropertyId', 'customMetricId'],\n                pathParams: ['accountId', 'customMetricId', 'webPropertyId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        insert(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/analytics/v3/management/accounts/{accountId}/webproperties/{webPropertyId}/customMetrics')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST'\n                }, options),\n                params,\n                requiredParams: ['accountId', 'webPropertyId'],\n                pathParams: ['accountId', 'webPropertyId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/analytics/v3/management/accounts/{accountId}/webproperties/{webPropertyId}/customMetrics')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['accountId', 'webPropertyId'],\n                pathParams: ['accountId', 'webPropertyId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        patch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/analytics/v3/management/accounts/{accountId}/webproperties/{webPropertyId}/customMetrics/{customMetricId}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PATCH'\n                }, options),\n                params,\n                requiredParams: ['accountId', 'webPropertyId', 'customMetricId'],\n                pathParams: ['accountId', 'customMetricId', 'webPropertyId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        update(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/analytics/v3/management/accounts/{accountId}/webproperties/{webPropertyId}/customMetrics/{customMetricId}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PUT'\n                }, options),\n                params,\n                requiredParams: ['accountId', 'webPropertyId', 'customMetricId'],\n                pathParams: ['accountId', 'customMetricId', 'webPropertyId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    analytics_v3.Resource$Management$Custommetrics = Resource$Management$Custommetrics;\n    class Resource$Management$Experiments {\n        constructor(context) {\n            this.context = context;\n        }\n        delete(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/analytics/v3/management/accounts/{accountId}/webproperties/{webPropertyId}/profiles/{profileId}/experiments/{experimentId}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'DELETE'\n                }, options),\n                params,\n                requiredParams: ['accountId', 'webPropertyId', 'profileId', 'experimentId'],\n                pathParams: ['accountId', 'experimentId', 'profileId', 'webPropertyId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/analytics/v3/management/accounts/{accountId}/webproperties/{webPropertyId}/profiles/{profileId}/experiments/{experimentId}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['accountId', 'webPropertyId', 'profileId', 'experimentId'],\n                pathParams: ['accountId', 'experimentId', 'profileId', 'webPropertyId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        insert(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/analytics/v3/management/accounts/{accountId}/webproperties/{webPropertyId}/profiles/{profileId}/experiments')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST'\n                }, options),\n                params,\n                requiredParams: ['accountId', 'webPropertyId', 'profileId'],\n                pathParams: ['accountId', 'profileId', 'webPropertyId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/analytics/v3/management/accounts/{accountId}/webproperties/{webPropertyId}/profiles/{profileId}/experiments')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['accountId', 'webPropertyId', 'profileId'],\n                pathParams: ['accountId', 'profileId', 'webPropertyId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        patch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/analytics/v3/management/accounts/{accountId}/webproperties/{webPropertyId}/profiles/{profileId}/experiments/{experimentId}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PATCH'\n                }, options),\n                params,\n                requiredParams: ['accountId', 'webPropertyId', 'profileId', 'experimentId'],\n                pathParams: ['accountId', 'experimentId', 'profileId', 'webPropertyId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        update(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/analytics/v3/management/accounts/{accountId}/webproperties/{webPropertyId}/profiles/{profileId}/experiments/{experimentId}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PUT'\n                }, options),\n                params,\n                requiredParams: ['accountId', 'webPropertyId', 'profileId', 'experimentId'],\n                pathParams: ['accountId', 'experimentId', 'profileId', 'webPropertyId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    analytics_v3.Resource$Management$Experiments = Resource$Management$Experiments;\n    class Resource$Management$Filters {\n        constructor(context) {\n            this.context = context;\n        }\n        delete(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/analytics/v3/management/accounts/{accountId}/filters/{filterId}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'DELETE'\n                }, options),\n                params,\n                requiredParams: ['accountId', 'filterId'],\n                pathParams: ['accountId', 'filterId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/analytics/v3/management/accounts/{accountId}/filters/{filterId}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['accountId', 'filterId'],\n                pathParams: ['accountId', 'filterId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        insert(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/analytics/v3/management/accounts/{accountId}/filters')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST'\n                }, options),\n                params,\n                requiredParams: ['accountId'],\n                pathParams: ['accountId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/analytics/v3/management/accounts/{accountId}/filters')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['accountId'],\n                pathParams: ['accountId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        patch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/analytics/v3/management/accounts/{accountId}/filters/{filterId}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PATCH'\n                }, options),\n                params,\n                requiredParams: ['accountId', 'filterId'],\n                pathParams: ['accountId', 'filterId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        update(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/analytics/v3/management/accounts/{accountId}/filters/{filterId}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PUT'\n                }, options),\n                params,\n                requiredParams: ['accountId', 'filterId'],\n                pathParams: ['accountId', 'filterId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    analytics_v3.Resource$Management$Filters = Resource$Management$Filters;\n    class Resource$Management$Goals {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/analytics/v3/management/accounts/{accountId}/webproperties/{webPropertyId}/profiles/{profileId}/goals/{goalId}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['accountId', 'webPropertyId', 'profileId', 'goalId'],\n                pathParams: ['accountId', 'goalId', 'profileId', 'webPropertyId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        insert(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/analytics/v3/management/accounts/{accountId}/webproperties/{webPropertyId}/profiles/{profileId}/goals')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST'\n                }, options),\n                params,\n                requiredParams: ['accountId', 'webPropertyId', 'profileId'],\n                pathParams: ['accountId', 'profileId', 'webPropertyId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/analytics/v3/management/accounts/{accountId}/webproperties/{webPropertyId}/profiles/{profileId}/goals')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['accountId', 'webPropertyId', 'profileId'],\n                pathParams: ['accountId', 'profileId', 'webPropertyId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        patch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/analytics/v3/management/accounts/{accountId}/webproperties/{webPropertyId}/profiles/{profileId}/goals/{goalId}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PATCH'\n                }, options),\n                params,\n                requiredParams: ['accountId', 'webPropertyId', 'profileId', 'goalId'],\n                pathParams: ['accountId', 'goalId', 'profileId', 'webPropertyId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        update(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/analytics/v3/management/accounts/{accountId}/webproperties/{webPropertyId}/profiles/{profileId}/goals/{goalId}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PUT'\n                }, options),\n                params,\n                requiredParams: ['accountId', 'webPropertyId', 'profileId', 'goalId'],\n                pathParams: ['accountId', 'goalId', 'profileId', 'webPropertyId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    analytics_v3.Resource$Management$Goals = Resource$Management$Goals;\n    class Resource$Management$Profilefilterlinks {\n        constructor(context) {\n            this.context = context;\n        }\n        delete(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/analytics/v3/management/accounts/{accountId}/webproperties/{webPropertyId}/profiles/{profileId}/profileFilterLinks/{linkId}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'DELETE'\n                }, options),\n                params,\n                requiredParams: ['accountId', 'webPropertyId', 'profileId', 'linkId'],\n                pathParams: ['accountId', 'linkId', 'profileId', 'webPropertyId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/analytics/v3/management/accounts/{accountId}/webproperties/{webPropertyId}/profiles/{profileId}/profileFilterLinks/{linkId}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['accountId', 'webPropertyId', 'profileId', 'linkId'],\n                pathParams: ['accountId', 'linkId', 'profileId', 'webPropertyId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        insert(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/analytics/v3/management/accounts/{accountId}/webproperties/{webPropertyId}/profiles/{profileId}/profileFilterLinks')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST'\n                }, options),\n                params,\n                requiredParams: ['accountId', 'webPropertyId', 'profileId'],\n                pathParams: ['accountId', 'profileId', 'webPropertyId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/analytics/v3/management/accounts/{accountId}/webproperties/{webPropertyId}/profiles/{profileId}/profileFilterLinks')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['accountId', 'webPropertyId', 'profileId'],\n                pathParams: ['accountId', 'profileId', 'webPropertyId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        patch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/analytics/v3/management/accounts/{accountId}/webproperties/{webPropertyId}/profiles/{profileId}/profileFilterLinks/{linkId}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PATCH'\n                }, options),\n                params,\n                requiredParams: ['accountId', 'webPropertyId', 'profileId', 'linkId'],\n                pathParams: ['accountId', 'linkId', 'profileId', 'webPropertyId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        update(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/analytics/v3/management/accounts/{accountId}/webproperties/{webPropertyId}/profiles/{profileId}/profileFilterLinks/{linkId}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PUT'\n                }, options),\n                params,\n                requiredParams: ['accountId', 'webPropertyId', 'profileId', 'linkId'],\n                pathParams: ['accountId', 'linkId', 'profileId', 'webPropertyId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    analytics_v3.Resource$Management$Profilefilterlinks = Resource$Management$Profilefilterlinks;\n    class Resource$Management$Profiles {\n        constructor(context) {\n            this.context = context;\n        }\n        delete(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/analytics/v3/management/accounts/{accountId}/webproperties/{webPropertyId}/profiles/{profileId}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'DELETE'\n                }, options),\n                params,\n                requiredParams: ['accountId', 'webPropertyId', 'profileId'],\n                pathParams: ['accountId', 'profileId', 'webPropertyId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/analytics/v3/management/accounts/{accountId}/webproperties/{webPropertyId}/profiles/{profileId}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['accountId', 'webPropertyId', 'profileId'],\n                pathParams: ['accountId', 'profileId', 'webPropertyId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        insert(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/analytics/v3/management/accounts/{accountId}/webproperties/{webPropertyId}/profiles')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST'\n                }, options),\n                params,\n                requiredParams: ['accountId', 'webPropertyId'],\n                pathParams: ['accountId', 'webPropertyId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/analytics/v3/management/accounts/{accountId}/webproperties/{webPropertyId}/profiles')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['accountId', 'webPropertyId'],\n                pathParams: ['accountId', 'webPropertyId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        patch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/analytics/v3/management/accounts/{accountId}/webproperties/{webPropertyId}/profiles/{profileId}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PATCH'\n                }, options),\n                params,\n                requiredParams: ['accountId', 'webPropertyId', 'profileId'],\n                pathParams: ['accountId', 'profileId', 'webPropertyId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        update(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/analytics/v3/management/accounts/{accountId}/webproperties/{webPropertyId}/profiles/{profileId}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PUT'\n                }, options),\n                params,\n                requiredParams: ['accountId', 'webPropertyId', 'profileId'],\n                pathParams: ['accountId', 'profileId', 'webPropertyId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    analytics_v3.Resource$Management$Profiles = Resource$Management$Profiles;\n    class Resource$Management$Profileuserlinks {\n        constructor(context) {\n            this.context = context;\n        }\n        delete(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/analytics/v3/management/accounts/{accountId}/webproperties/{webPropertyId}/profiles/{profileId}/entityUserLinks/{linkId}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'DELETE'\n                }, options),\n                params,\n                requiredParams: ['accountId', 'webPropertyId', 'profileId', 'linkId'],\n                pathParams: ['accountId', 'linkId', 'profileId', 'webPropertyId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        insert(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/analytics/v3/management/accounts/{accountId}/webproperties/{webPropertyId}/profiles/{profileId}/entityUserLinks')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST'\n                }, options),\n                params,\n                requiredParams: ['accountId', 'webPropertyId', 'profileId'],\n                pathParams: ['accountId', 'profileId', 'webPropertyId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/analytics/v3/management/accounts/{accountId}/webproperties/{webPropertyId}/profiles/{profileId}/entityUserLinks')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['accountId', 'webPropertyId', 'profileId'],\n                pathParams: ['accountId', 'profileId', 'webPropertyId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        update(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/analytics/v3/management/accounts/{accountId}/webproperties/{webPropertyId}/profiles/{profileId}/entityUserLinks/{linkId}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PUT'\n                }, options),\n                params,\n                requiredParams: ['accountId', 'webPropertyId', 'profileId', 'linkId'],\n                pathParams: ['accountId', 'linkId', 'profileId', 'webPropertyId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    analytics_v3.Resource$Management$Profileuserlinks = Resource$Management$Profileuserlinks;\n    class Resource$Management$Remarketingaudience {\n        constructor(context) {\n            this.context = context;\n        }\n        delete(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/analytics/v3/management/accounts/{accountId}/webproperties/{webPropertyId}/remarketingAudiences/{remarketingAudienceId}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'DELETE'\n                }, options),\n                params,\n                requiredParams: ['accountId', 'webPropertyId', 'remarketingAudienceId'],\n                pathParams: ['accountId', 'remarketingAudienceId', 'webPropertyId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/analytics/v3/management/accounts/{accountId}/webproperties/{webPropertyId}/remarketingAudiences/{remarketingAudienceId}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['accountId', 'webPropertyId', 'remarketingAudienceId'],\n                pathParams: ['accountId', 'remarketingAudienceId', 'webPropertyId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        insert(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/analytics/v3/management/accounts/{accountId}/webproperties/{webPropertyId}/remarketingAudiences')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST'\n                }, options),\n                params,\n                requiredParams: ['accountId', 'webPropertyId'],\n                pathParams: ['accountId', 'webPropertyId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/analytics/v3/management/accounts/{accountId}/webproperties/{webPropertyId}/remarketingAudiences')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['accountId', 'webPropertyId'],\n                pathParams: ['accountId', 'webPropertyId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        patch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/analytics/v3/management/accounts/{accountId}/webproperties/{webPropertyId}/remarketingAudiences/{remarketingAudienceId}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PATCH'\n                }, options),\n                params,\n                requiredParams: ['accountId', 'webPropertyId', 'remarketingAudienceId'],\n                pathParams: ['accountId', 'remarketingAudienceId', 'webPropertyId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        update(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/analytics/v3/management/accounts/{accountId}/webproperties/{webPropertyId}/remarketingAudiences/{remarketingAudienceId}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PUT'\n                }, options),\n                params,\n                requiredParams: ['accountId', 'webPropertyId', 'remarketingAudienceId'],\n                pathParams: ['accountId', 'remarketingAudienceId', 'webPropertyId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    analytics_v3.Resource$Management$Remarketingaudience = Resource$Management$Remarketingaudience;\n    class Resource$Management$Segments {\n        constructor(context) {\n            this.context = context;\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/analytics/v3/management/segments')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: [],\n                pathParams: [],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    analytics_v3.Resource$Management$Segments = Resource$Management$Segments;\n    class Resource$Management$Unsampledreports {\n        constructor(context) {\n            this.context = context;\n        }\n        delete(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/analytics/v3/management/accounts/{accountId}/webproperties/{webPropertyId}/profiles/{profileId}/unsampledReports/{unsampledReportId}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'DELETE'\n                }, options),\n                params,\n                requiredParams: ['accountId', 'webPropertyId', 'profileId', 'unsampledReportId'],\n                pathParams: ['accountId', 'profileId', 'unsampledReportId', 'webPropertyId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/analytics/v3/management/accounts/{accountId}/webproperties/{webPropertyId}/profiles/{profileId}/unsampledReports/{unsampledReportId}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['accountId', 'webPropertyId', 'profileId', 'unsampledReportId'],\n                pathParams: ['accountId', 'profileId', 'unsampledReportId', 'webPropertyId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        insert(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/analytics/v3/management/accounts/{accountId}/webproperties/{webPropertyId}/profiles/{profileId}/unsampledReports')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST'\n                }, options),\n                params,\n                requiredParams: ['accountId', 'webPropertyId', 'profileId'],\n                pathParams: ['accountId', 'profileId', 'webPropertyId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/analytics/v3/management/accounts/{accountId}/webproperties/{webPropertyId}/profiles/{profileId}/unsampledReports')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['accountId', 'webPropertyId', 'profileId'],\n                pathParams: ['accountId', 'profileId', 'webPropertyId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    analytics_v3.Resource$Management$Unsampledreports = Resource$Management$Unsampledreports;\n    class Resource$Management$Uploads {\n        constructor(context) {\n            this.context = context;\n        }\n        deleteUploadData(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/analytics/v3/management/accounts/{accountId}/webproperties/{webPropertyId}/customDataSources/{customDataSourceId}/deleteUploadData')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST'\n                }, options),\n                params,\n                requiredParams: ['accountId', 'webPropertyId', 'customDataSourceId'],\n                pathParams: ['accountId', 'customDataSourceId', 'webPropertyId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/analytics/v3/management/accounts/{accountId}/webproperties/{webPropertyId}/customDataSources/{customDataSourceId}/uploads/{uploadId}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['accountId', 'webPropertyId', 'customDataSourceId', 'uploadId'],\n                pathParams: ['accountId', 'customDataSourceId', 'uploadId', 'webPropertyId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/analytics/v3/management/accounts/{accountId}/webproperties/{webPropertyId}/customDataSources/{customDataSourceId}/uploads')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['accountId', 'webPropertyId', 'customDataSourceId'],\n                pathParams: ['accountId', 'customDataSourceId', 'webPropertyId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        uploadData(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/analytics/v3/management/accounts/{accountId}/webproperties/{webPropertyId}/customDataSources/{customDataSourceId}/uploads')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST'\n                }, options),\n                params,\n                mediaUrl: (rootUrl +\n                    '/upload/analytics/v3/management/accounts/{accountId}/webproperties/{webPropertyId}/customDataSources/{customDataSourceId}/uploads')\n                    .replace(/([^:]\\/)\\/+/g, '$1'),\n                requiredParams: ['accountId', 'webPropertyId', 'customDataSourceId'],\n                pathParams: ['accountId', 'customDataSourceId', 'webPropertyId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    analytics_v3.Resource$Management$Uploads = Resource$Management$Uploads;\n    class Resource$Management$Webproperties {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/analytics/v3/management/accounts/{accountId}/webproperties/{webPropertyId}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['accountId', 'webPropertyId'],\n                pathParams: ['accountId', 'webPropertyId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        insert(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/analytics/v3/management/accounts/{accountId}/webproperties')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST'\n                }, options),\n                params,\n                requiredParams: ['accountId'],\n                pathParams: ['accountId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/analytics/v3/management/accounts/{accountId}/webproperties')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['accountId'],\n                pathParams: ['accountId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        patch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/analytics/v3/management/accounts/{accountId}/webproperties/{webPropertyId}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PATCH'\n                }, options),\n                params,\n                requiredParams: ['accountId', 'webPropertyId'],\n                pathParams: ['accountId', 'webPropertyId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        update(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/analytics/v3/management/accounts/{accountId}/webproperties/{webPropertyId}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PUT'\n                }, options),\n                params,\n                requiredParams: ['accountId', 'webPropertyId'],\n                pathParams: ['accountId', 'webPropertyId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    analytics_v3.Resource$Management$Webproperties = Resource$Management$Webproperties;\n    class Resource$Management$Webpropertyadwordslinks {\n        constructor(context) {\n            this.context = context;\n        }\n        delete(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/analytics/v3/management/accounts/{accountId}/webproperties/{webPropertyId}/entityAdWordsLinks/{webPropertyAdWordsLinkId}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'DELETE'\n                }, options),\n                params,\n                requiredParams: ['accountId', 'webPropertyId', 'webPropertyAdWordsLinkId'],\n                pathParams: ['accountId', 'webPropertyAdWordsLinkId', 'webPropertyId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/analytics/v3/management/accounts/{accountId}/webproperties/{webPropertyId}/entityAdWordsLinks/{webPropertyAdWordsLinkId}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['accountId', 'webPropertyId', 'webPropertyAdWordsLinkId'],\n                pathParams: ['accountId', 'webPropertyAdWordsLinkId', 'webPropertyId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        insert(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/analytics/v3/management/accounts/{accountId}/webproperties/{webPropertyId}/entityAdWordsLinks')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST'\n                }, options),\n                params,\n                requiredParams: ['accountId', 'webPropertyId'],\n                pathParams: ['accountId', 'webPropertyId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/analytics/v3/management/accounts/{accountId}/webproperties/{webPropertyId}/entityAdWordsLinks')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['accountId', 'webPropertyId'],\n                pathParams: ['accountId', 'webPropertyId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        patch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/analytics/v3/management/accounts/{accountId}/webproperties/{webPropertyId}/entityAdWordsLinks/{webPropertyAdWordsLinkId}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PATCH'\n                }, options),\n                params,\n                requiredParams: ['accountId', 'webPropertyId', 'webPropertyAdWordsLinkId'],\n                pathParams: ['accountId', 'webPropertyAdWordsLinkId', 'webPropertyId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        update(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/analytics/v3/management/accounts/{accountId}/webproperties/{webPropertyId}/entityAdWordsLinks/{webPropertyAdWordsLinkId}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PUT'\n                }, options),\n                params,\n                requiredParams: ['accountId', 'webPropertyId', 'webPropertyAdWordsLinkId'],\n                pathParams: ['accountId', 'webPropertyAdWordsLinkId', 'webPropertyId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    analytics_v3.Resource$Management$Webpropertyadwordslinks = Resource$Management$Webpropertyadwordslinks;\n    class Resource$Management$Webpropertyuserlinks {\n        constructor(context) {\n            this.context = context;\n        }\n        delete(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/analytics/v3/management/accounts/{accountId}/webproperties/{webPropertyId}/entityUserLinks/{linkId}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'DELETE'\n                }, options),\n                params,\n                requiredParams: ['accountId', 'webPropertyId', 'linkId'],\n                pathParams: ['accountId', 'linkId', 'webPropertyId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        insert(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/analytics/v3/management/accounts/{accountId}/webproperties/{webPropertyId}/entityUserLinks')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST'\n                }, options),\n                params,\n                requiredParams: ['accountId', 'webPropertyId'],\n                pathParams: ['accountId', 'webPropertyId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/analytics/v3/management/accounts/{accountId}/webproperties/{webPropertyId}/entityUserLinks')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['accountId', 'webPropertyId'],\n                pathParams: ['accountId', 'webPropertyId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        update(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/analytics/v3/management/accounts/{accountId}/webproperties/{webPropertyId}/entityUserLinks/{linkId}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PUT'\n                }, options),\n                params,\n                requiredParams: ['accountId', 'webPropertyId', 'linkId'],\n                pathParams: ['accountId', 'linkId', 'webPropertyId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    analytics_v3.Resource$Management$Webpropertyuserlinks = Resource$Management$Webpropertyuserlinks;\n    class Resource$Metadata {\n        constructor(context) {\n            this.context = context;\n            this.columns = new Resource$Metadata$Columns(this.context);\n        }\n    }\n    analytics_v3.Resource$Metadata = Resource$Metadata;\n    class Resource$Metadata$Columns {\n        constructor(context) {\n            this.context = context;\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/analytics/v3/metadata/{reportType}/columns')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['reportType'],\n                pathParams: ['reportType'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    analytics_v3.Resource$Metadata$Columns = Resource$Metadata$Columns;\n    class Resource$Provisioning {\n        constructor(context) {\n            this.context = context;\n        }\n        createAccountTicket(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/analytics/v3/provisioning/createAccountTicket')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST'\n                }, options),\n                params,\n                requiredParams: [],\n                pathParams: [],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        createAccountTree(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/analytics/v3/provisioning/createAccountTree')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST'\n                }, options),\n                params,\n                requiredParams: [],\n                pathParams: [],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    analytics_v3.Resource$Provisioning = Resource$Provisioning;\n    class Resource$Userdeletion {\n        constructor(context) {\n            this.context = context;\n            this.userDeletionRequest =\n                new Resource$Userdeletion$Userdeletionrequest(this.context);\n        }\n    }\n    analytics_v3.Resource$Userdeletion = Resource$Userdeletion;\n    class Resource$Userdeletion$Userdeletionrequest {\n        constructor(context) {\n            this.context = context;\n        }\n        upsert(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/analytics/v3/userDeletion/userDeletionRequests:upsert')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST'\n                }, options),\n                params,\n                requiredParams: [],\n                pathParams: [],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    analytics_v3.Resource$Userdeletion$Userdeletionrequest = Resource$Userdeletion$Userdeletionrequest;\n})(analytics_v3 = exports.analytics_v3 || (exports.analytics_v3 = {}));\n//# sourceMappingURL=v3.js.map"]},"metadata":{},"sourceType":"script"}