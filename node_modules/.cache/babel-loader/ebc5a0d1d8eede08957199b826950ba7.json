{"ast":null,"code":"\"use strict\"; // Copyright 2020 Google LLC\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//    http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nvar _regeneratorRuntime = require(\"/Users/amandapoetker-alles/Desktop/campaign-dashboard/Campaign-Planner/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _createForOfIteratorHelper = require(\"/Users/amandapoetker-alles/Desktop/campaign-dashboard/Campaign-Planner/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createForOfIteratorHelper\");\n\nvar _classCallCheck = require(\"/Users/amandapoetker-alles/Desktop/campaign-dashboard/Campaign-Planner/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/amandapoetker-alles/Desktop/campaign-dashboard/Campaign-Planner/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _inherits = require(\"/Users/amandapoetker-alles/Desktop/campaign-dashboard/Campaign-Planner/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _createSuper = require(\"/Users/amandapoetker-alles/Desktop/campaign-dashboard/Campaign-Planner/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createSuper\");\n\nvar _asyncToGenerator = require(\"/Users/amandapoetker-alles/Desktop/campaign-dashboard/Campaign-Planner/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createAPIRequest = void 0;\n\nvar google_auth_library_1 = require(\"google-auth-library\");\n\nvar qs = require(\"qs\");\n\nvar stream = require(\"stream\");\n\nvar urlTemplate = require(\"url-template\");\n\nvar uuid = require(\"uuid\");\n\nvar extend = require(\"extend\");\n\nvar isbrowser_1 = require(\"./isbrowser\");\n\nvar h2 = require(\"./http2\");\n\nvar resolve = require(\"url\"); // eslint-disable-next-line @typescript-eslint/no-var-requires\n\n\nvar pkg = require('../../package.json'); // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n\nfunction isReadableStream(obj) {\n  return obj !== null && typeof obj === 'object' && typeof obj.pipe === 'function' && obj.readable !== false && typeof obj._read === 'function' && typeof obj._readableState === 'object';\n}\n\nfunction getMissingParams(params, required) {\n  var missing = new Array();\n  required.forEach(function (param) {\n    // Is the required param in the params object?\n    if (params[param] === undefined) {\n      missing.push(param);\n    }\n  }); // If there are any required params missing, return their names in array,\n  // otherwise return null\n\n  return missing.length > 0 ? missing : null;\n}\n\nfunction createAPIRequest(parameters, callback) {\n  if (callback) {\n    createAPIRequestAsync(parameters).then(function (r) {\n      return callback(null, r);\n    }, callback);\n  } else {\n    return createAPIRequestAsync(parameters);\n  }\n}\n\nexports.createAPIRequest = createAPIRequest;\n\nfunction createAPIRequestAsync(_x) {\n  return _createAPIRequestAsync.apply(this, arguments);\n}\n/**\n * Basic Passthrough Stream that records the number of bytes read\n * every time the cursor is moved.\n */\n\n\nfunction _createAPIRequestAsync() {\n  _createAPIRequestAsync = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(parameters) {\n    var _a, options, params, media, resource, authClient, defaultMime, headers, missingParams, path, multipartUpload, browserMultipartUpload, multipart, userAgent, authHeaders, mooOpts;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            browserMultipartUpload = function _browserMultipartUplo(multipart) {\n              var boundary = uuid.v4();\n              var finale = \"--\".concat(boundary, \"--\");\n              headers['content-type'] = \"multipart/related; boundary=\".concat(boundary);\n              var content = '';\n\n              var _iterator2 = _createForOfIteratorHelper(multipart),\n                  _step2;\n\n              try {\n                for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n                  var part = _step2.value;\n                  var preamble = \"--\".concat(boundary, \"\\r\\ncontent-type: \").concat(part['content-type'], \"\\r\\n\\r\\n\");\n                  content += preamble;\n\n                  if (typeof part.body === 'string') {\n                    content += part.body;\n                    content += '\\r\\n';\n                  }\n                }\n              } catch (err) {\n                _iterator2.e(err);\n              } finally {\n                _iterator2.f();\n              }\n\n              content += finale;\n              options.data = content;\n            };\n\n            multipartUpload = function _multipartUpload(multipart) {\n              var boundary = uuid.v4();\n              var finale = \"--\".concat(boundary, \"--\");\n              var rStream = new stream.PassThrough({\n                flush(callback) {\n                  this.push('\\r\\n');\n                  this.push(finale);\n                  callback();\n                }\n\n              });\n              var pStream = new ProgressStream();\n              var isStream = isReadableStream(multipart[1].body);\n              headers['content-type'] = \"multipart/related; boundary=\".concat(boundary);\n\n              var _iterator = _createForOfIteratorHelper(multipart),\n                  _step;\n\n              try {\n                for (_iterator.s(); !(_step = _iterator.n()).done;) {\n                  var part = _step.value;\n                  var preamble = \"--\".concat(boundary, \"\\r\\ncontent-type: \").concat(part['content-type'], \"\\r\\n\\r\\n\");\n                  rStream.push(preamble);\n\n                  if (typeof part.body === 'string') {\n                    rStream.push(part.body);\n                    rStream.push('\\r\\n');\n                  } else {\n                    // Gaxios does not natively support onUploadProgress in node.js.\n                    // Pipe through the pStream first to read the number of bytes read\n                    // for the purpose of tracking progress.\n                    pStream.on('progress', function (bytesRead) {\n                      if (options.onUploadProgress) {\n                        options.onUploadProgress({\n                          bytesRead\n                        });\n                      }\n                    });\n                    part.body.pipe(pStream).pipe(rStream);\n                  }\n                }\n              } catch (err) {\n                _iterator.e(err);\n              } finally {\n                _iterator.f();\n              }\n\n              if (!isStream) {\n                rStream.push(finale);\n                rStream.push(null);\n              }\n\n              options.data = rStream;\n            };\n\n            // Combine the GaxiosOptions options passed with this specific\n            // API call with the global options configured at the API Context\n            // level, or at the global level.\n            options = extend(true, {}, // Ensure we don't leak settings upstream\n            ((_a = parameters.context.google) === null || _a === void 0 ? void 0 : _a._options) || {}, // Google level options\n            parameters.context._options || {}, // Per-API options\n            parameters.options // API call params\n            );\n            params = extend(true, {}, // New base object\n            options.params, // Combined global/per-api params\n            parameters.params // API call params\n            );\n            options.userAgentDirectives = options.userAgentDirectives || [];\n            media = params.media || {};\n            /**\n             * In a previous version of this API, the request body was stuffed in a field\n             * named `resource`.  This caused lots of problems, because it's not uncommon\n             * to have an actual named parameter required which is also named `resource`.\n             * This meant that users would have to use `resource_` in those cases, which\n             * pretty much nobody figures out on their own. The request body is now\n             * documented as being in the `requestBody` property, but we also need to keep\n             * using `resource` for reasons of back-compat. Cases that need to be covered\n             * here:\n             * - user provides just a `resource` with a request body\n             * - user provides both a `resource` and a `resource_`\n             * - user provides just a `requestBody`\n             * - user provides both a `requestBody` and a `resource`\n             */\n\n            resource = params.requestBody;\n\n            if (!params.requestBody && params.resource && (!parameters.requiredParams.includes('resource') || typeof params.resource !== 'string')) {\n              resource = params.resource;\n              delete params.resource;\n            }\n\n            delete params.requestBody;\n            authClient = params.auth || options.auth;\n            defaultMime = typeof media.body === 'string' ? 'text/plain' : 'application/octet-stream';\n            delete params.media;\n            delete params.auth; // Grab headers from user provided options\n\n            headers = params.headers || {};\n            populateAPIHeader(headers);\n            delete params.headers; // Un-alias parameters that were modified due to conflicts with reserved names\n\n            Object.keys(params).forEach(function (key) {\n              if (key.slice(-1) === '_') {\n                var newKey = key.slice(0, -1);\n                params[newKey] = params[key];\n                delete params[key];\n              }\n            }); // Check for missing required parameters in the API request\n\n            missingParams = getMissingParams(params, parameters.requiredParams);\n\n            if (!missingParams) {\n              _context.next = 20;\n              break;\n            }\n\n            throw new Error('Missing required parameters: ' + missingParams.join(', '));\n\n          case 20:\n            // Parse urls\n            if (options.url) {\n              options.url = urlTemplate.parse(options.url).expand(params);\n            }\n\n            if (parameters.mediaUrl) {\n              parameters.mediaUrl = urlTemplate.parse(parameters.mediaUrl).expand(params);\n            } // Rewrite url if rootUrl is globally set\n\n\n            if (parameters.context._options.rootUrl !== undefined && options.url !== undefined) {\n              path = options.url.slice(parameters.context._options.rootUrl.length);\n              options.url = resolve.resolve(parameters.context._options.rootUrl, path);\n            } // When forming the querystring, override the serializer so that array\n            // values are serialized like this:\n            // myParams: ['one', 'two'] ---> 'myParams=one&myParams=two'\n            // This serializer also encodes spaces in the querystring as `%20`,\n            // whereas the default serializer in gaxios encodes to a `+`.\n\n\n            options.paramsSerializer = function (params) {\n              return qs.stringify(params, {\n                arrayFormat: 'repeat'\n              });\n            }; // delete path params from the params object so they do not end up in query\n\n\n            parameters.pathParams.forEach(function (param) {\n              return delete params[param];\n            }); // if authClient is actually a string, use it as an API KEY\n\n            if (typeof authClient === 'string') {\n              params.key = params.key || authClient;\n              authClient = undefined;\n            }\n\n            if (parameters.mediaUrl && media.body) {\n              options.url = parameters.mediaUrl;\n\n              if (resource) {\n                params.uploadType = 'multipart';\n                multipart = [{\n                  'content-type': 'application/json',\n                  body: JSON.stringify(resource)\n                }, {\n                  'content-type': media.mimeType || resource && resource.mimeType || defaultMime,\n                  body: media.body\n                }];\n\n                if (!isbrowser_1.isBrowser()) {\n                  // gaxios doesn't support multipart/related uploads, so it has to\n                  // be implemented here.\n                  multipartUpload(multipart);\n                } else {\n                  browserMultipartUpload(multipart);\n                }\n              } else {\n                params.uploadType = 'media';\n                Object.assign(headers, {\n                  'content-type': media.mimeType || defaultMime\n                });\n                options.data = media.body;\n              }\n            } else {\n              options.data = resource || undefined;\n            }\n\n            options.headers = extend(true, options.headers || {}, headers);\n            options.params = params;\n\n            if (!isbrowser_1.isBrowser()) {\n              options.headers['Accept-Encoding'] = 'gzip';\n              options.userAgentDirectives.push({\n                product: 'google-api-nodejs-client',\n                version: pkg.version,\n                comment: 'gzip'\n              });\n              userAgent = options.userAgentDirectives.map(function (d) {\n                var line = \"\".concat(d.product, \"/\").concat(d.version);\n\n                if (d.comment) {\n                  line += \" (\".concat(d.comment, \")\");\n                }\n\n                return line;\n              }).join(' ');\n              options.headers['User-Agent'] = userAgent;\n            } // By default gaxios treats any 2xx as valid, and all non 2xx status\n            // codes as errors.  This is a problem for HTTP 304s when used along\n            // with an eTag.\n\n\n            if (!options.validateStatus) {\n              options.validateStatus = function (status) {\n                return status >= 200 && status < 300 || status === 304;\n              };\n            } // Retry by default\n\n\n            options.retry = options.retry === undefined ? true : options.retry;\n            delete options.auth; // is overridden by our auth code\n            // Perform the HTTP request.  NOTE: this function used to return a\n            // mikeal/request object. Since the transition to Axios, the method is\n            // now void.  This may be a source of confusion for users upgrading from\n            // version 24.0 -> 25.0 or up.\n\n            if (!(authClient && typeof authClient === 'object')) {\n              _context.next = 46;\n              break;\n            }\n\n            if (!options.http2) {\n              _context.next = 43;\n              break;\n            }\n\n            _context.next = 37;\n            return authClient.getRequestHeaders(options.url);\n\n          case 37:\n            authHeaders = _context.sent;\n            mooOpts = Object.assign({}, options);\n            mooOpts.headers = Object.assign(mooOpts.headers, authHeaders);\n            return _context.abrupt(\"return\", h2.request(mooOpts));\n\n          case 43:\n            return _context.abrupt(\"return\", authClient.request(options));\n\n          case 44:\n            _context.next = 47;\n            break;\n\n          case 46:\n            return _context.abrupt(\"return\", new google_auth_library_1.DefaultTransporter().request(options));\n\n          case 47:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _createAPIRequestAsync.apply(this, arguments);\n}\n\nvar ProgressStream = /*#__PURE__*/function (_stream$Transform) {\n  _inherits(ProgressStream, _stream$Transform);\n\n  var _super = _createSuper(ProgressStream);\n\n  function ProgressStream() {\n    var _this;\n\n    _classCallCheck(this, ProgressStream);\n\n    _this = _super.apply(this, arguments);\n    _this.bytesRead = 0;\n    return _this;\n  } // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n\n  _createClass(ProgressStream, [{\n    key: \"_transform\",\n    value: function _transform(chunk, encoding, callback) {\n      this.bytesRead += chunk.length;\n      this.emit('progress', this.bytesRead);\n      this.push(chunk);\n      callback();\n    }\n  }]);\n\n  return ProgressStream;\n}(stream.Transform);\n\nfunction populateAPIHeader(headers) {\n  // TODO: we should eventually think about adding browser support for this\n  // populating the gl-web header (web support should also be added to\n  // google-auth-library-nodejs).\n  if (!isbrowser_1.isBrowser()) {\n    headers['x-goog-api-client'] = \"gdcl/\".concat(pkg.version, \" gl-node/\").concat(process.versions.node);\n  }\n}","map":{"version":3,"sources":["/Users/amandapoetker-alles/Desktop/campaign-dashboard/Campaign-Planner/node_modules/googleapis-common/build/src/apirequest.js"],"names":["Object","defineProperty","exports","value","createAPIRequest","google_auth_library_1","require","qs","stream","urlTemplate","uuid","extend","isbrowser_1","h2","resolve","pkg","isReadableStream","obj","pipe","readable","_read","_readableState","getMissingParams","params","required","missing","Array","forEach","param","undefined","push","length","parameters","callback","createAPIRequestAsync","then","r","multipartUpload","browserMultipartUpload","multipart","boundary","v4","finale","headers","content","part","preamble","body","options","data","rStream","PassThrough","flush","pStream","ProgressStream","isStream","on","bytesRead","onUploadProgress","_a","context","google","_options","userAgentDirectives","media","resource","requestBody","requiredParams","includes","authClient","auth","defaultMime","populateAPIHeader","keys","key","slice","newKey","missingParams","Error","join","url","parse","expand","mediaUrl","rootUrl","path","paramsSerializer","stringify","arrayFormat","pathParams","uploadType","JSON","mimeType","isBrowser","assign","product","version","comment","userAgent","map","d","line","validateStatus","status","retry","http2","getRequestHeaders","authHeaders","mooOpts","request","DefaultTransporter","arguments","chunk","encoding","emit","Transform","process","versions","node"],"mappings":"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","sourcesContent":["\"use strict\";\n// Copyright 2020 Google LLC\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//    http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createAPIRequest = void 0;\nconst google_auth_library_1 = require(\"google-auth-library\");\nconst qs = require(\"qs\");\nconst stream = require(\"stream\");\nconst urlTemplate = require(\"url-template\");\nconst uuid = require(\"uuid\");\nconst extend = require(\"extend\");\nconst isbrowser_1 = require(\"./isbrowser\");\nconst h2 = require(\"./http2\");\nconst resolve = require(\"url\");\n// eslint-disable-next-line @typescript-eslint/no-var-requires\nconst pkg = require('../../package.json');\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction isReadableStream(obj) {\n    return (obj !== null &&\n        typeof obj === 'object' &&\n        typeof obj.pipe === 'function' &&\n        obj.readable !== false &&\n        typeof obj._read === 'function' &&\n        typeof obj._readableState === 'object');\n}\nfunction getMissingParams(params, required) {\n    const missing = new Array();\n    required.forEach(param => {\n        // Is the required param in the params object?\n        if (params[param] === undefined) {\n            missing.push(param);\n        }\n    });\n    // If there are any required params missing, return their names in array,\n    // otherwise return null\n    return missing.length > 0 ? missing : null;\n}\nfunction createAPIRequest(parameters, callback) {\n    if (callback) {\n        createAPIRequestAsync(parameters).then(r => callback(null, r), callback);\n    }\n    else {\n        return createAPIRequestAsync(parameters);\n    }\n}\nexports.createAPIRequest = createAPIRequest;\nasync function createAPIRequestAsync(parameters) {\n    var _a;\n    // Combine the GaxiosOptions options passed with this specific\n    // API call with the global options configured at the API Context\n    // level, or at the global level.\n    const options = extend(true, {}, // Ensure we don't leak settings upstream\n    ((_a = parameters.context.google) === null || _a === void 0 ? void 0 : _a._options) || {}, // Google level options\n    parameters.context._options || {}, // Per-API options\n    parameters.options // API call params\n    );\n    const params = extend(true, {}, // New base object\n    options.params, // Combined global/per-api params\n    parameters.params // API call params\n    );\n    options.userAgentDirectives = options.userAgentDirectives || [];\n    const media = params.media || {};\n    /**\n     * In a previous version of this API, the request body was stuffed in a field\n     * named `resource`.  This caused lots of problems, because it's not uncommon\n     * to have an actual named parameter required which is also named `resource`.\n     * This meant that users would have to use `resource_` in those cases, which\n     * pretty much nobody figures out on their own. The request body is now\n     * documented as being in the `requestBody` property, but we also need to keep\n     * using `resource` for reasons of back-compat. Cases that need to be covered\n     * here:\n     * - user provides just a `resource` with a request body\n     * - user provides both a `resource` and a `resource_`\n     * - user provides just a `requestBody`\n     * - user provides both a `requestBody` and a `resource`\n     */\n    let resource = params.requestBody;\n    if (!params.requestBody &&\n        params.resource &&\n        (!parameters.requiredParams.includes('resource') ||\n            typeof params.resource !== 'string')) {\n        resource = params.resource;\n        delete params.resource;\n    }\n    delete params.requestBody;\n    let authClient = params.auth || options.auth;\n    const defaultMime = typeof media.body === 'string' ? 'text/plain' : 'application/octet-stream';\n    delete params.media;\n    delete params.auth;\n    // Grab headers from user provided options\n    const headers = params.headers || {};\n    populateAPIHeader(headers);\n    delete params.headers;\n    // Un-alias parameters that were modified due to conflicts with reserved names\n    Object.keys(params).forEach(key => {\n        if (key.slice(-1) === '_') {\n            const newKey = key.slice(0, -1);\n            params[newKey] = params[key];\n            delete params[key];\n        }\n    });\n    // Check for missing required parameters in the API request\n    const missingParams = getMissingParams(params, parameters.requiredParams);\n    if (missingParams) {\n        // Some params are missing - stop further operations and inform the\n        // developer which required params are not included in the request\n        throw new Error('Missing required parameters: ' + missingParams.join(', '));\n    }\n    // Parse urls\n    if (options.url) {\n        options.url = urlTemplate.parse(options.url).expand(params);\n    }\n    if (parameters.mediaUrl) {\n        parameters.mediaUrl = urlTemplate.parse(parameters.mediaUrl).expand(params);\n    }\n    // Rewrite url if rootUrl is globally set\n    if (parameters.context._options.rootUrl !== undefined &&\n        options.url !== undefined) {\n        const path = options.url.slice(parameters.context._options.rootUrl.length);\n        options.url = resolve.resolve(parameters.context._options.rootUrl, path);\n    }\n    // When forming the querystring, override the serializer so that array\n    // values are serialized like this:\n    // myParams: ['one', 'two'] ---> 'myParams=one&myParams=two'\n    // This serializer also encodes spaces in the querystring as `%20`,\n    // whereas the default serializer in gaxios encodes to a `+`.\n    options.paramsSerializer = params => {\n        return qs.stringify(params, { arrayFormat: 'repeat' });\n    };\n    // delete path params from the params object so they do not end up in query\n    parameters.pathParams.forEach(param => delete params[param]);\n    // if authClient is actually a string, use it as an API KEY\n    if (typeof authClient === 'string') {\n        params.key = params.key || authClient;\n        authClient = undefined;\n    }\n    function multipartUpload(multipart) {\n        const boundary = uuid.v4();\n        const finale = `--${boundary}--`;\n        const rStream = new stream.PassThrough({\n            flush(callback) {\n                this.push('\\r\\n');\n                this.push(finale);\n                callback();\n            },\n        });\n        const pStream = new ProgressStream();\n        const isStream = isReadableStream(multipart[1].body);\n        headers['content-type'] = `multipart/related; boundary=${boundary}`;\n        for (const part of multipart) {\n            const preamble = `--${boundary}\\r\\ncontent-type: ${part['content-type']}\\r\\n\\r\\n`;\n            rStream.push(preamble);\n            if (typeof part.body === 'string') {\n                rStream.push(part.body);\n                rStream.push('\\r\\n');\n            }\n            else {\n                // Gaxios does not natively support onUploadProgress in node.js.\n                // Pipe through the pStream first to read the number of bytes read\n                // for the purpose of tracking progress.\n                pStream.on('progress', bytesRead => {\n                    if (options.onUploadProgress) {\n                        options.onUploadProgress({ bytesRead });\n                    }\n                });\n                part.body.pipe(pStream).pipe(rStream);\n            }\n        }\n        if (!isStream) {\n            rStream.push(finale);\n            rStream.push(null);\n        }\n        options.data = rStream;\n    }\n    function browserMultipartUpload(multipart) {\n        const boundary = uuid.v4();\n        const finale = `--${boundary}--`;\n        headers['content-type'] = `multipart/related; boundary=${boundary}`;\n        let content = '';\n        for (const part of multipart) {\n            const preamble = `--${boundary}\\r\\ncontent-type: ${part['content-type']}\\r\\n\\r\\n`;\n            content += preamble;\n            if (typeof part.body === 'string') {\n                content += part.body;\n                content += '\\r\\n';\n            }\n        }\n        content += finale;\n        options.data = content;\n    }\n    if (parameters.mediaUrl && media.body) {\n        options.url = parameters.mediaUrl;\n        if (resource) {\n            params.uploadType = 'multipart';\n            const multipart = [\n                { 'content-type': 'application/json', body: JSON.stringify(resource) },\n                {\n                    'content-type': media.mimeType || (resource && resource.mimeType) || defaultMime,\n                    body: media.body,\n                },\n            ];\n            if (!isbrowser_1.isBrowser()) {\n                // gaxios doesn't support multipart/related uploads, so it has to\n                // be implemented here.\n                multipartUpload(multipart);\n            }\n            else {\n                browserMultipartUpload(multipart);\n            }\n        }\n        else {\n            params.uploadType = 'media';\n            Object.assign(headers, { 'content-type': media.mimeType || defaultMime });\n            options.data = media.body;\n        }\n    }\n    else {\n        options.data = resource || undefined;\n    }\n    options.headers = extend(true, options.headers || {}, headers);\n    options.params = params;\n    if (!isbrowser_1.isBrowser()) {\n        options.headers['Accept-Encoding'] = 'gzip';\n        options.userAgentDirectives.push({\n            product: 'google-api-nodejs-client',\n            version: pkg.version,\n            comment: 'gzip',\n        });\n        const userAgent = options.userAgentDirectives\n            .map(d => {\n            let line = `${d.product}/${d.version}`;\n            if (d.comment) {\n                line += ` (${d.comment})`;\n            }\n            return line;\n        })\n            .join(' ');\n        options.headers['User-Agent'] = userAgent;\n    }\n    // By default gaxios treats any 2xx as valid, and all non 2xx status\n    // codes as errors.  This is a problem for HTTP 304s when used along\n    // with an eTag.\n    if (!options.validateStatus) {\n        options.validateStatus = status => {\n            return (status >= 200 && status < 300) || status === 304;\n        };\n    }\n    // Retry by default\n    options.retry = options.retry === undefined ? true : options.retry;\n    delete options.auth; // is overridden by our auth code\n    // Perform the HTTP request.  NOTE: this function used to return a\n    // mikeal/request object. Since the transition to Axios, the method is\n    // now void.  This may be a source of confusion for users upgrading from\n    // version 24.0 -> 25.0 or up.\n    if (authClient && typeof authClient === 'object') {\n        if (options.http2) {\n            const authHeaders = await authClient.getRequestHeaders(options.url);\n            const mooOpts = Object.assign({}, options);\n            mooOpts.headers = Object.assign(mooOpts.headers, authHeaders);\n            return h2.request(mooOpts);\n        }\n        else {\n            return authClient.request(options);\n        }\n    }\n    else {\n        return new google_auth_library_1.DefaultTransporter().request(options);\n    }\n}\n/**\n * Basic Passthrough Stream that records the number of bytes read\n * every time the cursor is moved.\n */\nclass ProgressStream extends stream.Transform {\n    constructor() {\n        super(...arguments);\n        this.bytesRead = 0;\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    _transform(chunk, encoding, callback) {\n        this.bytesRead += chunk.length;\n        this.emit('progress', this.bytesRead);\n        this.push(chunk);\n        callback();\n    }\n}\nfunction populateAPIHeader(headers) {\n    // TODO: we should eventually think about adding browser support for this\n    // populating the gl-web header (web support should also be added to\n    // google-auth-library-nodejs).\n    if (!isbrowser_1.isBrowser()) {\n        headers['x-goog-api-client'] = `gdcl/${pkg.version} gl-node/${process.versions.node}`;\n    }\n}\n//# sourceMappingURL=apirequest.js.map"]},"metadata":{},"sourceType":"script"}