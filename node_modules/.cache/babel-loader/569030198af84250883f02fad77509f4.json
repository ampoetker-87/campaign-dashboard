{"ast":null,"code":"\"use strict\"; // Copyright 2020 Google LLC\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//    http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nvar _createClass = require(\"/Users/amandapoetker-alles/Desktop/campaign-dashboard/Campaign-Planner/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _classCallCheck = require(\"/Users/amandapoetker-alles/Desktop/campaign-dashboard/Campaign-Planner/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.run_v1alpha1 = void 0;\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\n/* eslint-disable @typescript-eslint/class-name-casing */\n\n/* eslint-disable @typescript-eslint/no-unused-vars */\n\n/* eslint-disable @typescript-eslint/no-empty-interface */\n\n/* eslint-disable @typescript-eslint/no-namespace */\n\n/* eslint-disable no-irregular-whitespace */\n\nvar googleapis_common_1 = require(\"googleapis-common\");\n\nvar run_v1alpha1;\n\n(function (run_v1alpha1) {\n  /**\n   * Cloud Run Admin API\n   *\n   * Deploy and manage user provided container images that scale automatically based on HTTP traffic.\n   *\n   * @example\n   * ```js\n   * const {google} = require('googleapis');\n   * const run = google.run('v1alpha1');\n   * ```\n   */\n  var Run = function Run(options, google) {\n    _classCallCheck(this, Run);\n\n    this.context = {\n      _options: options || {},\n      google\n    };\n    this.namespaces = new Resource$Namespaces(this.context);\n    this.projects = new Resource$Projects(this.context);\n  };\n\n  run_v1alpha1.Run = Run;\n\n  var Resource$Namespaces = function Resource$Namespaces(context) {\n    _classCallCheck(this, Resource$Namespaces);\n\n    this.context = context;\n    this.authorizeddomains = new Resource$Namespaces$Authorizeddomains(this.context);\n    this.cloudauditlogssources = new Resource$Namespaces$Cloudauditlogssources(this.context);\n    this.cloudpubsubsources = new Resource$Namespaces$Cloudpubsubsources(this.context);\n    this.cloudschedulersources = new Resource$Namespaces$Cloudschedulersources(this.context);\n    this.cloudstoragesources = new Resource$Namespaces$Cloudstoragesources(this.context);\n    this.configurations = new Resource$Namespaces$Configurations(this.context);\n    this.domainmappings = new Resource$Namespaces$Domainmappings(this.context);\n    this.revisions = new Resource$Namespaces$Revisions(this.context);\n    this.routes = new Resource$Namespaces$Routes(this.context);\n    this.services = new Resource$Namespaces$Services(this.context);\n    this.triggers = new Resource$Namespaces$Triggers(this.context);\n  };\n\n  run_v1alpha1.Resource$Namespaces = Resource$Namespaces;\n\n  var Resource$Namespaces$Authorizeddomains = /*#__PURE__*/function () {\n    function Resource$Namespaces$Authorizeddomains(context) {\n      _classCallCheck(this, Resource$Namespaces$Authorizeddomains);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Namespaces$Authorizeddomains, [{\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://run.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/apis/domains.cloudrun.com/v1alpha1/{+parent}/authorizeddomains').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['parent'],\n          pathParams: ['parent'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Namespaces$Authorizeddomains;\n  }();\n\n  run_v1alpha1.Resource$Namespaces$Authorizeddomains = Resource$Namespaces$Authorizeddomains;\n\n  var Resource$Namespaces$Cloudauditlogssources = /*#__PURE__*/function () {\n    function Resource$Namespaces$Cloudauditlogssources(context) {\n      _classCallCheck(this, Resource$Namespaces$Cloudauditlogssources);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Namespaces$Cloudauditlogssources, [{\n      key: \"create\",\n      value: function create(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://run.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/apis/events.cloud.google.com/v1alpha1/{+parent}/cloudauditlogssources').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['parent'],\n          pathParams: ['parent'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"delete\",\n      value: function _delete(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://run.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/apis/events.cloud.google.com/v1alpha1/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'DELETE'\n          }, options),\n          params,\n          requiredParams: ['name'],\n          pathParams: ['name'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://run.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/apis/events.cloud.google.com/v1alpha1/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['name'],\n          pathParams: ['name'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://run.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/apis/events.cloud.google.com/v1alpha1/{+parent}/cloudauditlogssources').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['parent'],\n          pathParams: ['parent'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Namespaces$Cloudauditlogssources;\n  }();\n\n  run_v1alpha1.Resource$Namespaces$Cloudauditlogssources = Resource$Namespaces$Cloudauditlogssources;\n\n  var Resource$Namespaces$Cloudpubsubsources = /*#__PURE__*/function () {\n    function Resource$Namespaces$Cloudpubsubsources(context) {\n      _classCallCheck(this, Resource$Namespaces$Cloudpubsubsources);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Namespaces$Cloudpubsubsources, [{\n      key: \"create\",\n      value: function create(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://run.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/apis/events.cloud.google.com/v1alpha1/{+parent}/cloudpubsubsources').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['parent'],\n          pathParams: ['parent'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"delete\",\n      value: function _delete(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://run.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/apis/events.cloud.google.com/v1alpha1/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'DELETE'\n          }, options),\n          params,\n          requiredParams: ['name'],\n          pathParams: ['name'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://run.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/apis/events.cloud.google.com/v1alpha1/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['name'],\n          pathParams: ['name'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://run.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/apis/events.cloud.google.com/v1alpha1/{+parent}/cloudpubsubsources').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['parent'],\n          pathParams: ['parent'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Namespaces$Cloudpubsubsources;\n  }();\n\n  run_v1alpha1.Resource$Namespaces$Cloudpubsubsources = Resource$Namespaces$Cloudpubsubsources;\n\n  var Resource$Namespaces$Cloudschedulersources = /*#__PURE__*/function () {\n    function Resource$Namespaces$Cloudschedulersources(context) {\n      _classCallCheck(this, Resource$Namespaces$Cloudschedulersources);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Namespaces$Cloudschedulersources, [{\n      key: \"create\",\n      value: function create(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://run.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/apis/events.cloud.google.com/v1alpha1/{+parent}/cloudschedulersources').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['parent'],\n          pathParams: ['parent'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"delete\",\n      value: function _delete(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://run.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/apis/events.cloud.google.com/v1alpha1/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'DELETE'\n          }, options),\n          params,\n          requiredParams: ['name'],\n          pathParams: ['name'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://run.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/apis/events.cloud.google.com/v1alpha1/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['name'],\n          pathParams: ['name'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://run.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/apis/events.cloud.google.com/v1alpha1/{+parent}/cloudschedulersources').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['parent'],\n          pathParams: ['parent'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"replaceCloudSchedulerSource\",\n      value: function replaceCloudSchedulerSource(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://run.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/apis/events.cloud.google.com/v1alpha1/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PUT'\n          }, options),\n          params,\n          requiredParams: ['name'],\n          pathParams: ['name'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Namespaces$Cloudschedulersources;\n  }();\n\n  run_v1alpha1.Resource$Namespaces$Cloudschedulersources = Resource$Namespaces$Cloudschedulersources;\n\n  var Resource$Namespaces$Cloudstoragesources = /*#__PURE__*/function () {\n    function Resource$Namespaces$Cloudstoragesources(context) {\n      _classCallCheck(this, Resource$Namespaces$Cloudstoragesources);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Namespaces$Cloudstoragesources, [{\n      key: \"create\",\n      value: function create(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://run.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/apis/events.cloud.google.com/v1alpha1/{+parent}/cloudstoragesources').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['parent'],\n          pathParams: ['parent'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"delete\",\n      value: function _delete(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://run.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/apis/events.cloud.google.com/v1alpha1/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'DELETE'\n          }, options),\n          params,\n          requiredParams: ['name'],\n          pathParams: ['name'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://run.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/apis/events.cloud.google.com/v1alpha1/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['name'],\n          pathParams: ['name'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://run.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/apis/events.cloud.google.com/v1alpha1/{+parent}/cloudstoragesources').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['parent'],\n          pathParams: ['parent'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"replaceCloudStorageSource\",\n      value: function replaceCloudStorageSource(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://run.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/apis/events.cloud.google.com/v1alpha1/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PUT'\n          }, options),\n          params,\n          requiredParams: ['name'],\n          pathParams: ['name'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Namespaces$Cloudstoragesources;\n  }();\n\n  run_v1alpha1.Resource$Namespaces$Cloudstoragesources = Resource$Namespaces$Cloudstoragesources;\n\n  var Resource$Namespaces$Configurations = /*#__PURE__*/function () {\n    function Resource$Namespaces$Configurations(context) {\n      _classCallCheck(this, Resource$Namespaces$Configurations);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Namespaces$Configurations, [{\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://run.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/apis/serving.knative.dev/v1alpha1/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['name'],\n          pathParams: ['name'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://run.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/apis/serving.knative.dev/v1alpha1/{+parent}/configurations').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['parent'],\n          pathParams: ['parent'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Namespaces$Configurations;\n  }();\n\n  run_v1alpha1.Resource$Namespaces$Configurations = Resource$Namespaces$Configurations;\n\n  var Resource$Namespaces$Domainmappings = /*#__PURE__*/function () {\n    function Resource$Namespaces$Domainmappings(context) {\n      _classCallCheck(this, Resource$Namespaces$Domainmappings);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Namespaces$Domainmappings, [{\n      key: \"create\",\n      value: function create(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://run.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/apis/domains.cloudrun.com/v1alpha1/{+parent}/domainmappings').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['parent'],\n          pathParams: ['parent'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"delete\",\n      value: function _delete(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://run.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/apis/domains.cloudrun.com/v1alpha1/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'DELETE'\n          }, options),\n          params,\n          requiredParams: ['name'],\n          pathParams: ['name'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://run.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/apis/domains.cloudrun.com/v1alpha1/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['name'],\n          pathParams: ['name'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://run.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/apis/domains.cloudrun.com/v1alpha1/{+parent}/domainmappings').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['parent'],\n          pathParams: ['parent'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Namespaces$Domainmappings;\n  }();\n\n  run_v1alpha1.Resource$Namespaces$Domainmappings = Resource$Namespaces$Domainmappings;\n\n  var Resource$Namespaces$Revisions = /*#__PURE__*/function () {\n    function Resource$Namespaces$Revisions(context) {\n      _classCallCheck(this, Resource$Namespaces$Revisions);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Namespaces$Revisions, [{\n      key: \"delete\",\n      value: function _delete(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://run.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/apis/serving.knative.dev/v1alpha1/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'DELETE'\n          }, options),\n          params,\n          requiredParams: ['name'],\n          pathParams: ['name'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://run.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/apis/serving.knative.dev/v1alpha1/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['name'],\n          pathParams: ['name'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://run.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/apis/serving.knative.dev/v1alpha1/{+parent}/revisions').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['parent'],\n          pathParams: ['parent'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Namespaces$Revisions;\n  }();\n\n  run_v1alpha1.Resource$Namespaces$Revisions = Resource$Namespaces$Revisions;\n\n  var Resource$Namespaces$Routes = /*#__PURE__*/function () {\n    function Resource$Namespaces$Routes(context) {\n      _classCallCheck(this, Resource$Namespaces$Routes);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Namespaces$Routes, [{\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://run.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/apis/serving.knative.dev/v1alpha1/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['name'],\n          pathParams: ['name'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://run.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/apis/serving.knative.dev/v1alpha1/{+parent}/routes').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['parent'],\n          pathParams: ['parent'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Namespaces$Routes;\n  }();\n\n  run_v1alpha1.Resource$Namespaces$Routes = Resource$Namespaces$Routes;\n\n  var Resource$Namespaces$Services = /*#__PURE__*/function () {\n    function Resource$Namespaces$Services(context) {\n      _classCallCheck(this, Resource$Namespaces$Services);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Namespaces$Services, [{\n      key: \"create\",\n      value: function create(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://run.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/apis/serving.knative.dev/v1alpha1/{+parent}/services').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['parent'],\n          pathParams: ['parent'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"delete\",\n      value: function _delete(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://run.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/apis/serving.knative.dev/v1alpha1/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'DELETE'\n          }, options),\n          params,\n          requiredParams: ['name'],\n          pathParams: ['name'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://run.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/apis/serving.knative.dev/v1alpha1/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['name'],\n          pathParams: ['name'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://run.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/apis/serving.knative.dev/v1alpha1/{+parent}/services').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['parent'],\n          pathParams: ['parent'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"replaceService\",\n      value: function replaceService(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://run.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/apis/serving.knative.dev/v1alpha1/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PUT'\n          }, options),\n          params,\n          requiredParams: ['name'],\n          pathParams: ['name'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Namespaces$Services;\n  }();\n\n  run_v1alpha1.Resource$Namespaces$Services = Resource$Namespaces$Services;\n\n  var Resource$Namespaces$Triggers = /*#__PURE__*/function () {\n    function Resource$Namespaces$Triggers(context) {\n      _classCallCheck(this, Resource$Namespaces$Triggers);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Namespaces$Triggers, [{\n      key: \"create\",\n      value: function create(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://run.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/apis/eventing.knative.dev/v1alpha1/{+parent}/triggers').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['parent'],\n          pathParams: ['parent'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"delete\",\n      value: function _delete(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://run.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/apis/eventing.knative.dev/v1alpha1/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'DELETE'\n          }, options),\n          params,\n          requiredParams: ['name'],\n          pathParams: ['name'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://run.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/apis/eventing.knative.dev/v1alpha1/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['name'],\n          pathParams: ['name'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://run.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/apis/eventing.knative.dev/v1alpha1/{+parent}/triggers').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['parent'],\n          pathParams: ['parent'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Namespaces$Triggers;\n  }();\n\n  run_v1alpha1.Resource$Namespaces$Triggers = Resource$Namespaces$Triggers;\n\n  var Resource$Projects = function Resource$Projects(context) {\n    _classCallCheck(this, Resource$Projects);\n\n    this.context = context;\n    this.locations = new Resource$Projects$Locations(this.context);\n  };\n\n  run_v1alpha1.Resource$Projects = Resource$Projects;\n\n  var Resource$Projects$Locations = /*#__PURE__*/function () {\n    function Resource$Projects$Locations(context) {\n      _classCallCheck(this, Resource$Projects$Locations);\n\n      this.context = context;\n      this.authorizeddomains = new Resource$Projects$Locations$Authorizeddomains(this.context);\n      this.cloudauditlogssources = new Resource$Projects$Locations$Cloudauditlogssources(this.context);\n      this.cloudpubsubsources = new Resource$Projects$Locations$Cloudpubsubsources(this.context);\n      this.cloudschedulersources = new Resource$Projects$Locations$Cloudschedulersources(this.context);\n      this.cloudstoragesources = new Resource$Projects$Locations$Cloudstoragesources(this.context);\n      this.configurations = new Resource$Projects$Locations$Configurations(this.context);\n      this.domainmappings = new Resource$Projects$Locations$Domainmappings(this.context);\n      this.revisions = new Resource$Projects$Locations$Revisions(this.context);\n      this.routes = new Resource$Projects$Locations$Routes(this.context);\n      this.services = new Resource$Projects$Locations$Services(this.context);\n      this.triggers = new Resource$Projects$Locations$Triggers(this.context);\n    }\n\n    _createClass(Resource$Projects$Locations, [{\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://run.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1alpha1/{+name}/locations').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['name'],\n          pathParams: ['name'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Projects$Locations;\n  }();\n\n  run_v1alpha1.Resource$Projects$Locations = Resource$Projects$Locations;\n\n  var Resource$Projects$Locations$Authorizeddomains = /*#__PURE__*/function () {\n    function Resource$Projects$Locations$Authorizeddomains(context) {\n      _classCallCheck(this, Resource$Projects$Locations$Authorizeddomains);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Projects$Locations$Authorizeddomains, [{\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://run.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1alpha1/{+parent}/authorizeddomains').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['parent'],\n          pathParams: ['parent'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Projects$Locations$Authorizeddomains;\n  }();\n\n  run_v1alpha1.Resource$Projects$Locations$Authorizeddomains = Resource$Projects$Locations$Authorizeddomains;\n\n  var Resource$Projects$Locations$Cloudauditlogssources = /*#__PURE__*/function () {\n    function Resource$Projects$Locations$Cloudauditlogssources(context) {\n      _classCallCheck(this, Resource$Projects$Locations$Cloudauditlogssources);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Projects$Locations$Cloudauditlogssources, [{\n      key: \"create\",\n      value: function create(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://run.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1alpha1/{+parent}/cloudauditlogssources').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['parent'],\n          pathParams: ['parent'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"delete\",\n      value: function _delete(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://run.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1alpha1/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'DELETE'\n          }, options),\n          params,\n          requiredParams: ['name'],\n          pathParams: ['name'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://run.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1alpha1/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['name'],\n          pathParams: ['name'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://run.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1alpha1/{+parent}/cloudauditlogssources').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['parent'],\n          pathParams: ['parent'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Projects$Locations$Cloudauditlogssources;\n  }();\n\n  run_v1alpha1.Resource$Projects$Locations$Cloudauditlogssources = Resource$Projects$Locations$Cloudauditlogssources;\n\n  var Resource$Projects$Locations$Cloudpubsubsources = /*#__PURE__*/function () {\n    function Resource$Projects$Locations$Cloudpubsubsources(context) {\n      _classCallCheck(this, Resource$Projects$Locations$Cloudpubsubsources);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Projects$Locations$Cloudpubsubsources, [{\n      key: \"create\",\n      value: function create(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://run.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1alpha1/{+parent}/cloudpubsubsources').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['parent'],\n          pathParams: ['parent'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"delete\",\n      value: function _delete(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://run.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1alpha1/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'DELETE'\n          }, options),\n          params,\n          requiredParams: ['name'],\n          pathParams: ['name'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://run.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1alpha1/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['name'],\n          pathParams: ['name'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://run.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1alpha1/{+parent}/cloudpubsubsources').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['parent'],\n          pathParams: ['parent'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Projects$Locations$Cloudpubsubsources;\n  }();\n\n  run_v1alpha1.Resource$Projects$Locations$Cloudpubsubsources = Resource$Projects$Locations$Cloudpubsubsources;\n\n  var Resource$Projects$Locations$Cloudschedulersources = /*#__PURE__*/function () {\n    function Resource$Projects$Locations$Cloudschedulersources(context) {\n      _classCallCheck(this, Resource$Projects$Locations$Cloudschedulersources);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Projects$Locations$Cloudschedulersources, [{\n      key: \"create\",\n      value: function create(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://run.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1alpha1/{+parent}/cloudschedulersources').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['parent'],\n          pathParams: ['parent'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"delete\",\n      value: function _delete(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://run.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1alpha1/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'DELETE'\n          }, options),\n          params,\n          requiredParams: ['name'],\n          pathParams: ['name'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://run.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1alpha1/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['name'],\n          pathParams: ['name'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://run.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1alpha1/{+parent}/cloudschedulersources').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['parent'],\n          pathParams: ['parent'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"replaceCloudSchedulerSource\",\n      value: function replaceCloudSchedulerSource(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://run.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1alpha1/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PUT'\n          }, options),\n          params,\n          requiredParams: ['name'],\n          pathParams: ['name'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Projects$Locations$Cloudschedulersources;\n  }();\n\n  run_v1alpha1.Resource$Projects$Locations$Cloudschedulersources = Resource$Projects$Locations$Cloudschedulersources;\n\n  var Resource$Projects$Locations$Cloudstoragesources = /*#__PURE__*/function () {\n    function Resource$Projects$Locations$Cloudstoragesources(context) {\n      _classCallCheck(this, Resource$Projects$Locations$Cloudstoragesources);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Projects$Locations$Cloudstoragesources, [{\n      key: \"create\",\n      value: function create(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://run.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1alpha1/{+parent}/cloudstoragesources').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['parent'],\n          pathParams: ['parent'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"delete\",\n      value: function _delete(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://run.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1alpha1/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'DELETE'\n          }, options),\n          params,\n          requiredParams: ['name'],\n          pathParams: ['name'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://run.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1alpha1/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['name'],\n          pathParams: ['name'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://run.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1alpha1/{+parent}/cloudstoragesources').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['parent'],\n          pathParams: ['parent'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"replaceCloudStorageSource\",\n      value: function replaceCloudStorageSource(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://run.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1alpha1/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PUT'\n          }, options),\n          params,\n          requiredParams: ['name'],\n          pathParams: ['name'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Projects$Locations$Cloudstoragesources;\n  }();\n\n  run_v1alpha1.Resource$Projects$Locations$Cloudstoragesources = Resource$Projects$Locations$Cloudstoragesources;\n\n  var Resource$Projects$Locations$Configurations = /*#__PURE__*/function () {\n    function Resource$Projects$Locations$Configurations(context) {\n      _classCallCheck(this, Resource$Projects$Locations$Configurations);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Projects$Locations$Configurations, [{\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://run.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1alpha1/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['name'],\n          pathParams: ['name'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://run.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1alpha1/{+parent}/configurations').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['parent'],\n          pathParams: ['parent'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Projects$Locations$Configurations;\n  }();\n\n  run_v1alpha1.Resource$Projects$Locations$Configurations = Resource$Projects$Locations$Configurations;\n\n  var Resource$Projects$Locations$Domainmappings = /*#__PURE__*/function () {\n    function Resource$Projects$Locations$Domainmappings(context) {\n      _classCallCheck(this, Resource$Projects$Locations$Domainmappings);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Projects$Locations$Domainmappings, [{\n      key: \"create\",\n      value: function create(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://run.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1alpha1/{+parent}/domainmappings').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['parent'],\n          pathParams: ['parent'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"delete\",\n      value: function _delete(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://run.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1alpha1/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'DELETE'\n          }, options),\n          params,\n          requiredParams: ['name'],\n          pathParams: ['name'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://run.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1alpha1/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['name'],\n          pathParams: ['name'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://run.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1alpha1/{+parent}/domainmappings').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['parent'],\n          pathParams: ['parent'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Projects$Locations$Domainmappings;\n  }();\n\n  run_v1alpha1.Resource$Projects$Locations$Domainmappings = Resource$Projects$Locations$Domainmappings;\n\n  var Resource$Projects$Locations$Revisions = /*#__PURE__*/function () {\n    function Resource$Projects$Locations$Revisions(context) {\n      _classCallCheck(this, Resource$Projects$Locations$Revisions);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Projects$Locations$Revisions, [{\n      key: \"delete\",\n      value: function _delete(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://run.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1alpha1/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'DELETE'\n          }, options),\n          params,\n          requiredParams: ['name'],\n          pathParams: ['name'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://run.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1alpha1/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['name'],\n          pathParams: ['name'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://run.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1alpha1/{+parent}/revisions').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['parent'],\n          pathParams: ['parent'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Projects$Locations$Revisions;\n  }();\n\n  run_v1alpha1.Resource$Projects$Locations$Revisions = Resource$Projects$Locations$Revisions;\n\n  var Resource$Projects$Locations$Routes = /*#__PURE__*/function () {\n    function Resource$Projects$Locations$Routes(context) {\n      _classCallCheck(this, Resource$Projects$Locations$Routes);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Projects$Locations$Routes, [{\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://run.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1alpha1/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['name'],\n          pathParams: ['name'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://run.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1alpha1/{+parent}/routes').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['parent'],\n          pathParams: ['parent'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Projects$Locations$Routes;\n  }();\n\n  run_v1alpha1.Resource$Projects$Locations$Routes = Resource$Projects$Locations$Routes;\n\n  var Resource$Projects$Locations$Services = /*#__PURE__*/function () {\n    function Resource$Projects$Locations$Services(context) {\n      _classCallCheck(this, Resource$Projects$Locations$Services);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Projects$Locations$Services, [{\n      key: \"create\",\n      value: function create(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://run.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1alpha1/{+parent}/services').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['parent'],\n          pathParams: ['parent'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"delete\",\n      value: function _delete(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://run.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1alpha1/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'DELETE'\n          }, options),\n          params,\n          requiredParams: ['name'],\n          pathParams: ['name'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://run.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1alpha1/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['name'],\n          pathParams: ['name'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"getIamPolicy\",\n      value: function getIamPolicy(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://run.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1alpha1/{+resource}:getIamPolicy').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['resource'],\n          pathParams: ['resource'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://run.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1alpha1/{+parent}/services').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['parent'],\n          pathParams: ['parent'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"replaceService\",\n      value: function replaceService(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://run.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1alpha1/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PUT'\n          }, options),\n          params,\n          requiredParams: ['name'],\n          pathParams: ['name'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"setIamPolicy\",\n      value: function setIamPolicy(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://run.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1alpha1/{+resource}:setIamPolicy').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['resource'],\n          pathParams: ['resource'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"testIamPermissions\",\n      value: function testIamPermissions(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://run.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1alpha1/{+resource}:testIamPermissions').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['resource'],\n          pathParams: ['resource'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Projects$Locations$Services;\n  }();\n\n  run_v1alpha1.Resource$Projects$Locations$Services = Resource$Projects$Locations$Services;\n\n  var Resource$Projects$Locations$Triggers = /*#__PURE__*/function () {\n    function Resource$Projects$Locations$Triggers(context) {\n      _classCallCheck(this, Resource$Projects$Locations$Triggers);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Projects$Locations$Triggers, [{\n      key: \"create\",\n      value: function create(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://run.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1alpha1/{+parent}/triggers').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['parent'],\n          pathParams: ['parent'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"delete\",\n      value: function _delete(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://run.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1alpha1/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'DELETE'\n          }, options),\n          params,\n          requiredParams: ['name'],\n          pathParams: ['name'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://run.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1alpha1/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['name'],\n          pathParams: ['name'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://run.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1alpha1/{+parent}/triggers').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['parent'],\n          pathParams: ['parent'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Projects$Locations$Triggers;\n  }();\n\n  run_v1alpha1.Resource$Projects$Locations$Triggers = Resource$Projects$Locations$Triggers;\n})(run_v1alpha1 = exports.run_v1alpha1 || (exports.run_v1alpha1 = {}));","map":{"version":3,"sources":["/Users/amandapoetker-alles/Desktop/campaign-dashboard/Campaign-Planner/node_modules/googleapis/build/src/apis/run/v1alpha1.js"],"names":["Object","defineProperty","exports","value","run_v1alpha1","googleapis_common_1","require","Run","options","google","context","_options","namespaces","Resource$Namespaces","projects","Resource$Projects","authorizeddomains","Resource$Namespaces$Authorizeddomains","cloudauditlogssources","Resource$Namespaces$Cloudauditlogssources","cloudpubsubsources","Resource$Namespaces$Cloudpubsubsources","cloudschedulersources","Resource$Namespaces$Cloudschedulersources","cloudstoragesources","Resource$Namespaces$Cloudstoragesources","configurations","Resource$Namespaces$Configurations","domainmappings","Resource$Namespaces$Domainmappings","revisions","Resource$Namespaces$Revisions","routes","Resource$Namespaces$Routes","services","Resource$Namespaces$Services","triggers","Resource$Namespaces$Triggers","paramsOrCallback","optionsOrCallback","callback","params","rootUrl","parameters","assign","url","replace","method","requiredParams","pathParams","createAPIRequest","locations","Resource$Projects$Locations","Resource$Projects$Locations$Authorizeddomains","Resource$Projects$Locations$Cloudauditlogssources","Resource$Projects$Locations$Cloudpubsubsources","Resource$Projects$Locations$Cloudschedulersources","Resource$Projects$Locations$Cloudstoragesources","Resource$Projects$Locations$Configurations","Resource$Projects$Locations$Domainmappings","Resource$Projects$Locations$Revisions","Resource$Projects$Locations$Routes","Resource$Projects$Locations$Services","Resource$Projects$Locations$Triggers"],"mappings":"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","sourcesContent":["\"use strict\";\n// Copyright 2020 Google LLC\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//    http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.run_v1alpha1 = void 0;\n/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/class-name-casing */\n/* eslint-disable @typescript-eslint/no-unused-vars */\n/* eslint-disable @typescript-eslint/no-empty-interface */\n/* eslint-disable @typescript-eslint/no-namespace */\n/* eslint-disable no-irregular-whitespace */\nconst googleapis_common_1 = require(\"googleapis-common\");\nvar run_v1alpha1;\n(function (run_v1alpha1) {\n    /**\n     * Cloud Run Admin API\n     *\n     * Deploy and manage user provided container images that scale automatically based on HTTP traffic.\n     *\n     * @example\n     * ```js\n     * const {google} = require('googleapis');\n     * const run = google.run('v1alpha1');\n     * ```\n     */\n    class Run {\n        constructor(options, google) {\n            this.context = {\n                _options: options || {},\n                google,\n            };\n            this.namespaces = new Resource$Namespaces(this.context);\n            this.projects = new Resource$Projects(this.context);\n        }\n    }\n    run_v1alpha1.Run = Run;\n    class Resource$Namespaces {\n        constructor(context) {\n            this.context = context;\n            this.authorizeddomains = new Resource$Namespaces$Authorizeddomains(this.context);\n            this.cloudauditlogssources = new Resource$Namespaces$Cloudauditlogssources(this.context);\n            this.cloudpubsubsources = new Resource$Namespaces$Cloudpubsubsources(this.context);\n            this.cloudschedulersources = new Resource$Namespaces$Cloudschedulersources(this.context);\n            this.cloudstoragesources = new Resource$Namespaces$Cloudstoragesources(this.context);\n            this.configurations = new Resource$Namespaces$Configurations(this.context);\n            this.domainmappings = new Resource$Namespaces$Domainmappings(this.context);\n            this.revisions = new Resource$Namespaces$Revisions(this.context);\n            this.routes = new Resource$Namespaces$Routes(this.context);\n            this.services = new Resource$Namespaces$Services(this.context);\n            this.triggers = new Resource$Namespaces$Triggers(this.context);\n        }\n    }\n    run_v1alpha1.Resource$Namespaces = Resource$Namespaces;\n    class Resource$Namespaces$Authorizeddomains {\n        constructor(context) {\n            this.context = context;\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://run.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/apis/domains.cloudrun.com/v1alpha1/{+parent}/authorizeddomains').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['parent'],\n                pathParams: ['parent'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    run_v1alpha1.Resource$Namespaces$Authorizeddomains = Resource$Namespaces$Authorizeddomains;\n    class Resource$Namespaces$Cloudauditlogssources {\n        constructor(context) {\n            this.context = context;\n        }\n        create(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://run.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/apis/events.cloud.google.com/v1alpha1/{+parent}/cloudauditlogssources').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['parent'],\n                pathParams: ['parent'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        delete(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://run.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/apis/events.cloud.google.com/v1alpha1/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'DELETE',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://run.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/apis/events.cloud.google.com/v1alpha1/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://run.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/apis/events.cloud.google.com/v1alpha1/{+parent}/cloudauditlogssources').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['parent'],\n                pathParams: ['parent'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    run_v1alpha1.Resource$Namespaces$Cloudauditlogssources = Resource$Namespaces$Cloudauditlogssources;\n    class Resource$Namespaces$Cloudpubsubsources {\n        constructor(context) {\n            this.context = context;\n        }\n        create(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://run.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/apis/events.cloud.google.com/v1alpha1/{+parent}/cloudpubsubsources').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['parent'],\n                pathParams: ['parent'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        delete(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://run.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/apis/events.cloud.google.com/v1alpha1/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'DELETE',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://run.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/apis/events.cloud.google.com/v1alpha1/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://run.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/apis/events.cloud.google.com/v1alpha1/{+parent}/cloudpubsubsources').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['parent'],\n                pathParams: ['parent'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    run_v1alpha1.Resource$Namespaces$Cloudpubsubsources = Resource$Namespaces$Cloudpubsubsources;\n    class Resource$Namespaces$Cloudschedulersources {\n        constructor(context) {\n            this.context = context;\n        }\n        create(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://run.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/apis/events.cloud.google.com/v1alpha1/{+parent}/cloudschedulersources').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['parent'],\n                pathParams: ['parent'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        delete(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://run.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/apis/events.cloud.google.com/v1alpha1/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'DELETE',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://run.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/apis/events.cloud.google.com/v1alpha1/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://run.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/apis/events.cloud.google.com/v1alpha1/{+parent}/cloudschedulersources').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['parent'],\n                pathParams: ['parent'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        replaceCloudSchedulerSource(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://run.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/apis/events.cloud.google.com/v1alpha1/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PUT',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    run_v1alpha1.Resource$Namespaces$Cloudschedulersources = Resource$Namespaces$Cloudschedulersources;\n    class Resource$Namespaces$Cloudstoragesources {\n        constructor(context) {\n            this.context = context;\n        }\n        create(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://run.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/apis/events.cloud.google.com/v1alpha1/{+parent}/cloudstoragesources').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['parent'],\n                pathParams: ['parent'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        delete(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://run.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/apis/events.cloud.google.com/v1alpha1/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'DELETE',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://run.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/apis/events.cloud.google.com/v1alpha1/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://run.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/apis/events.cloud.google.com/v1alpha1/{+parent}/cloudstoragesources').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['parent'],\n                pathParams: ['parent'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        replaceCloudStorageSource(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://run.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/apis/events.cloud.google.com/v1alpha1/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PUT',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    run_v1alpha1.Resource$Namespaces$Cloudstoragesources = Resource$Namespaces$Cloudstoragesources;\n    class Resource$Namespaces$Configurations {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://run.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/apis/serving.knative.dev/v1alpha1/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://run.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/apis/serving.knative.dev/v1alpha1/{+parent}/configurations').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['parent'],\n                pathParams: ['parent'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    run_v1alpha1.Resource$Namespaces$Configurations = Resource$Namespaces$Configurations;\n    class Resource$Namespaces$Domainmappings {\n        constructor(context) {\n            this.context = context;\n        }\n        create(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://run.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/apis/domains.cloudrun.com/v1alpha1/{+parent}/domainmappings').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['parent'],\n                pathParams: ['parent'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        delete(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://run.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/apis/domains.cloudrun.com/v1alpha1/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'DELETE',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://run.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/apis/domains.cloudrun.com/v1alpha1/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://run.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/apis/domains.cloudrun.com/v1alpha1/{+parent}/domainmappings').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['parent'],\n                pathParams: ['parent'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    run_v1alpha1.Resource$Namespaces$Domainmappings = Resource$Namespaces$Domainmappings;\n    class Resource$Namespaces$Revisions {\n        constructor(context) {\n            this.context = context;\n        }\n        delete(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://run.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/apis/serving.knative.dev/v1alpha1/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'DELETE',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://run.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/apis/serving.knative.dev/v1alpha1/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://run.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/apis/serving.knative.dev/v1alpha1/{+parent}/revisions').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['parent'],\n                pathParams: ['parent'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    run_v1alpha1.Resource$Namespaces$Revisions = Resource$Namespaces$Revisions;\n    class Resource$Namespaces$Routes {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://run.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/apis/serving.knative.dev/v1alpha1/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://run.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/apis/serving.knative.dev/v1alpha1/{+parent}/routes').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['parent'],\n                pathParams: ['parent'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    run_v1alpha1.Resource$Namespaces$Routes = Resource$Namespaces$Routes;\n    class Resource$Namespaces$Services {\n        constructor(context) {\n            this.context = context;\n        }\n        create(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://run.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/apis/serving.knative.dev/v1alpha1/{+parent}/services').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['parent'],\n                pathParams: ['parent'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        delete(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://run.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/apis/serving.knative.dev/v1alpha1/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'DELETE',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://run.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/apis/serving.knative.dev/v1alpha1/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://run.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/apis/serving.knative.dev/v1alpha1/{+parent}/services').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['parent'],\n                pathParams: ['parent'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        replaceService(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://run.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/apis/serving.knative.dev/v1alpha1/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PUT',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    run_v1alpha1.Resource$Namespaces$Services = Resource$Namespaces$Services;\n    class Resource$Namespaces$Triggers {\n        constructor(context) {\n            this.context = context;\n        }\n        create(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://run.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/apis/eventing.knative.dev/v1alpha1/{+parent}/triggers').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['parent'],\n                pathParams: ['parent'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        delete(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://run.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/apis/eventing.knative.dev/v1alpha1/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'DELETE',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://run.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/apis/eventing.knative.dev/v1alpha1/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://run.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/apis/eventing.knative.dev/v1alpha1/{+parent}/triggers').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['parent'],\n                pathParams: ['parent'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    run_v1alpha1.Resource$Namespaces$Triggers = Resource$Namespaces$Triggers;\n    class Resource$Projects {\n        constructor(context) {\n            this.context = context;\n            this.locations = new Resource$Projects$Locations(this.context);\n        }\n    }\n    run_v1alpha1.Resource$Projects = Resource$Projects;\n    class Resource$Projects$Locations {\n        constructor(context) {\n            this.context = context;\n            this.authorizeddomains = new Resource$Projects$Locations$Authorizeddomains(this.context);\n            this.cloudauditlogssources = new Resource$Projects$Locations$Cloudauditlogssources(this.context);\n            this.cloudpubsubsources = new Resource$Projects$Locations$Cloudpubsubsources(this.context);\n            this.cloudschedulersources = new Resource$Projects$Locations$Cloudschedulersources(this.context);\n            this.cloudstoragesources = new Resource$Projects$Locations$Cloudstoragesources(this.context);\n            this.configurations = new Resource$Projects$Locations$Configurations(this.context);\n            this.domainmappings = new Resource$Projects$Locations$Domainmappings(this.context);\n            this.revisions = new Resource$Projects$Locations$Revisions(this.context);\n            this.routes = new Resource$Projects$Locations$Routes(this.context);\n            this.services = new Resource$Projects$Locations$Services(this.context);\n            this.triggers = new Resource$Projects$Locations$Triggers(this.context);\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://run.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1alpha1/{+name}/locations').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    run_v1alpha1.Resource$Projects$Locations = Resource$Projects$Locations;\n    class Resource$Projects$Locations$Authorizeddomains {\n        constructor(context) {\n            this.context = context;\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://run.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1alpha1/{+parent}/authorizeddomains').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['parent'],\n                pathParams: ['parent'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    run_v1alpha1.Resource$Projects$Locations$Authorizeddomains = Resource$Projects$Locations$Authorizeddomains;\n    class Resource$Projects$Locations$Cloudauditlogssources {\n        constructor(context) {\n            this.context = context;\n        }\n        create(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://run.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1alpha1/{+parent}/cloudauditlogssources').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['parent'],\n                pathParams: ['parent'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        delete(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://run.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1alpha1/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'DELETE',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://run.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1alpha1/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://run.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1alpha1/{+parent}/cloudauditlogssources').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['parent'],\n                pathParams: ['parent'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    run_v1alpha1.Resource$Projects$Locations$Cloudauditlogssources = Resource$Projects$Locations$Cloudauditlogssources;\n    class Resource$Projects$Locations$Cloudpubsubsources {\n        constructor(context) {\n            this.context = context;\n        }\n        create(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://run.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1alpha1/{+parent}/cloudpubsubsources').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['parent'],\n                pathParams: ['parent'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        delete(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://run.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1alpha1/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'DELETE',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://run.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1alpha1/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://run.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1alpha1/{+parent}/cloudpubsubsources').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['parent'],\n                pathParams: ['parent'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    run_v1alpha1.Resource$Projects$Locations$Cloudpubsubsources = Resource$Projects$Locations$Cloudpubsubsources;\n    class Resource$Projects$Locations$Cloudschedulersources {\n        constructor(context) {\n            this.context = context;\n        }\n        create(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://run.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1alpha1/{+parent}/cloudschedulersources').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['parent'],\n                pathParams: ['parent'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        delete(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://run.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1alpha1/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'DELETE',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://run.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1alpha1/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://run.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1alpha1/{+parent}/cloudschedulersources').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['parent'],\n                pathParams: ['parent'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        replaceCloudSchedulerSource(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://run.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1alpha1/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PUT',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    run_v1alpha1.Resource$Projects$Locations$Cloudschedulersources = Resource$Projects$Locations$Cloudschedulersources;\n    class Resource$Projects$Locations$Cloudstoragesources {\n        constructor(context) {\n            this.context = context;\n        }\n        create(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://run.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1alpha1/{+parent}/cloudstoragesources').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['parent'],\n                pathParams: ['parent'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        delete(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://run.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1alpha1/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'DELETE',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://run.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1alpha1/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://run.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1alpha1/{+parent}/cloudstoragesources').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['parent'],\n                pathParams: ['parent'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        replaceCloudStorageSource(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://run.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1alpha1/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PUT',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    run_v1alpha1.Resource$Projects$Locations$Cloudstoragesources = Resource$Projects$Locations$Cloudstoragesources;\n    class Resource$Projects$Locations$Configurations {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://run.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1alpha1/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://run.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1alpha1/{+parent}/configurations').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['parent'],\n                pathParams: ['parent'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    run_v1alpha1.Resource$Projects$Locations$Configurations = Resource$Projects$Locations$Configurations;\n    class Resource$Projects$Locations$Domainmappings {\n        constructor(context) {\n            this.context = context;\n        }\n        create(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://run.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1alpha1/{+parent}/domainmappings').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['parent'],\n                pathParams: ['parent'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        delete(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://run.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1alpha1/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'DELETE',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://run.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1alpha1/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://run.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1alpha1/{+parent}/domainmappings').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['parent'],\n                pathParams: ['parent'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    run_v1alpha1.Resource$Projects$Locations$Domainmappings = Resource$Projects$Locations$Domainmappings;\n    class Resource$Projects$Locations$Revisions {\n        constructor(context) {\n            this.context = context;\n        }\n        delete(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://run.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1alpha1/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'DELETE',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://run.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1alpha1/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://run.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1alpha1/{+parent}/revisions').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['parent'],\n                pathParams: ['parent'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    run_v1alpha1.Resource$Projects$Locations$Revisions = Resource$Projects$Locations$Revisions;\n    class Resource$Projects$Locations$Routes {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://run.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1alpha1/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://run.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1alpha1/{+parent}/routes').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['parent'],\n                pathParams: ['parent'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    run_v1alpha1.Resource$Projects$Locations$Routes = Resource$Projects$Locations$Routes;\n    class Resource$Projects$Locations$Services {\n        constructor(context) {\n            this.context = context;\n        }\n        create(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://run.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1alpha1/{+parent}/services').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['parent'],\n                pathParams: ['parent'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        delete(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://run.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1alpha1/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'DELETE',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://run.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1alpha1/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        getIamPolicy(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://run.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1alpha1/{+resource}:getIamPolicy').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['resource'],\n                pathParams: ['resource'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://run.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1alpha1/{+parent}/services').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['parent'],\n                pathParams: ['parent'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        replaceService(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://run.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1alpha1/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PUT',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        setIamPolicy(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://run.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1alpha1/{+resource}:setIamPolicy').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['resource'],\n                pathParams: ['resource'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        testIamPermissions(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://run.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1alpha1/{+resource}:testIamPermissions').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['resource'],\n                pathParams: ['resource'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    run_v1alpha1.Resource$Projects$Locations$Services = Resource$Projects$Locations$Services;\n    class Resource$Projects$Locations$Triggers {\n        constructor(context) {\n            this.context = context;\n        }\n        create(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://run.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1alpha1/{+parent}/triggers').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['parent'],\n                pathParams: ['parent'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        delete(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://run.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1alpha1/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'DELETE',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://run.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1alpha1/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://run.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1alpha1/{+parent}/triggers').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['parent'],\n                pathParams: ['parent'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    run_v1alpha1.Resource$Projects$Locations$Triggers = Resource$Projects$Locations$Triggers;\n})(run_v1alpha1 = exports.run_v1alpha1 || (exports.run_v1alpha1 = {}));\n//# sourceMappingURL=v1alpha1.js.map"]},"metadata":{},"sourceType":"script"}