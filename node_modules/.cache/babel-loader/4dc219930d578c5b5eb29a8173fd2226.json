{"ast":null,"code":"\"use strict\";\n/**\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar _createClass = require(\"/Users/amandapoetker-alles/Desktop/campaign-dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _classCallCheck = require(\"/Users/amandapoetker-alles/Desktop/campaign-dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar googleapis_common_1 = require(\"googleapis-common\"); // tslint:disable: no-any\n// tslint:disable: class-name\n// tslint:disable: variable-name\n// tslint:disable: jsdoc-format\n// tslint:disable: no-namespace\n\n\nvar adsense_v1_4;\n\n(function (adsense_v1_4) {\n  /**\n   * AdSense Management API\n   *\n   * Accesses AdSense publishers&#39; inventory and generates performance\n   * reports.\n   *\n   * @example\n   * const {google} = require('googleapis');\n   * const adsense = google.adsense('v1.4');\n   *\n   * @namespace adsense\n   * @type {Function}\n   * @version v1.4\n   * @variation v1.4\n   * @param {object=} options Options for Adsense\n   */\n  var Adsense = function Adsense(options, google) {\n    _classCallCheck(this, Adsense);\n\n    this.context = {\n      _options: options || {},\n      google\n    };\n    this.accounts = new Resource$Accounts(this.context);\n    this.adclients = new Resource$Adclients(this.context);\n    this.adunits = new Resource$Adunits(this.context);\n    this.alerts = new Resource$Alerts(this.context);\n    this.customchannels = new Resource$Customchannels(this.context);\n    this.metadata = new Resource$Metadata(this.context);\n    this.payments = new Resource$Payments(this.context);\n    this.reports = new Resource$Reports(this.context);\n    this.savedadstyles = new Resource$Savedadstyles(this.context);\n    this.urlchannels = new Resource$Urlchannels(this.context);\n  };\n\n  adsense_v1_4.Adsense = Adsense;\n\n  var Resource$Accounts = /*#__PURE__*/function () {\n    function Resource$Accounts(context) {\n      _classCallCheck(this, Resource$Accounts);\n\n      this.context = context;\n      this.adclients = new Resource$Accounts$Adclients(this.context);\n      this.adunits = new Resource$Accounts$Adunits(this.context);\n      this.alerts = new Resource$Accounts$Alerts(this.context);\n      this.customchannels = new Resource$Accounts$Customchannels(this.context);\n      this.payments = new Resource$Accounts$Payments(this.context);\n      this.reports = new Resource$Accounts$Reports(this.context);\n      this.savedadstyles = new Resource$Accounts$Savedadstyles(this.context);\n      this.urlchannels = new Resource$Accounts$Urlchannels(this.context);\n    }\n\n    _createClass(Resource$Accounts, [{\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/adsense/v1.4/accounts/{accountId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['accountId'],\n          pathParams: ['accountId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/adsense/v1.4/accounts').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: [],\n          pathParams: [],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Accounts;\n  }();\n\n  adsense_v1_4.Resource$Accounts = Resource$Accounts;\n\n  var Resource$Accounts$Adclients = /*#__PURE__*/function () {\n    function Resource$Accounts$Adclients(context) {\n      _classCallCheck(this, Resource$Accounts$Adclients);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Accounts$Adclients, [{\n      key: \"getAdCode\",\n      value: function getAdCode(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/adsense/v1.4/accounts/{accountId}/adclients/{adClientId}/adcode').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['accountId', 'adClientId'],\n          pathParams: ['accountId', 'adClientId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/adsense/v1.4/accounts/{accountId}/adclients').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['accountId'],\n          pathParams: ['accountId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Accounts$Adclients;\n  }();\n\n  adsense_v1_4.Resource$Accounts$Adclients = Resource$Accounts$Adclients;\n\n  var Resource$Accounts$Adunits = /*#__PURE__*/function () {\n    function Resource$Accounts$Adunits(context) {\n      _classCallCheck(this, Resource$Accounts$Adunits);\n\n      this.context = context;\n      this.customchannels = new Resource$Accounts$Adunits$Customchannels(this.context);\n    }\n\n    _createClass(Resource$Accounts$Adunits, [{\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/adsense/v1.4/accounts/{accountId}/adclients/{adClientId}/adunits/{adUnitId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['accountId', 'adClientId', 'adUnitId'],\n          pathParams: ['accountId', 'adClientId', 'adUnitId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"getAdCode\",\n      value: function getAdCode(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/adsense/v1.4/accounts/{accountId}/adclients/{adClientId}/adunits/{adUnitId}/adcode').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['accountId', 'adClientId', 'adUnitId'],\n          pathParams: ['accountId', 'adClientId', 'adUnitId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/adsense/v1.4/accounts/{accountId}/adclients/{adClientId}/adunits').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['accountId', 'adClientId'],\n          pathParams: ['accountId', 'adClientId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Accounts$Adunits;\n  }();\n\n  adsense_v1_4.Resource$Accounts$Adunits = Resource$Accounts$Adunits;\n\n  var Resource$Accounts$Adunits$Customchannels = /*#__PURE__*/function () {\n    function Resource$Accounts$Adunits$Customchannels(context) {\n      _classCallCheck(this, Resource$Accounts$Adunits$Customchannels);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Accounts$Adunits$Customchannels, [{\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/adsense/v1.4/accounts/{accountId}/adclients/{adClientId}/adunits/{adUnitId}/customchannels').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['accountId', 'adClientId', 'adUnitId'],\n          pathParams: ['accountId', 'adClientId', 'adUnitId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Accounts$Adunits$Customchannels;\n  }();\n\n  adsense_v1_4.Resource$Accounts$Adunits$Customchannels = Resource$Accounts$Adunits$Customchannels;\n\n  var Resource$Accounts$Alerts = /*#__PURE__*/function () {\n    function Resource$Accounts$Alerts(context) {\n      _classCallCheck(this, Resource$Accounts$Alerts);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Accounts$Alerts, [{\n      key: \"delete\",\n      value: function _delete(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/adsense/v1.4/accounts/{accountId}/alerts/{alertId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'DELETE'\n          }, options),\n          params,\n          requiredParams: ['accountId', 'alertId'],\n          pathParams: ['accountId', 'alertId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/adsense/v1.4/accounts/{accountId}/alerts').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['accountId'],\n          pathParams: ['accountId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Accounts$Alerts;\n  }();\n\n  adsense_v1_4.Resource$Accounts$Alerts = Resource$Accounts$Alerts;\n\n  var Resource$Accounts$Customchannels = /*#__PURE__*/function () {\n    function Resource$Accounts$Customchannels(context) {\n      _classCallCheck(this, Resource$Accounts$Customchannels);\n\n      this.context = context;\n      this.adunits = new Resource$Accounts$Customchannels$Adunits(this.context);\n    }\n\n    _createClass(Resource$Accounts$Customchannels, [{\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/adsense/v1.4/accounts/{accountId}/adclients/{adClientId}/customchannels/{customChannelId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['accountId', 'adClientId', 'customChannelId'],\n          pathParams: ['accountId', 'adClientId', 'customChannelId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/adsense/v1.4/accounts/{accountId}/adclients/{adClientId}/customchannels').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['accountId', 'adClientId'],\n          pathParams: ['accountId', 'adClientId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Accounts$Customchannels;\n  }();\n\n  adsense_v1_4.Resource$Accounts$Customchannels = Resource$Accounts$Customchannels;\n\n  var Resource$Accounts$Customchannels$Adunits = /*#__PURE__*/function () {\n    function Resource$Accounts$Customchannels$Adunits(context) {\n      _classCallCheck(this, Resource$Accounts$Customchannels$Adunits);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Accounts$Customchannels$Adunits, [{\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/adsense/v1.4/accounts/{accountId}/adclients/{adClientId}/customchannels/{customChannelId}/adunits').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['accountId', 'adClientId', 'customChannelId'],\n          pathParams: ['accountId', 'adClientId', 'customChannelId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Accounts$Customchannels$Adunits;\n  }();\n\n  adsense_v1_4.Resource$Accounts$Customchannels$Adunits = Resource$Accounts$Customchannels$Adunits;\n\n  var Resource$Accounts$Payments = /*#__PURE__*/function () {\n    function Resource$Accounts$Payments(context) {\n      _classCallCheck(this, Resource$Accounts$Payments);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Accounts$Payments, [{\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/adsense/v1.4/accounts/{accountId}/payments').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['accountId'],\n          pathParams: ['accountId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Accounts$Payments;\n  }();\n\n  adsense_v1_4.Resource$Accounts$Payments = Resource$Accounts$Payments;\n\n  var Resource$Accounts$Reports = /*#__PURE__*/function () {\n    function Resource$Accounts$Reports(context) {\n      _classCallCheck(this, Resource$Accounts$Reports);\n\n      this.context = context;\n      this.saved = new Resource$Accounts$Reports$Saved(this.context);\n    }\n\n    _createClass(Resource$Accounts$Reports, [{\n      key: \"generate\",\n      value: function generate(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/adsense/v1.4/accounts/{accountId}/reports').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['accountId', 'startDate', 'endDate'],\n          pathParams: ['accountId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Accounts$Reports;\n  }();\n\n  adsense_v1_4.Resource$Accounts$Reports = Resource$Accounts$Reports;\n\n  var Resource$Accounts$Reports$Saved = /*#__PURE__*/function () {\n    function Resource$Accounts$Reports$Saved(context) {\n      _classCallCheck(this, Resource$Accounts$Reports$Saved);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Accounts$Reports$Saved, [{\n      key: \"generate\",\n      value: function generate(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/adsense/v1.4/accounts/{accountId}/reports/{savedReportId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['accountId', 'savedReportId'],\n          pathParams: ['accountId', 'savedReportId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/adsense/v1.4/accounts/{accountId}/reports/saved').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['accountId'],\n          pathParams: ['accountId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Accounts$Reports$Saved;\n  }();\n\n  adsense_v1_4.Resource$Accounts$Reports$Saved = Resource$Accounts$Reports$Saved;\n\n  var Resource$Accounts$Savedadstyles = /*#__PURE__*/function () {\n    function Resource$Accounts$Savedadstyles(context) {\n      _classCallCheck(this, Resource$Accounts$Savedadstyles);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Accounts$Savedadstyles, [{\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/adsense/v1.4/accounts/{accountId}/savedadstyles/{savedAdStyleId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['accountId', 'savedAdStyleId'],\n          pathParams: ['accountId', 'savedAdStyleId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/adsense/v1.4/accounts/{accountId}/savedadstyles').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['accountId'],\n          pathParams: ['accountId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Accounts$Savedadstyles;\n  }();\n\n  adsense_v1_4.Resource$Accounts$Savedadstyles = Resource$Accounts$Savedadstyles;\n\n  var Resource$Accounts$Urlchannels = /*#__PURE__*/function () {\n    function Resource$Accounts$Urlchannels(context) {\n      _classCallCheck(this, Resource$Accounts$Urlchannels);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Accounts$Urlchannels, [{\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/adsense/v1.4/accounts/{accountId}/adclients/{adClientId}/urlchannels').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['accountId', 'adClientId'],\n          pathParams: ['accountId', 'adClientId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Accounts$Urlchannels;\n  }();\n\n  adsense_v1_4.Resource$Accounts$Urlchannels = Resource$Accounts$Urlchannels;\n\n  var Resource$Adclients = /*#__PURE__*/function () {\n    function Resource$Adclients(context) {\n      _classCallCheck(this, Resource$Adclients);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Adclients, [{\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/adsense/v1.4/adclients').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: [],\n          pathParams: [],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Adclients;\n  }();\n\n  adsense_v1_4.Resource$Adclients = Resource$Adclients;\n\n  var Resource$Adunits = /*#__PURE__*/function () {\n    function Resource$Adunits(context) {\n      _classCallCheck(this, Resource$Adunits);\n\n      this.context = context;\n      this.customchannels = new Resource$Adunits$Customchannels(this.context);\n    }\n\n    _createClass(Resource$Adunits, [{\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/adsense/v1.4/adclients/{adClientId}/adunits/{adUnitId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['adClientId', 'adUnitId'],\n          pathParams: ['adClientId', 'adUnitId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"getAdCode\",\n      value: function getAdCode(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/adsense/v1.4/adclients/{adClientId}/adunits/{adUnitId}/adcode').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['adClientId', 'adUnitId'],\n          pathParams: ['adClientId', 'adUnitId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/adsense/v1.4/adclients/{adClientId}/adunits').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['adClientId'],\n          pathParams: ['adClientId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Adunits;\n  }();\n\n  adsense_v1_4.Resource$Adunits = Resource$Adunits;\n\n  var Resource$Adunits$Customchannels = /*#__PURE__*/function () {\n    function Resource$Adunits$Customchannels(context) {\n      _classCallCheck(this, Resource$Adunits$Customchannels);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Adunits$Customchannels, [{\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/adsense/v1.4/adclients/{adClientId}/adunits/{adUnitId}/customchannels').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['adClientId', 'adUnitId'],\n          pathParams: ['adClientId', 'adUnitId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Adunits$Customchannels;\n  }();\n\n  adsense_v1_4.Resource$Adunits$Customchannels = Resource$Adunits$Customchannels;\n\n  var Resource$Alerts = /*#__PURE__*/function () {\n    function Resource$Alerts(context) {\n      _classCallCheck(this, Resource$Alerts);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Alerts, [{\n      key: \"delete\",\n      value: function _delete(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/adsense/v1.4/alerts/{alertId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'DELETE'\n          }, options),\n          params,\n          requiredParams: ['alertId'],\n          pathParams: ['alertId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/adsense/v1.4/alerts').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: [],\n          pathParams: [],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Alerts;\n  }();\n\n  adsense_v1_4.Resource$Alerts = Resource$Alerts;\n\n  var Resource$Customchannels = /*#__PURE__*/function () {\n    function Resource$Customchannels(context) {\n      _classCallCheck(this, Resource$Customchannels);\n\n      this.context = context;\n      this.adunits = new Resource$Customchannels$Adunits(this.context);\n    }\n\n    _createClass(Resource$Customchannels, [{\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/adsense/v1.4/adclients/{adClientId}/customchannels/{customChannelId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['adClientId', 'customChannelId'],\n          pathParams: ['adClientId', 'customChannelId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/adsense/v1.4/adclients/{adClientId}/customchannels').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['adClientId'],\n          pathParams: ['adClientId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Customchannels;\n  }();\n\n  adsense_v1_4.Resource$Customchannels = Resource$Customchannels;\n\n  var Resource$Customchannels$Adunits = /*#__PURE__*/function () {\n    function Resource$Customchannels$Adunits(context) {\n      _classCallCheck(this, Resource$Customchannels$Adunits);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Customchannels$Adunits, [{\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/adsense/v1.4/adclients/{adClientId}/customchannels/{customChannelId}/adunits').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['adClientId', 'customChannelId'],\n          pathParams: ['adClientId', 'customChannelId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Customchannels$Adunits;\n  }();\n\n  adsense_v1_4.Resource$Customchannels$Adunits = Resource$Customchannels$Adunits;\n\n  var Resource$Metadata = function Resource$Metadata(context) {\n    _classCallCheck(this, Resource$Metadata);\n\n    this.context = context;\n    this.dimensions = new Resource$Metadata$Dimensions(this.context);\n    this.metrics = new Resource$Metadata$Metrics(this.context);\n  };\n\n  adsense_v1_4.Resource$Metadata = Resource$Metadata;\n\n  var Resource$Metadata$Dimensions = /*#__PURE__*/function () {\n    function Resource$Metadata$Dimensions(context) {\n      _classCallCheck(this, Resource$Metadata$Dimensions);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Metadata$Dimensions, [{\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/adsense/v1.4/metadata/dimensions').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: [],\n          pathParams: [],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Metadata$Dimensions;\n  }();\n\n  adsense_v1_4.Resource$Metadata$Dimensions = Resource$Metadata$Dimensions;\n\n  var Resource$Metadata$Metrics = /*#__PURE__*/function () {\n    function Resource$Metadata$Metrics(context) {\n      _classCallCheck(this, Resource$Metadata$Metrics);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Metadata$Metrics, [{\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/adsense/v1.4/metadata/metrics').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: [],\n          pathParams: [],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Metadata$Metrics;\n  }();\n\n  adsense_v1_4.Resource$Metadata$Metrics = Resource$Metadata$Metrics;\n\n  var Resource$Payments = /*#__PURE__*/function () {\n    function Resource$Payments(context) {\n      _classCallCheck(this, Resource$Payments);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Payments, [{\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/adsense/v1.4/payments').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: [],\n          pathParams: [],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Payments;\n  }();\n\n  adsense_v1_4.Resource$Payments = Resource$Payments;\n\n  var Resource$Reports = /*#__PURE__*/function () {\n    function Resource$Reports(context) {\n      _classCallCheck(this, Resource$Reports);\n\n      this.context = context;\n      this.saved = new Resource$Reports$Saved(this.context);\n    }\n\n    _createClass(Resource$Reports, [{\n      key: \"generate\",\n      value: function generate(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/adsense/v1.4/reports').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['startDate', 'endDate'],\n          pathParams: [],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Reports;\n  }();\n\n  adsense_v1_4.Resource$Reports = Resource$Reports;\n\n  var Resource$Reports$Saved = /*#__PURE__*/function () {\n    function Resource$Reports$Saved(context) {\n      _classCallCheck(this, Resource$Reports$Saved);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Reports$Saved, [{\n      key: \"generate\",\n      value: function generate(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/adsense/v1.4/reports/{savedReportId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['savedReportId'],\n          pathParams: ['savedReportId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/adsense/v1.4/reports/saved').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: [],\n          pathParams: [],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Reports$Saved;\n  }();\n\n  adsense_v1_4.Resource$Reports$Saved = Resource$Reports$Saved;\n\n  var Resource$Savedadstyles = /*#__PURE__*/function () {\n    function Resource$Savedadstyles(context) {\n      _classCallCheck(this, Resource$Savedadstyles);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Savedadstyles, [{\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/adsense/v1.4/savedadstyles/{savedAdStyleId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['savedAdStyleId'],\n          pathParams: ['savedAdStyleId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/adsense/v1.4/savedadstyles').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: [],\n          pathParams: [],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Savedadstyles;\n  }();\n\n  adsense_v1_4.Resource$Savedadstyles = Resource$Savedadstyles;\n\n  var Resource$Urlchannels = /*#__PURE__*/function () {\n    function Resource$Urlchannels(context) {\n      _classCallCheck(this, Resource$Urlchannels);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Urlchannels, [{\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/adsense/v1.4/adclients/{adClientId}/urlchannels').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['adClientId'],\n          pathParams: ['adClientId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Urlchannels;\n  }();\n\n  adsense_v1_4.Resource$Urlchannels = Resource$Urlchannels;\n})(adsense_v1_4 = exports.adsense_v1_4 || (exports.adsense_v1_4 = {}));","map":{"version":3,"sources":["/Users/amandapoetker-alles/Desktop/campaign-dashboard/node_modules/googleapis/build/src/apis/adsense/v1.4.js"],"names":["Object","defineProperty","exports","value","googleapis_common_1","require","adsense_v1_4","Adsense","options","google","context","_options","accounts","Resource$Accounts","adclients","Resource$Adclients","adunits","Resource$Adunits","alerts","Resource$Alerts","customchannels","Resource$Customchannels","metadata","Resource$Metadata","payments","Resource$Payments","reports","Resource$Reports","savedadstyles","Resource$Savedadstyles","urlchannels","Resource$Urlchannels","Resource$Accounts$Adclients","Resource$Accounts$Adunits","Resource$Accounts$Alerts","Resource$Accounts$Customchannels","Resource$Accounts$Payments","Resource$Accounts$Reports","Resource$Accounts$Savedadstyles","Resource$Accounts$Urlchannels","paramsOrCallback","optionsOrCallback","callback","params","rootUrl","parameters","assign","url","replace","method","requiredParams","pathParams","createAPIRequest","Resource$Accounts$Adunits$Customchannels","Resource$Accounts$Customchannels$Adunits","saved","Resource$Accounts$Reports$Saved","Resource$Adunits$Customchannels","Resource$Customchannels$Adunits","dimensions","Resource$Metadata$Dimensions","metrics","Resource$Metadata$Metrics","Resource$Reports$Saved"],"mappings":"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","sourcesContent":["\"use strict\";\n/**\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst googleapis_common_1 = require(\"googleapis-common\");\n// tslint:disable: no-any\n// tslint:disable: class-name\n// tslint:disable: variable-name\n// tslint:disable: jsdoc-format\n// tslint:disable: no-namespace\nvar adsense_v1_4;\n(function (adsense_v1_4) {\n    /**\n     * AdSense Management API\n     *\n     * Accesses AdSense publishers&#39; inventory and generates performance\n     * reports.\n     *\n     * @example\n     * const {google} = require('googleapis');\n     * const adsense = google.adsense('v1.4');\n     *\n     * @namespace adsense\n     * @type {Function}\n     * @version v1.4\n     * @variation v1.4\n     * @param {object=} options Options for Adsense\n     */\n    class Adsense {\n        constructor(options, google) {\n            this.context = { _options: options || {}, google };\n            this.accounts = new Resource$Accounts(this.context);\n            this.adclients = new Resource$Adclients(this.context);\n            this.adunits = new Resource$Adunits(this.context);\n            this.alerts = new Resource$Alerts(this.context);\n            this.customchannels = new Resource$Customchannels(this.context);\n            this.metadata = new Resource$Metadata(this.context);\n            this.payments = new Resource$Payments(this.context);\n            this.reports = new Resource$Reports(this.context);\n            this.savedadstyles = new Resource$Savedadstyles(this.context);\n            this.urlchannels = new Resource$Urlchannels(this.context);\n        }\n    }\n    adsense_v1_4.Adsense = Adsense;\n    class Resource$Accounts {\n        constructor(context) {\n            this.context = context;\n            this.adclients = new Resource$Accounts$Adclients(this.context);\n            this.adunits = new Resource$Accounts$Adunits(this.context);\n            this.alerts = new Resource$Accounts$Alerts(this.context);\n            this.customchannels = new Resource$Accounts$Customchannels(this.context);\n            this.payments = new Resource$Accounts$Payments(this.context);\n            this.reports = new Resource$Accounts$Reports(this.context);\n            this.savedadstyles = new Resource$Accounts$Savedadstyles(this.context);\n            this.urlchannels = new Resource$Accounts$Urlchannels(this.context);\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/adsense/v1.4/accounts/{accountId}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['accountId'],\n                pathParams: ['accountId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/adsense/v1.4/accounts')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: [],\n                pathParams: [],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    adsense_v1_4.Resource$Accounts = Resource$Accounts;\n    class Resource$Accounts$Adclients {\n        constructor(context) {\n            this.context = context;\n        }\n        getAdCode(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/adsense/v1.4/accounts/{accountId}/adclients/{adClientId}/adcode')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['accountId', 'adClientId'],\n                pathParams: ['accountId', 'adClientId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/adsense/v1.4/accounts/{accountId}/adclients')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['accountId'],\n                pathParams: ['accountId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    adsense_v1_4.Resource$Accounts$Adclients = Resource$Accounts$Adclients;\n    class Resource$Accounts$Adunits {\n        constructor(context) {\n            this.context = context;\n            this.customchannels =\n                new Resource$Accounts$Adunits$Customchannels(this.context);\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/adsense/v1.4/accounts/{accountId}/adclients/{adClientId}/adunits/{adUnitId}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['accountId', 'adClientId', 'adUnitId'],\n                pathParams: ['accountId', 'adClientId', 'adUnitId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        getAdCode(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/adsense/v1.4/accounts/{accountId}/adclients/{adClientId}/adunits/{adUnitId}/adcode')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['accountId', 'adClientId', 'adUnitId'],\n                pathParams: ['accountId', 'adClientId', 'adUnitId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/adsense/v1.4/accounts/{accountId}/adclients/{adClientId}/adunits')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['accountId', 'adClientId'],\n                pathParams: ['accountId', 'adClientId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    adsense_v1_4.Resource$Accounts$Adunits = Resource$Accounts$Adunits;\n    class Resource$Accounts$Adunits$Customchannels {\n        constructor(context) {\n            this.context = context;\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/adsense/v1.4/accounts/{accountId}/adclients/{adClientId}/adunits/{adUnitId}/customchannels')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['accountId', 'adClientId', 'adUnitId'],\n                pathParams: ['accountId', 'adClientId', 'adUnitId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    adsense_v1_4.Resource$Accounts$Adunits$Customchannels = Resource$Accounts$Adunits$Customchannels;\n    class Resource$Accounts$Alerts {\n        constructor(context) {\n            this.context = context;\n        }\n        delete(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/adsense/v1.4/accounts/{accountId}/alerts/{alertId}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'DELETE'\n                }, options),\n                params,\n                requiredParams: ['accountId', 'alertId'],\n                pathParams: ['accountId', 'alertId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/adsense/v1.4/accounts/{accountId}/alerts')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['accountId'],\n                pathParams: ['accountId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    adsense_v1_4.Resource$Accounts$Alerts = Resource$Accounts$Alerts;\n    class Resource$Accounts$Customchannels {\n        constructor(context) {\n            this.context = context;\n            this.adunits = new Resource$Accounts$Customchannels$Adunits(this.context);\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/adsense/v1.4/accounts/{accountId}/adclients/{adClientId}/customchannels/{customChannelId}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['accountId', 'adClientId', 'customChannelId'],\n                pathParams: ['accountId', 'adClientId', 'customChannelId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/adsense/v1.4/accounts/{accountId}/adclients/{adClientId}/customchannels')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['accountId', 'adClientId'],\n                pathParams: ['accountId', 'adClientId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    adsense_v1_4.Resource$Accounts$Customchannels = Resource$Accounts$Customchannels;\n    class Resource$Accounts$Customchannels$Adunits {\n        constructor(context) {\n            this.context = context;\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/adsense/v1.4/accounts/{accountId}/adclients/{adClientId}/customchannels/{customChannelId}/adunits')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['accountId', 'adClientId', 'customChannelId'],\n                pathParams: ['accountId', 'adClientId', 'customChannelId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    adsense_v1_4.Resource$Accounts$Customchannels$Adunits = Resource$Accounts$Customchannels$Adunits;\n    class Resource$Accounts$Payments {\n        constructor(context) {\n            this.context = context;\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/adsense/v1.4/accounts/{accountId}/payments')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['accountId'],\n                pathParams: ['accountId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    adsense_v1_4.Resource$Accounts$Payments = Resource$Accounts$Payments;\n    class Resource$Accounts$Reports {\n        constructor(context) {\n            this.context = context;\n            this.saved = new Resource$Accounts$Reports$Saved(this.context);\n        }\n        generate(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/adsense/v1.4/accounts/{accountId}/reports')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['accountId', 'startDate', 'endDate'],\n                pathParams: ['accountId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    adsense_v1_4.Resource$Accounts$Reports = Resource$Accounts$Reports;\n    class Resource$Accounts$Reports$Saved {\n        constructor(context) {\n            this.context = context;\n        }\n        generate(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/adsense/v1.4/accounts/{accountId}/reports/{savedReportId}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['accountId', 'savedReportId'],\n                pathParams: ['accountId', 'savedReportId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/adsense/v1.4/accounts/{accountId}/reports/saved')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['accountId'],\n                pathParams: ['accountId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    adsense_v1_4.Resource$Accounts$Reports$Saved = Resource$Accounts$Reports$Saved;\n    class Resource$Accounts$Savedadstyles {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/adsense/v1.4/accounts/{accountId}/savedadstyles/{savedAdStyleId}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['accountId', 'savedAdStyleId'],\n                pathParams: ['accountId', 'savedAdStyleId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/adsense/v1.4/accounts/{accountId}/savedadstyles')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['accountId'],\n                pathParams: ['accountId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    adsense_v1_4.Resource$Accounts$Savedadstyles = Resource$Accounts$Savedadstyles;\n    class Resource$Accounts$Urlchannels {\n        constructor(context) {\n            this.context = context;\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/adsense/v1.4/accounts/{accountId}/adclients/{adClientId}/urlchannels')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['accountId', 'adClientId'],\n                pathParams: ['accountId', 'adClientId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    adsense_v1_4.Resource$Accounts$Urlchannels = Resource$Accounts$Urlchannels;\n    class Resource$Adclients {\n        constructor(context) {\n            this.context = context;\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/adsense/v1.4/adclients')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: [],\n                pathParams: [],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    adsense_v1_4.Resource$Adclients = Resource$Adclients;\n    class Resource$Adunits {\n        constructor(context) {\n            this.context = context;\n            this.customchannels = new Resource$Adunits$Customchannels(this.context);\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/adsense/v1.4/adclients/{adClientId}/adunits/{adUnitId}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['adClientId', 'adUnitId'],\n                pathParams: ['adClientId', 'adUnitId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        getAdCode(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/adsense/v1.4/adclients/{adClientId}/adunits/{adUnitId}/adcode')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['adClientId', 'adUnitId'],\n                pathParams: ['adClientId', 'adUnitId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/adsense/v1.4/adclients/{adClientId}/adunits')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['adClientId'],\n                pathParams: ['adClientId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    adsense_v1_4.Resource$Adunits = Resource$Adunits;\n    class Resource$Adunits$Customchannels {\n        constructor(context) {\n            this.context = context;\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/adsense/v1.4/adclients/{adClientId}/adunits/{adUnitId}/customchannels')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['adClientId', 'adUnitId'],\n                pathParams: ['adClientId', 'adUnitId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    adsense_v1_4.Resource$Adunits$Customchannels = Resource$Adunits$Customchannels;\n    class Resource$Alerts {\n        constructor(context) {\n            this.context = context;\n        }\n        delete(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/adsense/v1.4/alerts/{alertId}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'DELETE'\n                }, options),\n                params,\n                requiredParams: ['alertId'],\n                pathParams: ['alertId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/adsense/v1.4/alerts')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: [],\n                pathParams: [],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    adsense_v1_4.Resource$Alerts = Resource$Alerts;\n    class Resource$Customchannels {\n        constructor(context) {\n            this.context = context;\n            this.adunits = new Resource$Customchannels$Adunits(this.context);\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/adsense/v1.4/adclients/{adClientId}/customchannels/{customChannelId}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['adClientId', 'customChannelId'],\n                pathParams: ['adClientId', 'customChannelId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/adsense/v1.4/adclients/{adClientId}/customchannels')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['adClientId'],\n                pathParams: ['adClientId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    adsense_v1_4.Resource$Customchannels = Resource$Customchannels;\n    class Resource$Customchannels$Adunits {\n        constructor(context) {\n            this.context = context;\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/adsense/v1.4/adclients/{adClientId}/customchannels/{customChannelId}/adunits')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['adClientId', 'customChannelId'],\n                pathParams: ['adClientId', 'customChannelId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    adsense_v1_4.Resource$Customchannels$Adunits = Resource$Customchannels$Adunits;\n    class Resource$Metadata {\n        constructor(context) {\n            this.context = context;\n            this.dimensions = new Resource$Metadata$Dimensions(this.context);\n            this.metrics = new Resource$Metadata$Metrics(this.context);\n        }\n    }\n    adsense_v1_4.Resource$Metadata = Resource$Metadata;\n    class Resource$Metadata$Dimensions {\n        constructor(context) {\n            this.context = context;\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/adsense/v1.4/metadata/dimensions')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: [],\n                pathParams: [],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    adsense_v1_4.Resource$Metadata$Dimensions = Resource$Metadata$Dimensions;\n    class Resource$Metadata$Metrics {\n        constructor(context) {\n            this.context = context;\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/adsense/v1.4/metadata/metrics')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: [],\n                pathParams: [],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    adsense_v1_4.Resource$Metadata$Metrics = Resource$Metadata$Metrics;\n    class Resource$Payments {\n        constructor(context) {\n            this.context = context;\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/adsense/v1.4/payments')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: [],\n                pathParams: [],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    adsense_v1_4.Resource$Payments = Resource$Payments;\n    class Resource$Reports {\n        constructor(context) {\n            this.context = context;\n            this.saved = new Resource$Reports$Saved(this.context);\n        }\n        generate(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/adsense/v1.4/reports')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['startDate', 'endDate'],\n                pathParams: [],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    adsense_v1_4.Resource$Reports = Resource$Reports;\n    class Resource$Reports$Saved {\n        constructor(context) {\n            this.context = context;\n        }\n        generate(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/adsense/v1.4/reports/{savedReportId}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['savedReportId'],\n                pathParams: ['savedReportId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/adsense/v1.4/reports/saved')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: [],\n                pathParams: [],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    adsense_v1_4.Resource$Reports$Saved = Resource$Reports$Saved;\n    class Resource$Savedadstyles {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/adsense/v1.4/savedadstyles/{savedAdStyleId}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['savedAdStyleId'],\n                pathParams: ['savedAdStyleId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/adsense/v1.4/savedadstyles')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: [],\n                pathParams: [],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    adsense_v1_4.Resource$Savedadstyles = Resource$Savedadstyles;\n    class Resource$Urlchannels {\n        constructor(context) {\n            this.context = context;\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/adsense/v1.4/adclients/{adClientId}/urlchannels')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['adClientId'],\n                pathParams: ['adClientId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    adsense_v1_4.Resource$Urlchannels = Resource$Urlchannels;\n})(adsense_v1_4 = exports.adsense_v1_4 || (exports.adsense_v1_4 = {}));\n//# sourceMappingURL=v1.4.js.map"]},"metadata":{},"sourceType":"script"}