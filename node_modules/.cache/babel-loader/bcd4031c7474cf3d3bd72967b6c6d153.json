{"ast":null,"code":"\"use strict\"; // Copyright 2020 Google LLC\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//    http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nvar _createForOfIteratorHelper = require(\"/Users/amandapoetker-alles/Desktop/campaign-dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createForOfIteratorHelper\");\n\nvar _regeneratorRuntime = require(\"/Users/amandapoetker-alles/Desktop/campaign-dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _asyncToGenerator = require(\"/Users/amandapoetker-alles/Desktop/campaign-dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\nvar _classCallCheck = require(\"/Users/amandapoetker-alles/Desktop/campaign-dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/amandapoetker-alles/Desktop/campaign-dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Discovery = void 0;\n\nvar fs = require(\"fs\");\n\nvar google_auth_library_1 = require(\"google-auth-library\");\n\nvar resolve = require(\"url\");\n\nvar util = require(\"util\");\n\nvar apirequest_1 = require(\"./apirequest\");\n\nvar endpoint_1 = require(\"./endpoint\");\n\nvar readFile = util.promisify(fs.readFile);\n\nvar Discovery = /*#__PURE__*/function () {\n  /**\n   * Discovery for discovering API endpoints\n   *\n   * @param options Options for discovery\n   */\n  function Discovery(options) {\n    _classCallCheck(this, Discovery);\n\n    this.transporter = new google_auth_library_1.DefaultTransporter();\n    this.options = options || {};\n  }\n  /**\n   * Generate and Endpoint from an endpoint schema object.\n   *\n   * @param schema The schema from which to generate the Endpoint.\n   * @return A function that creates an endpoint.\n   */\n\n\n  _createClass(Discovery, [{\n    key: \"makeEndpoint\",\n    value: function makeEndpoint(schema) {\n      return function (options) {\n        var ep = new endpoint_1.Endpoint(options);\n        ep.applySchema(ep, schema, schema, ep);\n        return ep;\n      };\n    }\n    /**\n     * Log output of generator. Works just like console.log\n     */\n\n  }, {\n    key: \"log\",\n    value: function log() {\n      if (this.options && this.options.debug) {\n        var _console;\n\n        (_console = console).log.apply(_console, arguments);\n      }\n    }\n    /**\n     * Generate all APIs and return as in-memory object.\n     * @param discoveryUrl\n     */\n\n  }, {\n    key: \"discoverAllAPIs\",\n    value: function () {\n      var _discoverAllAPIs = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(discoveryUrl) {\n        var _this = this;\n\n        var headers, res, items, apis, versionIndex, apisIndex, _iterator, _step, _loop;\n\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                headers = this.options.includePrivate ? {} : {\n                  'X-User-Ip': '0.0.0.0'\n                };\n                _context2.next = 3;\n                return this.transporter.request({\n                  url: discoveryUrl,\n                  headers\n                });\n\n              case 3:\n                res = _context2.sent;\n                items = res.data.items;\n                _context2.next = 7;\n                return Promise.all(items.map( /*#__PURE__*/function () {\n                  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(api) {\n                    var endpointCreator;\n                    return _regeneratorRuntime.wrap(function _callee$(_context) {\n                      while (1) {\n                        switch (_context.prev = _context.next) {\n                          case 0:\n                            _context.next = 2;\n                            return _this.discoverAPI(api.discoveryRestUrl);\n\n                          case 2:\n                            endpointCreator = _context.sent;\n                            return _context.abrupt(\"return\", {\n                              api,\n                              endpointCreator\n                            });\n\n                          case 4:\n                          case \"end\":\n                            return _context.stop();\n                        }\n                      }\n                    }, _callee);\n                  }));\n\n                  return function (_x2) {\n                    return _ref.apply(this, arguments);\n                  };\n                }()));\n\n              case 7:\n                apis = _context2.sent;\n                versionIndex = {}; // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n                apisIndex = {};\n                _iterator = _createForOfIteratorHelper(apis);\n\n                try {\n                  _loop = function _loop() {\n                    var set = _step.value;\n\n                    if (!apisIndex[set.api.name]) {\n                      versionIndex[set.api.name] = {};\n\n                      apisIndex[set.api.name] = function (options) {\n                        var type = typeof options;\n                        var version;\n\n                        if (type === 'string') {\n                          version = options;\n                          options = {};\n                        } else if (type === 'object') {\n                          version = options.version;\n                          delete options.version;\n                        } else {\n                          throw new Error('Argument error: Accepts only string or object');\n                        }\n\n                        try {\n                          var ep = set.endpointCreator(options, _this);\n                          return Object.freeze(ep); // create new & freeze\n                        } catch (e) {\n                          throw new Error(util.format('Unable to load endpoint %s(\"%s\"): %s', set.api.name, version, e.message));\n                        }\n                      };\n                    }\n\n                    versionIndex[set.api.name][set.api.version] = set.endpointCreator;\n                  };\n\n                  for (_iterator.s(); !(_step = _iterator.n()).done;) {\n                    _loop();\n                  }\n                } catch (err) {\n                  _iterator.e(err);\n                } finally {\n                  _iterator.f();\n                }\n\n                return _context2.abrupt(\"return\", apisIndex);\n\n              case 13:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function discoverAllAPIs(_x) {\n        return _discoverAllAPIs.apply(this, arguments);\n      }\n\n      return discoverAllAPIs;\n    }()\n    /**\n     * Generate API file given discovery URL\n     *\n     * @param apiDiscoveryUrl URL or filename of discovery doc for API\n     * @returns A promise that resolves with a function that creates the endpoint\n     */\n\n  }, {\n    key: \"discoverAPI\",\n    value: function () {\n      var _discoverAPI = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(apiDiscoveryUrl) {\n        var parts, file, res, options, url, parameters, _res;\n\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                if (!(typeof apiDiscoveryUrl === 'string')) {\n                  _context3.next = 17;\n                  break;\n                }\n\n                parts = resolve.parse(apiDiscoveryUrl);\n\n                if (!(apiDiscoveryUrl && !parts.protocol)) {\n                  _context3.next = 10;\n                  break;\n                }\n\n                this.log('Reading from file ' + apiDiscoveryUrl);\n                _context3.next = 6;\n                return readFile(apiDiscoveryUrl, {\n                  encoding: 'utf8'\n                });\n\n              case 6:\n                file = _context3.sent;\n                return _context3.abrupt(\"return\", this.makeEndpoint(JSON.parse(file)));\n\n              case 10:\n                this.log('Requesting ' + apiDiscoveryUrl);\n                _context3.next = 13;\n                return this.transporter.request({\n                  url: apiDiscoveryUrl\n                });\n\n              case 13:\n                res = _context3.sent;\n                return _context3.abrupt(\"return\", this.makeEndpoint(res.data));\n\n              case 15:\n                _context3.next = 26;\n                break;\n\n              case 17:\n                options = apiDiscoveryUrl;\n                this.log('Requesting ' + options.url);\n                url = options.url;\n                delete options.url;\n                parameters = {\n                  options: {\n                    url,\n                    method: 'GET'\n                  },\n                  requiredParams: [],\n                  pathParams: [],\n                  params: options,\n                  context: {\n                    google: {\n                      _options: {}\n                    },\n                    _options: {}\n                  }\n                };\n                _context3.next = 24;\n                return apirequest_1.createAPIRequest(parameters);\n\n              case 24:\n                _res = _context3.sent;\n                return _context3.abrupt(\"return\", this.makeEndpoint(_res.data));\n\n              case 26:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function discoverAPI(_x3) {\n        return _discoverAPI.apply(this, arguments);\n      }\n\n      return discoverAPI;\n    }()\n  }]);\n\n  return Discovery;\n}();\n\nexports.Discovery = Discovery;","map":{"version":3,"sources":["/Users/amandapoetker-alles/Desktop/campaign-dashboard/node_modules/googleapis-common/build/src/discovery.js"],"names":["Object","defineProperty","exports","value","Discovery","fs","require","google_auth_library_1","resolve","util","apirequest_1","endpoint_1","readFile","promisify","options","transporter","DefaultTransporter","schema","ep","Endpoint","applySchema","debug","console","log","discoveryUrl","headers","includePrivate","request","url","res","items","data","Promise","all","map","api","discoverAPI","discoveryRestUrl","endpointCreator","apis","versionIndex","apisIndex","set","name","type","version","Error","freeze","e","format","message","apiDiscoveryUrl","parts","parse","protocol","encoding","file","makeEndpoint","JSON","parameters","method","requiredParams","pathParams","params","context","google","_options","createAPIRequest"],"mappings":"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","sourcesContent":["\"use strict\";\n// Copyright 2020 Google LLC\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//    http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Discovery = void 0;\nconst fs = require(\"fs\");\nconst google_auth_library_1 = require(\"google-auth-library\");\nconst resolve = require(\"url\");\nconst util = require(\"util\");\nconst apirequest_1 = require(\"./apirequest\");\nconst endpoint_1 = require(\"./endpoint\");\nconst readFile = util.promisify(fs.readFile);\nclass Discovery {\n    /**\n     * Discovery for discovering API endpoints\n     *\n     * @param options Options for discovery\n     */\n    constructor(options) {\n        this.transporter = new google_auth_library_1.DefaultTransporter();\n        this.options = options || {};\n    }\n    /**\n     * Generate and Endpoint from an endpoint schema object.\n     *\n     * @param schema The schema from which to generate the Endpoint.\n     * @return A function that creates an endpoint.\n     */\n    makeEndpoint(schema) {\n        return (options) => {\n            const ep = new endpoint_1.Endpoint(options);\n            ep.applySchema(ep, schema, schema, ep);\n            return ep;\n        };\n    }\n    /**\n     * Log output of generator. Works just like console.log\n     */\n    log(...args) {\n        if (this.options && this.options.debug) {\n            console.log(...args);\n        }\n    }\n    /**\n     * Generate all APIs and return as in-memory object.\n     * @param discoveryUrl\n     */\n    async discoverAllAPIs(discoveryUrl) {\n        const headers = this.options.includePrivate\n            ? {}\n            : { 'X-User-Ip': '0.0.0.0' };\n        const res = await this.transporter.request({\n            url: discoveryUrl,\n            headers,\n        });\n        const items = res.data.items;\n        const apis = await Promise.all(items.map(async (api) => {\n            const endpointCreator = await this.discoverAPI(api.discoveryRestUrl);\n            return { api, endpointCreator };\n        }));\n        const versionIndex = {};\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        const apisIndex = {};\n        for (const set of apis) {\n            if (!apisIndex[set.api.name]) {\n                versionIndex[set.api.name] = {};\n                apisIndex[set.api.name] = (options) => {\n                    const type = typeof options;\n                    let version;\n                    if (type === 'string') {\n                        version = options;\n                        options = {};\n                    }\n                    else if (type === 'object') {\n                        version = options.version;\n                        delete options.version;\n                    }\n                    else {\n                        throw new Error('Argument error: Accepts only string or object');\n                    }\n                    try {\n                        const ep = set.endpointCreator(options, this);\n                        return Object.freeze(ep); // create new & freeze\n                    }\n                    catch (e) {\n                        throw new Error(util.format('Unable to load endpoint %s(\"%s\"): %s', set.api.name, version, e.message));\n                    }\n                };\n            }\n            versionIndex[set.api.name][set.api.version] = set.endpointCreator;\n        }\n        return apisIndex;\n    }\n    /**\n     * Generate API file given discovery URL\n     *\n     * @param apiDiscoveryUrl URL or filename of discovery doc for API\n     * @returns A promise that resolves with a function that creates the endpoint\n     */\n    async discoverAPI(apiDiscoveryUrl) {\n        if (typeof apiDiscoveryUrl === 'string') {\n            const parts = resolve.parse(apiDiscoveryUrl);\n            if (apiDiscoveryUrl && !parts.protocol) {\n                this.log('Reading from file ' + apiDiscoveryUrl);\n                const file = await readFile(apiDiscoveryUrl, { encoding: 'utf8' });\n                return this.makeEndpoint(JSON.parse(file));\n            }\n            else {\n                this.log('Requesting ' + apiDiscoveryUrl);\n                const res = await this.transporter.request({\n                    url: apiDiscoveryUrl,\n                });\n                return this.makeEndpoint(res.data);\n            }\n        }\n        else {\n            const options = apiDiscoveryUrl;\n            this.log('Requesting ' + options.url);\n            const url = options.url;\n            delete options.url;\n            const parameters = {\n                options: { url, method: 'GET' },\n                requiredParams: [],\n                pathParams: [],\n                params: options,\n                context: { google: { _options: {} }, _options: {} },\n            };\n            const res = await apirequest_1.createAPIRequest(parameters);\n            return this.makeEndpoint(res.data);\n        }\n    }\n}\nexports.Discovery = Discovery;\n//# sourceMappingURL=discovery.js.map"]},"metadata":{},"sourceType":"script"}