{"ast":null,"code":"import _toConsumableArray from \"/Users/amandapoetker-alles/Desktop/campaign-dashboard/Campaign-Planner/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport { deepmerge } from '@material-ui/utils';\nimport getThemeValue from './getThemeValue';\nimport { handleBreakpoints, mergeBreakpointsInOrder } from './breakpoints';\nimport borders from './borders';\nimport display from './display';\nimport flexbox from './flexbox';\nimport grid from './grid';\nimport positions from './positions';\nimport palette from './palette';\nimport shadows from './shadows';\nimport sizing from './sizing';\nimport spacing from './spacing';\nimport typography from './typography';\nvar filterProps = [].concat(_toConsumableArray(borders.filterProps), _toConsumableArray(display.filterProps), _toConsumableArray(flexbox.filterProps), _toConsumableArray(grid.filterProps), _toConsumableArray(positions.filterProps), _toConsumableArray(palette.filterProps), _toConsumableArray(shadows.filterProps), _toConsumableArray(sizing.filterProps), _toConsumableArray(spacing.filterProps), _toConsumableArray(typography.filterProps), ['sx']);\n\nfunction objectsHaveSameKeys() {\n  for (var _len = arguments.length, objects = new Array(_len), _key = 0; _key < _len; _key++) {\n    objects[_key] = arguments[_key];\n  }\n\n  var allKeys = objects.reduce(function (keys, object) {\n    return keys.concat(Object.keys(object));\n  }, []);\n  var union = new Set(allKeys);\n  return objects.every(function (object) {\n    return union.size === Object.keys(object).length;\n  });\n}\n\nfunction styleFunctionSx(props) {\n  var _ref = props || {},\n      styles = _ref.sx,\n      theme = _ref.theme;\n\n  if (!styles) return null;\n\n  if (typeof styles === 'function') {\n    return styles(theme);\n  }\n\n  if (typeof styles !== 'object') {\n    // value\n    return styles;\n  }\n\n  var css = {};\n  Object.keys(styles).forEach(function (styleKey) {\n    if (typeof styles[styleKey] === 'object') {\n      if (filterProps.indexOf(styleKey) !== -1) {\n        css = deepmerge(css, getThemeValue(styleKey, styles[styleKey], theme));\n      } else {\n        var breakpointsValues = handleBreakpoints({\n          theme\n        }, styles[styleKey], function (x) {\n          return {\n            [styleKey]: x\n          };\n        });\n\n        if (objectsHaveSameKeys(breakpointsValues, styles[styleKey])) {\n          var transformedValue = styleFunctionSx({\n            sx: styles[styleKey],\n            theme\n          });\n          css[styleKey] = transformedValue;\n        } else {\n          css = deepmerge(css, breakpointsValues);\n        }\n      }\n    } else if (typeof styles[styleKey] === 'function') {\n      css = deepmerge(css, {\n        [styleKey]: styles[styleKey](theme)\n      });\n    } else {\n      css = deepmerge(css, getThemeValue(styleKey, styles[styleKey], theme));\n    }\n  });\n  return mergeBreakpointsInOrder(theme.breakpoints, css);\n}\n\nstyleFunctionSx.filterProps = ['sx'];\nexport default styleFunctionSx;","map":{"version":3,"sources":["/Users/amandapoetker-alles/Desktop/campaign-dashboard/Campaign-Planner/node_modules/@material-ui/system/esm/styleFunctionSx.js"],"names":["deepmerge","getThemeValue","handleBreakpoints","mergeBreakpointsInOrder","borders","display","flexbox","grid","positions","palette","shadows","sizing","spacing","typography","filterProps","objectsHaveSameKeys","objects","allKeys","reduce","keys","object","concat","Object","union","Set","every","size","length","styleFunctionSx","props","styles","sx","theme","css","forEach","styleKey","indexOf","breakpointsValues","x","transformedValue","breakpoints"],"mappings":";AAAA,SAASA,SAAT,QAA0B,oBAA1B;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,SAASC,iBAAT,EAA4BC,uBAA5B,QAA2D,eAA3D;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,IAAMC,WAAW,gCAAOV,OAAO,CAACU,WAAf,sBAA+BT,OAAO,CAACS,WAAvC,sBAAuDR,OAAO,CAACQ,WAA/D,sBAA+EP,IAAI,CAACO,WAApF,sBAAoGN,SAAS,CAACM,WAA9G,sBAA8HL,OAAO,CAACK,WAAtI,sBAAsJJ,OAAO,CAACI,WAA9J,sBAA8KH,MAAM,CAACG,WAArL,sBAAqMF,OAAO,CAACE,WAA7M,sBAA6ND,UAAU,CAACC,WAAxO,IAAqP,IAArP,EAAjB;;AAEA,SAASC,mBAAT,GAAyC;AAAA,oCAATC,OAAS;AAATA,IAAAA,OAAS;AAAA;;AACvC,MAAMC,OAAO,GAAGD,OAAO,CAACE,MAAR,CAAe,UAACC,IAAD,EAAOC,MAAP;AAAA,WAAkBD,IAAI,CAACE,MAAL,CAAYC,MAAM,CAACH,IAAP,CAAYC,MAAZ,CAAZ,CAAlB;AAAA,GAAf,EAAmE,EAAnE,CAAhB;AACA,MAAMG,KAAK,GAAG,IAAIC,GAAJ,CAAQP,OAAR,CAAd;AACA,SAAOD,OAAO,CAACS,KAAR,CAAc,UAAAL,MAAM;AAAA,WAAIG,KAAK,CAACG,IAAN,KAAeJ,MAAM,CAACH,IAAP,CAAYC,MAAZ,EAAoBO,MAAvC;AAAA,GAApB,CAAP;AACD;;AAED,SAASC,eAAT,CAAyBC,KAAzB,EAAgC;AAAA,aAI1BA,KAAK,IAAI,EAJiB;AAAA,MAExBC,MAFwB,QAE5BC,EAF4B;AAAA,MAG5BC,KAH4B,QAG5BA,KAH4B;;AAK9B,MAAI,CAACF,MAAL,EAAa,OAAO,IAAP;;AAEb,MAAI,OAAOA,MAAP,KAAkB,UAAtB,EAAkC;AAChC,WAAOA,MAAM,CAACE,KAAD,CAAb;AACD;;AAED,MAAI,OAAOF,MAAP,KAAkB,QAAtB,EAAgC;AAC9B;AACA,WAAOA,MAAP;AACD;;AAED,MAAIG,GAAG,GAAG,EAAV;AACAX,EAAAA,MAAM,CAACH,IAAP,CAAYW,MAAZ,EAAoBI,OAApB,CAA4B,UAAAC,QAAQ,EAAI;AACtC,QAAI,OAAOL,MAAM,CAACK,QAAD,CAAb,KAA4B,QAAhC,EAA0C;AACxC,UAAIrB,WAAW,CAACsB,OAAZ,CAAoBD,QAApB,MAAkC,CAAC,CAAvC,EAA0C;AACxCF,QAAAA,GAAG,GAAGjC,SAAS,CAACiC,GAAD,EAAMhC,aAAa,CAACkC,QAAD,EAAWL,MAAM,CAACK,QAAD,CAAjB,EAA6BH,KAA7B,CAAnB,CAAf;AACD,OAFD,MAEO;AACL,YAAMK,iBAAiB,GAAGnC,iBAAiB,CAAC;AAC1C8B,UAAAA;AAD0C,SAAD,EAExCF,MAAM,CAACK,QAAD,CAFkC,EAEtB,UAAAG,CAAC;AAAA,iBAAK;AACzB,aAACH,QAAD,GAAYG;AADa,WAAL;AAAA,SAFqB,CAA3C;;AAMA,YAAIvB,mBAAmB,CAACsB,iBAAD,EAAoBP,MAAM,CAACK,QAAD,CAA1B,CAAvB,EAA8D;AAC5D,cAAMI,gBAAgB,GAAGX,eAAe,CAAC;AACvCG,YAAAA,EAAE,EAAED,MAAM,CAACK,QAAD,CAD6B;AAEvCH,YAAAA;AAFuC,WAAD,CAAxC;AAIAC,UAAAA,GAAG,CAACE,QAAD,CAAH,GAAgBI,gBAAhB;AACD,SAND,MAMO;AACLN,UAAAA,GAAG,GAAGjC,SAAS,CAACiC,GAAD,EAAMI,iBAAN,CAAf;AACD;AACF;AACF,KApBD,MAoBO,IAAI,OAAOP,MAAM,CAACK,QAAD,CAAb,KAA4B,UAAhC,EAA4C;AACjDF,MAAAA,GAAG,GAAGjC,SAAS,CAACiC,GAAD,EAAM;AACnB,SAACE,QAAD,GAAYL,MAAM,CAACK,QAAD,CAAN,CAAiBH,KAAjB;AADO,OAAN,CAAf;AAGD,KAJM,MAIA;AACLC,MAAAA,GAAG,GAAGjC,SAAS,CAACiC,GAAD,EAAMhC,aAAa,CAACkC,QAAD,EAAWL,MAAM,CAACK,QAAD,CAAjB,EAA6BH,KAA7B,CAAnB,CAAf;AACD;AACF,GA5BD;AA6BA,SAAO7B,uBAAuB,CAAC6B,KAAK,CAACQ,WAAP,EAAoBP,GAApB,CAA9B;AACD;;AAEDL,eAAe,CAACd,WAAhB,GAA8B,CAAC,IAAD,CAA9B;AACA,eAAec,eAAf","sourcesContent":["import { deepmerge } from '@material-ui/utils';\nimport getThemeValue from './getThemeValue';\nimport { handleBreakpoints, mergeBreakpointsInOrder } from './breakpoints';\nimport borders from './borders';\nimport display from './display';\nimport flexbox from './flexbox';\nimport grid from './grid';\nimport positions from './positions';\nimport palette from './palette';\nimport shadows from './shadows';\nimport sizing from './sizing';\nimport spacing from './spacing';\nimport typography from './typography';\nconst filterProps = [...borders.filterProps, ...display.filterProps, ...flexbox.filterProps, ...grid.filterProps, ...positions.filterProps, ...palette.filterProps, ...shadows.filterProps, ...sizing.filterProps, ...spacing.filterProps, ...typography.filterProps, 'sx'];\n\nfunction objectsHaveSameKeys(...objects) {\n  const allKeys = objects.reduce((keys, object) => keys.concat(Object.keys(object)), []);\n  const union = new Set(allKeys);\n  return objects.every(object => union.size === Object.keys(object).length);\n}\n\nfunction styleFunctionSx(props) {\n  const {\n    sx: styles,\n    theme\n  } = props || {};\n  if (!styles) return null;\n\n  if (typeof styles === 'function') {\n    return styles(theme);\n  }\n\n  if (typeof styles !== 'object') {\n    // value\n    return styles;\n  }\n\n  let css = {};\n  Object.keys(styles).forEach(styleKey => {\n    if (typeof styles[styleKey] === 'object') {\n      if (filterProps.indexOf(styleKey) !== -1) {\n        css = deepmerge(css, getThemeValue(styleKey, styles[styleKey], theme));\n      } else {\n        const breakpointsValues = handleBreakpoints({\n          theme\n        }, styles[styleKey], x => ({\n          [styleKey]: x\n        }));\n\n        if (objectsHaveSameKeys(breakpointsValues, styles[styleKey])) {\n          const transformedValue = styleFunctionSx({\n            sx: styles[styleKey],\n            theme\n          });\n          css[styleKey] = transformedValue;\n        } else {\n          css = deepmerge(css, breakpointsValues);\n        }\n      }\n    } else if (typeof styles[styleKey] === 'function') {\n      css = deepmerge(css, {\n        [styleKey]: styles[styleKey](theme)\n      });\n    } else {\n      css = deepmerge(css, getThemeValue(styleKey, styles[styleKey], theme));\n    }\n  });\n  return mergeBreakpointsInOrder(theme.breakpoints, css);\n}\n\nstyleFunctionSx.filterProps = ['sx'];\nexport default styleFunctionSx;"]},"metadata":{},"sourceType":"module"}