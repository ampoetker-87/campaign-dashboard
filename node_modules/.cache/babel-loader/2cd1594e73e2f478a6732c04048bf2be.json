{"ast":null,"code":"\"use strict\";\n/**\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar _createClass = require(\"/Users/amandapoetker-alles/Desktop/campaign-dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _classCallCheck = require(\"/Users/amandapoetker-alles/Desktop/campaign-dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar googleapis_common_1 = require(\"googleapis-common\"); // tslint:disable: no-any\n// tslint:disable: class-name\n// tslint:disable: variable-name\n// tslint:disable: jsdoc-format\n// tslint:disable: no-namespace\n\n\nvar digitalassetlinks_v1;\n\n(function (digitalassetlinks_v1) {\n  /**\n   * Digital Asset Links API\n   *\n   * Discovers relationships between online assets such as websites or mobile\n   * apps.\n   *\n   * @example\n   * const {google} = require('googleapis');\n   * const digitalassetlinks = google.digitalassetlinks('v1');\n   *\n   * @namespace digitalassetlinks\n   * @type {Function}\n   * @version v1\n   * @variation v1\n   * @param {object=} options Options for Digitalassetlinks\n   */\n  var Digitalassetlinks = function Digitalassetlinks(options, google) {\n    _classCallCheck(this, Digitalassetlinks);\n\n    this.context = {\n      _options: options || {},\n      google\n    };\n    this.assetlinks = new Resource$Assetlinks(this.context);\n    this.statements = new Resource$Statements(this.context);\n  };\n\n  digitalassetlinks_v1.Digitalassetlinks = Digitalassetlinks;\n\n  var Resource$Assetlinks = /*#__PURE__*/function () {\n    function Resource$Assetlinks(context) {\n      _classCallCheck(this, Resource$Assetlinks);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Assetlinks, [{\n      key: \"check\",\n      value: function check(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://digitalassetlinks.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/assetlinks:check').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: [],\n          pathParams: [],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Assetlinks;\n  }();\n\n  digitalassetlinks_v1.Resource$Assetlinks = Resource$Assetlinks;\n\n  var Resource$Statements = /*#__PURE__*/function () {\n    function Resource$Statements(context) {\n      _classCallCheck(this, Resource$Statements);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Statements, [{\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://digitalassetlinks.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/statements:list').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: [],\n          pathParams: [],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Statements;\n  }();\n\n  digitalassetlinks_v1.Resource$Statements = Resource$Statements;\n})(digitalassetlinks_v1 = exports.digitalassetlinks_v1 || (exports.digitalassetlinks_v1 = {}));","map":{"version":3,"sources":["/Users/amandapoetker-alles/Desktop/campaign-dashboard/node_modules/googleapis/build/src/apis/digitalassetlinks/v1.js"],"names":["Object","defineProperty","exports","value","googleapis_common_1","require","digitalassetlinks_v1","Digitalassetlinks","options","google","context","_options","assetlinks","Resource$Assetlinks","statements","Resource$Statements","paramsOrCallback","optionsOrCallback","callback","params","rootUrl","parameters","assign","url","replace","method","requiredParams","pathParams","createAPIRequest"],"mappings":"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","sourcesContent":["\"use strict\";\n/**\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst googleapis_common_1 = require(\"googleapis-common\");\n// tslint:disable: no-any\n// tslint:disable: class-name\n// tslint:disable: variable-name\n// tslint:disable: jsdoc-format\n// tslint:disable: no-namespace\nvar digitalassetlinks_v1;\n(function (digitalassetlinks_v1) {\n    /**\n     * Digital Asset Links API\n     *\n     * Discovers relationships between online assets such as websites or mobile\n     * apps.\n     *\n     * @example\n     * const {google} = require('googleapis');\n     * const digitalassetlinks = google.digitalassetlinks('v1');\n     *\n     * @namespace digitalassetlinks\n     * @type {Function}\n     * @version v1\n     * @variation v1\n     * @param {object=} options Options for Digitalassetlinks\n     */\n    class Digitalassetlinks {\n        constructor(options, google) {\n            this.context = { _options: options || {}, google };\n            this.assetlinks = new Resource$Assetlinks(this.context);\n            this.statements = new Resource$Statements(this.context);\n        }\n    }\n    digitalassetlinks_v1.Digitalassetlinks = Digitalassetlinks;\n    class Resource$Assetlinks {\n        constructor(context) {\n            this.context = context;\n        }\n        check(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://digitalassetlinks.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1/assetlinks:check')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: [],\n                pathParams: [],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    digitalassetlinks_v1.Resource$Assetlinks = Resource$Assetlinks;\n    class Resource$Statements {\n        constructor(context) {\n            this.context = context;\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://digitalassetlinks.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1/statements:list')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: [],\n                pathParams: [],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    digitalassetlinks_v1.Resource$Statements = Resource$Statements;\n})(digitalassetlinks_v1 = exports.digitalassetlinks_v1 || (exports.digitalassetlinks_v1 = {}));\n//# sourceMappingURL=v1.js.map"]},"metadata":{},"sourceType":"script"}