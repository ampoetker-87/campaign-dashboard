{"ast":null,"code":"import responsivePropType from './responsivePropType';\nimport { handleBreakpoints } from './breakpoints';\n\nfunction getPath(obj, path) {\n  if (!path || typeof path !== 'string') {\n    return null;\n  }\n\n  return path.split('.').reduce(function (acc, item) {\n    return acc && acc[item] ? acc[item] : null;\n  }, obj);\n}\n\nfunction style(options) {\n  var prop = options.prop,\n      _options$cssProperty = options.cssProperty,\n      cssProperty = _options$cssProperty === void 0 ? options.prop : _options$cssProperty,\n      themeKey = options.themeKey,\n      transform = options.transform;\n\n  var fn = function fn(props) {\n    if (props[prop] == null) {\n      return null;\n    }\n\n    var propValue = props[prop];\n    var theme = props.theme;\n    var themeMapping = getPath(theme, themeKey) || {};\n\n    var styleFromPropValue = function styleFromPropValue(propValueFinal) {\n      var value;\n\n      if (typeof themeMapping === 'function') {\n        value = themeMapping(propValueFinal);\n      } else if (Array.isArray(themeMapping)) {\n        value = themeMapping[propValueFinal] || propValueFinal;\n      } else {\n        value = getPath(themeMapping, propValueFinal) || propValueFinal;\n\n        if (transform) {\n          value = transform(value);\n        }\n      }\n\n      if (cssProperty === false) {\n        return value;\n      }\n\n      return {\n        [cssProperty]: value\n      };\n    };\n\n    return handleBreakpoints(props, propValue, styleFromPropValue);\n  };\n\n  fn.propTypes = process.env.NODE_ENV !== 'production' ? {\n    [prop]: responsivePropType\n  } : {};\n  fn.filterProps = [prop];\n  return fn;\n}\n\nexport default style;","map":{"version":3,"sources":["/Users/amandapoetker-alles/Desktop/campaign-dashboard/Campaign-Planner/node_modules/@material-ui/system/esm/style.js"],"names":["responsivePropType","handleBreakpoints","getPath","obj","path","split","reduce","acc","item","style","options","prop","cssProperty","themeKey","transform","fn","props","propValue","theme","themeMapping","styleFromPropValue","propValueFinal","value","Array","isArray","propTypes","process","env","NODE_ENV","filterProps"],"mappings":"AAAA,OAAOA,kBAAP,MAA+B,sBAA/B;AACA,SAASC,iBAAT,QAAkC,eAAlC;;AAEA,SAASC,OAAT,CAAiBC,GAAjB,EAAsBC,IAAtB,EAA4B;AAC1B,MAAI,CAACA,IAAD,IAAS,OAAOA,IAAP,KAAgB,QAA7B,EAAuC;AACrC,WAAO,IAAP;AACD;;AAED,SAAOA,IAAI,CAACC,KAAL,CAAW,GAAX,EAAgBC,MAAhB,CAAuB,UAACC,GAAD,EAAMC,IAAN;AAAA,WAAeD,GAAG,IAAIA,GAAG,CAACC,IAAD,CAAV,GAAmBD,GAAG,CAACC,IAAD,CAAtB,GAA+B,IAA9C;AAAA,GAAvB,EAA2EL,GAA3E,CAAP;AACD;;AAED,SAASM,KAAT,CAAeC,OAAf,EAAwB;AAAA,MAEpBC,IAFoB,GAMlBD,OANkB,CAEpBC,IAFoB;AAAA,6BAMlBD,OANkB,CAGpBE,WAHoB;AAAA,MAGpBA,WAHoB,qCAGNF,OAAO,CAACC,IAHF;AAAA,MAIpBE,QAJoB,GAMlBH,OANkB,CAIpBG,QAJoB;AAAA,MAKpBC,SALoB,GAMlBJ,OANkB,CAKpBI,SALoB;;AAQtB,MAAMC,EAAE,GAAG,SAALA,EAAK,CAAAC,KAAK,EAAI;AAClB,QAAIA,KAAK,CAACL,IAAD,CAAL,IAAe,IAAnB,EAAyB;AACvB,aAAO,IAAP;AACD;;AAED,QAAMM,SAAS,GAAGD,KAAK,CAACL,IAAD,CAAvB;AACA,QAAMO,KAAK,GAAGF,KAAK,CAACE,KAApB;AACA,QAAMC,YAAY,GAAGjB,OAAO,CAACgB,KAAD,EAAQL,QAAR,CAAP,IAA4B,EAAjD;;AAEA,QAAMO,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAC,cAAc,EAAI;AAC3C,UAAIC,KAAJ;;AAEA,UAAI,OAAOH,YAAP,KAAwB,UAA5B,EAAwC;AACtCG,QAAAA,KAAK,GAAGH,YAAY,CAACE,cAAD,CAApB;AACD,OAFD,MAEO,IAAIE,KAAK,CAACC,OAAN,CAAcL,YAAd,CAAJ,EAAiC;AACtCG,QAAAA,KAAK,GAAGH,YAAY,CAACE,cAAD,CAAZ,IAAgCA,cAAxC;AACD,OAFM,MAEA;AACLC,QAAAA,KAAK,GAAGpB,OAAO,CAACiB,YAAD,EAAeE,cAAf,CAAP,IAAyCA,cAAjD;;AAEA,YAAIP,SAAJ,EAAe;AACbQ,UAAAA,KAAK,GAAGR,SAAS,CAACQ,KAAD,CAAjB;AACD;AACF;;AAED,UAAIV,WAAW,KAAK,KAApB,EAA2B;AACzB,eAAOU,KAAP;AACD;;AAED,aAAO;AACL,SAACV,WAAD,GAAeU;AADV,OAAP;AAGD,KAtBD;;AAwBA,WAAOrB,iBAAiB,CAACe,KAAD,EAAQC,SAAR,EAAmBG,kBAAnB,CAAxB;AACD,GAlCD;;AAoCAL,EAAAA,EAAE,CAACU,SAAH,GAAeC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwC;AACrD,KAACjB,IAAD,GAAQX;AAD6C,GAAxC,GAEX,EAFJ;AAGAe,EAAAA,EAAE,CAACc,WAAH,GAAiB,CAAClB,IAAD,CAAjB;AACA,SAAOI,EAAP;AACD;;AAED,eAAeN,KAAf","sourcesContent":["import responsivePropType from './responsivePropType';\nimport { handleBreakpoints } from './breakpoints';\n\nfunction getPath(obj, path) {\n  if (!path || typeof path !== 'string') {\n    return null;\n  }\n\n  return path.split('.').reduce((acc, item) => acc && acc[item] ? acc[item] : null, obj);\n}\n\nfunction style(options) {\n  const {\n    prop,\n    cssProperty = options.prop,\n    themeKey,\n    transform\n  } = options;\n\n  const fn = props => {\n    if (props[prop] == null) {\n      return null;\n    }\n\n    const propValue = props[prop];\n    const theme = props.theme;\n    const themeMapping = getPath(theme, themeKey) || {};\n\n    const styleFromPropValue = propValueFinal => {\n      let value;\n\n      if (typeof themeMapping === 'function') {\n        value = themeMapping(propValueFinal);\n      } else if (Array.isArray(themeMapping)) {\n        value = themeMapping[propValueFinal] || propValueFinal;\n      } else {\n        value = getPath(themeMapping, propValueFinal) || propValueFinal;\n\n        if (transform) {\n          value = transform(value);\n        }\n      }\n\n      if (cssProperty === false) {\n        return value;\n      }\n\n      return {\n        [cssProperty]: value\n      };\n    };\n\n    return handleBreakpoints(props, propValue, styleFromPropValue);\n  };\n\n  fn.propTypes = process.env.NODE_ENV !== 'production' ? {\n    [prop]: responsivePropType\n  } : {};\n  fn.filterProps = [prop];\n  return fn;\n}\n\nexport default style;"]},"metadata":{},"sourceType":"module"}