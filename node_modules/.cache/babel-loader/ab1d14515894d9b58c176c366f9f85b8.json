{"ast":null,"code":"\"use strict\";\n/**\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar _createClass = require(\"/Users/amandapoetker-alles/Desktop/campaign-dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _classCallCheck = require(\"/Users/amandapoetker-alles/Desktop/campaign-dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar googleapis_common_1 = require(\"googleapis-common\"); // tslint:disable: no-any\n// tslint:disable: class-name\n// tslint:disable: variable-name\n// tslint:disable: jsdoc-format\n// tslint:disable: no-namespace\n\n\nvar androidpublisher_v2;\n\n(function (androidpublisher_v2) {\n  /**\n   * Google Play Developer API\n   *\n   * Accesses Android application developers&#39; Google Play accounts.\n   *\n   * @example\n   * const {google} = require('googleapis');\n   * const androidpublisher = google.androidpublisher('v2');\n   *\n   * @namespace androidpublisher\n   * @type {Function}\n   * @version v2\n   * @variation v2\n   * @param {object=} options Options for Androidpublisher\n   */\n  var Androidpublisher = function Androidpublisher(options, google) {\n    _classCallCheck(this, Androidpublisher);\n\n    this.context = {\n      _options: options || {},\n      google\n    };\n    this.edits = new Resource$Edits(this.context);\n    this.inappproducts = new Resource$Inappproducts(this.context);\n    this.orders = new Resource$Orders(this.context);\n    this.purchases = new Resource$Purchases(this.context);\n    this.reviews = new Resource$Reviews(this.context);\n  };\n\n  androidpublisher_v2.Androidpublisher = Androidpublisher;\n\n  var Resource$Edits = /*#__PURE__*/function () {\n    function Resource$Edits(context) {\n      _classCallCheck(this, Resource$Edits);\n\n      this.context = context;\n      this.apklistings = new Resource$Edits$Apklistings(this.context);\n      this.apks = new Resource$Edits$Apks(this.context);\n      this.bundles = new Resource$Edits$Bundles(this.context);\n      this.deobfuscationfiles = new Resource$Edits$Deobfuscationfiles(this.context);\n      this.details = new Resource$Edits$Details(this.context);\n      this.expansionfiles = new Resource$Edits$Expansionfiles(this.context);\n      this.images = new Resource$Edits$Images(this.context);\n      this.listings = new Resource$Edits$Listings(this.context);\n      this.testers = new Resource$Edits$Testers(this.context);\n      this.tracks = new Resource$Edits$Tracks(this.context);\n    }\n\n    _createClass(Resource$Edits, [{\n      key: \"commit\",\n      value: function commit(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/androidpublisher/v2/applications/{packageName}/edits/{editId}:commit').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['packageName', 'editId'],\n          pathParams: ['editId', 'packageName'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"delete\",\n      value: function _delete(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/androidpublisher/v2/applications/{packageName}/edits/{editId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'DELETE'\n          }, options),\n          params,\n          requiredParams: ['packageName', 'editId'],\n          pathParams: ['editId', 'packageName'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/androidpublisher/v2/applications/{packageName}/edits/{editId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['packageName', 'editId'],\n          pathParams: ['editId', 'packageName'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"insert\",\n      value: function insert(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/androidpublisher/v2/applications/{packageName}/edits').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['packageName'],\n          pathParams: ['packageName'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"validate\",\n      value: function validate(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/androidpublisher/v2/applications/{packageName}/edits/{editId}:validate').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['packageName', 'editId'],\n          pathParams: ['editId', 'packageName'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Edits;\n  }();\n\n  androidpublisher_v2.Resource$Edits = Resource$Edits;\n\n  var Resource$Edits$Apklistings = /*#__PURE__*/function () {\n    function Resource$Edits$Apklistings(context) {\n      _classCallCheck(this, Resource$Edits$Apklistings);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Edits$Apklistings, [{\n      key: \"delete\",\n      value: function _delete(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/androidpublisher/v2/applications/{packageName}/edits/{editId}/apks/{apkVersionCode}/listings/{language}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'DELETE'\n          }, options),\n          params,\n          requiredParams: ['packageName', 'editId', 'apkVersionCode', 'language'],\n          pathParams: ['apkVersionCode', 'editId', 'language', 'packageName'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"deleteall\",\n      value: function deleteall(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/androidpublisher/v2/applications/{packageName}/edits/{editId}/apks/{apkVersionCode}/listings').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'DELETE'\n          }, options),\n          params,\n          requiredParams: ['packageName', 'editId', 'apkVersionCode'],\n          pathParams: ['apkVersionCode', 'editId', 'packageName'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/androidpublisher/v2/applications/{packageName}/edits/{editId}/apks/{apkVersionCode}/listings/{language}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['packageName', 'editId', 'apkVersionCode', 'language'],\n          pathParams: ['apkVersionCode', 'editId', 'language', 'packageName'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/androidpublisher/v2/applications/{packageName}/edits/{editId}/apks/{apkVersionCode}/listings').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['packageName', 'editId', 'apkVersionCode'],\n          pathParams: ['apkVersionCode', 'editId', 'packageName'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"patch\",\n      value: function patch(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/androidpublisher/v2/applications/{packageName}/edits/{editId}/apks/{apkVersionCode}/listings/{language}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PATCH'\n          }, options),\n          params,\n          requiredParams: ['packageName', 'editId', 'apkVersionCode', 'language'],\n          pathParams: ['apkVersionCode', 'editId', 'language', 'packageName'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"update\",\n      value: function update(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/androidpublisher/v2/applications/{packageName}/edits/{editId}/apks/{apkVersionCode}/listings/{language}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PUT'\n          }, options),\n          params,\n          requiredParams: ['packageName', 'editId', 'apkVersionCode', 'language'],\n          pathParams: ['apkVersionCode', 'editId', 'language', 'packageName'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Edits$Apklistings;\n  }();\n\n  androidpublisher_v2.Resource$Edits$Apklistings = Resource$Edits$Apklistings;\n\n  var Resource$Edits$Apks = /*#__PURE__*/function () {\n    function Resource$Edits$Apks(context) {\n      _classCallCheck(this, Resource$Edits$Apks);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Edits$Apks, [{\n      key: \"addexternallyhosted\",\n      value: function addexternallyhosted(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/androidpublisher/v2/applications/{packageName}/edits/{editId}/apks/externallyHosted').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['packageName', 'editId'],\n          pathParams: ['editId', 'packageName'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/androidpublisher/v2/applications/{packageName}/edits/{editId}/apks').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['packageName', 'editId'],\n          pathParams: ['editId', 'packageName'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"upload\",\n      value: function upload(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/androidpublisher/v2/applications/{packageName}/edits/{editId}/apks').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          mediaUrl: (rootUrl + '/upload/androidpublisher/v2/applications/{packageName}/edits/{editId}/apks').replace(/([^:]\\/)\\/+/g, '$1'),\n          requiredParams: ['packageName', 'editId'],\n          pathParams: ['editId', 'packageName'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Edits$Apks;\n  }();\n\n  androidpublisher_v2.Resource$Edits$Apks = Resource$Edits$Apks;\n\n  var Resource$Edits$Bundles = /*#__PURE__*/function () {\n    function Resource$Edits$Bundles(context) {\n      _classCallCheck(this, Resource$Edits$Bundles);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Edits$Bundles, [{\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/androidpublisher/v2/applications/{packageName}/edits/{editId}/bundles').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['packageName', 'editId'],\n          pathParams: ['editId', 'packageName'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"upload\",\n      value: function upload(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/androidpublisher/v2/applications/{packageName}/edits/{editId}/bundles').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          mediaUrl: (rootUrl + '/upload/androidpublisher/v2/applications/{packageName}/edits/{editId}/bundles').replace(/([^:]\\/)\\/+/g, '$1'),\n          requiredParams: ['packageName', 'editId'],\n          pathParams: ['editId', 'packageName'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Edits$Bundles;\n  }();\n\n  androidpublisher_v2.Resource$Edits$Bundles = Resource$Edits$Bundles;\n\n  var Resource$Edits$Deobfuscationfiles = /*#__PURE__*/function () {\n    function Resource$Edits$Deobfuscationfiles(context) {\n      _classCallCheck(this, Resource$Edits$Deobfuscationfiles);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Edits$Deobfuscationfiles, [{\n      key: \"upload\",\n      value: function upload(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/androidpublisher/v2/applications/{packageName}/edits/{editId}/apks/{apkVersionCode}/deobfuscationFiles/{deobfuscationFileType}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          mediaUrl: (rootUrl + '/upload/androidpublisher/v2/applications/{packageName}/edits/{editId}/apks/{apkVersionCode}/deobfuscationFiles/{deobfuscationFileType}').replace(/([^:]\\/)\\/+/g, '$1'),\n          requiredParams: ['packageName', 'editId', 'apkVersionCode', 'deobfuscationFileType'],\n          pathParams: ['apkVersionCode', 'deobfuscationFileType', 'editId', 'packageName'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Edits$Deobfuscationfiles;\n  }();\n\n  androidpublisher_v2.Resource$Edits$Deobfuscationfiles = Resource$Edits$Deobfuscationfiles;\n\n  var Resource$Edits$Details = /*#__PURE__*/function () {\n    function Resource$Edits$Details(context) {\n      _classCallCheck(this, Resource$Edits$Details);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Edits$Details, [{\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/androidpublisher/v2/applications/{packageName}/edits/{editId}/details').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['packageName', 'editId'],\n          pathParams: ['editId', 'packageName'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"patch\",\n      value: function patch(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/androidpublisher/v2/applications/{packageName}/edits/{editId}/details').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PATCH'\n          }, options),\n          params,\n          requiredParams: ['packageName', 'editId'],\n          pathParams: ['editId', 'packageName'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"update\",\n      value: function update(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/androidpublisher/v2/applications/{packageName}/edits/{editId}/details').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PUT'\n          }, options),\n          params,\n          requiredParams: ['packageName', 'editId'],\n          pathParams: ['editId', 'packageName'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Edits$Details;\n  }();\n\n  androidpublisher_v2.Resource$Edits$Details = Resource$Edits$Details;\n\n  var Resource$Edits$Expansionfiles = /*#__PURE__*/function () {\n    function Resource$Edits$Expansionfiles(context) {\n      _classCallCheck(this, Resource$Edits$Expansionfiles);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Edits$Expansionfiles, [{\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/androidpublisher/v2/applications/{packageName}/edits/{editId}/apks/{apkVersionCode}/expansionFiles/{expansionFileType}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['packageName', 'editId', 'apkVersionCode', 'expansionFileType'],\n          pathParams: ['apkVersionCode', 'editId', 'expansionFileType', 'packageName'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"patch\",\n      value: function patch(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/androidpublisher/v2/applications/{packageName}/edits/{editId}/apks/{apkVersionCode}/expansionFiles/{expansionFileType}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PATCH'\n          }, options),\n          params,\n          requiredParams: ['packageName', 'editId', 'apkVersionCode', 'expansionFileType'],\n          pathParams: ['apkVersionCode', 'editId', 'expansionFileType', 'packageName'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"update\",\n      value: function update(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/androidpublisher/v2/applications/{packageName}/edits/{editId}/apks/{apkVersionCode}/expansionFiles/{expansionFileType}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PUT'\n          }, options),\n          params,\n          requiredParams: ['packageName', 'editId', 'apkVersionCode', 'expansionFileType'],\n          pathParams: ['apkVersionCode', 'editId', 'expansionFileType', 'packageName'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"upload\",\n      value: function upload(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/androidpublisher/v2/applications/{packageName}/edits/{editId}/apks/{apkVersionCode}/expansionFiles/{expansionFileType}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          mediaUrl: (rootUrl + '/upload/androidpublisher/v2/applications/{packageName}/edits/{editId}/apks/{apkVersionCode}/expansionFiles/{expansionFileType}').replace(/([^:]\\/)\\/+/g, '$1'),\n          requiredParams: ['packageName', 'editId', 'apkVersionCode', 'expansionFileType'],\n          pathParams: ['apkVersionCode', 'editId', 'expansionFileType', 'packageName'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Edits$Expansionfiles;\n  }();\n\n  androidpublisher_v2.Resource$Edits$Expansionfiles = Resource$Edits$Expansionfiles;\n\n  var Resource$Edits$Images = /*#__PURE__*/function () {\n    function Resource$Edits$Images(context) {\n      _classCallCheck(this, Resource$Edits$Images);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Edits$Images, [{\n      key: \"delete\",\n      value: function _delete(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/androidpublisher/v2/applications/{packageName}/edits/{editId}/listings/{language}/{imageType}/{imageId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'DELETE'\n          }, options),\n          params,\n          requiredParams: ['packageName', 'editId', 'language', 'imageType', 'imageId'],\n          pathParams: ['editId', 'imageId', 'imageType', 'language', 'packageName'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"deleteall\",\n      value: function deleteall(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/androidpublisher/v2/applications/{packageName}/edits/{editId}/listings/{language}/{imageType}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'DELETE'\n          }, options),\n          params,\n          requiredParams: ['packageName', 'editId', 'language', 'imageType'],\n          pathParams: ['editId', 'imageType', 'language', 'packageName'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/androidpublisher/v2/applications/{packageName}/edits/{editId}/listings/{language}/{imageType}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['packageName', 'editId', 'language', 'imageType'],\n          pathParams: ['editId', 'imageType', 'language', 'packageName'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"upload\",\n      value: function upload(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/androidpublisher/v2/applications/{packageName}/edits/{editId}/listings/{language}/{imageType}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          mediaUrl: (rootUrl + '/upload/androidpublisher/v2/applications/{packageName}/edits/{editId}/listings/{language}/{imageType}').replace(/([^:]\\/)\\/+/g, '$1'),\n          requiredParams: ['packageName', 'editId', 'language', 'imageType'],\n          pathParams: ['editId', 'imageType', 'language', 'packageName'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Edits$Images;\n  }();\n\n  androidpublisher_v2.Resource$Edits$Images = Resource$Edits$Images;\n\n  var Resource$Edits$Listings = /*#__PURE__*/function () {\n    function Resource$Edits$Listings(context) {\n      _classCallCheck(this, Resource$Edits$Listings);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Edits$Listings, [{\n      key: \"delete\",\n      value: function _delete(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/androidpublisher/v2/applications/{packageName}/edits/{editId}/listings/{language}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'DELETE'\n          }, options),\n          params,\n          requiredParams: ['packageName', 'editId', 'language'],\n          pathParams: ['editId', 'language', 'packageName'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"deleteall\",\n      value: function deleteall(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/androidpublisher/v2/applications/{packageName}/edits/{editId}/listings').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'DELETE'\n          }, options),\n          params,\n          requiredParams: ['packageName', 'editId'],\n          pathParams: ['editId', 'packageName'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/androidpublisher/v2/applications/{packageName}/edits/{editId}/listings/{language}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['packageName', 'editId', 'language'],\n          pathParams: ['editId', 'language', 'packageName'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/androidpublisher/v2/applications/{packageName}/edits/{editId}/listings').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['packageName', 'editId'],\n          pathParams: ['editId', 'packageName'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"patch\",\n      value: function patch(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/androidpublisher/v2/applications/{packageName}/edits/{editId}/listings/{language}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PATCH'\n          }, options),\n          params,\n          requiredParams: ['packageName', 'editId', 'language'],\n          pathParams: ['editId', 'language', 'packageName'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"update\",\n      value: function update(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/androidpublisher/v2/applications/{packageName}/edits/{editId}/listings/{language}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PUT'\n          }, options),\n          params,\n          requiredParams: ['packageName', 'editId', 'language'],\n          pathParams: ['editId', 'language', 'packageName'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Edits$Listings;\n  }();\n\n  androidpublisher_v2.Resource$Edits$Listings = Resource$Edits$Listings;\n\n  var Resource$Edits$Testers = /*#__PURE__*/function () {\n    function Resource$Edits$Testers(context) {\n      _classCallCheck(this, Resource$Edits$Testers);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Edits$Testers, [{\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/androidpublisher/v2/applications/{packageName}/edits/{editId}/testers/{track}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['packageName', 'editId', 'track'],\n          pathParams: ['editId', 'packageName', 'track'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"patch\",\n      value: function patch(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/androidpublisher/v2/applications/{packageName}/edits/{editId}/testers/{track}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PATCH'\n          }, options),\n          params,\n          requiredParams: ['packageName', 'editId', 'track'],\n          pathParams: ['editId', 'packageName', 'track'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"update\",\n      value: function update(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/androidpublisher/v2/applications/{packageName}/edits/{editId}/testers/{track}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PUT'\n          }, options),\n          params,\n          requiredParams: ['packageName', 'editId', 'track'],\n          pathParams: ['editId', 'packageName', 'track'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Edits$Testers;\n  }();\n\n  androidpublisher_v2.Resource$Edits$Testers = Resource$Edits$Testers;\n\n  var Resource$Edits$Tracks = /*#__PURE__*/function () {\n    function Resource$Edits$Tracks(context) {\n      _classCallCheck(this, Resource$Edits$Tracks);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Edits$Tracks, [{\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/androidpublisher/v2/applications/{packageName}/edits/{editId}/tracks/{track}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['packageName', 'editId', 'track'],\n          pathParams: ['editId', 'packageName', 'track'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/androidpublisher/v2/applications/{packageName}/edits/{editId}/tracks').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['packageName', 'editId'],\n          pathParams: ['editId', 'packageName'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"patch\",\n      value: function patch(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/androidpublisher/v2/applications/{packageName}/edits/{editId}/tracks/{track}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PATCH'\n          }, options),\n          params,\n          requiredParams: ['packageName', 'editId', 'track'],\n          pathParams: ['editId', 'packageName', 'track'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"update\",\n      value: function update(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/androidpublisher/v2/applications/{packageName}/edits/{editId}/tracks/{track}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PUT'\n          }, options),\n          params,\n          requiredParams: ['packageName', 'editId', 'track'],\n          pathParams: ['editId', 'packageName', 'track'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Edits$Tracks;\n  }();\n\n  androidpublisher_v2.Resource$Edits$Tracks = Resource$Edits$Tracks;\n\n  var Resource$Inappproducts = /*#__PURE__*/function () {\n    function Resource$Inappproducts(context) {\n      _classCallCheck(this, Resource$Inappproducts);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Inappproducts, [{\n      key: \"delete\",\n      value: function _delete(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/androidpublisher/v2/applications/{packageName}/inappproducts/{sku}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'DELETE'\n          }, options),\n          params,\n          requiredParams: ['packageName', 'sku'],\n          pathParams: ['packageName', 'sku'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/androidpublisher/v2/applications/{packageName}/inappproducts/{sku}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['packageName', 'sku'],\n          pathParams: ['packageName', 'sku'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"insert\",\n      value: function insert(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/androidpublisher/v2/applications/{packageName}/inappproducts').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['packageName'],\n          pathParams: ['packageName'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/androidpublisher/v2/applications/{packageName}/inappproducts').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['packageName'],\n          pathParams: ['packageName'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"patch\",\n      value: function patch(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/androidpublisher/v2/applications/{packageName}/inappproducts/{sku}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PATCH'\n          }, options),\n          params,\n          requiredParams: ['packageName', 'sku'],\n          pathParams: ['packageName', 'sku'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"update\",\n      value: function update(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/androidpublisher/v2/applications/{packageName}/inappproducts/{sku}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PUT'\n          }, options),\n          params,\n          requiredParams: ['packageName', 'sku'],\n          pathParams: ['packageName', 'sku'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Inappproducts;\n  }();\n\n  androidpublisher_v2.Resource$Inappproducts = Resource$Inappproducts;\n\n  var Resource$Orders = /*#__PURE__*/function () {\n    function Resource$Orders(context) {\n      _classCallCheck(this, Resource$Orders);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Orders, [{\n      key: \"refund\",\n      value: function refund(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/androidpublisher/v2/applications/{packageName}/orders/{orderId}:refund').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['packageName', 'orderId'],\n          pathParams: ['orderId', 'packageName'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Orders;\n  }();\n\n  androidpublisher_v2.Resource$Orders = Resource$Orders;\n\n  var Resource$Purchases = function Resource$Purchases(context) {\n    _classCallCheck(this, Resource$Purchases);\n\n    this.context = context;\n    this.products = new Resource$Purchases$Products(this.context);\n    this.subscriptions = new Resource$Purchases$Subscriptions(this.context);\n    this.voidedpurchases = new Resource$Purchases$Voidedpurchases(this.context);\n  };\n\n  androidpublisher_v2.Resource$Purchases = Resource$Purchases;\n\n  var Resource$Purchases$Products = /*#__PURE__*/function () {\n    function Resource$Purchases$Products(context) {\n      _classCallCheck(this, Resource$Purchases$Products);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Purchases$Products, [{\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/androidpublisher/v2/applications/{packageName}/purchases/products/{productId}/tokens/{token}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['packageName', 'productId', 'token'],\n          pathParams: ['packageName', 'productId', 'token'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Purchases$Products;\n  }();\n\n  androidpublisher_v2.Resource$Purchases$Products = Resource$Purchases$Products;\n\n  var Resource$Purchases$Subscriptions = /*#__PURE__*/function () {\n    function Resource$Purchases$Subscriptions(context) {\n      _classCallCheck(this, Resource$Purchases$Subscriptions);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Purchases$Subscriptions, [{\n      key: \"cancel\",\n      value: function cancel(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/androidpublisher/v2/applications/{packageName}/purchases/subscriptions/{subscriptionId}/tokens/{token}:cancel').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['packageName', 'subscriptionId', 'token'],\n          pathParams: ['packageName', 'subscriptionId', 'token'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"defer\",\n      value: function defer(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/androidpublisher/v2/applications/{packageName}/purchases/subscriptions/{subscriptionId}/tokens/{token}:defer').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['packageName', 'subscriptionId', 'token'],\n          pathParams: ['packageName', 'subscriptionId', 'token'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/androidpublisher/v2/applications/{packageName}/purchases/subscriptions/{subscriptionId}/tokens/{token}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['packageName', 'subscriptionId', 'token'],\n          pathParams: ['packageName', 'subscriptionId', 'token'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"refund\",\n      value: function refund(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/androidpublisher/v2/applications/{packageName}/purchases/subscriptions/{subscriptionId}/tokens/{token}:refund').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['packageName', 'subscriptionId', 'token'],\n          pathParams: ['packageName', 'subscriptionId', 'token'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"revoke\",\n      value: function revoke(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/androidpublisher/v2/applications/{packageName}/purchases/subscriptions/{subscriptionId}/tokens/{token}:revoke').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['packageName', 'subscriptionId', 'token'],\n          pathParams: ['packageName', 'subscriptionId', 'token'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Purchases$Subscriptions;\n  }();\n\n  androidpublisher_v2.Resource$Purchases$Subscriptions = Resource$Purchases$Subscriptions;\n\n  var Resource$Purchases$Voidedpurchases = /*#__PURE__*/function () {\n    function Resource$Purchases$Voidedpurchases(context) {\n      _classCallCheck(this, Resource$Purchases$Voidedpurchases);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Purchases$Voidedpurchases, [{\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/androidpublisher/v2/applications/{packageName}/purchases/voidedpurchases').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['packageName'],\n          pathParams: ['packageName'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Purchases$Voidedpurchases;\n  }();\n\n  androidpublisher_v2.Resource$Purchases$Voidedpurchases = Resource$Purchases$Voidedpurchases;\n\n  var Resource$Reviews = /*#__PURE__*/function () {\n    function Resource$Reviews(context) {\n      _classCallCheck(this, Resource$Reviews);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Reviews, [{\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/androidpublisher/v2/applications/{packageName}/reviews/{reviewId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['packageName', 'reviewId'],\n          pathParams: ['packageName', 'reviewId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/androidpublisher/v2/applications/{packageName}/reviews').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['packageName'],\n          pathParams: ['packageName'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"reply\",\n      value: function reply(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/androidpublisher/v2/applications/{packageName}/reviews/{reviewId}:reply').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['packageName', 'reviewId'],\n          pathParams: ['packageName', 'reviewId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Reviews;\n  }();\n\n  androidpublisher_v2.Resource$Reviews = Resource$Reviews;\n})(androidpublisher_v2 = exports.androidpublisher_v2 || (exports.androidpublisher_v2 = {}));","map":{"version":3,"sources":["/Users/amandapoetker-alles/Desktop/campaign-dashboard/node_modules/googleapis/build/src/apis/androidpublisher/v2.js"],"names":["Object","defineProperty","exports","value","googleapis_common_1","require","androidpublisher_v2","Androidpublisher","options","google","context","_options","edits","Resource$Edits","inappproducts","Resource$Inappproducts","orders","Resource$Orders","purchases","Resource$Purchases","reviews","Resource$Reviews","apklistings","Resource$Edits$Apklistings","apks","Resource$Edits$Apks","bundles","Resource$Edits$Bundles","deobfuscationfiles","Resource$Edits$Deobfuscationfiles","details","Resource$Edits$Details","expansionfiles","Resource$Edits$Expansionfiles","images","Resource$Edits$Images","listings","Resource$Edits$Listings","testers","Resource$Edits$Testers","tracks","Resource$Edits$Tracks","paramsOrCallback","optionsOrCallback","callback","params","rootUrl","parameters","assign","url","replace","method","requiredParams","pathParams","createAPIRequest","mediaUrl","products","Resource$Purchases$Products","subscriptions","Resource$Purchases$Subscriptions","voidedpurchases","Resource$Purchases$Voidedpurchases"],"mappings":"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","sourcesContent":["\"use strict\";\n/**\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst googleapis_common_1 = require(\"googleapis-common\");\n// tslint:disable: no-any\n// tslint:disable: class-name\n// tslint:disable: variable-name\n// tslint:disable: jsdoc-format\n// tslint:disable: no-namespace\nvar androidpublisher_v2;\n(function (androidpublisher_v2) {\n    /**\n     * Google Play Developer API\n     *\n     * Accesses Android application developers&#39; Google Play accounts.\n     *\n     * @example\n     * const {google} = require('googleapis');\n     * const androidpublisher = google.androidpublisher('v2');\n     *\n     * @namespace androidpublisher\n     * @type {Function}\n     * @version v2\n     * @variation v2\n     * @param {object=} options Options for Androidpublisher\n     */\n    class Androidpublisher {\n        constructor(options, google) {\n            this.context = { _options: options || {}, google };\n            this.edits = new Resource$Edits(this.context);\n            this.inappproducts = new Resource$Inappproducts(this.context);\n            this.orders = new Resource$Orders(this.context);\n            this.purchases = new Resource$Purchases(this.context);\n            this.reviews = new Resource$Reviews(this.context);\n        }\n    }\n    androidpublisher_v2.Androidpublisher = Androidpublisher;\n    class Resource$Edits {\n        constructor(context) {\n            this.context = context;\n            this.apklistings = new Resource$Edits$Apklistings(this.context);\n            this.apks = new Resource$Edits$Apks(this.context);\n            this.bundles = new Resource$Edits$Bundles(this.context);\n            this.deobfuscationfiles =\n                new Resource$Edits$Deobfuscationfiles(this.context);\n            this.details = new Resource$Edits$Details(this.context);\n            this.expansionfiles = new Resource$Edits$Expansionfiles(this.context);\n            this.images = new Resource$Edits$Images(this.context);\n            this.listings = new Resource$Edits$Listings(this.context);\n            this.testers = new Resource$Edits$Testers(this.context);\n            this.tracks = new Resource$Edits$Tracks(this.context);\n        }\n        commit(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/androidpublisher/v2/applications/{packageName}/edits/{editId}:commit')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST'\n                }, options),\n                params,\n                requiredParams: ['packageName', 'editId'],\n                pathParams: ['editId', 'packageName'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        delete(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/androidpublisher/v2/applications/{packageName}/edits/{editId}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'DELETE'\n                }, options),\n                params,\n                requiredParams: ['packageName', 'editId'],\n                pathParams: ['editId', 'packageName'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/androidpublisher/v2/applications/{packageName}/edits/{editId}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['packageName', 'editId'],\n                pathParams: ['editId', 'packageName'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        insert(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/androidpublisher/v2/applications/{packageName}/edits')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST'\n                }, options),\n                params,\n                requiredParams: ['packageName'],\n                pathParams: ['packageName'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        validate(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/androidpublisher/v2/applications/{packageName}/edits/{editId}:validate')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST'\n                }, options),\n                params,\n                requiredParams: ['packageName', 'editId'],\n                pathParams: ['editId', 'packageName'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    androidpublisher_v2.Resource$Edits = Resource$Edits;\n    class Resource$Edits$Apklistings {\n        constructor(context) {\n            this.context = context;\n        }\n        delete(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/androidpublisher/v2/applications/{packageName}/edits/{editId}/apks/{apkVersionCode}/listings/{language}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'DELETE'\n                }, options),\n                params,\n                requiredParams: ['packageName', 'editId', 'apkVersionCode', 'language'],\n                pathParams: ['apkVersionCode', 'editId', 'language', 'packageName'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        deleteall(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/androidpublisher/v2/applications/{packageName}/edits/{editId}/apks/{apkVersionCode}/listings')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'DELETE'\n                }, options),\n                params,\n                requiredParams: ['packageName', 'editId', 'apkVersionCode'],\n                pathParams: ['apkVersionCode', 'editId', 'packageName'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/androidpublisher/v2/applications/{packageName}/edits/{editId}/apks/{apkVersionCode}/listings/{language}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['packageName', 'editId', 'apkVersionCode', 'language'],\n                pathParams: ['apkVersionCode', 'editId', 'language', 'packageName'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/androidpublisher/v2/applications/{packageName}/edits/{editId}/apks/{apkVersionCode}/listings')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['packageName', 'editId', 'apkVersionCode'],\n                pathParams: ['apkVersionCode', 'editId', 'packageName'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        patch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/androidpublisher/v2/applications/{packageName}/edits/{editId}/apks/{apkVersionCode}/listings/{language}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PATCH'\n                }, options),\n                params,\n                requiredParams: ['packageName', 'editId', 'apkVersionCode', 'language'],\n                pathParams: ['apkVersionCode', 'editId', 'language', 'packageName'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        update(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/androidpublisher/v2/applications/{packageName}/edits/{editId}/apks/{apkVersionCode}/listings/{language}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PUT'\n                }, options),\n                params,\n                requiredParams: ['packageName', 'editId', 'apkVersionCode', 'language'],\n                pathParams: ['apkVersionCode', 'editId', 'language', 'packageName'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    androidpublisher_v2.Resource$Edits$Apklistings = Resource$Edits$Apklistings;\n    class Resource$Edits$Apks {\n        constructor(context) {\n            this.context = context;\n        }\n        addexternallyhosted(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/androidpublisher/v2/applications/{packageName}/edits/{editId}/apks/externallyHosted')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST'\n                }, options),\n                params,\n                requiredParams: ['packageName', 'editId'],\n                pathParams: ['editId', 'packageName'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/androidpublisher/v2/applications/{packageName}/edits/{editId}/apks')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['packageName', 'editId'],\n                pathParams: ['editId', 'packageName'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        upload(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/androidpublisher/v2/applications/{packageName}/edits/{editId}/apks')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST'\n                }, options),\n                params,\n                mediaUrl: (rootUrl +\n                    '/upload/androidpublisher/v2/applications/{packageName}/edits/{editId}/apks')\n                    .replace(/([^:]\\/)\\/+/g, '$1'),\n                requiredParams: ['packageName', 'editId'],\n                pathParams: ['editId', 'packageName'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    androidpublisher_v2.Resource$Edits$Apks = Resource$Edits$Apks;\n    class Resource$Edits$Bundles {\n        constructor(context) {\n            this.context = context;\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/androidpublisher/v2/applications/{packageName}/edits/{editId}/bundles')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['packageName', 'editId'],\n                pathParams: ['editId', 'packageName'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        upload(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/androidpublisher/v2/applications/{packageName}/edits/{editId}/bundles')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST'\n                }, options),\n                params,\n                mediaUrl: (rootUrl +\n                    '/upload/androidpublisher/v2/applications/{packageName}/edits/{editId}/bundles')\n                    .replace(/([^:]\\/)\\/+/g, '$1'),\n                requiredParams: ['packageName', 'editId'],\n                pathParams: ['editId', 'packageName'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    androidpublisher_v2.Resource$Edits$Bundles = Resource$Edits$Bundles;\n    class Resource$Edits$Deobfuscationfiles {\n        constructor(context) {\n            this.context = context;\n        }\n        upload(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/androidpublisher/v2/applications/{packageName}/edits/{editId}/apks/{apkVersionCode}/deobfuscationFiles/{deobfuscationFileType}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST'\n                }, options),\n                params,\n                mediaUrl: (rootUrl +\n                    '/upload/androidpublisher/v2/applications/{packageName}/edits/{editId}/apks/{apkVersionCode}/deobfuscationFiles/{deobfuscationFileType}')\n                    .replace(/([^:]\\/)\\/+/g, '$1'),\n                requiredParams: [\n                    'packageName', 'editId', 'apkVersionCode', 'deobfuscationFileType'\n                ],\n                pathParams: [\n                    'apkVersionCode', 'deobfuscationFileType', 'editId', 'packageName'\n                ],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    androidpublisher_v2.Resource$Edits$Deobfuscationfiles = Resource$Edits$Deobfuscationfiles;\n    class Resource$Edits$Details {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/androidpublisher/v2/applications/{packageName}/edits/{editId}/details')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['packageName', 'editId'],\n                pathParams: ['editId', 'packageName'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        patch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/androidpublisher/v2/applications/{packageName}/edits/{editId}/details')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PATCH'\n                }, options),\n                params,\n                requiredParams: ['packageName', 'editId'],\n                pathParams: ['editId', 'packageName'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        update(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/androidpublisher/v2/applications/{packageName}/edits/{editId}/details')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PUT'\n                }, options),\n                params,\n                requiredParams: ['packageName', 'editId'],\n                pathParams: ['editId', 'packageName'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    androidpublisher_v2.Resource$Edits$Details = Resource$Edits$Details;\n    class Resource$Edits$Expansionfiles {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/androidpublisher/v2/applications/{packageName}/edits/{editId}/apks/{apkVersionCode}/expansionFiles/{expansionFileType}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['packageName', 'editId', 'apkVersionCode', 'expansionFileType'],\n                pathParams: ['apkVersionCode', 'editId', 'expansionFileType', 'packageName'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        patch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/androidpublisher/v2/applications/{packageName}/edits/{editId}/apks/{apkVersionCode}/expansionFiles/{expansionFileType}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PATCH'\n                }, options),\n                params,\n                requiredParams: ['packageName', 'editId', 'apkVersionCode', 'expansionFileType'],\n                pathParams: ['apkVersionCode', 'editId', 'expansionFileType', 'packageName'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        update(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/androidpublisher/v2/applications/{packageName}/edits/{editId}/apks/{apkVersionCode}/expansionFiles/{expansionFileType}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PUT'\n                }, options),\n                params,\n                requiredParams: ['packageName', 'editId', 'apkVersionCode', 'expansionFileType'],\n                pathParams: ['apkVersionCode', 'editId', 'expansionFileType', 'packageName'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        upload(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/androidpublisher/v2/applications/{packageName}/edits/{editId}/apks/{apkVersionCode}/expansionFiles/{expansionFileType}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST'\n                }, options),\n                params,\n                mediaUrl: (rootUrl +\n                    '/upload/androidpublisher/v2/applications/{packageName}/edits/{editId}/apks/{apkVersionCode}/expansionFiles/{expansionFileType}')\n                    .replace(/([^:]\\/)\\/+/g, '$1'),\n                requiredParams: ['packageName', 'editId', 'apkVersionCode', 'expansionFileType'],\n                pathParams: ['apkVersionCode', 'editId', 'expansionFileType', 'packageName'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    androidpublisher_v2.Resource$Edits$Expansionfiles = Resource$Edits$Expansionfiles;\n    class Resource$Edits$Images {\n        constructor(context) {\n            this.context = context;\n        }\n        delete(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/androidpublisher/v2/applications/{packageName}/edits/{editId}/listings/{language}/{imageType}/{imageId}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'DELETE'\n                }, options),\n                params,\n                requiredParams: ['packageName', 'editId', 'language', 'imageType', 'imageId'],\n                pathParams: ['editId', 'imageId', 'imageType', 'language', 'packageName'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        deleteall(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/androidpublisher/v2/applications/{packageName}/edits/{editId}/listings/{language}/{imageType}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'DELETE'\n                }, options),\n                params,\n                requiredParams: ['packageName', 'editId', 'language', 'imageType'],\n                pathParams: ['editId', 'imageType', 'language', 'packageName'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/androidpublisher/v2/applications/{packageName}/edits/{editId}/listings/{language}/{imageType}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['packageName', 'editId', 'language', 'imageType'],\n                pathParams: ['editId', 'imageType', 'language', 'packageName'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        upload(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/androidpublisher/v2/applications/{packageName}/edits/{editId}/listings/{language}/{imageType}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST'\n                }, options),\n                params,\n                mediaUrl: (rootUrl +\n                    '/upload/androidpublisher/v2/applications/{packageName}/edits/{editId}/listings/{language}/{imageType}')\n                    .replace(/([^:]\\/)\\/+/g, '$1'),\n                requiredParams: ['packageName', 'editId', 'language', 'imageType'],\n                pathParams: ['editId', 'imageType', 'language', 'packageName'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    androidpublisher_v2.Resource$Edits$Images = Resource$Edits$Images;\n    class Resource$Edits$Listings {\n        constructor(context) {\n            this.context = context;\n        }\n        delete(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/androidpublisher/v2/applications/{packageName}/edits/{editId}/listings/{language}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'DELETE'\n                }, options),\n                params,\n                requiredParams: ['packageName', 'editId', 'language'],\n                pathParams: ['editId', 'language', 'packageName'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        deleteall(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/androidpublisher/v2/applications/{packageName}/edits/{editId}/listings')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'DELETE'\n                }, options),\n                params,\n                requiredParams: ['packageName', 'editId'],\n                pathParams: ['editId', 'packageName'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/androidpublisher/v2/applications/{packageName}/edits/{editId}/listings/{language}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['packageName', 'editId', 'language'],\n                pathParams: ['editId', 'language', 'packageName'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/androidpublisher/v2/applications/{packageName}/edits/{editId}/listings')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['packageName', 'editId'],\n                pathParams: ['editId', 'packageName'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        patch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/androidpublisher/v2/applications/{packageName}/edits/{editId}/listings/{language}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PATCH'\n                }, options),\n                params,\n                requiredParams: ['packageName', 'editId', 'language'],\n                pathParams: ['editId', 'language', 'packageName'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        update(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/androidpublisher/v2/applications/{packageName}/edits/{editId}/listings/{language}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PUT'\n                }, options),\n                params,\n                requiredParams: ['packageName', 'editId', 'language'],\n                pathParams: ['editId', 'language', 'packageName'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    androidpublisher_v2.Resource$Edits$Listings = Resource$Edits$Listings;\n    class Resource$Edits$Testers {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/androidpublisher/v2/applications/{packageName}/edits/{editId}/testers/{track}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['packageName', 'editId', 'track'],\n                pathParams: ['editId', 'packageName', 'track'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        patch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/androidpublisher/v2/applications/{packageName}/edits/{editId}/testers/{track}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PATCH'\n                }, options),\n                params,\n                requiredParams: ['packageName', 'editId', 'track'],\n                pathParams: ['editId', 'packageName', 'track'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        update(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/androidpublisher/v2/applications/{packageName}/edits/{editId}/testers/{track}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PUT'\n                }, options),\n                params,\n                requiredParams: ['packageName', 'editId', 'track'],\n                pathParams: ['editId', 'packageName', 'track'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    androidpublisher_v2.Resource$Edits$Testers = Resource$Edits$Testers;\n    class Resource$Edits$Tracks {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/androidpublisher/v2/applications/{packageName}/edits/{editId}/tracks/{track}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['packageName', 'editId', 'track'],\n                pathParams: ['editId', 'packageName', 'track'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/androidpublisher/v2/applications/{packageName}/edits/{editId}/tracks')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['packageName', 'editId'],\n                pathParams: ['editId', 'packageName'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        patch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/androidpublisher/v2/applications/{packageName}/edits/{editId}/tracks/{track}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PATCH'\n                }, options),\n                params,\n                requiredParams: ['packageName', 'editId', 'track'],\n                pathParams: ['editId', 'packageName', 'track'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        update(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/androidpublisher/v2/applications/{packageName}/edits/{editId}/tracks/{track}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PUT'\n                }, options),\n                params,\n                requiredParams: ['packageName', 'editId', 'track'],\n                pathParams: ['editId', 'packageName', 'track'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    androidpublisher_v2.Resource$Edits$Tracks = Resource$Edits$Tracks;\n    class Resource$Inappproducts {\n        constructor(context) {\n            this.context = context;\n        }\n        delete(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/androidpublisher/v2/applications/{packageName}/inappproducts/{sku}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'DELETE'\n                }, options),\n                params,\n                requiredParams: ['packageName', 'sku'],\n                pathParams: ['packageName', 'sku'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/androidpublisher/v2/applications/{packageName}/inappproducts/{sku}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['packageName', 'sku'],\n                pathParams: ['packageName', 'sku'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        insert(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/androidpublisher/v2/applications/{packageName}/inappproducts')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST'\n                }, options),\n                params,\n                requiredParams: ['packageName'],\n                pathParams: ['packageName'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/androidpublisher/v2/applications/{packageName}/inappproducts')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['packageName'],\n                pathParams: ['packageName'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        patch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/androidpublisher/v2/applications/{packageName}/inappproducts/{sku}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PATCH'\n                }, options),\n                params,\n                requiredParams: ['packageName', 'sku'],\n                pathParams: ['packageName', 'sku'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        update(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/androidpublisher/v2/applications/{packageName}/inappproducts/{sku}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PUT'\n                }, options),\n                params,\n                requiredParams: ['packageName', 'sku'],\n                pathParams: ['packageName', 'sku'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    androidpublisher_v2.Resource$Inappproducts = Resource$Inappproducts;\n    class Resource$Orders {\n        constructor(context) {\n            this.context = context;\n        }\n        refund(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/androidpublisher/v2/applications/{packageName}/orders/{orderId}:refund')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST'\n                }, options),\n                params,\n                requiredParams: ['packageName', 'orderId'],\n                pathParams: ['orderId', 'packageName'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    androidpublisher_v2.Resource$Orders = Resource$Orders;\n    class Resource$Purchases {\n        constructor(context) {\n            this.context = context;\n            this.products = new Resource$Purchases$Products(this.context);\n            this.subscriptions = new Resource$Purchases$Subscriptions(this.context);\n            this.voidedpurchases =\n                new Resource$Purchases$Voidedpurchases(this.context);\n        }\n    }\n    androidpublisher_v2.Resource$Purchases = Resource$Purchases;\n    class Resource$Purchases$Products {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/androidpublisher/v2/applications/{packageName}/purchases/products/{productId}/tokens/{token}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['packageName', 'productId', 'token'],\n                pathParams: ['packageName', 'productId', 'token'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    androidpublisher_v2.Resource$Purchases$Products = Resource$Purchases$Products;\n    class Resource$Purchases$Subscriptions {\n        constructor(context) {\n            this.context = context;\n        }\n        cancel(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/androidpublisher/v2/applications/{packageName}/purchases/subscriptions/{subscriptionId}/tokens/{token}:cancel')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST'\n                }, options),\n                params,\n                requiredParams: ['packageName', 'subscriptionId', 'token'],\n                pathParams: ['packageName', 'subscriptionId', 'token'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        defer(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/androidpublisher/v2/applications/{packageName}/purchases/subscriptions/{subscriptionId}/tokens/{token}:defer')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST'\n                }, options),\n                params,\n                requiredParams: ['packageName', 'subscriptionId', 'token'],\n                pathParams: ['packageName', 'subscriptionId', 'token'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/androidpublisher/v2/applications/{packageName}/purchases/subscriptions/{subscriptionId}/tokens/{token}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['packageName', 'subscriptionId', 'token'],\n                pathParams: ['packageName', 'subscriptionId', 'token'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        refund(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/androidpublisher/v2/applications/{packageName}/purchases/subscriptions/{subscriptionId}/tokens/{token}:refund')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST'\n                }, options),\n                params,\n                requiredParams: ['packageName', 'subscriptionId', 'token'],\n                pathParams: ['packageName', 'subscriptionId', 'token'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        revoke(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/androidpublisher/v2/applications/{packageName}/purchases/subscriptions/{subscriptionId}/tokens/{token}:revoke')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST'\n                }, options),\n                params,\n                requiredParams: ['packageName', 'subscriptionId', 'token'],\n                pathParams: ['packageName', 'subscriptionId', 'token'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    androidpublisher_v2.Resource$Purchases$Subscriptions = Resource$Purchases$Subscriptions;\n    class Resource$Purchases$Voidedpurchases {\n        constructor(context) {\n            this.context = context;\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/androidpublisher/v2/applications/{packageName}/purchases/voidedpurchases')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['packageName'],\n                pathParams: ['packageName'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    androidpublisher_v2.Resource$Purchases$Voidedpurchases = Resource$Purchases$Voidedpurchases;\n    class Resource$Reviews {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/androidpublisher/v2/applications/{packageName}/reviews/{reviewId}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['packageName', 'reviewId'],\n                pathParams: ['packageName', 'reviewId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/androidpublisher/v2/applications/{packageName}/reviews')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['packageName'],\n                pathParams: ['packageName'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        reply(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/androidpublisher/v2/applications/{packageName}/reviews/{reviewId}:reply')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST'\n                }, options),\n                params,\n                requiredParams: ['packageName', 'reviewId'],\n                pathParams: ['packageName', 'reviewId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    androidpublisher_v2.Resource$Reviews = Resource$Reviews;\n})(androidpublisher_v2 = exports.androidpublisher_v2 || (exports.androidpublisher_v2 = {}));\n//# sourceMappingURL=v2.js.map"]},"metadata":{},"sourceType":"script"}