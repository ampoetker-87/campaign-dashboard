{"ast":null,"code":"\"use strict\";\n/**\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar _createClass = require(\"/Users/amandapoetker-alles/Desktop/campaign-dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _classCallCheck = require(\"/Users/amandapoetker-alles/Desktop/campaign-dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar googleapis_common_1 = require(\"googleapis-common\"); // tslint:disable: no-any\n// tslint:disable: class-name\n// tslint:disable: variable-name\n// tslint:disable: jsdoc-format\n// tslint:disable: no-namespace\n\n\nvar books_v1;\n\n(function (books_v1) {\n  /**\n   * Books API\n   *\n   * Searches for books and manages your Google Books library.\n   *\n   * @example\n   * const {google} = require('googleapis');\n   * const books = google.books('v1');\n   *\n   * @namespace books\n   * @type {Function}\n   * @version v1\n   * @variation v1\n   * @param {object=} options Options for Books\n   */\n  var Books = function Books(options, google) {\n    _classCallCheck(this, Books);\n\n    this.context = {\n      _options: options || {},\n      google\n    };\n    this.bookshelves = new Resource$Bookshelves(this.context);\n    this.cloudloading = new Resource$Cloudloading(this.context);\n    this.dictionary = new Resource$Dictionary(this.context);\n    this.familysharing = new Resource$Familysharing(this.context);\n    this.layers = new Resource$Layers(this.context);\n    this.myconfig = new Resource$Myconfig(this.context);\n    this.mylibrary = new Resource$Mylibrary(this.context);\n    this.notification = new Resource$Notification(this.context);\n    this.onboarding = new Resource$Onboarding(this.context);\n    this.personalizedstream = new Resource$Personalizedstream(this.context);\n    this.promooffer = new Resource$Promooffer(this.context);\n    this.series = new Resource$Series(this.context);\n    this.volumes = new Resource$Volumes(this.context);\n  };\n\n  books_v1.Books = Books;\n\n  var Resource$Bookshelves = /*#__PURE__*/function () {\n    function Resource$Bookshelves(context) {\n      _classCallCheck(this, Resource$Bookshelves);\n\n      this.context = context;\n      this.volumes = new Resource$Bookshelves$Volumes(this.context);\n    }\n\n    _createClass(Resource$Bookshelves, [{\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/books/v1/users/{userId}/bookshelves/{shelf}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['userId', 'shelf'],\n          pathParams: ['shelf', 'userId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/books/v1/users/{userId}/bookshelves').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['userId'],\n          pathParams: ['userId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Bookshelves;\n  }();\n\n  books_v1.Resource$Bookshelves = Resource$Bookshelves;\n\n  var Resource$Bookshelves$Volumes = /*#__PURE__*/function () {\n    function Resource$Bookshelves$Volumes(context) {\n      _classCallCheck(this, Resource$Bookshelves$Volumes);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Bookshelves$Volumes, [{\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/books/v1/users/{userId}/bookshelves/{shelf}/volumes').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['userId', 'shelf'],\n          pathParams: ['shelf', 'userId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Bookshelves$Volumes;\n  }();\n\n  books_v1.Resource$Bookshelves$Volumes = Resource$Bookshelves$Volumes;\n\n  var Resource$Cloudloading = /*#__PURE__*/function () {\n    function Resource$Cloudloading(context) {\n      _classCallCheck(this, Resource$Cloudloading);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Cloudloading, [{\n      key: \"addBook\",\n      value: function addBook(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/books/v1/cloudloading/addBook').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: [],\n          pathParams: [],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"deleteBook\",\n      value: function deleteBook(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/books/v1/cloudloading/deleteBook').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['volumeId'],\n          pathParams: [],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"updateBook\",\n      value: function updateBook(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/books/v1/cloudloading/updateBook').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: [],\n          pathParams: [],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Cloudloading;\n  }();\n\n  books_v1.Resource$Cloudloading = Resource$Cloudloading;\n\n  var Resource$Dictionary = /*#__PURE__*/function () {\n    function Resource$Dictionary(context) {\n      _classCallCheck(this, Resource$Dictionary);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Dictionary, [{\n      key: \"listOfflineMetadata\",\n      value: function listOfflineMetadata(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/books/v1/dictionary/listOfflineMetadata').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['cpksver'],\n          pathParams: [],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Dictionary;\n  }();\n\n  books_v1.Resource$Dictionary = Resource$Dictionary;\n\n  var Resource$Familysharing = /*#__PURE__*/function () {\n    function Resource$Familysharing(context) {\n      _classCallCheck(this, Resource$Familysharing);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Familysharing, [{\n      key: \"getFamilyInfo\",\n      value: function getFamilyInfo(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/books/v1/familysharing/getFamilyInfo').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: [],\n          pathParams: [],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"share\",\n      value: function share(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/books/v1/familysharing/share').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: [],\n          pathParams: [],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"unshare\",\n      value: function unshare(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/books/v1/familysharing/unshare').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: [],\n          pathParams: [],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Familysharing;\n  }();\n\n  books_v1.Resource$Familysharing = Resource$Familysharing;\n\n  var Resource$Layers = /*#__PURE__*/function () {\n    function Resource$Layers(context) {\n      _classCallCheck(this, Resource$Layers);\n\n      this.context = context;\n      this.annotationData = new Resource$Layers$Annotationdata(this.context);\n      this.volumeAnnotations = new Resource$Layers$Volumeannotations(this.context);\n    }\n\n    _createClass(Resource$Layers, [{\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/books/v1/volumes/{volumeId}/layersummary/{summaryId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['volumeId', 'summaryId'],\n          pathParams: ['summaryId', 'volumeId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/books/v1/volumes/{volumeId}/layersummary').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['volumeId'],\n          pathParams: ['volumeId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Layers;\n  }();\n\n  books_v1.Resource$Layers = Resource$Layers;\n\n  var Resource$Layers$Annotationdata = /*#__PURE__*/function () {\n    function Resource$Layers$Annotationdata(context) {\n      _classCallCheck(this, Resource$Layers$Annotationdata);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Layers$Annotationdata, [{\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/books/v1/volumes/{volumeId}/layers/{layerId}/data/{annotationDataId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['volumeId', 'layerId', 'annotationDataId', 'contentVersion'],\n          pathParams: ['annotationDataId', 'layerId', 'volumeId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/books/v1/volumes/{volumeId}/layers/{layerId}/data').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['volumeId', 'layerId', 'contentVersion'],\n          pathParams: ['layerId', 'volumeId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Layers$Annotationdata;\n  }();\n\n  books_v1.Resource$Layers$Annotationdata = Resource$Layers$Annotationdata;\n\n  var Resource$Layers$Volumeannotations = /*#__PURE__*/function () {\n    function Resource$Layers$Volumeannotations(context) {\n      _classCallCheck(this, Resource$Layers$Volumeannotations);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Layers$Volumeannotations, [{\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/books/v1/volumes/{volumeId}/layers/{layerId}/annotations/{annotationId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['volumeId', 'layerId', 'annotationId'],\n          pathParams: ['annotationId', 'layerId', 'volumeId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/books/v1/volumes/{volumeId}/layers/{layerId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['volumeId', 'layerId', 'contentVersion'],\n          pathParams: ['layerId', 'volumeId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Layers$Volumeannotations;\n  }();\n\n  books_v1.Resource$Layers$Volumeannotations = Resource$Layers$Volumeannotations;\n\n  var Resource$Myconfig = /*#__PURE__*/function () {\n    function Resource$Myconfig(context) {\n      _classCallCheck(this, Resource$Myconfig);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Myconfig, [{\n      key: \"getUserSettings\",\n      value: function getUserSettings(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/books/v1/myconfig/getUserSettings').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: [],\n          pathParams: [],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"releaseDownloadAccess\",\n      value: function releaseDownloadAccess(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/books/v1/myconfig/releaseDownloadAccess').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['volumeIds', 'cpksver'],\n          pathParams: [],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"requestAccess\",\n      value: function requestAccess(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/books/v1/myconfig/requestAccess').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['source', 'volumeId', 'nonce', 'cpksver'],\n          pathParams: [],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"syncVolumeLicenses\",\n      value: function syncVolumeLicenses(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/books/v1/myconfig/syncVolumeLicenses').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['source', 'nonce', 'cpksver'],\n          pathParams: [],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"updateUserSettings\",\n      value: function updateUserSettings(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/books/v1/myconfig/updateUserSettings').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: [],\n          pathParams: [],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Myconfig;\n  }();\n\n  books_v1.Resource$Myconfig = Resource$Myconfig;\n\n  var Resource$Mylibrary = function Resource$Mylibrary(context) {\n    _classCallCheck(this, Resource$Mylibrary);\n\n    this.context = context;\n    this.annotations = new Resource$Mylibrary$Annotations(this.context);\n    this.bookshelves = new Resource$Mylibrary$Bookshelves(this.context);\n    this.readingpositions = new Resource$Mylibrary$Readingpositions(this.context);\n  };\n\n  books_v1.Resource$Mylibrary = Resource$Mylibrary;\n\n  var Resource$Mylibrary$Annotations = /*#__PURE__*/function () {\n    function Resource$Mylibrary$Annotations(context) {\n      _classCallCheck(this, Resource$Mylibrary$Annotations);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Mylibrary$Annotations, [{\n      key: \"delete\",\n      value: function _delete(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/books/v1/mylibrary/annotations/{annotationId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'DELETE'\n          }, options),\n          params,\n          requiredParams: ['annotationId'],\n          pathParams: ['annotationId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"insert\",\n      value: function insert(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/books/v1/mylibrary/annotations').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: [],\n          pathParams: [],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/books/v1/mylibrary/annotations').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: [],\n          pathParams: [],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"summary\",\n      value: function summary(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/books/v1/mylibrary/annotations/summary').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['layerIds', 'volumeId'],\n          pathParams: [],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"update\",\n      value: function update(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/books/v1/mylibrary/annotations/{annotationId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PUT'\n          }, options),\n          params,\n          requiredParams: ['annotationId'],\n          pathParams: ['annotationId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Mylibrary$Annotations;\n  }();\n\n  books_v1.Resource$Mylibrary$Annotations = Resource$Mylibrary$Annotations;\n\n  var Resource$Mylibrary$Bookshelves = /*#__PURE__*/function () {\n    function Resource$Mylibrary$Bookshelves(context) {\n      _classCallCheck(this, Resource$Mylibrary$Bookshelves);\n\n      this.context = context;\n      this.volumes = new Resource$Mylibrary$Bookshelves$Volumes(this.context);\n    }\n\n    _createClass(Resource$Mylibrary$Bookshelves, [{\n      key: \"addVolume\",\n      value: function addVolume(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/books/v1/mylibrary/bookshelves/{shelf}/addVolume').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['shelf', 'volumeId'],\n          pathParams: ['shelf'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"clearVolumes\",\n      value: function clearVolumes(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/books/v1/mylibrary/bookshelves/{shelf}/clearVolumes').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['shelf'],\n          pathParams: ['shelf'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/books/v1/mylibrary/bookshelves/{shelf}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['shelf'],\n          pathParams: ['shelf'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/books/v1/mylibrary/bookshelves').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: [],\n          pathParams: [],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"moveVolume\",\n      value: function moveVolume(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/books/v1/mylibrary/bookshelves/{shelf}/moveVolume').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['shelf', 'volumeId', 'volumePosition'],\n          pathParams: ['shelf'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"removeVolume\",\n      value: function removeVolume(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/books/v1/mylibrary/bookshelves/{shelf}/removeVolume').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['shelf', 'volumeId'],\n          pathParams: ['shelf'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Mylibrary$Bookshelves;\n  }();\n\n  books_v1.Resource$Mylibrary$Bookshelves = Resource$Mylibrary$Bookshelves;\n\n  var Resource$Mylibrary$Bookshelves$Volumes = /*#__PURE__*/function () {\n    function Resource$Mylibrary$Bookshelves$Volumes(context) {\n      _classCallCheck(this, Resource$Mylibrary$Bookshelves$Volumes);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Mylibrary$Bookshelves$Volumes, [{\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/books/v1/mylibrary/bookshelves/{shelf}/volumes').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['shelf'],\n          pathParams: ['shelf'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Mylibrary$Bookshelves$Volumes;\n  }();\n\n  books_v1.Resource$Mylibrary$Bookshelves$Volumes = Resource$Mylibrary$Bookshelves$Volumes;\n\n  var Resource$Mylibrary$Readingpositions = /*#__PURE__*/function () {\n    function Resource$Mylibrary$Readingpositions(context) {\n      _classCallCheck(this, Resource$Mylibrary$Readingpositions);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Mylibrary$Readingpositions, [{\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/books/v1/mylibrary/readingpositions/{volumeId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['volumeId'],\n          pathParams: ['volumeId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"setPosition\",\n      value: function setPosition(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/books/v1/mylibrary/readingpositions/{volumeId}/setPosition').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['volumeId', 'timestamp', 'position'],\n          pathParams: ['volumeId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Mylibrary$Readingpositions;\n  }();\n\n  books_v1.Resource$Mylibrary$Readingpositions = Resource$Mylibrary$Readingpositions;\n\n  var Resource$Notification = /*#__PURE__*/function () {\n    function Resource$Notification(context) {\n      _classCallCheck(this, Resource$Notification);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Notification, [{\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/books/v1/notification/get').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['notification_id'],\n          pathParams: [],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Notification;\n  }();\n\n  books_v1.Resource$Notification = Resource$Notification;\n\n  var Resource$Onboarding = /*#__PURE__*/function () {\n    function Resource$Onboarding(context) {\n      _classCallCheck(this, Resource$Onboarding);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Onboarding, [{\n      key: \"listCategories\",\n      value: function listCategories(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/books/v1/onboarding/listCategories').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: [],\n          pathParams: [],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"listCategoryVolumes\",\n      value: function listCategoryVolumes(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/books/v1/onboarding/listCategoryVolumes').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: [],\n          pathParams: [],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Onboarding;\n  }();\n\n  books_v1.Resource$Onboarding = Resource$Onboarding;\n\n  var Resource$Personalizedstream = /*#__PURE__*/function () {\n    function Resource$Personalizedstream(context) {\n      _classCallCheck(this, Resource$Personalizedstream);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Personalizedstream, [{\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/books/v1/personalizedstream/get').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: [],\n          pathParams: [],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Personalizedstream;\n  }();\n\n  books_v1.Resource$Personalizedstream = Resource$Personalizedstream;\n\n  var Resource$Promooffer = /*#__PURE__*/function () {\n    function Resource$Promooffer(context) {\n      _classCallCheck(this, Resource$Promooffer);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Promooffer, [{\n      key: \"accept\",\n      value: function accept(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/books/v1/promooffer/accept').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: [],\n          pathParams: [],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"dismiss\",\n      value: function dismiss(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/books/v1/promooffer/dismiss').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: [],\n          pathParams: [],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/books/v1/promooffer/get').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: [],\n          pathParams: [],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Promooffer;\n  }();\n\n  books_v1.Resource$Promooffer = Resource$Promooffer;\n\n  var Resource$Series = /*#__PURE__*/function () {\n    function Resource$Series(context) {\n      _classCallCheck(this, Resource$Series);\n\n      this.context = context;\n      this.membership = new Resource$Series$Membership(this.context);\n    }\n\n    _createClass(Resource$Series, [{\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/books/v1/series/get').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['series_id'],\n          pathParams: [],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Series;\n  }();\n\n  books_v1.Resource$Series = Resource$Series;\n\n  var Resource$Series$Membership = /*#__PURE__*/function () {\n    function Resource$Series$Membership(context) {\n      _classCallCheck(this, Resource$Series$Membership);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Series$Membership, [{\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/books/v1/series/membership/get').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['series_id'],\n          pathParams: [],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Series$Membership;\n  }();\n\n  books_v1.Resource$Series$Membership = Resource$Series$Membership;\n\n  var Resource$Volumes = /*#__PURE__*/function () {\n    function Resource$Volumes(context) {\n      _classCallCheck(this, Resource$Volumes);\n\n      this.context = context;\n      this.associated = new Resource$Volumes$Associated(this.context);\n      this.mybooks = new Resource$Volumes$Mybooks(this.context);\n      this.recommended = new Resource$Volumes$Recommended(this.context);\n      this.useruploaded = new Resource$Volumes$Useruploaded(this.context);\n    }\n\n    _createClass(Resource$Volumes, [{\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/books/v1/volumes/{volumeId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['volumeId'],\n          pathParams: ['volumeId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/books/v1/volumes').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['q'],\n          pathParams: [],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Volumes;\n  }();\n\n  books_v1.Resource$Volumes = Resource$Volumes;\n\n  var Resource$Volumes$Associated = /*#__PURE__*/function () {\n    function Resource$Volumes$Associated(context) {\n      _classCallCheck(this, Resource$Volumes$Associated);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Volumes$Associated, [{\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/books/v1/volumes/{volumeId}/associated').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['volumeId'],\n          pathParams: ['volumeId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Volumes$Associated;\n  }();\n\n  books_v1.Resource$Volumes$Associated = Resource$Volumes$Associated;\n\n  var Resource$Volumes$Mybooks = /*#__PURE__*/function () {\n    function Resource$Volumes$Mybooks(context) {\n      _classCallCheck(this, Resource$Volumes$Mybooks);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Volumes$Mybooks, [{\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/books/v1/volumes/mybooks').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: [],\n          pathParams: [],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Volumes$Mybooks;\n  }();\n\n  books_v1.Resource$Volumes$Mybooks = Resource$Volumes$Mybooks;\n\n  var Resource$Volumes$Recommended = /*#__PURE__*/function () {\n    function Resource$Volumes$Recommended(context) {\n      _classCallCheck(this, Resource$Volumes$Recommended);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Volumes$Recommended, [{\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/books/v1/volumes/recommended').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: [],\n          pathParams: [],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"rate\",\n      value: function rate(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/books/v1/volumes/recommended/rate').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['rating', 'volumeId'],\n          pathParams: [],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Volumes$Recommended;\n  }();\n\n  books_v1.Resource$Volumes$Recommended = Resource$Volumes$Recommended;\n\n  var Resource$Volumes$Useruploaded = /*#__PURE__*/function () {\n    function Resource$Volumes$Useruploaded(context) {\n      _classCallCheck(this, Resource$Volumes$Useruploaded);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Volumes$Useruploaded, [{\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/books/v1/volumes/useruploaded').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: [],\n          pathParams: [],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Volumes$Useruploaded;\n  }();\n\n  books_v1.Resource$Volumes$Useruploaded = Resource$Volumes$Useruploaded;\n})(books_v1 = exports.books_v1 || (exports.books_v1 = {}));","map":{"version":3,"sources":["/Users/amandapoetker-alles/Desktop/campaign-dashboard/node_modules/googleapis/build/src/apis/books/v1.js"],"names":["Object","defineProperty","exports","value","googleapis_common_1","require","books_v1","Books","options","google","context","_options","bookshelves","Resource$Bookshelves","cloudloading","Resource$Cloudloading","dictionary","Resource$Dictionary","familysharing","Resource$Familysharing","layers","Resource$Layers","myconfig","Resource$Myconfig","mylibrary","Resource$Mylibrary","notification","Resource$Notification","onboarding","Resource$Onboarding","personalizedstream","Resource$Personalizedstream","promooffer","Resource$Promooffer","series","Resource$Series","volumes","Resource$Volumes","Resource$Bookshelves$Volumes","paramsOrCallback","optionsOrCallback","callback","params","rootUrl","parameters","assign","url","replace","method","requiredParams","pathParams","createAPIRequest","annotationData","Resource$Layers$Annotationdata","volumeAnnotations","Resource$Layers$Volumeannotations","annotations","Resource$Mylibrary$Annotations","Resource$Mylibrary$Bookshelves","readingpositions","Resource$Mylibrary$Readingpositions","Resource$Mylibrary$Bookshelves$Volumes","membership","Resource$Series$Membership","associated","Resource$Volumes$Associated","mybooks","Resource$Volumes$Mybooks","recommended","Resource$Volumes$Recommended","useruploaded","Resource$Volumes$Useruploaded"],"mappings":"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","sourcesContent":["\"use strict\";\n/**\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst googleapis_common_1 = require(\"googleapis-common\");\n// tslint:disable: no-any\n// tslint:disable: class-name\n// tslint:disable: variable-name\n// tslint:disable: jsdoc-format\n// tslint:disable: no-namespace\nvar books_v1;\n(function (books_v1) {\n    /**\n     * Books API\n     *\n     * Searches for books and manages your Google Books library.\n     *\n     * @example\n     * const {google} = require('googleapis');\n     * const books = google.books('v1');\n     *\n     * @namespace books\n     * @type {Function}\n     * @version v1\n     * @variation v1\n     * @param {object=} options Options for Books\n     */\n    class Books {\n        constructor(options, google) {\n            this.context = { _options: options || {}, google };\n            this.bookshelves = new Resource$Bookshelves(this.context);\n            this.cloudloading = new Resource$Cloudloading(this.context);\n            this.dictionary = new Resource$Dictionary(this.context);\n            this.familysharing = new Resource$Familysharing(this.context);\n            this.layers = new Resource$Layers(this.context);\n            this.myconfig = new Resource$Myconfig(this.context);\n            this.mylibrary = new Resource$Mylibrary(this.context);\n            this.notification = new Resource$Notification(this.context);\n            this.onboarding = new Resource$Onboarding(this.context);\n            this.personalizedstream = new Resource$Personalizedstream(this.context);\n            this.promooffer = new Resource$Promooffer(this.context);\n            this.series = new Resource$Series(this.context);\n            this.volumes = new Resource$Volumes(this.context);\n        }\n    }\n    books_v1.Books = Books;\n    class Resource$Bookshelves {\n        constructor(context) {\n            this.context = context;\n            this.volumes = new Resource$Bookshelves$Volumes(this.context);\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/books/v1/users/{userId}/bookshelves/{shelf}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['userId', 'shelf'],\n                pathParams: ['shelf', 'userId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/books/v1/users/{userId}/bookshelves')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['userId'],\n                pathParams: ['userId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    books_v1.Resource$Bookshelves = Resource$Bookshelves;\n    class Resource$Bookshelves$Volumes {\n        constructor(context) {\n            this.context = context;\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/books/v1/users/{userId}/bookshelves/{shelf}/volumes')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['userId', 'shelf'],\n                pathParams: ['shelf', 'userId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    books_v1.Resource$Bookshelves$Volumes = Resource$Bookshelves$Volumes;\n    class Resource$Cloudloading {\n        constructor(context) {\n            this.context = context;\n        }\n        addBook(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/books/v1/cloudloading/addBook')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST'\n                }, options),\n                params,\n                requiredParams: [],\n                pathParams: [],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        deleteBook(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/books/v1/cloudloading/deleteBook')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST'\n                }, options),\n                params,\n                requiredParams: ['volumeId'],\n                pathParams: [],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        updateBook(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/books/v1/cloudloading/updateBook')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST'\n                }, options),\n                params,\n                requiredParams: [],\n                pathParams: [],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    books_v1.Resource$Cloudloading = Resource$Cloudloading;\n    class Resource$Dictionary {\n        constructor(context) {\n            this.context = context;\n        }\n        listOfflineMetadata(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/books/v1/dictionary/listOfflineMetadata')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['cpksver'],\n                pathParams: [],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    books_v1.Resource$Dictionary = Resource$Dictionary;\n    class Resource$Familysharing {\n        constructor(context) {\n            this.context = context;\n        }\n        getFamilyInfo(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/books/v1/familysharing/getFamilyInfo')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: [],\n                pathParams: [],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        share(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/books/v1/familysharing/share')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST'\n                }, options),\n                params,\n                requiredParams: [],\n                pathParams: [],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        unshare(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/books/v1/familysharing/unshare')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST'\n                }, options),\n                params,\n                requiredParams: [],\n                pathParams: [],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    books_v1.Resource$Familysharing = Resource$Familysharing;\n    class Resource$Layers {\n        constructor(context) {\n            this.context = context;\n            this.annotationData = new Resource$Layers$Annotationdata(this.context);\n            this.volumeAnnotations =\n                new Resource$Layers$Volumeannotations(this.context);\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/books/v1/volumes/{volumeId}/layersummary/{summaryId}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['volumeId', 'summaryId'],\n                pathParams: ['summaryId', 'volumeId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/books/v1/volumes/{volumeId}/layersummary')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['volumeId'],\n                pathParams: ['volumeId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    books_v1.Resource$Layers = Resource$Layers;\n    class Resource$Layers$Annotationdata {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/books/v1/volumes/{volumeId}/layers/{layerId}/data/{annotationDataId}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['volumeId', 'layerId', 'annotationDataId', 'contentVersion'],\n                pathParams: ['annotationDataId', 'layerId', 'volumeId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/books/v1/volumes/{volumeId}/layers/{layerId}/data')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['volumeId', 'layerId', 'contentVersion'],\n                pathParams: ['layerId', 'volumeId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    books_v1.Resource$Layers$Annotationdata = Resource$Layers$Annotationdata;\n    class Resource$Layers$Volumeannotations {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/books/v1/volumes/{volumeId}/layers/{layerId}/annotations/{annotationId}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['volumeId', 'layerId', 'annotationId'],\n                pathParams: ['annotationId', 'layerId', 'volumeId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/books/v1/volumes/{volumeId}/layers/{layerId}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['volumeId', 'layerId', 'contentVersion'],\n                pathParams: ['layerId', 'volumeId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    books_v1.Resource$Layers$Volumeannotations = Resource$Layers$Volumeannotations;\n    class Resource$Myconfig {\n        constructor(context) {\n            this.context = context;\n        }\n        getUserSettings(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/books/v1/myconfig/getUserSettings')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: [],\n                pathParams: [],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        releaseDownloadAccess(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/books/v1/myconfig/releaseDownloadAccess')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST'\n                }, options),\n                params,\n                requiredParams: ['volumeIds', 'cpksver'],\n                pathParams: [],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        requestAccess(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/books/v1/myconfig/requestAccess')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST'\n                }, options),\n                params,\n                requiredParams: ['source', 'volumeId', 'nonce', 'cpksver'],\n                pathParams: [],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        syncVolumeLicenses(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/books/v1/myconfig/syncVolumeLicenses')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST'\n                }, options),\n                params,\n                requiredParams: ['source', 'nonce', 'cpksver'],\n                pathParams: [],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        updateUserSettings(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/books/v1/myconfig/updateUserSettings')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST'\n                }, options),\n                params,\n                requiredParams: [],\n                pathParams: [],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    books_v1.Resource$Myconfig = Resource$Myconfig;\n    class Resource$Mylibrary {\n        constructor(context) {\n            this.context = context;\n            this.annotations = new Resource$Mylibrary$Annotations(this.context);\n            this.bookshelves = new Resource$Mylibrary$Bookshelves(this.context);\n            this.readingpositions =\n                new Resource$Mylibrary$Readingpositions(this.context);\n        }\n    }\n    books_v1.Resource$Mylibrary = Resource$Mylibrary;\n    class Resource$Mylibrary$Annotations {\n        constructor(context) {\n            this.context = context;\n        }\n        delete(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/books/v1/mylibrary/annotations/{annotationId}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'DELETE'\n                }, options),\n                params,\n                requiredParams: ['annotationId'],\n                pathParams: ['annotationId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        insert(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/books/v1/mylibrary/annotations')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST'\n                }, options),\n                params,\n                requiredParams: [],\n                pathParams: [],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/books/v1/mylibrary/annotations')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: [],\n                pathParams: [],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        summary(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/books/v1/mylibrary/annotations/summary')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST'\n                }, options),\n                params,\n                requiredParams: ['layerIds', 'volumeId'],\n                pathParams: [],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        update(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/books/v1/mylibrary/annotations/{annotationId}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PUT'\n                }, options),\n                params,\n                requiredParams: ['annotationId'],\n                pathParams: ['annotationId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    books_v1.Resource$Mylibrary$Annotations = Resource$Mylibrary$Annotations;\n    class Resource$Mylibrary$Bookshelves {\n        constructor(context) {\n            this.context = context;\n            this.volumes = new Resource$Mylibrary$Bookshelves$Volumes(this.context);\n        }\n        addVolume(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/books/v1/mylibrary/bookshelves/{shelf}/addVolume')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST'\n                }, options),\n                params,\n                requiredParams: ['shelf', 'volumeId'],\n                pathParams: ['shelf'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        clearVolumes(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/books/v1/mylibrary/bookshelves/{shelf}/clearVolumes')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST'\n                }, options),\n                params,\n                requiredParams: ['shelf'],\n                pathParams: ['shelf'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/books/v1/mylibrary/bookshelves/{shelf}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['shelf'],\n                pathParams: ['shelf'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/books/v1/mylibrary/bookshelves')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: [],\n                pathParams: [],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        moveVolume(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/books/v1/mylibrary/bookshelves/{shelf}/moveVolume')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST'\n                }, options),\n                params,\n                requiredParams: ['shelf', 'volumeId', 'volumePosition'],\n                pathParams: ['shelf'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        removeVolume(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/books/v1/mylibrary/bookshelves/{shelf}/removeVolume')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST'\n                }, options),\n                params,\n                requiredParams: ['shelf', 'volumeId'],\n                pathParams: ['shelf'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    books_v1.Resource$Mylibrary$Bookshelves = Resource$Mylibrary$Bookshelves;\n    class Resource$Mylibrary$Bookshelves$Volumes {\n        constructor(context) {\n            this.context = context;\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/books/v1/mylibrary/bookshelves/{shelf}/volumes')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['shelf'],\n                pathParams: ['shelf'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    books_v1.Resource$Mylibrary$Bookshelves$Volumes = Resource$Mylibrary$Bookshelves$Volumes;\n    class Resource$Mylibrary$Readingpositions {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/books/v1/mylibrary/readingpositions/{volumeId}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['volumeId'],\n                pathParams: ['volumeId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        setPosition(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/books/v1/mylibrary/readingpositions/{volumeId}/setPosition')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST'\n                }, options),\n                params,\n                requiredParams: ['volumeId', 'timestamp', 'position'],\n                pathParams: ['volumeId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    books_v1.Resource$Mylibrary$Readingpositions = Resource$Mylibrary$Readingpositions;\n    class Resource$Notification {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/books/v1/notification/get')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['notification_id'],\n                pathParams: [],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    books_v1.Resource$Notification = Resource$Notification;\n    class Resource$Onboarding {\n        constructor(context) {\n            this.context = context;\n        }\n        listCategories(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/books/v1/onboarding/listCategories')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: [],\n                pathParams: [],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        listCategoryVolumes(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/books/v1/onboarding/listCategoryVolumes')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: [],\n                pathParams: [],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    books_v1.Resource$Onboarding = Resource$Onboarding;\n    class Resource$Personalizedstream {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/books/v1/personalizedstream/get')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: [],\n                pathParams: [],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    books_v1.Resource$Personalizedstream = Resource$Personalizedstream;\n    class Resource$Promooffer {\n        constructor(context) {\n            this.context = context;\n        }\n        accept(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/books/v1/promooffer/accept')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST'\n                }, options),\n                params,\n                requiredParams: [],\n                pathParams: [],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        dismiss(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/books/v1/promooffer/dismiss')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST'\n                }, options),\n                params,\n                requiredParams: [],\n                pathParams: [],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/books/v1/promooffer/get')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: [],\n                pathParams: [],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    books_v1.Resource$Promooffer = Resource$Promooffer;\n    class Resource$Series {\n        constructor(context) {\n            this.context = context;\n            this.membership = new Resource$Series$Membership(this.context);\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/books/v1/series/get')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['series_id'],\n                pathParams: [],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    books_v1.Resource$Series = Resource$Series;\n    class Resource$Series$Membership {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/books/v1/series/membership/get')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['series_id'],\n                pathParams: [],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    books_v1.Resource$Series$Membership = Resource$Series$Membership;\n    class Resource$Volumes {\n        constructor(context) {\n            this.context = context;\n            this.associated = new Resource$Volumes$Associated(this.context);\n            this.mybooks = new Resource$Volumes$Mybooks(this.context);\n            this.recommended = new Resource$Volumes$Recommended(this.context);\n            this.useruploaded = new Resource$Volumes$Useruploaded(this.context);\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/books/v1/volumes/{volumeId}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['volumeId'],\n                pathParams: ['volumeId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/books/v1/volumes').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['q'],\n                pathParams: [],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    books_v1.Resource$Volumes = Resource$Volumes;\n    class Resource$Volumes$Associated {\n        constructor(context) {\n            this.context = context;\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/books/v1/volumes/{volumeId}/associated')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['volumeId'],\n                pathParams: ['volumeId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    books_v1.Resource$Volumes$Associated = Resource$Volumes$Associated;\n    class Resource$Volumes$Mybooks {\n        constructor(context) {\n            this.context = context;\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/books/v1/volumes/mybooks')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: [],\n                pathParams: [],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    books_v1.Resource$Volumes$Mybooks = Resource$Volumes$Mybooks;\n    class Resource$Volumes$Recommended {\n        constructor(context) {\n            this.context = context;\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/books/v1/volumes/recommended')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: [],\n                pathParams: [],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        rate(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/books/v1/volumes/recommended/rate')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST'\n                }, options),\n                params,\n                requiredParams: ['rating', 'volumeId'],\n                pathParams: [],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    books_v1.Resource$Volumes$Recommended = Resource$Volumes$Recommended;\n    class Resource$Volumes$Useruploaded {\n        constructor(context) {\n            this.context = context;\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/books/v1/volumes/useruploaded')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: [],\n                pathParams: [],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    books_v1.Resource$Volumes$Useruploaded = Resource$Volumes$Useruploaded;\n})(books_v1 = exports.books_v1 || (exports.books_v1 = {}));\n//# sourceMappingURL=v1.js.map"]},"metadata":{},"sourceType":"script"}