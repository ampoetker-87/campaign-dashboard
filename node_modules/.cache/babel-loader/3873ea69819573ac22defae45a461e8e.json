{"ast":null,"code":"\"use strict\";\n/**\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar _createClass = require(\"/Users/amandapoetker-alles/Desktop/campaign-dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _classCallCheck = require(\"/Users/amandapoetker-alles/Desktop/campaign-dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar googleapis_common_1 = require(\"googleapis-common\"); // tslint:disable: no-any\n// tslint:disable: class-name\n// tslint:disable: variable-name\n// tslint:disable: jsdoc-format\n// tslint:disable: no-namespace\n\n\nvar storage_v1beta2;\n\n(function (storage_v1beta2) {\n  /**\n   * Cloud Storage JSON API\n   *\n   * Lets you store and retrieve potentially-large, immutable data objects.\n   *\n   * @example\n   * const {google} = require('googleapis');\n   * const storage = google.storage('v1beta2');\n   *\n   * @namespace storage\n   * @type {Function}\n   * @version v1beta2\n   * @variation v1beta2\n   * @param {object=} options Options for Storage\n   */\n  var Storage = function Storage(options, google) {\n    _classCallCheck(this, Storage);\n\n    this.context = {\n      _options: options || {},\n      google\n    };\n    this.bucketAccessControls = new Resource$Bucketaccesscontrols(this.context);\n    this.buckets = new Resource$Buckets(this.context);\n    this.channels = new Resource$Channels(this.context);\n    this.defaultObjectAccessControls = new Resource$Defaultobjectaccesscontrols(this.context);\n    this.objectAccessControls = new Resource$Objectaccesscontrols(this.context);\n    this.objects = new Resource$Objects(this.context);\n  };\n\n  storage_v1beta2.Storage = Storage;\n\n  var Resource$Bucketaccesscontrols = /*#__PURE__*/function () {\n    function Resource$Bucketaccesscontrols(context) {\n      _classCallCheck(this, Resource$Bucketaccesscontrols);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Bucketaccesscontrols, [{\n      key: \"delete\",\n      value: function _delete(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/storage/v1beta2/b/{bucket}/acl/{entity}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'DELETE'\n          }, options),\n          params,\n          requiredParams: ['bucket', 'entity'],\n          pathParams: ['bucket', 'entity'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/storage/v1beta2/b/{bucket}/acl/{entity}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['bucket', 'entity'],\n          pathParams: ['bucket', 'entity'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"insert\",\n      value: function insert(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/storage/v1beta2/b/{bucket}/acl').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['bucket'],\n          pathParams: ['bucket'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/storage/v1beta2/b/{bucket}/acl').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['bucket'],\n          pathParams: ['bucket'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"patch\",\n      value: function patch(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/storage/v1beta2/b/{bucket}/acl/{entity}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PATCH'\n          }, options),\n          params,\n          requiredParams: ['bucket', 'entity'],\n          pathParams: ['bucket', 'entity'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"update\",\n      value: function update(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/storage/v1beta2/b/{bucket}/acl/{entity}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PUT'\n          }, options),\n          params,\n          requiredParams: ['bucket', 'entity'],\n          pathParams: ['bucket', 'entity'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Bucketaccesscontrols;\n  }();\n\n  storage_v1beta2.Resource$Bucketaccesscontrols = Resource$Bucketaccesscontrols;\n\n  var Resource$Buckets = /*#__PURE__*/function () {\n    function Resource$Buckets(context) {\n      _classCallCheck(this, Resource$Buckets);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Buckets, [{\n      key: \"delete\",\n      value: function _delete(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/storage/v1beta2/b/{bucket}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'DELETE'\n          }, options),\n          params,\n          requiredParams: ['bucket'],\n          pathParams: ['bucket'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/storage/v1beta2/b/{bucket}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['bucket'],\n          pathParams: ['bucket'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"insert\",\n      value: function insert(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/storage/v1beta2/b').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['project'],\n          pathParams: [],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/storage/v1beta2/b').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['project'],\n          pathParams: [],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"patch\",\n      value: function patch(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/storage/v1beta2/b/{bucket}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PATCH'\n          }, options),\n          params,\n          requiredParams: ['bucket'],\n          pathParams: ['bucket'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"update\",\n      value: function update(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/storage/v1beta2/b/{bucket}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PUT'\n          }, options),\n          params,\n          requiredParams: ['bucket'],\n          pathParams: ['bucket'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Buckets;\n  }();\n\n  storage_v1beta2.Resource$Buckets = Resource$Buckets;\n\n  var Resource$Channels = /*#__PURE__*/function () {\n    function Resource$Channels(context) {\n      _classCallCheck(this, Resource$Channels);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Channels, [{\n      key: \"stop\",\n      value: function stop(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/storage/v1beta2/channels/stop').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: [],\n          pathParams: [],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Channels;\n  }();\n\n  storage_v1beta2.Resource$Channels = Resource$Channels;\n\n  var Resource$Defaultobjectaccesscontrols = /*#__PURE__*/function () {\n    function Resource$Defaultobjectaccesscontrols(context) {\n      _classCallCheck(this, Resource$Defaultobjectaccesscontrols);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Defaultobjectaccesscontrols, [{\n      key: \"delete\",\n      value: function _delete(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/storage/v1beta2/b/{bucket}/defaultObjectAcl/{entity}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'DELETE'\n          }, options),\n          params,\n          requiredParams: ['bucket', 'entity'],\n          pathParams: ['bucket', 'entity'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/storage/v1beta2/b/{bucket}/defaultObjectAcl/{entity}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['bucket', 'entity'],\n          pathParams: ['bucket', 'entity'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"insert\",\n      value: function insert(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/storage/v1beta2/b/{bucket}/defaultObjectAcl').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['bucket'],\n          pathParams: ['bucket'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/storage/v1beta2/b/{bucket}/defaultObjectAcl').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['bucket'],\n          pathParams: ['bucket'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"patch\",\n      value: function patch(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/storage/v1beta2/b/{bucket}/defaultObjectAcl/{entity}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PATCH'\n          }, options),\n          params,\n          requiredParams: ['bucket', 'entity'],\n          pathParams: ['bucket', 'entity'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"update\",\n      value: function update(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/storage/v1beta2/b/{bucket}/defaultObjectAcl/{entity}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PUT'\n          }, options),\n          params,\n          requiredParams: ['bucket', 'entity'],\n          pathParams: ['bucket', 'entity'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Defaultobjectaccesscontrols;\n  }();\n\n  storage_v1beta2.Resource$Defaultobjectaccesscontrols = Resource$Defaultobjectaccesscontrols;\n\n  var Resource$Objectaccesscontrols = /*#__PURE__*/function () {\n    function Resource$Objectaccesscontrols(context) {\n      _classCallCheck(this, Resource$Objectaccesscontrols);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Objectaccesscontrols, [{\n      key: \"delete\",\n      value: function _delete(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/storage/v1beta2/b/{bucket}/o/{object}/acl/{entity}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'DELETE'\n          }, options),\n          params,\n          requiredParams: ['bucket', 'object', 'entity'],\n          pathParams: ['bucket', 'entity', 'object'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/storage/v1beta2/b/{bucket}/o/{object}/acl/{entity}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['bucket', 'object', 'entity'],\n          pathParams: ['bucket', 'entity', 'object'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"insert\",\n      value: function insert(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/storage/v1beta2/b/{bucket}/o/{object}/acl').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['bucket', 'object'],\n          pathParams: ['bucket', 'object'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/storage/v1beta2/b/{bucket}/o/{object}/acl').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['bucket', 'object'],\n          pathParams: ['bucket', 'object'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"patch\",\n      value: function patch(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/storage/v1beta2/b/{bucket}/o/{object}/acl/{entity}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PATCH'\n          }, options),\n          params,\n          requiredParams: ['bucket', 'object', 'entity'],\n          pathParams: ['bucket', 'entity', 'object'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"update\",\n      value: function update(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/storage/v1beta2/b/{bucket}/o/{object}/acl/{entity}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PUT'\n          }, options),\n          params,\n          requiredParams: ['bucket', 'object', 'entity'],\n          pathParams: ['bucket', 'entity', 'object'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Objectaccesscontrols;\n  }();\n\n  storage_v1beta2.Resource$Objectaccesscontrols = Resource$Objectaccesscontrols;\n\n  var Resource$Objects = /*#__PURE__*/function () {\n    function Resource$Objects(context) {\n      _classCallCheck(this, Resource$Objects);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Objects, [{\n      key: \"compose\",\n      value: function compose(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/storage/v1beta2/b/{destinationBucket}/o/{destinationObject}/compose').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['destinationBucket', 'destinationObject'],\n          pathParams: ['destinationBucket', 'destinationObject'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"copy\",\n      value: function copy(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/storage/v1beta2/b/{sourceBucket}/o/{sourceObject}/copyTo/b/{destinationBucket}/o/{destinationObject}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['sourceBucket', 'sourceObject', 'destinationBucket', 'destinationObject'],\n          pathParams: ['destinationBucket', 'destinationObject', 'sourceBucket', 'sourceObject'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"delete\",\n      value: function _delete(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/storage/v1beta2/b/{bucket}/o/{object}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'DELETE'\n          }, options),\n          params,\n          requiredParams: ['bucket', 'object'],\n          pathParams: ['bucket', 'object'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/storage/v1beta2/b/{bucket}/o/{object}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['bucket', 'object'],\n          pathParams: ['bucket', 'object'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"insert\",\n      value: function insert(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/storage/v1beta2/b/{bucket}/o').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          mediaUrl: (rootUrl + '/upload/storage/v1beta2/b/{bucket}/o').replace(/([^:]\\/)\\/+/g, '$1'),\n          requiredParams: ['bucket'],\n          pathParams: ['bucket'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/storage/v1beta2/b/{bucket}/o').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['bucket'],\n          pathParams: ['bucket'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"patch\",\n      value: function patch(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/storage/v1beta2/b/{bucket}/o/{object}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PATCH'\n          }, options),\n          params,\n          requiredParams: ['bucket', 'object'],\n          pathParams: ['bucket', 'object'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"update\",\n      value: function update(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/storage/v1beta2/b/{bucket}/o/{object}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PUT'\n          }, options),\n          params,\n          requiredParams: ['bucket', 'object'],\n          pathParams: ['bucket', 'object'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"watchAll\",\n      value: function watchAll(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/storage/v1beta2/b/{bucket}/o/watch').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['bucket'],\n          pathParams: ['bucket'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Objects;\n  }();\n\n  storage_v1beta2.Resource$Objects = Resource$Objects;\n})(storage_v1beta2 = exports.storage_v1beta2 || (exports.storage_v1beta2 = {}));","map":{"version":3,"sources":["/Users/amandapoetker-alles/Desktop/campaign-dashboard/node_modules/googleapis/build/src/apis/storage/v1beta2.js"],"names":["Object","defineProperty","exports","value","googleapis_common_1","require","storage_v1beta2","Storage","options","google","context","_options","bucketAccessControls","Resource$Bucketaccesscontrols","buckets","Resource$Buckets","channels","Resource$Channels","defaultObjectAccessControls","Resource$Defaultobjectaccesscontrols","objectAccessControls","Resource$Objectaccesscontrols","objects","Resource$Objects","paramsOrCallback","optionsOrCallback","callback","params","rootUrl","parameters","assign","url","replace","method","requiredParams","pathParams","createAPIRequest","mediaUrl"],"mappings":"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","sourcesContent":["\"use strict\";\n/**\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst googleapis_common_1 = require(\"googleapis-common\");\n// tslint:disable: no-any\n// tslint:disable: class-name\n// tslint:disable: variable-name\n// tslint:disable: jsdoc-format\n// tslint:disable: no-namespace\nvar storage_v1beta2;\n(function (storage_v1beta2) {\n    /**\n     * Cloud Storage JSON API\n     *\n     * Lets you store and retrieve potentially-large, immutable data objects.\n     *\n     * @example\n     * const {google} = require('googleapis');\n     * const storage = google.storage('v1beta2');\n     *\n     * @namespace storage\n     * @type {Function}\n     * @version v1beta2\n     * @variation v1beta2\n     * @param {object=} options Options for Storage\n     */\n    class Storage {\n        constructor(options, google) {\n            this.context = { _options: options || {}, google };\n            this.bucketAccessControls =\n                new Resource$Bucketaccesscontrols(this.context);\n            this.buckets = new Resource$Buckets(this.context);\n            this.channels = new Resource$Channels(this.context);\n            this.defaultObjectAccessControls =\n                new Resource$Defaultobjectaccesscontrols(this.context);\n            this.objectAccessControls =\n                new Resource$Objectaccesscontrols(this.context);\n            this.objects = new Resource$Objects(this.context);\n        }\n    }\n    storage_v1beta2.Storage = Storage;\n    class Resource$Bucketaccesscontrols {\n        constructor(context) {\n            this.context = context;\n        }\n        delete(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/storage/v1beta2/b/{bucket}/acl/{entity}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'DELETE'\n                }, options),\n                params,\n                requiredParams: ['bucket', 'entity'],\n                pathParams: ['bucket', 'entity'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/storage/v1beta2/b/{bucket}/acl/{entity}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['bucket', 'entity'],\n                pathParams: ['bucket', 'entity'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        insert(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/storage/v1beta2/b/{bucket}/acl')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST'\n                }, options),\n                params,\n                requiredParams: ['bucket'],\n                pathParams: ['bucket'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/storage/v1beta2/b/{bucket}/acl')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['bucket'],\n                pathParams: ['bucket'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        patch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/storage/v1beta2/b/{bucket}/acl/{entity}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PATCH'\n                }, options),\n                params,\n                requiredParams: ['bucket', 'entity'],\n                pathParams: ['bucket', 'entity'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        update(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/storage/v1beta2/b/{bucket}/acl/{entity}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PUT'\n                }, options),\n                params,\n                requiredParams: ['bucket', 'entity'],\n                pathParams: ['bucket', 'entity'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    storage_v1beta2.Resource$Bucketaccesscontrols = Resource$Bucketaccesscontrols;\n    class Resource$Buckets {\n        constructor(context) {\n            this.context = context;\n        }\n        delete(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/storage/v1beta2/b/{bucket}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'DELETE'\n                }, options),\n                params,\n                requiredParams: ['bucket'],\n                pathParams: ['bucket'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/storage/v1beta2/b/{bucket}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['bucket'],\n                pathParams: ['bucket'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        insert(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/storage/v1beta2/b')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST'\n                }, options),\n                params,\n                requiredParams: ['project'],\n                pathParams: [],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/storage/v1beta2/b')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['project'],\n                pathParams: [],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        patch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/storage/v1beta2/b/{bucket}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PATCH'\n                }, options),\n                params,\n                requiredParams: ['bucket'],\n                pathParams: ['bucket'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        update(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/storage/v1beta2/b/{bucket}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PUT'\n                }, options),\n                params,\n                requiredParams: ['bucket'],\n                pathParams: ['bucket'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    storage_v1beta2.Resource$Buckets = Resource$Buckets;\n    class Resource$Channels {\n        constructor(context) {\n            this.context = context;\n        }\n        stop(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/storage/v1beta2/channels/stop')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST'\n                }, options),\n                params,\n                requiredParams: [],\n                pathParams: [],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    storage_v1beta2.Resource$Channels = Resource$Channels;\n    class Resource$Defaultobjectaccesscontrols {\n        constructor(context) {\n            this.context = context;\n        }\n        delete(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/storage/v1beta2/b/{bucket}/defaultObjectAcl/{entity}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'DELETE'\n                }, options),\n                params,\n                requiredParams: ['bucket', 'entity'],\n                pathParams: ['bucket', 'entity'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/storage/v1beta2/b/{bucket}/defaultObjectAcl/{entity}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['bucket', 'entity'],\n                pathParams: ['bucket', 'entity'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        insert(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/storage/v1beta2/b/{bucket}/defaultObjectAcl')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST'\n                }, options),\n                params,\n                requiredParams: ['bucket'],\n                pathParams: ['bucket'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/storage/v1beta2/b/{bucket}/defaultObjectAcl')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['bucket'],\n                pathParams: ['bucket'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        patch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/storage/v1beta2/b/{bucket}/defaultObjectAcl/{entity}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PATCH'\n                }, options),\n                params,\n                requiredParams: ['bucket', 'entity'],\n                pathParams: ['bucket', 'entity'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        update(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/storage/v1beta2/b/{bucket}/defaultObjectAcl/{entity}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PUT'\n                }, options),\n                params,\n                requiredParams: ['bucket', 'entity'],\n                pathParams: ['bucket', 'entity'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    storage_v1beta2.Resource$Defaultobjectaccesscontrols = Resource$Defaultobjectaccesscontrols;\n    class Resource$Objectaccesscontrols {\n        constructor(context) {\n            this.context = context;\n        }\n        delete(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/storage/v1beta2/b/{bucket}/o/{object}/acl/{entity}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'DELETE'\n                }, options),\n                params,\n                requiredParams: ['bucket', 'object', 'entity'],\n                pathParams: ['bucket', 'entity', 'object'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/storage/v1beta2/b/{bucket}/o/{object}/acl/{entity}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['bucket', 'object', 'entity'],\n                pathParams: ['bucket', 'entity', 'object'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        insert(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/storage/v1beta2/b/{bucket}/o/{object}/acl')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST'\n                }, options),\n                params,\n                requiredParams: ['bucket', 'object'],\n                pathParams: ['bucket', 'object'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/storage/v1beta2/b/{bucket}/o/{object}/acl')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['bucket', 'object'],\n                pathParams: ['bucket', 'object'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        patch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/storage/v1beta2/b/{bucket}/o/{object}/acl/{entity}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PATCH'\n                }, options),\n                params,\n                requiredParams: ['bucket', 'object', 'entity'],\n                pathParams: ['bucket', 'entity', 'object'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        update(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/storage/v1beta2/b/{bucket}/o/{object}/acl/{entity}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PUT'\n                }, options),\n                params,\n                requiredParams: ['bucket', 'object', 'entity'],\n                pathParams: ['bucket', 'entity', 'object'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    storage_v1beta2.Resource$Objectaccesscontrols = Resource$Objectaccesscontrols;\n    class Resource$Objects {\n        constructor(context) {\n            this.context = context;\n        }\n        compose(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/storage/v1beta2/b/{destinationBucket}/o/{destinationObject}/compose')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST'\n                }, options),\n                params,\n                requiredParams: ['destinationBucket', 'destinationObject'],\n                pathParams: ['destinationBucket', 'destinationObject'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        copy(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/storage/v1beta2/b/{sourceBucket}/o/{sourceObject}/copyTo/b/{destinationBucket}/o/{destinationObject}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST'\n                }, options),\n                params,\n                requiredParams: [\n                    'sourceBucket', 'sourceObject', 'destinationBucket',\n                    'destinationObject'\n                ],\n                pathParams: [\n                    'destinationBucket', 'destinationObject', 'sourceBucket',\n                    'sourceObject'\n                ],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        delete(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/storage/v1beta2/b/{bucket}/o/{object}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'DELETE'\n                }, options),\n                params,\n                requiredParams: ['bucket', 'object'],\n                pathParams: ['bucket', 'object'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/storage/v1beta2/b/{bucket}/o/{object}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['bucket', 'object'],\n                pathParams: ['bucket', 'object'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        insert(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/storage/v1beta2/b/{bucket}/o')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST'\n                }, options),\n                params,\n                mediaUrl: (rootUrl + '/upload/storage/v1beta2/b/{bucket}/o')\n                    .replace(/([^:]\\/)\\/+/g, '$1'),\n                requiredParams: ['bucket'],\n                pathParams: ['bucket'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/storage/v1beta2/b/{bucket}/o')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['bucket'],\n                pathParams: ['bucket'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        patch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/storage/v1beta2/b/{bucket}/o/{object}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PATCH'\n                }, options),\n                params,\n                requiredParams: ['bucket', 'object'],\n                pathParams: ['bucket', 'object'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        update(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/storage/v1beta2/b/{bucket}/o/{object}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PUT'\n                }, options),\n                params,\n                requiredParams: ['bucket', 'object'],\n                pathParams: ['bucket', 'object'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        watchAll(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/storage/v1beta2/b/{bucket}/o/watch')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST'\n                }, options),\n                params,\n                requiredParams: ['bucket'],\n                pathParams: ['bucket'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    storage_v1beta2.Resource$Objects = Resource$Objects;\n})(storage_v1beta2 = exports.storage_v1beta2 || (exports.storage_v1beta2 = {}));\n//# sourceMappingURL=v1beta2.js.map"]},"metadata":{},"sourceType":"script"}