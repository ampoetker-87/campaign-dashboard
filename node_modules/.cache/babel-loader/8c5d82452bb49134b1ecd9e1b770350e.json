{"ast":null,"code":"\"use strict\"; // Copyright 2020 Google LLC\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//    http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nvar _createClass = require(\"/Users/amandapoetker-alles/Desktop/campaign-dashboard/Campaign-Planner/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _classCallCheck = require(\"/Users/amandapoetker-alles/Desktop/campaign-dashboard/Campaign-Planner/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.adexchangebuyer2_v2beta1 = void 0;\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\n/* eslint-disable @typescript-eslint/class-name-casing */\n\n/* eslint-disable @typescript-eslint/no-unused-vars */\n\n/* eslint-disable @typescript-eslint/no-empty-interface */\n\n/* eslint-disable @typescript-eslint/no-namespace */\n\n/* eslint-disable no-irregular-whitespace */\n\nvar googleapis_common_1 = require(\"googleapis-common\");\n\nvar adexchangebuyer2_v2beta1;\n\n(function (adexchangebuyer2_v2beta1) {\n  /**\n   * Ad Exchange Buyer API II\n   *\n   * Accesses the latest features for managing Authorized Buyers accounts, Real-Time Bidding configurations and auction metrics, and Marketplace programmatic deals.\n   *\n   * @example\n   * ```js\n   * const {google} = require('googleapis');\n   * const adexchangebuyer2 = google.adexchangebuyer2('v2beta1');\n   * ```\n   */\n  var Adexchangebuyer2 = function Adexchangebuyer2(options, google) {\n    _classCallCheck(this, Adexchangebuyer2);\n\n    this.context = {\n      _options: options || {},\n      google\n    };\n    this.accounts = new Resource$Accounts(this.context);\n    this.bidders = new Resource$Bidders(this.context);\n  };\n\n  adexchangebuyer2_v2beta1.Adexchangebuyer2 = Adexchangebuyer2;\n\n  var Resource$Accounts = function Resource$Accounts(context) {\n    _classCallCheck(this, Resource$Accounts);\n\n    this.context = context;\n    this.clients = new Resource$Accounts$Clients(this.context);\n    this.creatives = new Resource$Accounts$Creatives(this.context);\n    this.finalizedProposals = new Resource$Accounts$Finalizedproposals(this.context);\n    this.products = new Resource$Accounts$Products(this.context);\n    this.proposals = new Resource$Accounts$Proposals(this.context);\n    this.publisherProfiles = new Resource$Accounts$Publisherprofiles(this.context);\n  };\n\n  adexchangebuyer2_v2beta1.Resource$Accounts = Resource$Accounts;\n\n  var Resource$Accounts$Clients = /*#__PURE__*/function () {\n    function Resource$Accounts$Clients(context) {\n      _classCallCheck(this, Resource$Accounts$Clients);\n\n      this.context = context;\n      this.invitations = new Resource$Accounts$Clients$Invitations(this.context);\n      this.users = new Resource$Accounts$Clients$Users(this.context);\n    }\n\n    _createClass(Resource$Accounts$Clients, [{\n      key: \"create\",\n      value: function create(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v2beta1/accounts/{accountId}/clients').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['accountId'],\n          pathParams: ['accountId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v2beta1/accounts/{accountId}/clients/{clientAccountId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['accountId', 'clientAccountId'],\n          pathParams: ['accountId', 'clientAccountId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v2beta1/accounts/{accountId}/clients').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['accountId'],\n          pathParams: ['accountId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"update\",\n      value: function update(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v2beta1/accounts/{accountId}/clients/{clientAccountId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PUT'\n          }, options),\n          params,\n          requiredParams: ['accountId', 'clientAccountId'],\n          pathParams: ['accountId', 'clientAccountId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Accounts$Clients;\n  }();\n\n  adexchangebuyer2_v2beta1.Resource$Accounts$Clients = Resource$Accounts$Clients;\n\n  var Resource$Accounts$Clients$Invitations = /*#__PURE__*/function () {\n    function Resource$Accounts$Clients$Invitations(context) {\n      _classCallCheck(this, Resource$Accounts$Clients$Invitations);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Accounts$Clients$Invitations, [{\n      key: \"create\",\n      value: function create(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v2beta1/accounts/{accountId}/clients/{clientAccountId}/invitations').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['accountId', 'clientAccountId'],\n          pathParams: ['accountId', 'clientAccountId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v2beta1/accounts/{accountId}/clients/{clientAccountId}/invitations/{invitationId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['accountId', 'clientAccountId', 'invitationId'],\n          pathParams: ['accountId', 'clientAccountId', 'invitationId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v2beta1/accounts/{accountId}/clients/{clientAccountId}/invitations').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['accountId', 'clientAccountId'],\n          pathParams: ['accountId', 'clientAccountId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Accounts$Clients$Invitations;\n  }();\n\n  adexchangebuyer2_v2beta1.Resource$Accounts$Clients$Invitations = Resource$Accounts$Clients$Invitations;\n\n  var Resource$Accounts$Clients$Users = /*#__PURE__*/function () {\n    function Resource$Accounts$Clients$Users(context) {\n      _classCallCheck(this, Resource$Accounts$Clients$Users);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Accounts$Clients$Users, [{\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v2beta1/accounts/{accountId}/clients/{clientAccountId}/users/{userId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['accountId', 'clientAccountId', 'userId'],\n          pathParams: ['accountId', 'clientAccountId', 'userId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v2beta1/accounts/{accountId}/clients/{clientAccountId}/users').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['accountId', 'clientAccountId'],\n          pathParams: ['accountId', 'clientAccountId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"update\",\n      value: function update(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v2beta1/accounts/{accountId}/clients/{clientAccountId}/users/{userId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PUT'\n          }, options),\n          params,\n          requiredParams: ['accountId', 'clientAccountId', 'userId'],\n          pathParams: ['accountId', 'clientAccountId', 'userId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Accounts$Clients$Users;\n  }();\n\n  adexchangebuyer2_v2beta1.Resource$Accounts$Clients$Users = Resource$Accounts$Clients$Users;\n\n  var Resource$Accounts$Creatives = /*#__PURE__*/function () {\n    function Resource$Accounts$Creatives(context) {\n      _classCallCheck(this, Resource$Accounts$Creatives);\n\n      this.context = context;\n      this.dealAssociations = new Resource$Accounts$Creatives$Dealassociations(this.context);\n    }\n\n    _createClass(Resource$Accounts$Creatives, [{\n      key: \"create\",\n      value: function create(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v2beta1/accounts/{accountId}/creatives').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['accountId'],\n          pathParams: ['accountId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v2beta1/accounts/{accountId}/creatives/{creativeId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['accountId', 'creativeId'],\n          pathParams: ['accountId', 'creativeId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v2beta1/accounts/{accountId}/creatives').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['accountId'],\n          pathParams: ['accountId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"stopWatching\",\n      value: function stopWatching(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v2beta1/accounts/{accountId}/creatives/{creativeId}:stopWatching').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['accountId', 'creativeId'],\n          pathParams: ['accountId', 'creativeId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"update\",\n      value: function update(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v2beta1/accounts/{accountId}/creatives/{creativeId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PUT'\n          }, options),\n          params,\n          requiredParams: ['accountId', 'creativeId'],\n          pathParams: ['accountId', 'creativeId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"watch\",\n      value: function watch(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v2beta1/accounts/{accountId}/creatives/{creativeId}:watch').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['accountId', 'creativeId'],\n          pathParams: ['accountId', 'creativeId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Accounts$Creatives;\n  }();\n\n  adexchangebuyer2_v2beta1.Resource$Accounts$Creatives = Resource$Accounts$Creatives;\n\n  var Resource$Accounts$Creatives$Dealassociations = /*#__PURE__*/function () {\n    function Resource$Accounts$Creatives$Dealassociations(context) {\n      _classCallCheck(this, Resource$Accounts$Creatives$Dealassociations);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Accounts$Creatives$Dealassociations, [{\n      key: \"add\",\n      value: function add(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v2beta1/accounts/{accountId}/creatives/{creativeId}/dealAssociations:add').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['accountId', 'creativeId'],\n          pathParams: ['accountId', 'creativeId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v2beta1/accounts/{accountId}/creatives/{creativeId}/dealAssociations').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['accountId', 'creativeId'],\n          pathParams: ['accountId', 'creativeId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"remove\",\n      value: function remove(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v2beta1/accounts/{accountId}/creatives/{creativeId}/dealAssociations:remove').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['accountId', 'creativeId'],\n          pathParams: ['accountId', 'creativeId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Accounts$Creatives$Dealassociations;\n  }();\n\n  adexchangebuyer2_v2beta1.Resource$Accounts$Creatives$Dealassociations = Resource$Accounts$Creatives$Dealassociations;\n\n  var Resource$Accounts$Finalizedproposals = /*#__PURE__*/function () {\n    function Resource$Accounts$Finalizedproposals(context) {\n      _classCallCheck(this, Resource$Accounts$Finalizedproposals);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Accounts$Finalizedproposals, [{\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v2beta1/accounts/{accountId}/finalizedProposals').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['accountId'],\n          pathParams: ['accountId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Accounts$Finalizedproposals;\n  }();\n\n  adexchangebuyer2_v2beta1.Resource$Accounts$Finalizedproposals = Resource$Accounts$Finalizedproposals;\n\n  var Resource$Accounts$Products = /*#__PURE__*/function () {\n    function Resource$Accounts$Products(context) {\n      _classCallCheck(this, Resource$Accounts$Products);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Accounts$Products, [{\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v2beta1/accounts/{accountId}/products/{productId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['accountId', 'productId'],\n          pathParams: ['accountId', 'productId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v2beta1/accounts/{accountId}/products').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['accountId'],\n          pathParams: ['accountId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Accounts$Products;\n  }();\n\n  adexchangebuyer2_v2beta1.Resource$Accounts$Products = Resource$Accounts$Products;\n\n  var Resource$Accounts$Proposals = /*#__PURE__*/function () {\n    function Resource$Accounts$Proposals(context) {\n      _classCallCheck(this, Resource$Accounts$Proposals);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Accounts$Proposals, [{\n      key: \"accept\",\n      value: function accept(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v2beta1/accounts/{accountId}/proposals/{proposalId}:accept').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['accountId', 'proposalId'],\n          pathParams: ['accountId', 'proposalId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"addNote\",\n      value: function addNote(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v2beta1/accounts/{accountId}/proposals/{proposalId}:addNote').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['accountId', 'proposalId'],\n          pathParams: ['accountId', 'proposalId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"cancelNegotiation\",\n      value: function cancelNegotiation(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v2beta1/accounts/{accountId}/proposals/{proposalId}:cancelNegotiation').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['accountId', 'proposalId'],\n          pathParams: ['accountId', 'proposalId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"completeSetup\",\n      value: function completeSetup(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v2beta1/accounts/{accountId}/proposals/{proposalId}:completeSetup').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['accountId', 'proposalId'],\n          pathParams: ['accountId', 'proposalId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"create\",\n      value: function create(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v2beta1/accounts/{accountId}/proposals').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['accountId'],\n          pathParams: ['accountId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v2beta1/accounts/{accountId}/proposals/{proposalId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['accountId', 'proposalId'],\n          pathParams: ['accountId', 'proposalId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v2beta1/accounts/{accountId}/proposals').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['accountId'],\n          pathParams: ['accountId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"pause\",\n      value: function pause(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v2beta1/accounts/{accountId}/proposals/{proposalId}:pause').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['accountId', 'proposalId'],\n          pathParams: ['accountId', 'proposalId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"resume\",\n      value: function resume(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v2beta1/accounts/{accountId}/proposals/{proposalId}:resume').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['accountId', 'proposalId'],\n          pathParams: ['accountId', 'proposalId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"update\",\n      value: function update(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v2beta1/accounts/{accountId}/proposals/{proposalId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PUT'\n          }, options),\n          params,\n          requiredParams: ['accountId', 'proposalId'],\n          pathParams: ['accountId', 'proposalId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Accounts$Proposals;\n  }();\n\n  adexchangebuyer2_v2beta1.Resource$Accounts$Proposals = Resource$Accounts$Proposals;\n\n  var Resource$Accounts$Publisherprofiles = /*#__PURE__*/function () {\n    function Resource$Accounts$Publisherprofiles(context) {\n      _classCallCheck(this, Resource$Accounts$Publisherprofiles);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Accounts$Publisherprofiles, [{\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v2beta1/accounts/{accountId}/publisherProfiles/{publisherProfileId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['accountId', 'publisherProfileId'],\n          pathParams: ['accountId', 'publisherProfileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v2beta1/accounts/{accountId}/publisherProfiles').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['accountId'],\n          pathParams: ['accountId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Accounts$Publisherprofiles;\n  }();\n\n  adexchangebuyer2_v2beta1.Resource$Accounts$Publisherprofiles = Resource$Accounts$Publisherprofiles;\n\n  var Resource$Bidders = function Resource$Bidders(context) {\n    _classCallCheck(this, Resource$Bidders);\n\n    this.context = context;\n    this.accounts = new Resource$Bidders$Accounts(this.context);\n    this.filterSets = new Resource$Bidders$Filtersets(this.context);\n  };\n\n  adexchangebuyer2_v2beta1.Resource$Bidders = Resource$Bidders;\n\n  var Resource$Bidders$Accounts = function Resource$Bidders$Accounts(context) {\n    _classCallCheck(this, Resource$Bidders$Accounts);\n\n    this.context = context;\n    this.filterSets = new Resource$Bidders$Accounts$Filtersets(this.context);\n  };\n\n  adexchangebuyer2_v2beta1.Resource$Bidders$Accounts = Resource$Bidders$Accounts;\n\n  var Resource$Bidders$Accounts$Filtersets = /*#__PURE__*/function () {\n    function Resource$Bidders$Accounts$Filtersets(context) {\n      _classCallCheck(this, Resource$Bidders$Accounts$Filtersets);\n\n      this.context = context;\n      this.bidMetrics = new Resource$Bidders$Accounts$Filtersets$Bidmetrics(this.context);\n      this.bidResponseErrors = new Resource$Bidders$Accounts$Filtersets$Bidresponseerrors(this.context);\n      this.bidResponsesWithoutBids = new Resource$Bidders$Accounts$Filtersets$Bidresponseswithoutbids(this.context);\n      this.filteredBidRequests = new Resource$Bidders$Accounts$Filtersets$Filteredbidrequests(this.context);\n      this.filteredBids = new Resource$Bidders$Accounts$Filtersets$Filteredbids(this.context);\n      this.impressionMetrics = new Resource$Bidders$Accounts$Filtersets$Impressionmetrics(this.context);\n      this.losingBids = new Resource$Bidders$Accounts$Filtersets$Losingbids(this.context);\n      this.nonBillableWinningBids = new Resource$Bidders$Accounts$Filtersets$Nonbillablewinningbids(this.context);\n    }\n\n    _createClass(Resource$Bidders$Accounts$Filtersets, [{\n      key: \"create\",\n      value: function create(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v2beta1/{+ownerName}/filterSets').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['ownerName'],\n          pathParams: ['ownerName'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"delete\",\n      value: function _delete(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v2beta1/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'DELETE'\n          }, options),\n          params,\n          requiredParams: ['name'],\n          pathParams: ['name'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v2beta1/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['name'],\n          pathParams: ['name'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v2beta1/{+ownerName}/filterSets').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['ownerName'],\n          pathParams: ['ownerName'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Bidders$Accounts$Filtersets;\n  }();\n\n  adexchangebuyer2_v2beta1.Resource$Bidders$Accounts$Filtersets = Resource$Bidders$Accounts$Filtersets;\n\n  var Resource$Bidders$Accounts$Filtersets$Bidmetrics = /*#__PURE__*/function () {\n    function Resource$Bidders$Accounts$Filtersets$Bidmetrics(context) {\n      _classCallCheck(this, Resource$Bidders$Accounts$Filtersets$Bidmetrics);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Bidders$Accounts$Filtersets$Bidmetrics, [{\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v2beta1/{+filterSetName}/bidMetrics').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['filterSetName'],\n          pathParams: ['filterSetName'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Bidders$Accounts$Filtersets$Bidmetrics;\n  }();\n\n  adexchangebuyer2_v2beta1.Resource$Bidders$Accounts$Filtersets$Bidmetrics = Resource$Bidders$Accounts$Filtersets$Bidmetrics;\n\n  var Resource$Bidders$Accounts$Filtersets$Bidresponseerrors = /*#__PURE__*/function () {\n    function Resource$Bidders$Accounts$Filtersets$Bidresponseerrors(context) {\n      _classCallCheck(this, Resource$Bidders$Accounts$Filtersets$Bidresponseerrors);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Bidders$Accounts$Filtersets$Bidresponseerrors, [{\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v2beta1/{+filterSetName}/bidResponseErrors').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['filterSetName'],\n          pathParams: ['filterSetName'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Bidders$Accounts$Filtersets$Bidresponseerrors;\n  }();\n\n  adexchangebuyer2_v2beta1.Resource$Bidders$Accounts$Filtersets$Bidresponseerrors = Resource$Bidders$Accounts$Filtersets$Bidresponseerrors;\n\n  var Resource$Bidders$Accounts$Filtersets$Bidresponseswithoutbids = /*#__PURE__*/function () {\n    function Resource$Bidders$Accounts$Filtersets$Bidresponseswithoutbids(context) {\n      _classCallCheck(this, Resource$Bidders$Accounts$Filtersets$Bidresponseswithoutbids);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Bidders$Accounts$Filtersets$Bidresponseswithoutbids, [{\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v2beta1/{+filterSetName}/bidResponsesWithoutBids').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['filterSetName'],\n          pathParams: ['filterSetName'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Bidders$Accounts$Filtersets$Bidresponseswithoutbids;\n  }();\n\n  adexchangebuyer2_v2beta1.Resource$Bidders$Accounts$Filtersets$Bidresponseswithoutbids = Resource$Bidders$Accounts$Filtersets$Bidresponseswithoutbids;\n\n  var Resource$Bidders$Accounts$Filtersets$Filteredbidrequests = /*#__PURE__*/function () {\n    function Resource$Bidders$Accounts$Filtersets$Filteredbidrequests(context) {\n      _classCallCheck(this, Resource$Bidders$Accounts$Filtersets$Filteredbidrequests);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Bidders$Accounts$Filtersets$Filteredbidrequests, [{\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v2beta1/{+filterSetName}/filteredBidRequests').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['filterSetName'],\n          pathParams: ['filterSetName'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Bidders$Accounts$Filtersets$Filteredbidrequests;\n  }();\n\n  adexchangebuyer2_v2beta1.Resource$Bidders$Accounts$Filtersets$Filteredbidrequests = Resource$Bidders$Accounts$Filtersets$Filteredbidrequests;\n\n  var Resource$Bidders$Accounts$Filtersets$Filteredbids = /*#__PURE__*/function () {\n    function Resource$Bidders$Accounts$Filtersets$Filteredbids(context) {\n      _classCallCheck(this, Resource$Bidders$Accounts$Filtersets$Filteredbids);\n\n      this.context = context;\n      this.creatives = new Resource$Bidders$Accounts$Filtersets$Filteredbids$Creatives(this.context);\n      this.details = new Resource$Bidders$Accounts$Filtersets$Filteredbids$Details(this.context);\n    }\n\n    _createClass(Resource$Bidders$Accounts$Filtersets$Filteredbids, [{\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v2beta1/{+filterSetName}/filteredBids').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['filterSetName'],\n          pathParams: ['filterSetName'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Bidders$Accounts$Filtersets$Filteredbids;\n  }();\n\n  adexchangebuyer2_v2beta1.Resource$Bidders$Accounts$Filtersets$Filteredbids = Resource$Bidders$Accounts$Filtersets$Filteredbids;\n\n  var Resource$Bidders$Accounts$Filtersets$Filteredbids$Creatives = /*#__PURE__*/function () {\n    function Resource$Bidders$Accounts$Filtersets$Filteredbids$Creatives(context) {\n      _classCallCheck(this, Resource$Bidders$Accounts$Filtersets$Filteredbids$Creatives);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Bidders$Accounts$Filtersets$Filteredbids$Creatives, [{\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v2beta1/{+filterSetName}/filteredBids/{creativeStatusId}/creatives').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['filterSetName', 'creativeStatusId'],\n          pathParams: ['creativeStatusId', 'filterSetName'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Bidders$Accounts$Filtersets$Filteredbids$Creatives;\n  }();\n\n  adexchangebuyer2_v2beta1.Resource$Bidders$Accounts$Filtersets$Filteredbids$Creatives = Resource$Bidders$Accounts$Filtersets$Filteredbids$Creatives;\n\n  var Resource$Bidders$Accounts$Filtersets$Filteredbids$Details = /*#__PURE__*/function () {\n    function Resource$Bidders$Accounts$Filtersets$Filteredbids$Details(context) {\n      _classCallCheck(this, Resource$Bidders$Accounts$Filtersets$Filteredbids$Details);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Bidders$Accounts$Filtersets$Filteredbids$Details, [{\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v2beta1/{+filterSetName}/filteredBids/{creativeStatusId}/details').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['filterSetName', 'creativeStatusId'],\n          pathParams: ['creativeStatusId', 'filterSetName'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Bidders$Accounts$Filtersets$Filteredbids$Details;\n  }();\n\n  adexchangebuyer2_v2beta1.Resource$Bidders$Accounts$Filtersets$Filteredbids$Details = Resource$Bidders$Accounts$Filtersets$Filteredbids$Details;\n\n  var Resource$Bidders$Accounts$Filtersets$Impressionmetrics = /*#__PURE__*/function () {\n    function Resource$Bidders$Accounts$Filtersets$Impressionmetrics(context) {\n      _classCallCheck(this, Resource$Bidders$Accounts$Filtersets$Impressionmetrics);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Bidders$Accounts$Filtersets$Impressionmetrics, [{\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v2beta1/{+filterSetName}/impressionMetrics').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['filterSetName'],\n          pathParams: ['filterSetName'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Bidders$Accounts$Filtersets$Impressionmetrics;\n  }();\n\n  adexchangebuyer2_v2beta1.Resource$Bidders$Accounts$Filtersets$Impressionmetrics = Resource$Bidders$Accounts$Filtersets$Impressionmetrics;\n\n  var Resource$Bidders$Accounts$Filtersets$Losingbids = /*#__PURE__*/function () {\n    function Resource$Bidders$Accounts$Filtersets$Losingbids(context) {\n      _classCallCheck(this, Resource$Bidders$Accounts$Filtersets$Losingbids);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Bidders$Accounts$Filtersets$Losingbids, [{\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v2beta1/{+filterSetName}/losingBids').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['filterSetName'],\n          pathParams: ['filterSetName'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Bidders$Accounts$Filtersets$Losingbids;\n  }();\n\n  adexchangebuyer2_v2beta1.Resource$Bidders$Accounts$Filtersets$Losingbids = Resource$Bidders$Accounts$Filtersets$Losingbids;\n\n  var Resource$Bidders$Accounts$Filtersets$Nonbillablewinningbids = /*#__PURE__*/function () {\n    function Resource$Bidders$Accounts$Filtersets$Nonbillablewinningbids(context) {\n      _classCallCheck(this, Resource$Bidders$Accounts$Filtersets$Nonbillablewinningbids);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Bidders$Accounts$Filtersets$Nonbillablewinningbids, [{\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v2beta1/{+filterSetName}/nonBillableWinningBids').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['filterSetName'],\n          pathParams: ['filterSetName'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Bidders$Accounts$Filtersets$Nonbillablewinningbids;\n  }();\n\n  adexchangebuyer2_v2beta1.Resource$Bidders$Accounts$Filtersets$Nonbillablewinningbids = Resource$Bidders$Accounts$Filtersets$Nonbillablewinningbids;\n\n  var Resource$Bidders$Filtersets = /*#__PURE__*/function () {\n    function Resource$Bidders$Filtersets(context) {\n      _classCallCheck(this, Resource$Bidders$Filtersets);\n\n      this.context = context;\n      this.bidMetrics = new Resource$Bidders$Filtersets$Bidmetrics(this.context);\n      this.bidResponseErrors = new Resource$Bidders$Filtersets$Bidresponseerrors(this.context);\n      this.bidResponsesWithoutBids = new Resource$Bidders$Filtersets$Bidresponseswithoutbids(this.context);\n      this.filteredBidRequests = new Resource$Bidders$Filtersets$Filteredbidrequests(this.context);\n      this.filteredBids = new Resource$Bidders$Filtersets$Filteredbids(this.context);\n      this.impressionMetrics = new Resource$Bidders$Filtersets$Impressionmetrics(this.context);\n      this.losingBids = new Resource$Bidders$Filtersets$Losingbids(this.context);\n      this.nonBillableWinningBids = new Resource$Bidders$Filtersets$Nonbillablewinningbids(this.context);\n    }\n\n    _createClass(Resource$Bidders$Filtersets, [{\n      key: \"create\",\n      value: function create(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v2beta1/{+ownerName}/filterSets').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['ownerName'],\n          pathParams: ['ownerName'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"delete\",\n      value: function _delete(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v2beta1/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'DELETE'\n          }, options),\n          params,\n          requiredParams: ['name'],\n          pathParams: ['name'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v2beta1/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['name'],\n          pathParams: ['name'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v2beta1/{+ownerName}/filterSets').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['ownerName'],\n          pathParams: ['ownerName'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Bidders$Filtersets;\n  }();\n\n  adexchangebuyer2_v2beta1.Resource$Bidders$Filtersets = Resource$Bidders$Filtersets;\n\n  var Resource$Bidders$Filtersets$Bidmetrics = /*#__PURE__*/function () {\n    function Resource$Bidders$Filtersets$Bidmetrics(context) {\n      _classCallCheck(this, Resource$Bidders$Filtersets$Bidmetrics);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Bidders$Filtersets$Bidmetrics, [{\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v2beta1/{+filterSetName}/bidMetrics').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['filterSetName'],\n          pathParams: ['filterSetName'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Bidders$Filtersets$Bidmetrics;\n  }();\n\n  adexchangebuyer2_v2beta1.Resource$Bidders$Filtersets$Bidmetrics = Resource$Bidders$Filtersets$Bidmetrics;\n\n  var Resource$Bidders$Filtersets$Bidresponseerrors = /*#__PURE__*/function () {\n    function Resource$Bidders$Filtersets$Bidresponseerrors(context) {\n      _classCallCheck(this, Resource$Bidders$Filtersets$Bidresponseerrors);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Bidders$Filtersets$Bidresponseerrors, [{\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v2beta1/{+filterSetName}/bidResponseErrors').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['filterSetName'],\n          pathParams: ['filterSetName'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Bidders$Filtersets$Bidresponseerrors;\n  }();\n\n  adexchangebuyer2_v2beta1.Resource$Bidders$Filtersets$Bidresponseerrors = Resource$Bidders$Filtersets$Bidresponseerrors;\n\n  var Resource$Bidders$Filtersets$Bidresponseswithoutbids = /*#__PURE__*/function () {\n    function Resource$Bidders$Filtersets$Bidresponseswithoutbids(context) {\n      _classCallCheck(this, Resource$Bidders$Filtersets$Bidresponseswithoutbids);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Bidders$Filtersets$Bidresponseswithoutbids, [{\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v2beta1/{+filterSetName}/bidResponsesWithoutBids').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['filterSetName'],\n          pathParams: ['filterSetName'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Bidders$Filtersets$Bidresponseswithoutbids;\n  }();\n\n  adexchangebuyer2_v2beta1.Resource$Bidders$Filtersets$Bidresponseswithoutbids = Resource$Bidders$Filtersets$Bidresponseswithoutbids;\n\n  var Resource$Bidders$Filtersets$Filteredbidrequests = /*#__PURE__*/function () {\n    function Resource$Bidders$Filtersets$Filteredbidrequests(context) {\n      _classCallCheck(this, Resource$Bidders$Filtersets$Filteredbidrequests);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Bidders$Filtersets$Filteredbidrequests, [{\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v2beta1/{+filterSetName}/filteredBidRequests').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['filterSetName'],\n          pathParams: ['filterSetName'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Bidders$Filtersets$Filteredbidrequests;\n  }();\n\n  adexchangebuyer2_v2beta1.Resource$Bidders$Filtersets$Filteredbidrequests = Resource$Bidders$Filtersets$Filteredbidrequests;\n\n  var Resource$Bidders$Filtersets$Filteredbids = /*#__PURE__*/function () {\n    function Resource$Bidders$Filtersets$Filteredbids(context) {\n      _classCallCheck(this, Resource$Bidders$Filtersets$Filteredbids);\n\n      this.context = context;\n      this.creatives = new Resource$Bidders$Filtersets$Filteredbids$Creatives(this.context);\n      this.details = new Resource$Bidders$Filtersets$Filteredbids$Details(this.context);\n    }\n\n    _createClass(Resource$Bidders$Filtersets$Filteredbids, [{\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v2beta1/{+filterSetName}/filteredBids').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['filterSetName'],\n          pathParams: ['filterSetName'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Bidders$Filtersets$Filteredbids;\n  }();\n\n  adexchangebuyer2_v2beta1.Resource$Bidders$Filtersets$Filteredbids = Resource$Bidders$Filtersets$Filteredbids;\n\n  var Resource$Bidders$Filtersets$Filteredbids$Creatives = /*#__PURE__*/function () {\n    function Resource$Bidders$Filtersets$Filteredbids$Creatives(context) {\n      _classCallCheck(this, Resource$Bidders$Filtersets$Filteredbids$Creatives);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Bidders$Filtersets$Filteredbids$Creatives, [{\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v2beta1/{+filterSetName}/filteredBids/{creativeStatusId}/creatives').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['filterSetName', 'creativeStatusId'],\n          pathParams: ['creativeStatusId', 'filterSetName'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Bidders$Filtersets$Filteredbids$Creatives;\n  }();\n\n  adexchangebuyer2_v2beta1.Resource$Bidders$Filtersets$Filteredbids$Creatives = Resource$Bidders$Filtersets$Filteredbids$Creatives;\n\n  var Resource$Bidders$Filtersets$Filteredbids$Details = /*#__PURE__*/function () {\n    function Resource$Bidders$Filtersets$Filteredbids$Details(context) {\n      _classCallCheck(this, Resource$Bidders$Filtersets$Filteredbids$Details);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Bidders$Filtersets$Filteredbids$Details, [{\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v2beta1/{+filterSetName}/filteredBids/{creativeStatusId}/details').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['filterSetName', 'creativeStatusId'],\n          pathParams: ['creativeStatusId', 'filterSetName'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Bidders$Filtersets$Filteredbids$Details;\n  }();\n\n  adexchangebuyer2_v2beta1.Resource$Bidders$Filtersets$Filteredbids$Details = Resource$Bidders$Filtersets$Filteredbids$Details;\n\n  var Resource$Bidders$Filtersets$Impressionmetrics = /*#__PURE__*/function () {\n    function Resource$Bidders$Filtersets$Impressionmetrics(context) {\n      _classCallCheck(this, Resource$Bidders$Filtersets$Impressionmetrics);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Bidders$Filtersets$Impressionmetrics, [{\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v2beta1/{+filterSetName}/impressionMetrics').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['filterSetName'],\n          pathParams: ['filterSetName'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Bidders$Filtersets$Impressionmetrics;\n  }();\n\n  adexchangebuyer2_v2beta1.Resource$Bidders$Filtersets$Impressionmetrics = Resource$Bidders$Filtersets$Impressionmetrics;\n\n  var Resource$Bidders$Filtersets$Losingbids = /*#__PURE__*/function () {\n    function Resource$Bidders$Filtersets$Losingbids(context) {\n      _classCallCheck(this, Resource$Bidders$Filtersets$Losingbids);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Bidders$Filtersets$Losingbids, [{\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v2beta1/{+filterSetName}/losingBids').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['filterSetName'],\n          pathParams: ['filterSetName'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Bidders$Filtersets$Losingbids;\n  }();\n\n  adexchangebuyer2_v2beta1.Resource$Bidders$Filtersets$Losingbids = Resource$Bidders$Filtersets$Losingbids;\n\n  var Resource$Bidders$Filtersets$Nonbillablewinningbids = /*#__PURE__*/function () {\n    function Resource$Bidders$Filtersets$Nonbillablewinningbids(context) {\n      _classCallCheck(this, Resource$Bidders$Filtersets$Nonbillablewinningbids);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Bidders$Filtersets$Nonbillablewinningbids, [{\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v2beta1/{+filterSetName}/nonBillableWinningBids').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['filterSetName'],\n          pathParams: ['filterSetName'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Bidders$Filtersets$Nonbillablewinningbids;\n  }();\n\n  adexchangebuyer2_v2beta1.Resource$Bidders$Filtersets$Nonbillablewinningbids = Resource$Bidders$Filtersets$Nonbillablewinningbids;\n})(adexchangebuyer2_v2beta1 = exports.adexchangebuyer2_v2beta1 || (exports.adexchangebuyer2_v2beta1 = {}));","map":{"version":3,"sources":["/Users/amandapoetker-alles/Desktop/campaign-dashboard/Campaign-Planner/node_modules/googleapis/build/src/apis/adexchangebuyer2/v2beta1.js"],"names":["Object","defineProperty","exports","value","adexchangebuyer2_v2beta1","googleapis_common_1","require","Adexchangebuyer2","options","google","context","_options","accounts","Resource$Accounts","bidders","Resource$Bidders","clients","Resource$Accounts$Clients","creatives","Resource$Accounts$Creatives","finalizedProposals","Resource$Accounts$Finalizedproposals","products","Resource$Accounts$Products","proposals","Resource$Accounts$Proposals","publisherProfiles","Resource$Accounts$Publisherprofiles","invitations","Resource$Accounts$Clients$Invitations","users","Resource$Accounts$Clients$Users","paramsOrCallback","optionsOrCallback","callback","params","rootUrl","parameters","assign","url","replace","method","requiredParams","pathParams","createAPIRequest","dealAssociations","Resource$Accounts$Creatives$Dealassociations","Resource$Bidders$Accounts","filterSets","Resource$Bidders$Filtersets","Resource$Bidders$Accounts$Filtersets","bidMetrics","Resource$Bidders$Accounts$Filtersets$Bidmetrics","bidResponseErrors","Resource$Bidders$Accounts$Filtersets$Bidresponseerrors","bidResponsesWithoutBids","Resource$Bidders$Accounts$Filtersets$Bidresponseswithoutbids","filteredBidRequests","Resource$Bidders$Accounts$Filtersets$Filteredbidrequests","filteredBids","Resource$Bidders$Accounts$Filtersets$Filteredbids","impressionMetrics","Resource$Bidders$Accounts$Filtersets$Impressionmetrics","losingBids","Resource$Bidders$Accounts$Filtersets$Losingbids","nonBillableWinningBids","Resource$Bidders$Accounts$Filtersets$Nonbillablewinningbids","Resource$Bidders$Accounts$Filtersets$Filteredbids$Creatives","details","Resource$Bidders$Accounts$Filtersets$Filteredbids$Details","Resource$Bidders$Filtersets$Bidmetrics","Resource$Bidders$Filtersets$Bidresponseerrors","Resource$Bidders$Filtersets$Bidresponseswithoutbids","Resource$Bidders$Filtersets$Filteredbidrequests","Resource$Bidders$Filtersets$Filteredbids","Resource$Bidders$Filtersets$Impressionmetrics","Resource$Bidders$Filtersets$Losingbids","Resource$Bidders$Filtersets$Nonbillablewinningbids","Resource$Bidders$Filtersets$Filteredbids$Creatives","Resource$Bidders$Filtersets$Filteredbids$Details"],"mappings":"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","sourcesContent":["\"use strict\";\n// Copyright 2020 Google LLC\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//    http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.adexchangebuyer2_v2beta1 = void 0;\n/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/class-name-casing */\n/* eslint-disable @typescript-eslint/no-unused-vars */\n/* eslint-disable @typescript-eslint/no-empty-interface */\n/* eslint-disable @typescript-eslint/no-namespace */\n/* eslint-disable no-irregular-whitespace */\nconst googleapis_common_1 = require(\"googleapis-common\");\nvar adexchangebuyer2_v2beta1;\n(function (adexchangebuyer2_v2beta1) {\n    /**\n     * Ad Exchange Buyer API II\n     *\n     * Accesses the latest features for managing Authorized Buyers accounts, Real-Time Bidding configurations and auction metrics, and Marketplace programmatic deals.\n     *\n     * @example\n     * ```js\n     * const {google} = require('googleapis');\n     * const adexchangebuyer2 = google.adexchangebuyer2('v2beta1');\n     * ```\n     */\n    class Adexchangebuyer2 {\n        constructor(options, google) {\n            this.context = {\n                _options: options || {},\n                google,\n            };\n            this.accounts = new Resource$Accounts(this.context);\n            this.bidders = new Resource$Bidders(this.context);\n        }\n    }\n    adexchangebuyer2_v2beta1.Adexchangebuyer2 = Adexchangebuyer2;\n    class Resource$Accounts {\n        constructor(context) {\n            this.context = context;\n            this.clients = new Resource$Accounts$Clients(this.context);\n            this.creatives = new Resource$Accounts$Creatives(this.context);\n            this.finalizedProposals = new Resource$Accounts$Finalizedproposals(this.context);\n            this.products = new Resource$Accounts$Products(this.context);\n            this.proposals = new Resource$Accounts$Proposals(this.context);\n            this.publisherProfiles = new Resource$Accounts$Publisherprofiles(this.context);\n        }\n    }\n    adexchangebuyer2_v2beta1.Resource$Accounts = Resource$Accounts;\n    class Resource$Accounts$Clients {\n        constructor(context) {\n            this.context = context;\n            this.invitations = new Resource$Accounts$Clients$Invitations(this.context);\n            this.users = new Resource$Accounts$Clients$Users(this.context);\n        }\n        create(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2beta1/accounts/{accountId}/clients').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['accountId'],\n                pathParams: ['accountId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/v2beta1/accounts/{accountId}/clients/{clientAccountId}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['accountId', 'clientAccountId'],\n                pathParams: ['accountId', 'clientAccountId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2beta1/accounts/{accountId}/clients').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['accountId'],\n                pathParams: ['accountId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        update(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/v2beta1/accounts/{accountId}/clients/{clientAccountId}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PUT',\n                }, options),\n                params,\n                requiredParams: ['accountId', 'clientAccountId'],\n                pathParams: ['accountId', 'clientAccountId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    adexchangebuyer2_v2beta1.Resource$Accounts$Clients = Resource$Accounts$Clients;\n    class Resource$Accounts$Clients$Invitations {\n        constructor(context) {\n            this.context = context;\n        }\n        create(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/v2beta1/accounts/{accountId}/clients/{clientAccountId}/invitations').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['accountId', 'clientAccountId'],\n                pathParams: ['accountId', 'clientAccountId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/v2beta1/accounts/{accountId}/clients/{clientAccountId}/invitations/{invitationId}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['accountId', 'clientAccountId', 'invitationId'],\n                pathParams: ['accountId', 'clientAccountId', 'invitationId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/v2beta1/accounts/{accountId}/clients/{clientAccountId}/invitations').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['accountId', 'clientAccountId'],\n                pathParams: ['accountId', 'clientAccountId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    adexchangebuyer2_v2beta1.Resource$Accounts$Clients$Invitations = Resource$Accounts$Clients$Invitations;\n    class Resource$Accounts$Clients$Users {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/v2beta1/accounts/{accountId}/clients/{clientAccountId}/users/{userId}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['accountId', 'clientAccountId', 'userId'],\n                pathParams: ['accountId', 'clientAccountId', 'userId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/v2beta1/accounts/{accountId}/clients/{clientAccountId}/users').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['accountId', 'clientAccountId'],\n                pathParams: ['accountId', 'clientAccountId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        update(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/v2beta1/accounts/{accountId}/clients/{clientAccountId}/users/{userId}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PUT',\n                }, options),\n                params,\n                requiredParams: ['accountId', 'clientAccountId', 'userId'],\n                pathParams: ['accountId', 'clientAccountId', 'userId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    adexchangebuyer2_v2beta1.Resource$Accounts$Clients$Users = Resource$Accounts$Clients$Users;\n    class Resource$Accounts$Creatives {\n        constructor(context) {\n            this.context = context;\n            this.dealAssociations = new Resource$Accounts$Creatives$Dealassociations(this.context);\n        }\n        create(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2beta1/accounts/{accountId}/creatives').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['accountId'],\n                pathParams: ['accountId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2beta1/accounts/{accountId}/creatives/{creativeId}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['accountId', 'creativeId'],\n                pathParams: ['accountId', 'creativeId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2beta1/accounts/{accountId}/creatives').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['accountId'],\n                pathParams: ['accountId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        stopWatching(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/v2beta1/accounts/{accountId}/creatives/{creativeId}:stopWatching').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['accountId', 'creativeId'],\n                pathParams: ['accountId', 'creativeId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        update(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2beta1/accounts/{accountId}/creatives/{creativeId}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PUT',\n                }, options),\n                params,\n                requiredParams: ['accountId', 'creativeId'],\n                pathParams: ['accountId', 'creativeId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        watch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/v2beta1/accounts/{accountId}/creatives/{creativeId}:watch').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['accountId', 'creativeId'],\n                pathParams: ['accountId', 'creativeId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    adexchangebuyer2_v2beta1.Resource$Accounts$Creatives = Resource$Accounts$Creatives;\n    class Resource$Accounts$Creatives$Dealassociations {\n        constructor(context) {\n            this.context = context;\n        }\n        add(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/v2beta1/accounts/{accountId}/creatives/{creativeId}/dealAssociations:add').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['accountId', 'creativeId'],\n                pathParams: ['accountId', 'creativeId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/v2beta1/accounts/{accountId}/creatives/{creativeId}/dealAssociations').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['accountId', 'creativeId'],\n                pathParams: ['accountId', 'creativeId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        remove(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/v2beta1/accounts/{accountId}/creatives/{creativeId}/dealAssociations:remove').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['accountId', 'creativeId'],\n                pathParams: ['accountId', 'creativeId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    adexchangebuyer2_v2beta1.Resource$Accounts$Creatives$Dealassociations = Resource$Accounts$Creatives$Dealassociations;\n    class Resource$Accounts$Finalizedproposals {\n        constructor(context) {\n            this.context = context;\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2beta1/accounts/{accountId}/finalizedProposals').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['accountId'],\n                pathParams: ['accountId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    adexchangebuyer2_v2beta1.Resource$Accounts$Finalizedproposals = Resource$Accounts$Finalizedproposals;\n    class Resource$Accounts$Products {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2beta1/accounts/{accountId}/products/{productId}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['accountId', 'productId'],\n                pathParams: ['accountId', 'productId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2beta1/accounts/{accountId}/products').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['accountId'],\n                pathParams: ['accountId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    adexchangebuyer2_v2beta1.Resource$Accounts$Products = Resource$Accounts$Products;\n    class Resource$Accounts$Proposals {\n        constructor(context) {\n            this.context = context;\n        }\n        accept(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/v2beta1/accounts/{accountId}/proposals/{proposalId}:accept').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['accountId', 'proposalId'],\n                pathParams: ['accountId', 'proposalId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        addNote(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/v2beta1/accounts/{accountId}/proposals/{proposalId}:addNote').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['accountId', 'proposalId'],\n                pathParams: ['accountId', 'proposalId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        cancelNegotiation(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/v2beta1/accounts/{accountId}/proposals/{proposalId}:cancelNegotiation').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['accountId', 'proposalId'],\n                pathParams: ['accountId', 'proposalId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        completeSetup(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/v2beta1/accounts/{accountId}/proposals/{proposalId}:completeSetup').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['accountId', 'proposalId'],\n                pathParams: ['accountId', 'proposalId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        create(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2beta1/accounts/{accountId}/proposals').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['accountId'],\n                pathParams: ['accountId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2beta1/accounts/{accountId}/proposals/{proposalId}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['accountId', 'proposalId'],\n                pathParams: ['accountId', 'proposalId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2beta1/accounts/{accountId}/proposals').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['accountId'],\n                pathParams: ['accountId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        pause(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/v2beta1/accounts/{accountId}/proposals/{proposalId}:pause').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['accountId', 'proposalId'],\n                pathParams: ['accountId', 'proposalId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        resume(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/v2beta1/accounts/{accountId}/proposals/{proposalId}:resume').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['accountId', 'proposalId'],\n                pathParams: ['accountId', 'proposalId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        update(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2beta1/accounts/{accountId}/proposals/{proposalId}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PUT',\n                }, options),\n                params,\n                requiredParams: ['accountId', 'proposalId'],\n                pathParams: ['accountId', 'proposalId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    adexchangebuyer2_v2beta1.Resource$Accounts$Proposals = Resource$Accounts$Proposals;\n    class Resource$Accounts$Publisherprofiles {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/v2beta1/accounts/{accountId}/publisherProfiles/{publisherProfileId}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['accountId', 'publisherProfileId'],\n                pathParams: ['accountId', 'publisherProfileId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2beta1/accounts/{accountId}/publisherProfiles').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['accountId'],\n                pathParams: ['accountId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    adexchangebuyer2_v2beta1.Resource$Accounts$Publisherprofiles = Resource$Accounts$Publisherprofiles;\n    class Resource$Bidders {\n        constructor(context) {\n            this.context = context;\n            this.accounts = new Resource$Bidders$Accounts(this.context);\n            this.filterSets = new Resource$Bidders$Filtersets(this.context);\n        }\n    }\n    adexchangebuyer2_v2beta1.Resource$Bidders = Resource$Bidders;\n    class Resource$Bidders$Accounts {\n        constructor(context) {\n            this.context = context;\n            this.filterSets = new Resource$Bidders$Accounts$Filtersets(this.context);\n        }\n    }\n    adexchangebuyer2_v2beta1.Resource$Bidders$Accounts = Resource$Bidders$Accounts;\n    class Resource$Bidders$Accounts$Filtersets {\n        constructor(context) {\n            this.context = context;\n            this.bidMetrics = new Resource$Bidders$Accounts$Filtersets$Bidmetrics(this.context);\n            this.bidResponseErrors = new Resource$Bidders$Accounts$Filtersets$Bidresponseerrors(this.context);\n            this.bidResponsesWithoutBids = new Resource$Bidders$Accounts$Filtersets$Bidresponseswithoutbids(this.context);\n            this.filteredBidRequests = new Resource$Bidders$Accounts$Filtersets$Filteredbidrequests(this.context);\n            this.filteredBids = new Resource$Bidders$Accounts$Filtersets$Filteredbids(this.context);\n            this.impressionMetrics = new Resource$Bidders$Accounts$Filtersets$Impressionmetrics(this.context);\n            this.losingBids = new Resource$Bidders$Accounts$Filtersets$Losingbids(this.context);\n            this.nonBillableWinningBids = new Resource$Bidders$Accounts$Filtersets$Nonbillablewinningbids(this.context);\n        }\n        create(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2beta1/{+ownerName}/filterSets').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['ownerName'],\n                pathParams: ['ownerName'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        delete(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2beta1/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'DELETE',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2beta1/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2beta1/{+ownerName}/filterSets').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['ownerName'],\n                pathParams: ['ownerName'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    adexchangebuyer2_v2beta1.Resource$Bidders$Accounts$Filtersets = Resource$Bidders$Accounts$Filtersets;\n    class Resource$Bidders$Accounts$Filtersets$Bidmetrics {\n        constructor(context) {\n            this.context = context;\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2beta1/{+filterSetName}/bidMetrics').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['filterSetName'],\n                pathParams: ['filterSetName'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    adexchangebuyer2_v2beta1.Resource$Bidders$Accounts$Filtersets$Bidmetrics = Resource$Bidders$Accounts$Filtersets$Bidmetrics;\n    class Resource$Bidders$Accounts$Filtersets$Bidresponseerrors {\n        constructor(context) {\n            this.context = context;\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2beta1/{+filterSetName}/bidResponseErrors').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['filterSetName'],\n                pathParams: ['filterSetName'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    adexchangebuyer2_v2beta1.Resource$Bidders$Accounts$Filtersets$Bidresponseerrors = Resource$Bidders$Accounts$Filtersets$Bidresponseerrors;\n    class Resource$Bidders$Accounts$Filtersets$Bidresponseswithoutbids {\n        constructor(context) {\n            this.context = context;\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2beta1/{+filterSetName}/bidResponsesWithoutBids').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['filterSetName'],\n                pathParams: ['filterSetName'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    adexchangebuyer2_v2beta1.Resource$Bidders$Accounts$Filtersets$Bidresponseswithoutbids = Resource$Bidders$Accounts$Filtersets$Bidresponseswithoutbids;\n    class Resource$Bidders$Accounts$Filtersets$Filteredbidrequests {\n        constructor(context) {\n            this.context = context;\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2beta1/{+filterSetName}/filteredBidRequests').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['filterSetName'],\n                pathParams: ['filterSetName'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    adexchangebuyer2_v2beta1.Resource$Bidders$Accounts$Filtersets$Filteredbidrequests = Resource$Bidders$Accounts$Filtersets$Filteredbidrequests;\n    class Resource$Bidders$Accounts$Filtersets$Filteredbids {\n        constructor(context) {\n            this.context = context;\n            this.creatives = new Resource$Bidders$Accounts$Filtersets$Filteredbids$Creatives(this.context);\n            this.details = new Resource$Bidders$Accounts$Filtersets$Filteredbids$Details(this.context);\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2beta1/{+filterSetName}/filteredBids').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['filterSetName'],\n                pathParams: ['filterSetName'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    adexchangebuyer2_v2beta1.Resource$Bidders$Accounts$Filtersets$Filteredbids = Resource$Bidders$Accounts$Filtersets$Filteredbids;\n    class Resource$Bidders$Accounts$Filtersets$Filteredbids$Creatives {\n        constructor(context) {\n            this.context = context;\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/v2beta1/{+filterSetName}/filteredBids/{creativeStatusId}/creatives').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['filterSetName', 'creativeStatusId'],\n                pathParams: ['creativeStatusId', 'filterSetName'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    adexchangebuyer2_v2beta1.Resource$Bidders$Accounts$Filtersets$Filteredbids$Creatives = Resource$Bidders$Accounts$Filtersets$Filteredbids$Creatives;\n    class Resource$Bidders$Accounts$Filtersets$Filteredbids$Details {\n        constructor(context) {\n            this.context = context;\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/v2beta1/{+filterSetName}/filteredBids/{creativeStatusId}/details').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['filterSetName', 'creativeStatusId'],\n                pathParams: ['creativeStatusId', 'filterSetName'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    adexchangebuyer2_v2beta1.Resource$Bidders$Accounts$Filtersets$Filteredbids$Details = Resource$Bidders$Accounts$Filtersets$Filteredbids$Details;\n    class Resource$Bidders$Accounts$Filtersets$Impressionmetrics {\n        constructor(context) {\n            this.context = context;\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2beta1/{+filterSetName}/impressionMetrics').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['filterSetName'],\n                pathParams: ['filterSetName'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    adexchangebuyer2_v2beta1.Resource$Bidders$Accounts$Filtersets$Impressionmetrics = Resource$Bidders$Accounts$Filtersets$Impressionmetrics;\n    class Resource$Bidders$Accounts$Filtersets$Losingbids {\n        constructor(context) {\n            this.context = context;\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2beta1/{+filterSetName}/losingBids').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['filterSetName'],\n                pathParams: ['filterSetName'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    adexchangebuyer2_v2beta1.Resource$Bidders$Accounts$Filtersets$Losingbids = Resource$Bidders$Accounts$Filtersets$Losingbids;\n    class Resource$Bidders$Accounts$Filtersets$Nonbillablewinningbids {\n        constructor(context) {\n            this.context = context;\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2beta1/{+filterSetName}/nonBillableWinningBids').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['filterSetName'],\n                pathParams: ['filterSetName'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    adexchangebuyer2_v2beta1.Resource$Bidders$Accounts$Filtersets$Nonbillablewinningbids = Resource$Bidders$Accounts$Filtersets$Nonbillablewinningbids;\n    class Resource$Bidders$Filtersets {\n        constructor(context) {\n            this.context = context;\n            this.bidMetrics = new Resource$Bidders$Filtersets$Bidmetrics(this.context);\n            this.bidResponseErrors = new Resource$Bidders$Filtersets$Bidresponseerrors(this.context);\n            this.bidResponsesWithoutBids = new Resource$Bidders$Filtersets$Bidresponseswithoutbids(this.context);\n            this.filteredBidRequests = new Resource$Bidders$Filtersets$Filteredbidrequests(this.context);\n            this.filteredBids = new Resource$Bidders$Filtersets$Filteredbids(this.context);\n            this.impressionMetrics = new Resource$Bidders$Filtersets$Impressionmetrics(this.context);\n            this.losingBids = new Resource$Bidders$Filtersets$Losingbids(this.context);\n            this.nonBillableWinningBids = new Resource$Bidders$Filtersets$Nonbillablewinningbids(this.context);\n        }\n        create(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2beta1/{+ownerName}/filterSets').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['ownerName'],\n                pathParams: ['ownerName'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        delete(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2beta1/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'DELETE',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2beta1/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2beta1/{+ownerName}/filterSets').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['ownerName'],\n                pathParams: ['ownerName'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    adexchangebuyer2_v2beta1.Resource$Bidders$Filtersets = Resource$Bidders$Filtersets;\n    class Resource$Bidders$Filtersets$Bidmetrics {\n        constructor(context) {\n            this.context = context;\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2beta1/{+filterSetName}/bidMetrics').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['filterSetName'],\n                pathParams: ['filterSetName'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    adexchangebuyer2_v2beta1.Resource$Bidders$Filtersets$Bidmetrics = Resource$Bidders$Filtersets$Bidmetrics;\n    class Resource$Bidders$Filtersets$Bidresponseerrors {\n        constructor(context) {\n            this.context = context;\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2beta1/{+filterSetName}/bidResponseErrors').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['filterSetName'],\n                pathParams: ['filterSetName'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    adexchangebuyer2_v2beta1.Resource$Bidders$Filtersets$Bidresponseerrors = Resource$Bidders$Filtersets$Bidresponseerrors;\n    class Resource$Bidders$Filtersets$Bidresponseswithoutbids {\n        constructor(context) {\n            this.context = context;\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2beta1/{+filterSetName}/bidResponsesWithoutBids').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['filterSetName'],\n                pathParams: ['filterSetName'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    adexchangebuyer2_v2beta1.Resource$Bidders$Filtersets$Bidresponseswithoutbids = Resource$Bidders$Filtersets$Bidresponseswithoutbids;\n    class Resource$Bidders$Filtersets$Filteredbidrequests {\n        constructor(context) {\n            this.context = context;\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2beta1/{+filterSetName}/filteredBidRequests').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['filterSetName'],\n                pathParams: ['filterSetName'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    adexchangebuyer2_v2beta1.Resource$Bidders$Filtersets$Filteredbidrequests = Resource$Bidders$Filtersets$Filteredbidrequests;\n    class Resource$Bidders$Filtersets$Filteredbids {\n        constructor(context) {\n            this.context = context;\n            this.creatives = new Resource$Bidders$Filtersets$Filteredbids$Creatives(this.context);\n            this.details = new Resource$Bidders$Filtersets$Filteredbids$Details(this.context);\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2beta1/{+filterSetName}/filteredBids').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['filterSetName'],\n                pathParams: ['filterSetName'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    adexchangebuyer2_v2beta1.Resource$Bidders$Filtersets$Filteredbids = Resource$Bidders$Filtersets$Filteredbids;\n    class Resource$Bidders$Filtersets$Filteredbids$Creatives {\n        constructor(context) {\n            this.context = context;\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/v2beta1/{+filterSetName}/filteredBids/{creativeStatusId}/creatives').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['filterSetName', 'creativeStatusId'],\n                pathParams: ['creativeStatusId', 'filterSetName'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    adexchangebuyer2_v2beta1.Resource$Bidders$Filtersets$Filteredbids$Creatives = Resource$Bidders$Filtersets$Filteredbids$Creatives;\n    class Resource$Bidders$Filtersets$Filteredbids$Details {\n        constructor(context) {\n            this.context = context;\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/v2beta1/{+filterSetName}/filteredBids/{creativeStatusId}/details').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['filterSetName', 'creativeStatusId'],\n                pathParams: ['creativeStatusId', 'filterSetName'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    adexchangebuyer2_v2beta1.Resource$Bidders$Filtersets$Filteredbids$Details = Resource$Bidders$Filtersets$Filteredbids$Details;\n    class Resource$Bidders$Filtersets$Impressionmetrics {\n        constructor(context) {\n            this.context = context;\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2beta1/{+filterSetName}/impressionMetrics').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['filterSetName'],\n                pathParams: ['filterSetName'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    adexchangebuyer2_v2beta1.Resource$Bidders$Filtersets$Impressionmetrics = Resource$Bidders$Filtersets$Impressionmetrics;\n    class Resource$Bidders$Filtersets$Losingbids {\n        constructor(context) {\n            this.context = context;\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2beta1/{+filterSetName}/losingBids').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['filterSetName'],\n                pathParams: ['filterSetName'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    adexchangebuyer2_v2beta1.Resource$Bidders$Filtersets$Losingbids = Resource$Bidders$Filtersets$Losingbids;\n    class Resource$Bidders$Filtersets$Nonbillablewinningbids {\n        constructor(context) {\n            this.context = context;\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2beta1/{+filterSetName}/nonBillableWinningBids').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['filterSetName'],\n                pathParams: ['filterSetName'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    adexchangebuyer2_v2beta1.Resource$Bidders$Filtersets$Nonbillablewinningbids = Resource$Bidders$Filtersets$Nonbillablewinningbids;\n})(adexchangebuyer2_v2beta1 = exports.adexchangebuyer2_v2beta1 || (exports.adexchangebuyer2_v2beta1 = {}));\n//# sourceMappingURL=v2beta1.js.map"]},"metadata":{},"sourceType":"script"}