{"ast":null,"code":"\"use strict\";\n/**\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar _regeneratorRuntime = require(\"/Users/amandapoetker-alles/Desktop/campaign-dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _classCallCheck = require(\"/Users/amandapoetker-alles/Desktop/campaign-dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/amandapoetker-alles/Desktop/campaign-dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _get = require(\"/Users/amandapoetker-alles/Desktop/campaign-dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/get\");\n\nvar _getPrototypeOf = require(\"/Users/amandapoetker-alles/Desktop/campaign-dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/getPrototypeOf\");\n\nvar _inherits = require(\"/Users/amandapoetker-alles/Desktop/campaign-dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _createSuper = require(\"/Users/amandapoetker-alles/Desktop/campaign-dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createSuper\");\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : new P(function (resolve) {\n        resolve(result.value);\n      }).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar oauth2client_1 = require(\"./oauth2client\");\n\nvar UserRefreshClient = /*#__PURE__*/function (_oauth2client_1$OAuth) {\n  _inherits(UserRefreshClient, _oauth2client_1$OAuth);\n\n  var _super2 = _createSuper(UserRefreshClient);\n\n  function UserRefreshClient(optionsOrClientId, clientSecret, refreshToken, eagerRefreshThresholdMillis) {\n    var _this;\n\n    _classCallCheck(this, UserRefreshClient);\n\n    var opts = optionsOrClientId && typeof optionsOrClientId === 'object' ? optionsOrClientId : {\n      clientId: optionsOrClientId,\n      clientSecret,\n      refreshToken,\n      eagerRefreshThresholdMillis\n    };\n    _this = _super2.call(this, {\n      clientId: opts.clientId,\n      clientSecret: opts.clientSecret,\n      eagerRefreshThresholdMillis: opts.eagerRefreshThresholdMillis\n    });\n    _this._refreshToken = opts.refreshToken;\n    return _this;\n  }\n  /**\n   * Refreshes the access token.\n   * @param refreshToken An ignored refreshToken..\n   * @param callback Optional callback.\n   */\n\n\n  _createClass(UserRefreshClient, [{\n    key: \"refreshTokenNoCache\",\n    value: function refreshTokenNoCache(refreshToken) {\n      var _this2 = this;\n\n      var _super = Object.create(null, {\n        refreshTokenNoCache: {\n          get: function get() {\n            return _get(_getPrototypeOf(UserRefreshClient.prototype), \"refreshTokenNoCache\", _this2);\n          }\n        }\n      });\n\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                return _context.abrupt(\"return\", _super.refreshTokenNoCache.call(this, this._refreshToken));\n\n              case 1:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n    }\n    /**\n     * Create a UserRefreshClient credentials instance using the given input\n     * options.\n     * @param json The input object.\n     */\n\n  }, {\n    key: \"fromJSON\",\n    value: function fromJSON(json) {\n      if (!json) {\n        throw new Error('Must pass in a JSON object containing the user refresh token');\n      }\n\n      if (json.type !== 'authorized_user') {\n        throw new Error('The incoming JSON object does not have the \"authorized_user\" type');\n      }\n\n      if (!json.client_id) {\n        throw new Error('The incoming JSON object does not contain a client_id field');\n      }\n\n      if (!json.client_secret) {\n        throw new Error('The incoming JSON object does not contain a client_secret field');\n      }\n\n      if (!json.refresh_token) {\n        throw new Error('The incoming JSON object does not contain a refresh_token field');\n      }\n\n      this._clientId = json.client_id;\n      this._clientSecret = json.client_secret;\n      this._refreshToken = json.refresh_token;\n      this.credentials.refresh_token = json.refresh_token;\n    }\n  }, {\n    key: \"fromStream\",\n    value: function fromStream(inputStream, callback) {\n      if (callback) {\n        this.fromStreamAsync(inputStream).then(function (r) {\n          return callback();\n        }, callback);\n      } else {\n        return this.fromStreamAsync(inputStream);\n      }\n    }\n  }, {\n    key: \"fromStreamAsync\",\n    value: function fromStreamAsync(inputStream) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        var _this3 = this;\n\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                return _context2.abrupt(\"return\", new Promise(function (resolve, reject) {\n                  if (!inputStream) {\n                    return reject(new Error('Must pass in a stream containing the user refresh token.'));\n                  }\n\n                  var s = '';\n                  inputStream.setEncoding('utf8').on('error', reject).on('data', function (chunk) {\n                    return s += chunk;\n                  }).on('end', function () {\n                    try {\n                      var data = JSON.parse(s);\n\n                      _this3.fromJSON(data);\n\n                      return resolve();\n                    } catch (err) {\n                      return reject(err);\n                    }\n                  });\n                }));\n\n              case 1:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n    }\n  }]);\n\n  return UserRefreshClient;\n}(oauth2client_1.OAuth2Client);\n\nexports.UserRefreshClient = UserRefreshClient;","map":{"version":3,"sources":["/Users/amandapoetker-alles/Desktop/campaign-dashboard/node_modules/google-auth-library/build/src/auth/refreshclient.js"],"names":["__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","apply","Object","defineProperty","exports","oauth2client_1","require","UserRefreshClient","optionsOrClientId","clientSecret","refreshToken","eagerRefreshThresholdMillis","opts","clientId","_refreshToken","_super","create","refreshTokenNoCache","get","call","json","Error","type","client_id","client_secret","refresh_token","_clientId","_clientSecret","credentials","inputStream","callback","fromStreamAsync","r","s","setEncoding","on","chunk","data","JSON","parse","fromJSON","err","OAuth2Client"],"mappings":"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","sourcesContent":["\"use strict\";\n/**\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst oauth2client_1 = require(\"./oauth2client\");\nclass UserRefreshClient extends oauth2client_1.OAuth2Client {\n    constructor(optionsOrClientId, clientSecret, refreshToken, eagerRefreshThresholdMillis) {\n        const opts = (optionsOrClientId && typeof optionsOrClientId === 'object') ?\n            optionsOrClientId :\n            {\n                clientId: optionsOrClientId,\n                clientSecret,\n                refreshToken,\n                eagerRefreshThresholdMillis\n            };\n        super({\n            clientId: opts.clientId,\n            clientSecret: opts.clientSecret,\n            eagerRefreshThresholdMillis: opts.eagerRefreshThresholdMillis\n        });\n        this._refreshToken = opts.refreshToken;\n    }\n    /**\n     * Refreshes the access token.\n     * @param refreshToken An ignored refreshToken..\n     * @param callback Optional callback.\n     */\n    refreshTokenNoCache(refreshToken) {\n        const _super = Object.create(null, {\n            refreshTokenNoCache: { get: () => super.refreshTokenNoCache }\n        });\n        return __awaiter(this, void 0, void 0, function* () {\n            return _super.refreshTokenNoCache.call(this, this._refreshToken);\n        });\n    }\n    /**\n     * Create a UserRefreshClient credentials instance using the given input\n     * options.\n     * @param json The input object.\n     */\n    fromJSON(json) {\n        if (!json) {\n            throw new Error('Must pass in a JSON object containing the user refresh token');\n        }\n        if (json.type !== 'authorized_user') {\n            throw new Error('The incoming JSON object does not have the \"authorized_user\" type');\n        }\n        if (!json.client_id) {\n            throw new Error('The incoming JSON object does not contain a client_id field');\n        }\n        if (!json.client_secret) {\n            throw new Error('The incoming JSON object does not contain a client_secret field');\n        }\n        if (!json.refresh_token) {\n            throw new Error('The incoming JSON object does not contain a refresh_token field');\n        }\n        this._clientId = json.client_id;\n        this._clientSecret = json.client_secret;\n        this._refreshToken = json.refresh_token;\n        this.credentials.refresh_token = json.refresh_token;\n    }\n    fromStream(inputStream, callback) {\n        if (callback) {\n            this.fromStreamAsync(inputStream).then(r => callback(), callback);\n        }\n        else {\n            return this.fromStreamAsync(inputStream);\n        }\n    }\n    fromStreamAsync(inputStream) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => {\n                if (!inputStream) {\n                    return reject(new Error('Must pass in a stream containing the user refresh token.'));\n                }\n                let s = '';\n                inputStream.setEncoding('utf8')\n                    .on('error', reject)\n                    .on('data', (chunk) => s += chunk)\n                    .on('end', () => {\n                    try {\n                        const data = JSON.parse(s);\n                        this.fromJSON(data);\n                        return resolve();\n                    }\n                    catch (err) {\n                        return reject(err);\n                    }\n                });\n            });\n        });\n    }\n}\nexports.UserRefreshClient = UserRefreshClient;\n//# sourceMappingURL=refreshclient.js.map"]},"metadata":{},"sourceType":"script"}