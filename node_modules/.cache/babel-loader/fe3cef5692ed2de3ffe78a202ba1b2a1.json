{"ast":null,"code":"\"use strict\"; // Copyright 2020 Google LLC\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//    http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nvar _createClass = require(\"/Users/amandapoetker-alles/Desktop/campaign-dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _classCallCheck = require(\"/Users/amandapoetker-alles/Desktop/campaign-dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.admin_reports_v1 = void 0;\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\n/* eslint-disable @typescript-eslint/class-name-casing */\n\n/* eslint-disable @typescript-eslint/no-unused-vars */\n\n/* eslint-disable @typescript-eslint/no-empty-interface */\n\n/* eslint-disable @typescript-eslint/no-namespace */\n\n/* eslint-disable no-irregular-whitespace */\n\nvar googleapis_common_1 = require(\"googleapis-common\");\n\nvar admin_reports_v1;\n\n(function (admin_reports_v1) {\n  /**\n   * Admin SDK API\n   *\n   * Admin SDK lets administrators of enterprise domains to view and manage resources like user, groups etc. It also provides audit and usage reports of domain.\n   *\n   * @example\n   * ```js\n   * const {google} = require('googleapis');\n   * const admin = google.admin('reports_v1');\n   * ```\n   */\n  var Admin = function Admin(options, google) {\n    _classCallCheck(this, Admin);\n\n    this.context = {\n      _options: options || {},\n      google\n    };\n    this.activities = new Resource$Activities(this.context);\n    this.channels = new Resource$Channels(this.context);\n    this.customerUsageReports = new Resource$Customerusagereports(this.context);\n    this.entityUsageReports = new Resource$Entityusagereports(this.context);\n    this.userUsageReport = new Resource$Userusagereport(this.context);\n  };\n\n  admin_reports_v1.Admin = Admin;\n\n  var Resource$Activities = /*#__PURE__*/function () {\n    function Resource$Activities(context) {\n      _classCallCheck(this, Resource$Activities);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Activities, [{\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://admin.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/admin/reports/v1/activity/users/{userKey}/applications/{applicationName}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['userKey', 'applicationName'],\n          pathParams: ['applicationName', 'userKey'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"watch\",\n      value: function watch(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://admin.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/admin/reports/v1/activity/users/{userKey}/applications/{applicationName}/watch').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['userKey', 'applicationName'],\n          pathParams: ['applicationName', 'userKey'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Activities;\n  }();\n\n  admin_reports_v1.Resource$Activities = Resource$Activities;\n\n  var Resource$Channels = /*#__PURE__*/function () {\n    function Resource$Channels(context) {\n      _classCallCheck(this, Resource$Channels);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Channels, [{\n      key: \"stop\",\n      value: function stop(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://admin.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/admin/reports_v1/channels/stop').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: [],\n          pathParams: [],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Channels;\n  }();\n\n  admin_reports_v1.Resource$Channels = Resource$Channels;\n\n  var Resource$Customerusagereports = /*#__PURE__*/function () {\n    function Resource$Customerusagereports(context) {\n      _classCallCheck(this, Resource$Customerusagereports);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Customerusagereports, [{\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://admin.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/admin/reports/v1/usage/dates/{date}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['date'],\n          pathParams: ['date'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Customerusagereports;\n  }();\n\n  admin_reports_v1.Resource$Customerusagereports = Resource$Customerusagereports;\n\n  var Resource$Entityusagereports = /*#__PURE__*/function () {\n    function Resource$Entityusagereports(context) {\n      _classCallCheck(this, Resource$Entityusagereports);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Entityusagereports, [{\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://admin.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/admin/reports/v1/usage/{entityType}/{entityKey}/dates/{date}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['entityType', 'entityKey', 'date'],\n          pathParams: ['date', 'entityKey', 'entityType'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Entityusagereports;\n  }();\n\n  admin_reports_v1.Resource$Entityusagereports = Resource$Entityusagereports;\n\n  var Resource$Userusagereport = /*#__PURE__*/function () {\n    function Resource$Userusagereport(context) {\n      _classCallCheck(this, Resource$Userusagereport);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Userusagereport, [{\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://admin.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/admin/reports/v1/usage/users/{userKey}/dates/{date}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['userKey', 'date'],\n          pathParams: ['date', 'userKey'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Userusagereport;\n  }();\n\n  admin_reports_v1.Resource$Userusagereport = Resource$Userusagereport;\n})(admin_reports_v1 = exports.admin_reports_v1 || (exports.admin_reports_v1 = {}));","map":{"version":3,"sources":["/Users/amandapoetker-alles/Desktop/campaign-dashboard/node_modules/googleapis/build/src/apis/admin/reports_v1.js"],"names":["Object","defineProperty","exports","value","admin_reports_v1","googleapis_common_1","require","Admin","options","google","context","_options","activities","Resource$Activities","channels","Resource$Channels","customerUsageReports","Resource$Customerusagereports","entityUsageReports","Resource$Entityusagereports","userUsageReport","Resource$Userusagereport","paramsOrCallback","optionsOrCallback","callback","params","rootUrl","parameters","assign","url","replace","method","requiredParams","pathParams","createAPIRequest"],"mappings":"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","sourcesContent":["\"use strict\";\n// Copyright 2020 Google LLC\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//    http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.admin_reports_v1 = void 0;\n/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/class-name-casing */\n/* eslint-disable @typescript-eslint/no-unused-vars */\n/* eslint-disable @typescript-eslint/no-empty-interface */\n/* eslint-disable @typescript-eslint/no-namespace */\n/* eslint-disable no-irregular-whitespace */\nconst googleapis_common_1 = require(\"googleapis-common\");\nvar admin_reports_v1;\n(function (admin_reports_v1) {\n    /**\n     * Admin SDK API\n     *\n     * Admin SDK lets administrators of enterprise domains to view and manage resources like user, groups etc. It also provides audit and usage reports of domain.\n     *\n     * @example\n     * ```js\n     * const {google} = require('googleapis');\n     * const admin = google.admin('reports_v1');\n     * ```\n     */\n    class Admin {\n        constructor(options, google) {\n            this.context = {\n                _options: options || {},\n                google,\n            };\n            this.activities = new Resource$Activities(this.context);\n            this.channels = new Resource$Channels(this.context);\n            this.customerUsageReports = new Resource$Customerusagereports(this.context);\n            this.entityUsageReports = new Resource$Entityusagereports(this.context);\n            this.userUsageReport = new Resource$Userusagereport(this.context);\n        }\n    }\n    admin_reports_v1.Admin = Admin;\n    class Resource$Activities {\n        constructor(context) {\n            this.context = context;\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://admin.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/admin/reports/v1/activity/users/{userKey}/applications/{applicationName}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['userKey', 'applicationName'],\n                pathParams: ['applicationName', 'userKey'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        watch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://admin.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/admin/reports/v1/activity/users/{userKey}/applications/{applicationName}/watch').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['userKey', 'applicationName'],\n                pathParams: ['applicationName', 'userKey'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    admin_reports_v1.Resource$Activities = Resource$Activities;\n    class Resource$Channels {\n        constructor(context) {\n            this.context = context;\n        }\n        stop(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://admin.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/admin/reports_v1/channels/stop').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: [],\n                pathParams: [],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    admin_reports_v1.Resource$Channels = Resource$Channels;\n    class Resource$Customerusagereports {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://admin.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/admin/reports/v1/usage/dates/{date}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['date'],\n                pathParams: ['date'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    admin_reports_v1.Resource$Customerusagereports = Resource$Customerusagereports;\n    class Resource$Entityusagereports {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://admin.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/admin/reports/v1/usage/{entityType}/{entityKey}/dates/{date}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['entityType', 'entityKey', 'date'],\n                pathParams: ['date', 'entityKey', 'entityType'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    admin_reports_v1.Resource$Entityusagereports = Resource$Entityusagereports;\n    class Resource$Userusagereport {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://admin.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/admin/reports/v1/usage/users/{userKey}/dates/{date}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['userKey', 'date'],\n                pathParams: ['date', 'userKey'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    admin_reports_v1.Resource$Userusagereport = Resource$Userusagereport;\n})(admin_reports_v1 = exports.admin_reports_v1 || (exports.admin_reports_v1 = {}));\n//# sourceMappingURL=reports_v1.js.map"]},"metadata":{},"sourceType":"script"}