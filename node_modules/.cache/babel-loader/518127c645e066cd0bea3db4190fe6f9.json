{"ast":null,"code":"\"use strict\"; // Copyright 2020 Google LLC\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//    http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nvar _createClass = require(\"/Users/amandapoetker-alles/Desktop/campaign-dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _classCallCheck = require(\"/Users/amandapoetker-alles/Desktop/campaign-dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.dfareporting_v3_4 = void 0;\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\n/* eslint-disable @typescript-eslint/class-name-casing */\n\n/* eslint-disable @typescript-eslint/no-unused-vars */\n\n/* eslint-disable @typescript-eslint/no-empty-interface */\n\n/* eslint-disable @typescript-eslint/no-namespace */\n\n/* eslint-disable no-irregular-whitespace */\n\nvar googleapis_common_1 = require(\"googleapis-common\");\n\nvar dfareporting_v3_4;\n\n(function (dfareporting_v3_4) {\n  /**\n   * Campaign Manager 360 API\n   *\n   * Manage your DoubleClick Campaign Manager ad campaigns and reports.\n   *\n   * @example\n   * ```js\n   * const {google} = require('googleapis');\n   * const dfareporting = google.dfareporting('v3.4');\n   * ```\n   */\n  var Dfareporting = function Dfareporting(options, google) {\n    _classCallCheck(this, Dfareporting);\n\n    this.context = {\n      _options: options || {},\n      google\n    };\n    this.accountActiveAdSummaries = new Resource$Accountactiveadsummaries(this.context);\n    this.accountPermissionGroups = new Resource$Accountpermissiongroups(this.context);\n    this.accountPermissions = new Resource$Accountpermissions(this.context);\n    this.accounts = new Resource$Accounts(this.context);\n    this.accountUserProfiles = new Resource$Accountuserprofiles(this.context);\n    this.ads = new Resource$Ads(this.context);\n    this.advertiserGroups = new Resource$Advertisergroups(this.context);\n    this.advertiserLandingPages = new Resource$Advertiserlandingpages(this.context);\n    this.advertisers = new Resource$Advertisers(this.context);\n    this.browsers = new Resource$Browsers(this.context);\n    this.campaignCreativeAssociations = new Resource$Campaigncreativeassociations(this.context);\n    this.campaigns = new Resource$Campaigns(this.context);\n    this.changeLogs = new Resource$Changelogs(this.context);\n    this.cities = new Resource$Cities(this.context);\n    this.connectionTypes = new Resource$Connectiontypes(this.context);\n    this.contentCategories = new Resource$Contentcategories(this.context);\n    this.conversions = new Resource$Conversions(this.context);\n    this.countries = new Resource$Countries(this.context);\n    this.creativeAssets = new Resource$Creativeassets(this.context);\n    this.creativeFields = new Resource$Creativefields(this.context);\n    this.creativeFieldValues = new Resource$Creativefieldvalues(this.context);\n    this.creativeGroups = new Resource$Creativegroups(this.context);\n    this.creatives = new Resource$Creatives(this.context);\n    this.customEvents = new Resource$Customevents(this.context);\n    this.dimensionValues = new Resource$Dimensionvalues(this.context);\n    this.directorySites = new Resource$Directorysites(this.context);\n    this.dynamicTargetingKeys = new Resource$Dynamictargetingkeys(this.context);\n    this.eventTags = new Resource$Eventtags(this.context);\n    this.files = new Resource$Files(this.context);\n    this.floodlightActivities = new Resource$Floodlightactivities(this.context);\n    this.floodlightActivityGroups = new Resource$Floodlightactivitygroups(this.context);\n    this.floodlightConfigurations = new Resource$Floodlightconfigurations(this.context);\n    this.inventoryItems = new Resource$Inventoryitems(this.context);\n    this.languages = new Resource$Languages(this.context);\n    this.metros = new Resource$Metros(this.context);\n    this.mobileApps = new Resource$Mobileapps(this.context);\n    this.mobileCarriers = new Resource$Mobilecarriers(this.context);\n    this.operatingSystems = new Resource$Operatingsystems(this.context);\n    this.operatingSystemVersions = new Resource$Operatingsystemversions(this.context);\n    this.orderDocuments = new Resource$Orderdocuments(this.context);\n    this.orders = new Resource$Orders(this.context);\n    this.placementGroups = new Resource$Placementgroups(this.context);\n    this.placements = new Resource$Placements(this.context);\n    this.placementStrategies = new Resource$Placementstrategies(this.context);\n    this.platformTypes = new Resource$Platformtypes(this.context);\n    this.postalCodes = new Resource$Postalcodes(this.context);\n    this.projects = new Resource$Projects(this.context);\n    this.regions = new Resource$Regions(this.context);\n    this.remarketingLists = new Resource$Remarketinglists(this.context);\n    this.remarketingListShares = new Resource$Remarketinglistshares(this.context);\n    this.reports = new Resource$Reports(this.context);\n    this.sites = new Resource$Sites(this.context);\n    this.sizes = new Resource$Sizes(this.context);\n    this.subaccounts = new Resource$Subaccounts(this.context);\n    this.targetableRemarketingLists = new Resource$Targetableremarketinglists(this.context);\n    this.targetingTemplates = new Resource$Targetingtemplates(this.context);\n    this.userProfiles = new Resource$Userprofiles(this.context);\n    this.userRolePermissionGroups = new Resource$Userrolepermissiongroups(this.context);\n    this.userRolePermissions = new Resource$Userrolepermissions(this.context);\n    this.userRoles = new Resource$Userroles(this.context);\n    this.videoFormats = new Resource$Videoformats(this.context);\n  };\n\n  dfareporting_v3_4.Dfareporting = Dfareporting;\n\n  var Resource$Accountactiveadsummaries = /*#__PURE__*/function () {\n    function Resource$Accountactiveadsummaries(context) {\n      _classCallCheck(this, Resource$Accountactiveadsummaries);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Accountactiveadsummaries, [{\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/accountActiveAdSummaries/{summaryAccountId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['profileId', 'summaryAccountId'],\n          pathParams: ['profileId', 'summaryAccountId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Accountactiveadsummaries;\n  }();\n\n  dfareporting_v3_4.Resource$Accountactiveadsummaries = Resource$Accountactiveadsummaries;\n\n  var Resource$Accountpermissiongroups = /*#__PURE__*/function () {\n    function Resource$Accountpermissiongroups(context) {\n      _classCallCheck(this, Resource$Accountpermissiongroups);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Accountpermissiongroups, [{\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/accountPermissionGroups/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['profileId', 'id'],\n          pathParams: ['id', 'profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/accountPermissionGroups').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Accountpermissiongroups;\n  }();\n\n  dfareporting_v3_4.Resource$Accountpermissiongroups = Resource$Accountpermissiongroups;\n\n  var Resource$Accountpermissions = /*#__PURE__*/function () {\n    function Resource$Accountpermissions(context) {\n      _classCallCheck(this, Resource$Accountpermissions);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Accountpermissions, [{\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/accountPermissions/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['profileId', 'id'],\n          pathParams: ['id', 'profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/accountPermissions').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Accountpermissions;\n  }();\n\n  dfareporting_v3_4.Resource$Accountpermissions = Resource$Accountpermissions;\n\n  var Resource$Accounts = /*#__PURE__*/function () {\n    function Resource$Accounts(context) {\n      _classCallCheck(this, Resource$Accounts);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Accounts, [{\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/accounts/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['profileId', 'id'],\n          pathParams: ['id', 'profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/accounts').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"patch\",\n      value: function patch(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/accounts').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PATCH'\n          }, options),\n          params,\n          requiredParams: ['profileId', 'id'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"update\",\n      value: function update(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/accounts').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PUT'\n          }, options),\n          params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Accounts;\n  }();\n\n  dfareporting_v3_4.Resource$Accounts = Resource$Accounts;\n\n  var Resource$Accountuserprofiles = /*#__PURE__*/function () {\n    function Resource$Accountuserprofiles(context) {\n      _classCallCheck(this, Resource$Accountuserprofiles);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Accountuserprofiles, [{\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/accountUserProfiles/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['profileId', 'id'],\n          pathParams: ['id', 'profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"insert\",\n      value: function insert(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/accountUserProfiles').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/accountUserProfiles').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"patch\",\n      value: function patch(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/accountUserProfiles').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PATCH'\n          }, options),\n          params,\n          requiredParams: ['profileId', 'id'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"update\",\n      value: function update(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/accountUserProfiles').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PUT'\n          }, options),\n          params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Accountuserprofiles;\n  }();\n\n  dfareporting_v3_4.Resource$Accountuserprofiles = Resource$Accountuserprofiles;\n\n  var Resource$Ads = /*#__PURE__*/function () {\n    function Resource$Ads(context) {\n      _classCallCheck(this, Resource$Ads);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Ads, [{\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/ads/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['profileId', 'id'],\n          pathParams: ['id', 'profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"insert\",\n      value: function insert(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/ads').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/ads').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"patch\",\n      value: function patch(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/ads').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PATCH'\n          }, options),\n          params,\n          requiredParams: ['profileId', 'id'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"update\",\n      value: function update(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/ads').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PUT'\n          }, options),\n          params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Ads;\n  }();\n\n  dfareporting_v3_4.Resource$Ads = Resource$Ads;\n\n  var Resource$Advertisergroups = /*#__PURE__*/function () {\n    function Resource$Advertisergroups(context) {\n      _classCallCheck(this, Resource$Advertisergroups);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Advertisergroups, [{\n      key: \"delete\",\n      value: function _delete(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/advertiserGroups/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'DELETE'\n          }, options),\n          params,\n          requiredParams: ['profileId', 'id'],\n          pathParams: ['id', 'profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/advertiserGroups/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['profileId', 'id'],\n          pathParams: ['id', 'profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"insert\",\n      value: function insert(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/advertiserGroups').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/advertiserGroups').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"patch\",\n      value: function patch(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/advertiserGroups').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PATCH'\n          }, options),\n          params,\n          requiredParams: ['profileId', 'id'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"update\",\n      value: function update(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/advertiserGroups').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PUT'\n          }, options),\n          params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Advertisergroups;\n  }();\n\n  dfareporting_v3_4.Resource$Advertisergroups = Resource$Advertisergroups;\n\n  var Resource$Advertiserlandingpages = /*#__PURE__*/function () {\n    function Resource$Advertiserlandingpages(context) {\n      _classCallCheck(this, Resource$Advertiserlandingpages);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Advertiserlandingpages, [{\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/advertiserLandingPages/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['profileId', 'id'],\n          pathParams: ['id', 'profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"insert\",\n      value: function insert(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/advertiserLandingPages').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/advertiserLandingPages').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"patch\",\n      value: function patch(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/advertiserLandingPages').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PATCH'\n          }, options),\n          params,\n          requiredParams: ['profileId', 'id'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"update\",\n      value: function update(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/advertiserLandingPages').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PUT'\n          }, options),\n          params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Advertiserlandingpages;\n  }();\n\n  dfareporting_v3_4.Resource$Advertiserlandingpages = Resource$Advertiserlandingpages;\n\n  var Resource$Advertisers = /*#__PURE__*/function () {\n    function Resource$Advertisers(context) {\n      _classCallCheck(this, Resource$Advertisers);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Advertisers, [{\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/advertisers/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['profileId', 'id'],\n          pathParams: ['id', 'profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"insert\",\n      value: function insert(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/advertisers').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/advertisers').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"patch\",\n      value: function patch(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/advertisers').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PATCH'\n          }, options),\n          params,\n          requiredParams: ['profileId', 'id'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"update\",\n      value: function update(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/advertisers').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PUT'\n          }, options),\n          params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Advertisers;\n  }();\n\n  dfareporting_v3_4.Resource$Advertisers = Resource$Advertisers;\n\n  var Resource$Browsers = /*#__PURE__*/function () {\n    function Resource$Browsers(context) {\n      _classCallCheck(this, Resource$Browsers);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Browsers, [{\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/browsers').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Browsers;\n  }();\n\n  dfareporting_v3_4.Resource$Browsers = Resource$Browsers;\n\n  var Resource$Campaigncreativeassociations = /*#__PURE__*/function () {\n    function Resource$Campaigncreativeassociations(context) {\n      _classCallCheck(this, Resource$Campaigncreativeassociations);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Campaigncreativeassociations, [{\n      key: \"insert\",\n      value: function insert(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/campaigns/{campaignId}/campaignCreativeAssociations').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['profileId', 'campaignId'],\n          pathParams: ['campaignId', 'profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/campaigns/{campaignId}/campaignCreativeAssociations').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['profileId', 'campaignId'],\n          pathParams: ['campaignId', 'profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Campaigncreativeassociations;\n  }();\n\n  dfareporting_v3_4.Resource$Campaigncreativeassociations = Resource$Campaigncreativeassociations;\n\n  var Resource$Campaigns = /*#__PURE__*/function () {\n    function Resource$Campaigns(context) {\n      _classCallCheck(this, Resource$Campaigns);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Campaigns, [{\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/campaigns/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['profileId', 'id'],\n          pathParams: ['id', 'profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"insert\",\n      value: function insert(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/campaigns').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/campaigns').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"patch\",\n      value: function patch(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/campaigns').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PATCH'\n          }, options),\n          params,\n          requiredParams: ['profileId', 'id'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"update\",\n      value: function update(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/campaigns').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PUT'\n          }, options),\n          params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Campaigns;\n  }();\n\n  dfareporting_v3_4.Resource$Campaigns = Resource$Campaigns;\n\n  var Resource$Changelogs = /*#__PURE__*/function () {\n    function Resource$Changelogs(context) {\n      _classCallCheck(this, Resource$Changelogs);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Changelogs, [{\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/changeLogs/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['profileId', 'id'],\n          pathParams: ['id', 'profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/changeLogs').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Changelogs;\n  }();\n\n  dfareporting_v3_4.Resource$Changelogs = Resource$Changelogs;\n\n  var Resource$Cities = /*#__PURE__*/function () {\n    function Resource$Cities(context) {\n      _classCallCheck(this, Resource$Cities);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Cities, [{\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/cities').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Cities;\n  }();\n\n  dfareporting_v3_4.Resource$Cities = Resource$Cities;\n\n  var Resource$Connectiontypes = /*#__PURE__*/function () {\n    function Resource$Connectiontypes(context) {\n      _classCallCheck(this, Resource$Connectiontypes);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Connectiontypes, [{\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/connectionTypes/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['profileId', 'id'],\n          pathParams: ['id', 'profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/connectionTypes').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Connectiontypes;\n  }();\n\n  dfareporting_v3_4.Resource$Connectiontypes = Resource$Connectiontypes;\n\n  var Resource$Contentcategories = /*#__PURE__*/function () {\n    function Resource$Contentcategories(context) {\n      _classCallCheck(this, Resource$Contentcategories);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Contentcategories, [{\n      key: \"delete\",\n      value: function _delete(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/contentCategories/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'DELETE'\n          }, options),\n          params,\n          requiredParams: ['profileId', 'id'],\n          pathParams: ['id', 'profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/contentCategories/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['profileId', 'id'],\n          pathParams: ['id', 'profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"insert\",\n      value: function insert(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/contentCategories').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/contentCategories').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"patch\",\n      value: function patch(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/contentCategories').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PATCH'\n          }, options),\n          params,\n          requiredParams: ['profileId', 'id'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"update\",\n      value: function update(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/contentCategories').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PUT'\n          }, options),\n          params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Contentcategories;\n  }();\n\n  dfareporting_v3_4.Resource$Contentcategories = Resource$Contentcategories;\n\n  var Resource$Conversions = /*#__PURE__*/function () {\n    function Resource$Conversions(context) {\n      _classCallCheck(this, Resource$Conversions);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Conversions, [{\n      key: \"batchinsert\",\n      value: function batchinsert(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/conversions/batchinsert').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"batchupdate\",\n      value: function batchupdate(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/conversions/batchupdate').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Conversions;\n  }();\n\n  dfareporting_v3_4.Resource$Conversions = Resource$Conversions;\n\n  var Resource$Countries = /*#__PURE__*/function () {\n    function Resource$Countries(context) {\n      _classCallCheck(this, Resource$Countries);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Countries, [{\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/countries/{dartId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['profileId', 'dartId'],\n          pathParams: ['dartId', 'profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/countries').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Countries;\n  }();\n\n  dfareporting_v3_4.Resource$Countries = Resource$Countries;\n\n  var Resource$Creativeassets = /*#__PURE__*/function () {\n    function Resource$Creativeassets(context) {\n      _classCallCheck(this, Resource$Creativeassets);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Creativeassets, [{\n      key: \"insert\",\n      value: function insert(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/creativeAssets/{advertiserId}/creativeAssets').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          mediaUrl: (rootUrl + '/upload/dfareporting/v3.4/userprofiles/{profileId}/creativeAssets/{advertiserId}/creativeAssets').replace(/([^:]\\/)\\/+/g, '$1'),\n          requiredParams: ['profileId', 'advertiserId'],\n          pathParams: ['advertiserId', 'profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Creativeassets;\n  }();\n\n  dfareporting_v3_4.Resource$Creativeassets = Resource$Creativeassets;\n\n  var Resource$Creativefields = /*#__PURE__*/function () {\n    function Resource$Creativefields(context) {\n      _classCallCheck(this, Resource$Creativefields);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Creativefields, [{\n      key: \"delete\",\n      value: function _delete(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/creativeFields/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'DELETE'\n          }, options),\n          params,\n          requiredParams: ['profileId', 'id'],\n          pathParams: ['id', 'profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/creativeFields/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['profileId', 'id'],\n          pathParams: ['id', 'profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"insert\",\n      value: function insert(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/creativeFields').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/creativeFields').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"patch\",\n      value: function patch(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/creativeFields').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PATCH'\n          }, options),\n          params,\n          requiredParams: ['profileId', 'id'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"update\",\n      value: function update(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/creativeFields').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PUT'\n          }, options),\n          params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Creativefields;\n  }();\n\n  dfareporting_v3_4.Resource$Creativefields = Resource$Creativefields;\n\n  var Resource$Creativefieldvalues = /*#__PURE__*/function () {\n    function Resource$Creativefieldvalues(context) {\n      _classCallCheck(this, Resource$Creativefieldvalues);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Creativefieldvalues, [{\n      key: \"delete\",\n      value: function _delete(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/creativeFields/{creativeFieldId}/creativeFieldValues/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'DELETE'\n          }, options),\n          params,\n          requiredParams: ['profileId', 'creativeFieldId', 'id'],\n          pathParams: ['creativeFieldId', 'id', 'profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/creativeFields/{creativeFieldId}/creativeFieldValues/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['profileId', 'creativeFieldId', 'id'],\n          pathParams: ['creativeFieldId', 'id', 'profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"insert\",\n      value: function insert(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/creativeFields/{creativeFieldId}/creativeFieldValues').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['profileId', 'creativeFieldId'],\n          pathParams: ['creativeFieldId', 'profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/creativeFields/{creativeFieldId}/creativeFieldValues').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['profileId', 'creativeFieldId'],\n          pathParams: ['creativeFieldId', 'profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"patch\",\n      value: function patch(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/creativeFields/{creativeFieldId}/creativeFieldValues').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PATCH'\n          }, options),\n          params,\n          requiredParams: ['profileId', 'creativeFieldId', 'id'],\n          pathParams: ['creativeFieldId', 'profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"update\",\n      value: function update(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/creativeFields/{creativeFieldId}/creativeFieldValues').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PUT'\n          }, options),\n          params,\n          requiredParams: ['profileId', 'creativeFieldId'],\n          pathParams: ['creativeFieldId', 'profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Creativefieldvalues;\n  }();\n\n  dfareporting_v3_4.Resource$Creativefieldvalues = Resource$Creativefieldvalues;\n\n  var Resource$Creativegroups = /*#__PURE__*/function () {\n    function Resource$Creativegroups(context) {\n      _classCallCheck(this, Resource$Creativegroups);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Creativegroups, [{\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/creativeGroups/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['profileId', 'id'],\n          pathParams: ['id', 'profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"insert\",\n      value: function insert(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/creativeGroups').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/creativeGroups').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"patch\",\n      value: function patch(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/creativeGroups').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PATCH'\n          }, options),\n          params,\n          requiredParams: ['profileId', 'id'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"update\",\n      value: function update(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/creativeGroups').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PUT'\n          }, options),\n          params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Creativegroups;\n  }();\n\n  dfareporting_v3_4.Resource$Creativegroups = Resource$Creativegroups;\n\n  var Resource$Creatives = /*#__PURE__*/function () {\n    function Resource$Creatives(context) {\n      _classCallCheck(this, Resource$Creatives);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Creatives, [{\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/creatives/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['profileId', 'id'],\n          pathParams: ['id', 'profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"insert\",\n      value: function insert(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/creatives').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/creatives').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"patch\",\n      value: function patch(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/creatives').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PATCH'\n          }, options),\n          params,\n          requiredParams: ['profileId', 'id'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"update\",\n      value: function update(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/creatives').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PUT'\n          }, options),\n          params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Creatives;\n  }();\n\n  dfareporting_v3_4.Resource$Creatives = Resource$Creatives;\n\n  var Resource$Customevents = /*#__PURE__*/function () {\n    function Resource$Customevents(context) {\n      _classCallCheck(this, Resource$Customevents);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Customevents, [{\n      key: \"batchinsert\",\n      value: function batchinsert(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/customEvents/batchinsert').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Customevents;\n  }();\n\n  dfareporting_v3_4.Resource$Customevents = Resource$Customevents;\n\n  var Resource$Dimensionvalues = /*#__PURE__*/function () {\n    function Resource$Dimensionvalues(context) {\n      _classCallCheck(this, Resource$Dimensionvalues);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Dimensionvalues, [{\n      key: \"query\",\n      value: function query(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/dimensionvalues/query').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Dimensionvalues;\n  }();\n\n  dfareporting_v3_4.Resource$Dimensionvalues = Resource$Dimensionvalues;\n\n  var Resource$Directorysites = /*#__PURE__*/function () {\n    function Resource$Directorysites(context) {\n      _classCallCheck(this, Resource$Directorysites);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Directorysites, [{\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/directorySites/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['profileId', 'id'],\n          pathParams: ['id', 'profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"insert\",\n      value: function insert(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/directorySites').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/directorySites').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Directorysites;\n  }();\n\n  dfareporting_v3_4.Resource$Directorysites = Resource$Directorysites;\n\n  var Resource$Dynamictargetingkeys = /*#__PURE__*/function () {\n    function Resource$Dynamictargetingkeys(context) {\n      _classCallCheck(this, Resource$Dynamictargetingkeys);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Dynamictargetingkeys, [{\n      key: \"delete\",\n      value: function _delete(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/dynamicTargetingKeys/{objectId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'DELETE'\n          }, options),\n          params,\n          requiredParams: ['profileId', 'objectId', 'name', 'objectType'],\n          pathParams: ['objectId', 'profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"insert\",\n      value: function insert(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/dynamicTargetingKeys').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/dynamicTargetingKeys').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Dynamictargetingkeys;\n  }();\n\n  dfareporting_v3_4.Resource$Dynamictargetingkeys = Resource$Dynamictargetingkeys;\n\n  var Resource$Eventtags = /*#__PURE__*/function () {\n    function Resource$Eventtags(context) {\n      _classCallCheck(this, Resource$Eventtags);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Eventtags, [{\n      key: \"delete\",\n      value: function _delete(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/eventTags/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'DELETE'\n          }, options),\n          params,\n          requiredParams: ['profileId', 'id'],\n          pathParams: ['id', 'profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/eventTags/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['profileId', 'id'],\n          pathParams: ['id', 'profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"insert\",\n      value: function insert(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/eventTags').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/eventTags').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"patch\",\n      value: function patch(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/eventTags').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PATCH'\n          }, options),\n          params,\n          requiredParams: ['profileId', 'id'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"update\",\n      value: function update(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/eventTags').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PUT'\n          }, options),\n          params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Eventtags;\n  }();\n\n  dfareporting_v3_4.Resource$Eventtags = Resource$Eventtags;\n\n  var Resource$Files = /*#__PURE__*/function () {\n    function Resource$Files(context) {\n      _classCallCheck(this, Resource$Files);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Files, [{\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.4/reports/{reportId}/files/{fileId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['reportId', 'fileId'],\n          pathParams: ['fileId', 'reportId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/files').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Files;\n  }();\n\n  dfareporting_v3_4.Resource$Files = Resource$Files;\n\n  var Resource$Floodlightactivities = /*#__PURE__*/function () {\n    function Resource$Floodlightactivities(context) {\n      _classCallCheck(this, Resource$Floodlightactivities);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Floodlightactivities, [{\n      key: \"delete\",\n      value: function _delete(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/floodlightActivities/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'DELETE'\n          }, options),\n          params,\n          requiredParams: ['profileId', 'id'],\n          pathParams: ['id', 'profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"generatetag\",\n      value: function generatetag(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/floodlightActivities/generatetag').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/floodlightActivities/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['profileId', 'id'],\n          pathParams: ['id', 'profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"insert\",\n      value: function insert(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/floodlightActivities').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/floodlightActivities').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"patch\",\n      value: function patch(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/floodlightActivities').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PATCH'\n          }, options),\n          params,\n          requiredParams: ['profileId', 'id'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"update\",\n      value: function update(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/floodlightActivities').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PUT'\n          }, options),\n          params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Floodlightactivities;\n  }();\n\n  dfareporting_v3_4.Resource$Floodlightactivities = Resource$Floodlightactivities;\n\n  var Resource$Floodlightactivitygroups = /*#__PURE__*/function () {\n    function Resource$Floodlightactivitygroups(context) {\n      _classCallCheck(this, Resource$Floodlightactivitygroups);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Floodlightactivitygroups, [{\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/floodlightActivityGroups/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['profileId', 'id'],\n          pathParams: ['id', 'profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"insert\",\n      value: function insert(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/floodlightActivityGroups').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/floodlightActivityGroups').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"patch\",\n      value: function patch(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/floodlightActivityGroups').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PATCH'\n          }, options),\n          params,\n          requiredParams: ['profileId', 'id'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"update\",\n      value: function update(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/floodlightActivityGroups').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PUT'\n          }, options),\n          params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Floodlightactivitygroups;\n  }();\n\n  dfareporting_v3_4.Resource$Floodlightactivitygroups = Resource$Floodlightactivitygroups;\n\n  var Resource$Floodlightconfigurations = /*#__PURE__*/function () {\n    function Resource$Floodlightconfigurations(context) {\n      _classCallCheck(this, Resource$Floodlightconfigurations);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Floodlightconfigurations, [{\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/floodlightConfigurations/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['profileId', 'id'],\n          pathParams: ['id', 'profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/floodlightConfigurations').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"patch\",\n      value: function patch(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/floodlightConfigurations').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PATCH'\n          }, options),\n          params,\n          requiredParams: ['profileId', 'id'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"update\",\n      value: function update(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/floodlightConfigurations').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PUT'\n          }, options),\n          params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Floodlightconfigurations;\n  }();\n\n  dfareporting_v3_4.Resource$Floodlightconfigurations = Resource$Floodlightconfigurations;\n\n  var Resource$Inventoryitems = /*#__PURE__*/function () {\n    function Resource$Inventoryitems(context) {\n      _classCallCheck(this, Resource$Inventoryitems);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Inventoryitems, [{\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/projects/{projectId}/inventoryItems/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['profileId', 'projectId', 'id'],\n          pathParams: ['id', 'profileId', 'projectId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/projects/{projectId}/inventoryItems').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['profileId', 'projectId'],\n          pathParams: ['profileId', 'projectId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Inventoryitems;\n  }();\n\n  dfareporting_v3_4.Resource$Inventoryitems = Resource$Inventoryitems;\n\n  var Resource$Languages = /*#__PURE__*/function () {\n    function Resource$Languages(context) {\n      _classCallCheck(this, Resource$Languages);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Languages, [{\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/languages').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Languages;\n  }();\n\n  dfareporting_v3_4.Resource$Languages = Resource$Languages;\n\n  var Resource$Metros = /*#__PURE__*/function () {\n    function Resource$Metros(context) {\n      _classCallCheck(this, Resource$Metros);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Metros, [{\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/metros').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Metros;\n  }();\n\n  dfareporting_v3_4.Resource$Metros = Resource$Metros;\n\n  var Resource$Mobileapps = /*#__PURE__*/function () {\n    function Resource$Mobileapps(context) {\n      _classCallCheck(this, Resource$Mobileapps);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Mobileapps, [{\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/mobileApps/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['profileId', 'id'],\n          pathParams: ['id', 'profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/mobileApps').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Mobileapps;\n  }();\n\n  dfareporting_v3_4.Resource$Mobileapps = Resource$Mobileapps;\n\n  var Resource$Mobilecarriers = /*#__PURE__*/function () {\n    function Resource$Mobilecarriers(context) {\n      _classCallCheck(this, Resource$Mobilecarriers);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Mobilecarriers, [{\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/mobileCarriers/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['profileId', 'id'],\n          pathParams: ['id', 'profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/mobileCarriers').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Mobilecarriers;\n  }();\n\n  dfareporting_v3_4.Resource$Mobilecarriers = Resource$Mobilecarriers;\n\n  var Resource$Operatingsystems = /*#__PURE__*/function () {\n    function Resource$Operatingsystems(context) {\n      _classCallCheck(this, Resource$Operatingsystems);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Operatingsystems, [{\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/operatingSystems/{dartId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['profileId', 'dartId'],\n          pathParams: ['dartId', 'profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/operatingSystems').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Operatingsystems;\n  }();\n\n  dfareporting_v3_4.Resource$Operatingsystems = Resource$Operatingsystems;\n\n  var Resource$Operatingsystemversions = /*#__PURE__*/function () {\n    function Resource$Operatingsystemversions(context) {\n      _classCallCheck(this, Resource$Operatingsystemversions);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Operatingsystemversions, [{\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/operatingSystemVersions/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['profileId', 'id'],\n          pathParams: ['id', 'profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/operatingSystemVersions').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Operatingsystemversions;\n  }();\n\n  dfareporting_v3_4.Resource$Operatingsystemversions = Resource$Operatingsystemversions;\n\n  var Resource$Orderdocuments = /*#__PURE__*/function () {\n    function Resource$Orderdocuments(context) {\n      _classCallCheck(this, Resource$Orderdocuments);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Orderdocuments, [{\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/projects/{projectId}/orderDocuments/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['profileId', 'projectId', 'id'],\n          pathParams: ['id', 'profileId', 'projectId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/projects/{projectId}/orderDocuments').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['profileId', 'projectId'],\n          pathParams: ['profileId', 'projectId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Orderdocuments;\n  }();\n\n  dfareporting_v3_4.Resource$Orderdocuments = Resource$Orderdocuments;\n\n  var Resource$Orders = /*#__PURE__*/function () {\n    function Resource$Orders(context) {\n      _classCallCheck(this, Resource$Orders);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Orders, [{\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/projects/{projectId}/orders/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['profileId', 'projectId', 'id'],\n          pathParams: ['id', 'profileId', 'projectId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/projects/{projectId}/orders').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['profileId', 'projectId'],\n          pathParams: ['profileId', 'projectId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Orders;\n  }();\n\n  dfareporting_v3_4.Resource$Orders = Resource$Orders;\n\n  var Resource$Placementgroups = /*#__PURE__*/function () {\n    function Resource$Placementgroups(context) {\n      _classCallCheck(this, Resource$Placementgroups);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Placementgroups, [{\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/placementGroups/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['profileId', 'id'],\n          pathParams: ['id', 'profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"insert\",\n      value: function insert(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/placementGroups').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/placementGroups').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"patch\",\n      value: function patch(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/placementGroups').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PATCH'\n          }, options),\n          params,\n          requiredParams: ['profileId', 'id'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"update\",\n      value: function update(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/placementGroups').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PUT'\n          }, options),\n          params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Placementgroups;\n  }();\n\n  dfareporting_v3_4.Resource$Placementgroups = Resource$Placementgroups;\n\n  var Resource$Placements = /*#__PURE__*/function () {\n    function Resource$Placements(context) {\n      _classCallCheck(this, Resource$Placements);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Placements, [{\n      key: \"generatetags\",\n      value: function generatetags(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/placements/generatetags').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/placements/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['profileId', 'id'],\n          pathParams: ['id', 'profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"insert\",\n      value: function insert(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/placements').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/placements').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"patch\",\n      value: function patch(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/placements').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PATCH'\n          }, options),\n          params,\n          requiredParams: ['profileId', 'id'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"update\",\n      value: function update(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/placements').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PUT'\n          }, options),\n          params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Placements;\n  }();\n\n  dfareporting_v3_4.Resource$Placements = Resource$Placements;\n\n  var Resource$Placementstrategies = /*#__PURE__*/function () {\n    function Resource$Placementstrategies(context) {\n      _classCallCheck(this, Resource$Placementstrategies);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Placementstrategies, [{\n      key: \"delete\",\n      value: function _delete(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/placementStrategies/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'DELETE'\n          }, options),\n          params,\n          requiredParams: ['profileId', 'id'],\n          pathParams: ['id', 'profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/placementStrategies/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['profileId', 'id'],\n          pathParams: ['id', 'profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"insert\",\n      value: function insert(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/placementStrategies').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/placementStrategies').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"patch\",\n      value: function patch(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/placementStrategies').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PATCH'\n          }, options),\n          params,\n          requiredParams: ['profileId', 'id'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"update\",\n      value: function update(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/placementStrategies').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PUT'\n          }, options),\n          params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Placementstrategies;\n  }();\n\n  dfareporting_v3_4.Resource$Placementstrategies = Resource$Placementstrategies;\n\n  var Resource$Platformtypes = /*#__PURE__*/function () {\n    function Resource$Platformtypes(context) {\n      _classCallCheck(this, Resource$Platformtypes);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Platformtypes, [{\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/platformTypes/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['profileId', 'id'],\n          pathParams: ['id', 'profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/platformTypes').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Platformtypes;\n  }();\n\n  dfareporting_v3_4.Resource$Platformtypes = Resource$Platformtypes;\n\n  var Resource$Postalcodes = /*#__PURE__*/function () {\n    function Resource$Postalcodes(context) {\n      _classCallCheck(this, Resource$Postalcodes);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Postalcodes, [{\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/postalCodes/{code}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['profileId', 'code'],\n          pathParams: ['code', 'profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/postalCodes').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Postalcodes;\n  }();\n\n  dfareporting_v3_4.Resource$Postalcodes = Resource$Postalcodes;\n\n  var Resource$Projects = /*#__PURE__*/function () {\n    function Resource$Projects(context) {\n      _classCallCheck(this, Resource$Projects);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Projects, [{\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/projects/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['profileId', 'id'],\n          pathParams: ['id', 'profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/projects').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Projects;\n  }();\n\n  dfareporting_v3_4.Resource$Projects = Resource$Projects;\n\n  var Resource$Regions = /*#__PURE__*/function () {\n    function Resource$Regions(context) {\n      _classCallCheck(this, Resource$Regions);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Regions, [{\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/regions').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Regions;\n  }();\n\n  dfareporting_v3_4.Resource$Regions = Resource$Regions;\n\n  var Resource$Remarketinglists = /*#__PURE__*/function () {\n    function Resource$Remarketinglists(context) {\n      _classCallCheck(this, Resource$Remarketinglists);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Remarketinglists, [{\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/remarketingLists/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['profileId', 'id'],\n          pathParams: ['id', 'profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"insert\",\n      value: function insert(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/remarketingLists').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/remarketingLists').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['profileId', 'advertiserId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"patch\",\n      value: function patch(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/remarketingLists').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PATCH'\n          }, options),\n          params,\n          requiredParams: ['profileId', 'id'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"update\",\n      value: function update(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/remarketingLists').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PUT'\n          }, options),\n          params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Remarketinglists;\n  }();\n\n  dfareporting_v3_4.Resource$Remarketinglists = Resource$Remarketinglists;\n\n  var Resource$Remarketinglistshares = /*#__PURE__*/function () {\n    function Resource$Remarketinglistshares(context) {\n      _classCallCheck(this, Resource$Remarketinglistshares);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Remarketinglistshares, [{\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/remarketingListShares/{remarketingListId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['profileId', 'remarketingListId'],\n          pathParams: ['profileId', 'remarketingListId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"patch\",\n      value: function patch(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/remarketingListShares').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PATCH'\n          }, options),\n          params,\n          requiredParams: ['profileId', 'id'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"update\",\n      value: function update(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/remarketingListShares').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PUT'\n          }, options),\n          params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Remarketinglistshares;\n  }();\n\n  dfareporting_v3_4.Resource$Remarketinglistshares = Resource$Remarketinglistshares;\n\n  var Resource$Reports = /*#__PURE__*/function () {\n    function Resource$Reports(context) {\n      _classCallCheck(this, Resource$Reports);\n\n      this.context = context;\n      this.compatibleFields = new Resource$Reports$Compatiblefields(this.context);\n      this.files = new Resource$Reports$Files(this.context);\n    }\n\n    _createClass(Resource$Reports, [{\n      key: \"delete\",\n      value: function _delete(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/reports/{reportId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'DELETE'\n          }, options),\n          params,\n          requiredParams: ['profileId', 'reportId'],\n          pathParams: ['profileId', 'reportId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/reports/{reportId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['profileId', 'reportId'],\n          pathParams: ['profileId', 'reportId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"insert\",\n      value: function insert(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/reports').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/reports').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"patch\",\n      value: function patch(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/reports/{reportId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PATCH'\n          }, options),\n          params,\n          requiredParams: ['profileId', 'reportId'],\n          pathParams: ['profileId', 'reportId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"run\",\n      value: function run(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/reports/{reportId}/run').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['profileId', 'reportId'],\n          pathParams: ['profileId', 'reportId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"update\",\n      value: function update(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/reports/{reportId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PUT'\n          }, options),\n          params,\n          requiredParams: ['profileId', 'reportId'],\n          pathParams: ['profileId', 'reportId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Reports;\n  }();\n\n  dfareporting_v3_4.Resource$Reports = Resource$Reports;\n\n  var Resource$Reports$Compatiblefields = /*#__PURE__*/function () {\n    function Resource$Reports$Compatiblefields(context) {\n      _classCallCheck(this, Resource$Reports$Compatiblefields);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Reports$Compatiblefields, [{\n      key: \"query\",\n      value: function query(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/reports/compatiblefields/query').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Reports$Compatiblefields;\n  }();\n\n  dfareporting_v3_4.Resource$Reports$Compatiblefields = Resource$Reports$Compatiblefields;\n\n  var Resource$Reports$Files = /*#__PURE__*/function () {\n    function Resource$Reports$Files(context) {\n      _classCallCheck(this, Resource$Reports$Files);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Reports$Files, [{\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/reports/{reportId}/files/{fileId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['profileId', 'reportId', 'fileId'],\n          pathParams: ['fileId', 'profileId', 'reportId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/reports/{reportId}/files').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['profileId', 'reportId'],\n          pathParams: ['profileId', 'reportId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Reports$Files;\n  }();\n\n  dfareporting_v3_4.Resource$Reports$Files = Resource$Reports$Files;\n\n  var Resource$Sites = /*#__PURE__*/function () {\n    function Resource$Sites(context) {\n      _classCallCheck(this, Resource$Sites);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Sites, [{\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/sites/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['profileId', 'id'],\n          pathParams: ['id', 'profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"insert\",\n      value: function insert(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/sites').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/sites').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"patch\",\n      value: function patch(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/sites').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PATCH'\n          }, options),\n          params,\n          requiredParams: ['profileId', 'id'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"update\",\n      value: function update(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/sites').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PUT'\n          }, options),\n          params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Sites;\n  }();\n\n  dfareporting_v3_4.Resource$Sites = Resource$Sites;\n\n  var Resource$Sizes = /*#__PURE__*/function () {\n    function Resource$Sizes(context) {\n      _classCallCheck(this, Resource$Sizes);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Sizes, [{\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/sizes/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['profileId', 'id'],\n          pathParams: ['id', 'profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"insert\",\n      value: function insert(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/sizes').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/sizes').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Sizes;\n  }();\n\n  dfareporting_v3_4.Resource$Sizes = Resource$Sizes;\n\n  var Resource$Subaccounts = /*#__PURE__*/function () {\n    function Resource$Subaccounts(context) {\n      _classCallCheck(this, Resource$Subaccounts);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Subaccounts, [{\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/subaccounts/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['profileId', 'id'],\n          pathParams: ['id', 'profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"insert\",\n      value: function insert(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/subaccounts').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/subaccounts').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"patch\",\n      value: function patch(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/subaccounts').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PATCH'\n          }, options),\n          params,\n          requiredParams: ['profileId', 'id'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"update\",\n      value: function update(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/subaccounts').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PUT'\n          }, options),\n          params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Subaccounts;\n  }();\n\n  dfareporting_v3_4.Resource$Subaccounts = Resource$Subaccounts;\n\n  var Resource$Targetableremarketinglists = /*#__PURE__*/function () {\n    function Resource$Targetableremarketinglists(context) {\n      _classCallCheck(this, Resource$Targetableremarketinglists);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Targetableremarketinglists, [{\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/targetableRemarketingLists/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['profileId', 'id'],\n          pathParams: ['id', 'profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/targetableRemarketingLists').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['profileId', 'advertiserId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Targetableremarketinglists;\n  }();\n\n  dfareporting_v3_4.Resource$Targetableremarketinglists = Resource$Targetableremarketinglists;\n\n  var Resource$Targetingtemplates = /*#__PURE__*/function () {\n    function Resource$Targetingtemplates(context) {\n      _classCallCheck(this, Resource$Targetingtemplates);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Targetingtemplates, [{\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/targetingTemplates/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['profileId', 'id'],\n          pathParams: ['id', 'profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"insert\",\n      value: function insert(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/targetingTemplates').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/targetingTemplates').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"patch\",\n      value: function patch(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/targetingTemplates').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PATCH'\n          }, options),\n          params,\n          requiredParams: ['profileId', 'id'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"update\",\n      value: function update(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/targetingTemplates').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PUT'\n          }, options),\n          params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Targetingtemplates;\n  }();\n\n  dfareporting_v3_4.Resource$Targetingtemplates = Resource$Targetingtemplates;\n\n  var Resource$Userprofiles = /*#__PURE__*/function () {\n    function Resource$Userprofiles(context) {\n      _classCallCheck(this, Resource$Userprofiles);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Userprofiles, [{\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.4/userprofiles').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: [],\n          pathParams: [],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Userprofiles;\n  }();\n\n  dfareporting_v3_4.Resource$Userprofiles = Resource$Userprofiles;\n\n  var Resource$Userrolepermissiongroups = /*#__PURE__*/function () {\n    function Resource$Userrolepermissiongroups(context) {\n      _classCallCheck(this, Resource$Userrolepermissiongroups);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Userrolepermissiongroups, [{\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/userRolePermissionGroups/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['profileId', 'id'],\n          pathParams: ['id', 'profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/userRolePermissionGroups').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Userrolepermissiongroups;\n  }();\n\n  dfareporting_v3_4.Resource$Userrolepermissiongroups = Resource$Userrolepermissiongroups;\n\n  var Resource$Userrolepermissions = /*#__PURE__*/function () {\n    function Resource$Userrolepermissions(context) {\n      _classCallCheck(this, Resource$Userrolepermissions);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Userrolepermissions, [{\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/userRolePermissions/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['profileId', 'id'],\n          pathParams: ['id', 'profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/userRolePermissions').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Userrolepermissions;\n  }();\n\n  dfareporting_v3_4.Resource$Userrolepermissions = Resource$Userrolepermissions;\n\n  var Resource$Userroles = /*#__PURE__*/function () {\n    function Resource$Userroles(context) {\n      _classCallCheck(this, Resource$Userroles);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Userroles, [{\n      key: \"delete\",\n      value: function _delete(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/userRoles/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'DELETE'\n          }, options),\n          params,\n          requiredParams: ['profileId', 'id'],\n          pathParams: ['id', 'profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/userRoles/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['profileId', 'id'],\n          pathParams: ['id', 'profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"insert\",\n      value: function insert(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/userRoles').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/userRoles').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"patch\",\n      value: function patch(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/userRoles').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PATCH'\n          }, options),\n          params,\n          requiredParams: ['profileId', 'id'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"update\",\n      value: function update(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/userRoles').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PUT'\n          }, options),\n          params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Userroles;\n  }();\n\n  dfareporting_v3_4.Resource$Userroles = Resource$Userroles;\n\n  var Resource$Videoformats = /*#__PURE__*/function () {\n    function Resource$Videoformats(context) {\n      _classCallCheck(this, Resource$Videoformats);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Videoformats, [{\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/videoFormats/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['profileId', 'id'],\n          pathParams: ['id', 'profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/videoFormats').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Videoformats;\n  }();\n\n  dfareporting_v3_4.Resource$Videoformats = Resource$Videoformats;\n})(dfareporting_v3_4 = exports.dfareporting_v3_4 || (exports.dfareporting_v3_4 = {}));","map":{"version":3,"sources":["/Users/amandapoetker-alles/Desktop/campaign-dashboard/node_modules/googleapis/build/src/apis/dfareporting/v3.4.js"],"names":["Object","defineProperty","exports","value","dfareporting_v3_4","googleapis_common_1","require","Dfareporting","options","google","context","_options","accountActiveAdSummaries","Resource$Accountactiveadsummaries","accountPermissionGroups","Resource$Accountpermissiongroups","accountPermissions","Resource$Accountpermissions","accounts","Resource$Accounts","accountUserProfiles","Resource$Accountuserprofiles","ads","Resource$Ads","advertiserGroups","Resource$Advertisergroups","advertiserLandingPages","Resource$Advertiserlandingpages","advertisers","Resource$Advertisers","browsers","Resource$Browsers","campaignCreativeAssociations","Resource$Campaigncreativeassociations","campaigns","Resource$Campaigns","changeLogs","Resource$Changelogs","cities","Resource$Cities","connectionTypes","Resource$Connectiontypes","contentCategories","Resource$Contentcategories","conversions","Resource$Conversions","countries","Resource$Countries","creativeAssets","Resource$Creativeassets","creativeFields","Resource$Creativefields","creativeFieldValues","Resource$Creativefieldvalues","creativeGroups","Resource$Creativegroups","creatives","Resource$Creatives","customEvents","Resource$Customevents","dimensionValues","Resource$Dimensionvalues","directorySites","Resource$Directorysites","dynamicTargetingKeys","Resource$Dynamictargetingkeys","eventTags","Resource$Eventtags","files","Resource$Files","floodlightActivities","Resource$Floodlightactivities","floodlightActivityGroups","Resource$Floodlightactivitygroups","floodlightConfigurations","Resource$Floodlightconfigurations","inventoryItems","Resource$Inventoryitems","languages","Resource$Languages","metros","Resource$Metros","mobileApps","Resource$Mobileapps","mobileCarriers","Resource$Mobilecarriers","operatingSystems","Resource$Operatingsystems","operatingSystemVersions","Resource$Operatingsystemversions","orderDocuments","Resource$Orderdocuments","orders","Resource$Orders","placementGroups","Resource$Placementgroups","placements","Resource$Placements","placementStrategies","Resource$Placementstrategies","platformTypes","Resource$Platformtypes","postalCodes","Resource$Postalcodes","projects","Resource$Projects","regions","Resource$Regions","remarketingLists","Resource$Remarketinglists","remarketingListShares","Resource$Remarketinglistshares","reports","Resource$Reports","sites","Resource$Sites","sizes","Resource$Sizes","subaccounts","Resource$Subaccounts","targetableRemarketingLists","Resource$Targetableremarketinglists","targetingTemplates","Resource$Targetingtemplates","userProfiles","Resource$Userprofiles","userRolePermissionGroups","Resource$Userrolepermissiongroups","userRolePermissions","Resource$Userrolepermissions","userRoles","Resource$Userroles","videoFormats","Resource$Videoformats","paramsOrCallback","optionsOrCallback","callback","params","rootUrl","parameters","assign","url","replace","method","requiredParams","pathParams","createAPIRequest","mediaUrl","compatibleFields","Resource$Reports$Compatiblefields","Resource$Reports$Files"],"mappings":"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","sourcesContent":["\"use strict\";\n// Copyright 2020 Google LLC\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//    http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.dfareporting_v3_4 = void 0;\n/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/class-name-casing */\n/* eslint-disable @typescript-eslint/no-unused-vars */\n/* eslint-disable @typescript-eslint/no-empty-interface */\n/* eslint-disable @typescript-eslint/no-namespace */\n/* eslint-disable no-irregular-whitespace */\nconst googleapis_common_1 = require(\"googleapis-common\");\nvar dfareporting_v3_4;\n(function (dfareporting_v3_4) {\n    /**\n     * Campaign Manager 360 API\n     *\n     * Manage your DoubleClick Campaign Manager ad campaigns and reports.\n     *\n     * @example\n     * ```js\n     * const {google} = require('googleapis');\n     * const dfareporting = google.dfareporting('v3.4');\n     * ```\n     */\n    class Dfareporting {\n        constructor(options, google) {\n            this.context = {\n                _options: options || {},\n                google,\n            };\n            this.accountActiveAdSummaries = new Resource$Accountactiveadsummaries(this.context);\n            this.accountPermissionGroups = new Resource$Accountpermissiongroups(this.context);\n            this.accountPermissions = new Resource$Accountpermissions(this.context);\n            this.accounts = new Resource$Accounts(this.context);\n            this.accountUserProfiles = new Resource$Accountuserprofiles(this.context);\n            this.ads = new Resource$Ads(this.context);\n            this.advertiserGroups = new Resource$Advertisergroups(this.context);\n            this.advertiserLandingPages = new Resource$Advertiserlandingpages(this.context);\n            this.advertisers = new Resource$Advertisers(this.context);\n            this.browsers = new Resource$Browsers(this.context);\n            this.campaignCreativeAssociations = new Resource$Campaigncreativeassociations(this.context);\n            this.campaigns = new Resource$Campaigns(this.context);\n            this.changeLogs = new Resource$Changelogs(this.context);\n            this.cities = new Resource$Cities(this.context);\n            this.connectionTypes = new Resource$Connectiontypes(this.context);\n            this.contentCategories = new Resource$Contentcategories(this.context);\n            this.conversions = new Resource$Conversions(this.context);\n            this.countries = new Resource$Countries(this.context);\n            this.creativeAssets = new Resource$Creativeassets(this.context);\n            this.creativeFields = new Resource$Creativefields(this.context);\n            this.creativeFieldValues = new Resource$Creativefieldvalues(this.context);\n            this.creativeGroups = new Resource$Creativegroups(this.context);\n            this.creatives = new Resource$Creatives(this.context);\n            this.customEvents = new Resource$Customevents(this.context);\n            this.dimensionValues = new Resource$Dimensionvalues(this.context);\n            this.directorySites = new Resource$Directorysites(this.context);\n            this.dynamicTargetingKeys = new Resource$Dynamictargetingkeys(this.context);\n            this.eventTags = new Resource$Eventtags(this.context);\n            this.files = new Resource$Files(this.context);\n            this.floodlightActivities = new Resource$Floodlightactivities(this.context);\n            this.floodlightActivityGroups = new Resource$Floodlightactivitygroups(this.context);\n            this.floodlightConfigurations = new Resource$Floodlightconfigurations(this.context);\n            this.inventoryItems = new Resource$Inventoryitems(this.context);\n            this.languages = new Resource$Languages(this.context);\n            this.metros = new Resource$Metros(this.context);\n            this.mobileApps = new Resource$Mobileapps(this.context);\n            this.mobileCarriers = new Resource$Mobilecarriers(this.context);\n            this.operatingSystems = new Resource$Operatingsystems(this.context);\n            this.operatingSystemVersions = new Resource$Operatingsystemversions(this.context);\n            this.orderDocuments = new Resource$Orderdocuments(this.context);\n            this.orders = new Resource$Orders(this.context);\n            this.placementGroups = new Resource$Placementgroups(this.context);\n            this.placements = new Resource$Placements(this.context);\n            this.placementStrategies = new Resource$Placementstrategies(this.context);\n            this.platformTypes = new Resource$Platformtypes(this.context);\n            this.postalCodes = new Resource$Postalcodes(this.context);\n            this.projects = new Resource$Projects(this.context);\n            this.regions = new Resource$Regions(this.context);\n            this.remarketingLists = new Resource$Remarketinglists(this.context);\n            this.remarketingListShares = new Resource$Remarketinglistshares(this.context);\n            this.reports = new Resource$Reports(this.context);\n            this.sites = new Resource$Sites(this.context);\n            this.sizes = new Resource$Sizes(this.context);\n            this.subaccounts = new Resource$Subaccounts(this.context);\n            this.targetableRemarketingLists = new Resource$Targetableremarketinglists(this.context);\n            this.targetingTemplates = new Resource$Targetingtemplates(this.context);\n            this.userProfiles = new Resource$Userprofiles(this.context);\n            this.userRolePermissionGroups = new Resource$Userrolepermissiongroups(this.context);\n            this.userRolePermissions = new Resource$Userrolepermissions(this.context);\n            this.userRoles = new Resource$Userroles(this.context);\n            this.videoFormats = new Resource$Videoformats(this.context);\n        }\n    }\n    dfareporting_v3_4.Dfareporting = Dfareporting;\n    class Resource$Accountactiveadsummaries {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.4/userprofiles/{profileId}/accountActiveAdSummaries/{summaryAccountId}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'summaryAccountId'],\n                pathParams: ['profileId', 'summaryAccountId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    dfareporting_v3_4.Resource$Accountactiveadsummaries = Resource$Accountactiveadsummaries;\n    class Resource$Accountpermissiongroups {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.4/userprofiles/{profileId}/accountPermissionGroups/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['id', 'profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.4/userprofiles/{profileId}/accountPermissionGroups').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    dfareporting_v3_4.Resource$Accountpermissiongroups = Resource$Accountpermissiongroups;\n    class Resource$Accountpermissions {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.4/userprofiles/{profileId}/accountPermissions/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['id', 'profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.4/userprofiles/{profileId}/accountPermissions').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    dfareporting_v3_4.Resource$Accountpermissions = Resource$Accountpermissions;\n    class Resource$Accounts {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.4/userprofiles/{profileId}/accounts/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['id', 'profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/accounts').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        patch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/accounts').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PATCH',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        update(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/accounts').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PUT',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    dfareporting_v3_4.Resource$Accounts = Resource$Accounts;\n    class Resource$Accountuserprofiles {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.4/userprofiles/{profileId}/accountUserProfiles/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['id', 'profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        insert(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.4/userprofiles/{profileId}/accountUserProfiles').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.4/userprofiles/{profileId}/accountUserProfiles').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        patch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.4/userprofiles/{profileId}/accountUserProfiles').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PATCH',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        update(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.4/userprofiles/{profileId}/accountUserProfiles').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PUT',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    dfareporting_v3_4.Resource$Accountuserprofiles = Resource$Accountuserprofiles;\n    class Resource$Ads {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/ads/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['id', 'profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        insert(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/ads').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/ads').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        patch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/ads').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PATCH',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        update(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/ads').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PUT',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    dfareporting_v3_4.Resource$Ads = Resource$Ads;\n    class Resource$Advertisergroups {\n        constructor(context) {\n            this.context = context;\n        }\n        delete(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.4/userprofiles/{profileId}/advertiserGroups/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'DELETE',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['id', 'profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.4/userprofiles/{profileId}/advertiserGroups/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['id', 'profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        insert(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.4/userprofiles/{profileId}/advertiserGroups').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.4/userprofiles/{profileId}/advertiserGroups').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        patch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.4/userprofiles/{profileId}/advertiserGroups').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PATCH',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        update(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.4/userprofiles/{profileId}/advertiserGroups').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PUT',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    dfareporting_v3_4.Resource$Advertisergroups = Resource$Advertisergroups;\n    class Resource$Advertiserlandingpages {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.4/userprofiles/{profileId}/advertiserLandingPages/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['id', 'profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        insert(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.4/userprofiles/{profileId}/advertiserLandingPages').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.4/userprofiles/{profileId}/advertiserLandingPages').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        patch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.4/userprofiles/{profileId}/advertiserLandingPages').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PATCH',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        update(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.4/userprofiles/{profileId}/advertiserLandingPages').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PUT',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    dfareporting_v3_4.Resource$Advertiserlandingpages = Resource$Advertiserlandingpages;\n    class Resource$Advertisers {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.4/userprofiles/{profileId}/advertisers/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['id', 'profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        insert(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.4/userprofiles/{profileId}/advertisers').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.4/userprofiles/{profileId}/advertisers').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        patch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.4/userprofiles/{profileId}/advertisers').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PATCH',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        update(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.4/userprofiles/{profileId}/advertisers').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PUT',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    dfareporting_v3_4.Resource$Advertisers = Resource$Advertisers;\n    class Resource$Browsers {\n        constructor(context) {\n            this.context = context;\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/browsers').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    dfareporting_v3_4.Resource$Browsers = Resource$Browsers;\n    class Resource$Campaigncreativeassociations {\n        constructor(context) {\n            this.context = context;\n        }\n        insert(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.4/userprofiles/{profileId}/campaigns/{campaignId}/campaignCreativeAssociations').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'campaignId'],\n                pathParams: ['campaignId', 'profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.4/userprofiles/{profileId}/campaigns/{campaignId}/campaignCreativeAssociations').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'campaignId'],\n                pathParams: ['campaignId', 'profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    dfareporting_v3_4.Resource$Campaigncreativeassociations = Resource$Campaigncreativeassociations;\n    class Resource$Campaigns {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.4/userprofiles/{profileId}/campaigns/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['id', 'profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        insert(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/campaigns').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/campaigns').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        patch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/campaigns').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PATCH',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        update(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/campaigns').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PUT',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    dfareporting_v3_4.Resource$Campaigns = Resource$Campaigns;\n    class Resource$Changelogs {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.4/userprofiles/{profileId}/changeLogs/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['id', 'profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/changeLogs').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    dfareporting_v3_4.Resource$Changelogs = Resource$Changelogs;\n    class Resource$Cities {\n        constructor(context) {\n            this.context = context;\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/cities').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    dfareporting_v3_4.Resource$Cities = Resource$Cities;\n    class Resource$Connectiontypes {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.4/userprofiles/{profileId}/connectionTypes/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['id', 'profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.4/userprofiles/{profileId}/connectionTypes').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    dfareporting_v3_4.Resource$Connectiontypes = Resource$Connectiontypes;\n    class Resource$Contentcategories {\n        constructor(context) {\n            this.context = context;\n        }\n        delete(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.4/userprofiles/{profileId}/contentCategories/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'DELETE',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['id', 'profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.4/userprofiles/{profileId}/contentCategories/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['id', 'profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        insert(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.4/userprofiles/{profileId}/contentCategories').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.4/userprofiles/{profileId}/contentCategories').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        patch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.4/userprofiles/{profileId}/contentCategories').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PATCH',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        update(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.4/userprofiles/{profileId}/contentCategories').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PUT',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    dfareporting_v3_4.Resource$Contentcategories = Resource$Contentcategories;\n    class Resource$Conversions {\n        constructor(context) {\n            this.context = context;\n        }\n        batchinsert(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.4/userprofiles/{profileId}/conversions/batchinsert').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        batchupdate(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.4/userprofiles/{profileId}/conversions/batchupdate').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    dfareporting_v3_4.Resource$Conversions = Resource$Conversions;\n    class Resource$Countries {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.4/userprofiles/{profileId}/countries/{dartId}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'dartId'],\n                pathParams: ['dartId', 'profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/countries').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    dfareporting_v3_4.Resource$Countries = Resource$Countries;\n    class Resource$Creativeassets {\n        constructor(context) {\n            this.context = context;\n        }\n        insert(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.4/userprofiles/{profileId}/creativeAssets/{advertiserId}/creativeAssets').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                mediaUrl: (rootUrl +\n                    '/upload/dfareporting/v3.4/userprofiles/{profileId}/creativeAssets/{advertiserId}/creativeAssets').replace(/([^:]\\/)\\/+/g, '$1'),\n                requiredParams: ['profileId', 'advertiserId'],\n                pathParams: ['advertiserId', 'profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    dfareporting_v3_4.Resource$Creativeassets = Resource$Creativeassets;\n    class Resource$Creativefields {\n        constructor(context) {\n            this.context = context;\n        }\n        delete(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.4/userprofiles/{profileId}/creativeFields/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'DELETE',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['id', 'profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.4/userprofiles/{profileId}/creativeFields/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['id', 'profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        insert(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.4/userprofiles/{profileId}/creativeFields').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.4/userprofiles/{profileId}/creativeFields').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        patch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.4/userprofiles/{profileId}/creativeFields').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PATCH',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        update(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.4/userprofiles/{profileId}/creativeFields').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PUT',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    dfareporting_v3_4.Resource$Creativefields = Resource$Creativefields;\n    class Resource$Creativefieldvalues {\n        constructor(context) {\n            this.context = context;\n        }\n        delete(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.4/userprofiles/{profileId}/creativeFields/{creativeFieldId}/creativeFieldValues/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'DELETE',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'creativeFieldId', 'id'],\n                pathParams: ['creativeFieldId', 'id', 'profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.4/userprofiles/{profileId}/creativeFields/{creativeFieldId}/creativeFieldValues/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'creativeFieldId', 'id'],\n                pathParams: ['creativeFieldId', 'id', 'profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        insert(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.4/userprofiles/{profileId}/creativeFields/{creativeFieldId}/creativeFieldValues').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'creativeFieldId'],\n                pathParams: ['creativeFieldId', 'profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.4/userprofiles/{profileId}/creativeFields/{creativeFieldId}/creativeFieldValues').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'creativeFieldId'],\n                pathParams: ['creativeFieldId', 'profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        patch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.4/userprofiles/{profileId}/creativeFields/{creativeFieldId}/creativeFieldValues').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PATCH',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'creativeFieldId', 'id'],\n                pathParams: ['creativeFieldId', 'profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        update(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.4/userprofiles/{profileId}/creativeFields/{creativeFieldId}/creativeFieldValues').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PUT',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'creativeFieldId'],\n                pathParams: ['creativeFieldId', 'profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    dfareporting_v3_4.Resource$Creativefieldvalues = Resource$Creativefieldvalues;\n    class Resource$Creativegroups {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.4/userprofiles/{profileId}/creativeGroups/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['id', 'profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        insert(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.4/userprofiles/{profileId}/creativeGroups').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.4/userprofiles/{profileId}/creativeGroups').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        patch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.4/userprofiles/{profileId}/creativeGroups').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PATCH',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        update(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.4/userprofiles/{profileId}/creativeGroups').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PUT',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    dfareporting_v3_4.Resource$Creativegroups = Resource$Creativegroups;\n    class Resource$Creatives {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.4/userprofiles/{profileId}/creatives/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['id', 'profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        insert(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/creatives').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/creatives').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        patch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/creatives').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PATCH',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        update(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/creatives').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PUT',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    dfareporting_v3_4.Resource$Creatives = Resource$Creatives;\n    class Resource$Customevents {\n        constructor(context) {\n            this.context = context;\n        }\n        batchinsert(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.4/userprofiles/{profileId}/customEvents/batchinsert').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    dfareporting_v3_4.Resource$Customevents = Resource$Customevents;\n    class Resource$Dimensionvalues {\n        constructor(context) {\n            this.context = context;\n        }\n        query(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.4/userprofiles/{profileId}/dimensionvalues/query').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    dfareporting_v3_4.Resource$Dimensionvalues = Resource$Dimensionvalues;\n    class Resource$Directorysites {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.4/userprofiles/{profileId}/directorySites/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['id', 'profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        insert(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.4/userprofiles/{profileId}/directorySites').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.4/userprofiles/{profileId}/directorySites').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    dfareporting_v3_4.Resource$Directorysites = Resource$Directorysites;\n    class Resource$Dynamictargetingkeys {\n        constructor(context) {\n            this.context = context;\n        }\n        delete(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.4/userprofiles/{profileId}/dynamicTargetingKeys/{objectId}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'DELETE',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'objectId', 'name', 'objectType'],\n                pathParams: ['objectId', 'profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        insert(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.4/userprofiles/{profileId}/dynamicTargetingKeys').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.4/userprofiles/{profileId}/dynamicTargetingKeys').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    dfareporting_v3_4.Resource$Dynamictargetingkeys = Resource$Dynamictargetingkeys;\n    class Resource$Eventtags {\n        constructor(context) {\n            this.context = context;\n        }\n        delete(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.4/userprofiles/{profileId}/eventTags/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'DELETE',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['id', 'profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.4/userprofiles/{profileId}/eventTags/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['id', 'profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        insert(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/eventTags').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/eventTags').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        patch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/eventTags').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PATCH',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        update(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/eventTags').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PUT',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    dfareporting_v3_4.Resource$Eventtags = Resource$Eventtags;\n    class Resource$Files {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/dfareporting/v3.4/reports/{reportId}/files/{fileId}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['reportId', 'fileId'],\n                pathParams: ['fileId', 'reportId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/files').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    dfareporting_v3_4.Resource$Files = Resource$Files;\n    class Resource$Floodlightactivities {\n        constructor(context) {\n            this.context = context;\n        }\n        delete(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.4/userprofiles/{profileId}/floodlightActivities/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'DELETE',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['id', 'profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        generatetag(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.4/userprofiles/{profileId}/floodlightActivities/generatetag').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.4/userprofiles/{profileId}/floodlightActivities/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['id', 'profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        insert(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.4/userprofiles/{profileId}/floodlightActivities').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.4/userprofiles/{profileId}/floodlightActivities').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        patch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.4/userprofiles/{profileId}/floodlightActivities').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PATCH',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        update(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.4/userprofiles/{profileId}/floodlightActivities').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PUT',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    dfareporting_v3_4.Resource$Floodlightactivities = Resource$Floodlightactivities;\n    class Resource$Floodlightactivitygroups {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.4/userprofiles/{profileId}/floodlightActivityGroups/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['id', 'profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        insert(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.4/userprofiles/{profileId}/floodlightActivityGroups').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.4/userprofiles/{profileId}/floodlightActivityGroups').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        patch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.4/userprofiles/{profileId}/floodlightActivityGroups').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PATCH',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        update(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.4/userprofiles/{profileId}/floodlightActivityGroups').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PUT',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    dfareporting_v3_4.Resource$Floodlightactivitygroups = Resource$Floodlightactivitygroups;\n    class Resource$Floodlightconfigurations {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.4/userprofiles/{profileId}/floodlightConfigurations/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['id', 'profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.4/userprofiles/{profileId}/floodlightConfigurations').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        patch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.4/userprofiles/{profileId}/floodlightConfigurations').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PATCH',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        update(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.4/userprofiles/{profileId}/floodlightConfigurations').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PUT',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    dfareporting_v3_4.Resource$Floodlightconfigurations = Resource$Floodlightconfigurations;\n    class Resource$Inventoryitems {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.4/userprofiles/{profileId}/projects/{projectId}/inventoryItems/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'projectId', 'id'],\n                pathParams: ['id', 'profileId', 'projectId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.4/userprofiles/{profileId}/projects/{projectId}/inventoryItems').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'projectId'],\n                pathParams: ['profileId', 'projectId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    dfareporting_v3_4.Resource$Inventoryitems = Resource$Inventoryitems;\n    class Resource$Languages {\n        constructor(context) {\n            this.context = context;\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/languages').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    dfareporting_v3_4.Resource$Languages = Resource$Languages;\n    class Resource$Metros {\n        constructor(context) {\n            this.context = context;\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/metros').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    dfareporting_v3_4.Resource$Metros = Resource$Metros;\n    class Resource$Mobileapps {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.4/userprofiles/{profileId}/mobileApps/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['id', 'profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/mobileApps').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    dfareporting_v3_4.Resource$Mobileapps = Resource$Mobileapps;\n    class Resource$Mobilecarriers {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.4/userprofiles/{profileId}/mobileCarriers/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['id', 'profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.4/userprofiles/{profileId}/mobileCarriers').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    dfareporting_v3_4.Resource$Mobilecarriers = Resource$Mobilecarriers;\n    class Resource$Operatingsystems {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.4/userprofiles/{profileId}/operatingSystems/{dartId}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'dartId'],\n                pathParams: ['dartId', 'profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.4/userprofiles/{profileId}/operatingSystems').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    dfareporting_v3_4.Resource$Operatingsystems = Resource$Operatingsystems;\n    class Resource$Operatingsystemversions {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.4/userprofiles/{profileId}/operatingSystemVersions/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['id', 'profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.4/userprofiles/{profileId}/operatingSystemVersions').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    dfareporting_v3_4.Resource$Operatingsystemversions = Resource$Operatingsystemversions;\n    class Resource$Orderdocuments {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.4/userprofiles/{profileId}/projects/{projectId}/orderDocuments/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'projectId', 'id'],\n                pathParams: ['id', 'profileId', 'projectId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.4/userprofiles/{profileId}/projects/{projectId}/orderDocuments').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'projectId'],\n                pathParams: ['profileId', 'projectId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    dfareporting_v3_4.Resource$Orderdocuments = Resource$Orderdocuments;\n    class Resource$Orders {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.4/userprofiles/{profileId}/projects/{projectId}/orders/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'projectId', 'id'],\n                pathParams: ['id', 'profileId', 'projectId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.4/userprofiles/{profileId}/projects/{projectId}/orders').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'projectId'],\n                pathParams: ['profileId', 'projectId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    dfareporting_v3_4.Resource$Orders = Resource$Orders;\n    class Resource$Placementgroups {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.4/userprofiles/{profileId}/placementGroups/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['id', 'profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        insert(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.4/userprofiles/{profileId}/placementGroups').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.4/userprofiles/{profileId}/placementGroups').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        patch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.4/userprofiles/{profileId}/placementGroups').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PATCH',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        update(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.4/userprofiles/{profileId}/placementGroups').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PUT',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    dfareporting_v3_4.Resource$Placementgroups = Resource$Placementgroups;\n    class Resource$Placements {\n        constructor(context) {\n            this.context = context;\n        }\n        generatetags(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.4/userprofiles/{profileId}/placements/generatetags').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.4/userprofiles/{profileId}/placements/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['id', 'profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        insert(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/placements').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/placements').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        patch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/placements').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PATCH',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        update(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/placements').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PUT',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    dfareporting_v3_4.Resource$Placements = Resource$Placements;\n    class Resource$Placementstrategies {\n        constructor(context) {\n            this.context = context;\n        }\n        delete(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.4/userprofiles/{profileId}/placementStrategies/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'DELETE',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['id', 'profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.4/userprofiles/{profileId}/placementStrategies/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['id', 'profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        insert(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.4/userprofiles/{profileId}/placementStrategies').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.4/userprofiles/{profileId}/placementStrategies').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        patch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.4/userprofiles/{profileId}/placementStrategies').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PATCH',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        update(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.4/userprofiles/{profileId}/placementStrategies').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PUT',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    dfareporting_v3_4.Resource$Placementstrategies = Resource$Placementstrategies;\n    class Resource$Platformtypes {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.4/userprofiles/{profileId}/platformTypes/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['id', 'profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.4/userprofiles/{profileId}/platformTypes').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    dfareporting_v3_4.Resource$Platformtypes = Resource$Platformtypes;\n    class Resource$Postalcodes {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.4/userprofiles/{profileId}/postalCodes/{code}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'code'],\n                pathParams: ['code', 'profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.4/userprofiles/{profileId}/postalCodes').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    dfareporting_v3_4.Resource$Postalcodes = Resource$Postalcodes;\n    class Resource$Projects {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.4/userprofiles/{profileId}/projects/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['id', 'profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/projects').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    dfareporting_v3_4.Resource$Projects = Resource$Projects;\n    class Resource$Regions {\n        constructor(context) {\n            this.context = context;\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/regions').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    dfareporting_v3_4.Resource$Regions = Resource$Regions;\n    class Resource$Remarketinglists {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.4/userprofiles/{profileId}/remarketingLists/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['id', 'profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        insert(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.4/userprofiles/{profileId}/remarketingLists').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.4/userprofiles/{profileId}/remarketingLists').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'advertiserId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        patch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.4/userprofiles/{profileId}/remarketingLists').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PATCH',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        update(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.4/userprofiles/{profileId}/remarketingLists').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PUT',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    dfareporting_v3_4.Resource$Remarketinglists = Resource$Remarketinglists;\n    class Resource$Remarketinglistshares {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.4/userprofiles/{profileId}/remarketingListShares/{remarketingListId}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'remarketingListId'],\n                pathParams: ['profileId', 'remarketingListId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        patch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.4/userprofiles/{profileId}/remarketingListShares').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PATCH',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        update(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.4/userprofiles/{profileId}/remarketingListShares').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PUT',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    dfareporting_v3_4.Resource$Remarketinglistshares = Resource$Remarketinglistshares;\n    class Resource$Reports {\n        constructor(context) {\n            this.context = context;\n            this.compatibleFields = new Resource$Reports$Compatiblefields(this.context);\n            this.files = new Resource$Reports$Files(this.context);\n        }\n        delete(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.4/userprofiles/{profileId}/reports/{reportId}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'DELETE',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'reportId'],\n                pathParams: ['profileId', 'reportId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.4/userprofiles/{profileId}/reports/{reportId}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'reportId'],\n                pathParams: ['profileId', 'reportId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        insert(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/reports').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/reports').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        patch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.4/userprofiles/{profileId}/reports/{reportId}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PATCH',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'reportId'],\n                pathParams: ['profileId', 'reportId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        run(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.4/userprofiles/{profileId}/reports/{reportId}/run').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'reportId'],\n                pathParams: ['profileId', 'reportId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        update(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.4/userprofiles/{profileId}/reports/{reportId}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PUT',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'reportId'],\n                pathParams: ['profileId', 'reportId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    dfareporting_v3_4.Resource$Reports = Resource$Reports;\n    class Resource$Reports$Compatiblefields {\n        constructor(context) {\n            this.context = context;\n        }\n        query(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.4/userprofiles/{profileId}/reports/compatiblefields/query').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    dfareporting_v3_4.Resource$Reports$Compatiblefields = Resource$Reports$Compatiblefields;\n    class Resource$Reports$Files {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.4/userprofiles/{profileId}/reports/{reportId}/files/{fileId}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'reportId', 'fileId'],\n                pathParams: ['fileId', 'profileId', 'reportId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.4/userprofiles/{profileId}/reports/{reportId}/files').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'reportId'],\n                pathParams: ['profileId', 'reportId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    dfareporting_v3_4.Resource$Reports$Files = Resource$Reports$Files;\n    class Resource$Sites {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/sites/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['id', 'profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        insert(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/sites').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/sites').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        patch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/sites').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PATCH',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        update(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/sites').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PUT',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    dfareporting_v3_4.Resource$Sites = Resource$Sites;\n    class Resource$Sizes {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/sizes/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['id', 'profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        insert(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/sizes').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/sizes').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    dfareporting_v3_4.Resource$Sizes = Resource$Sizes;\n    class Resource$Subaccounts {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.4/userprofiles/{profileId}/subaccounts/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['id', 'profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        insert(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.4/userprofiles/{profileId}/subaccounts').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.4/userprofiles/{profileId}/subaccounts').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        patch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.4/userprofiles/{profileId}/subaccounts').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PATCH',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        update(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.4/userprofiles/{profileId}/subaccounts').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PUT',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    dfareporting_v3_4.Resource$Subaccounts = Resource$Subaccounts;\n    class Resource$Targetableremarketinglists {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.4/userprofiles/{profileId}/targetableRemarketingLists/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['id', 'profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.4/userprofiles/{profileId}/targetableRemarketingLists').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'advertiserId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    dfareporting_v3_4.Resource$Targetableremarketinglists = Resource$Targetableremarketinglists;\n    class Resource$Targetingtemplates {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.4/userprofiles/{profileId}/targetingTemplates/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['id', 'profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        insert(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.4/userprofiles/{profileId}/targetingTemplates').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.4/userprofiles/{profileId}/targetingTemplates').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        patch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.4/userprofiles/{profileId}/targetingTemplates').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PATCH',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        update(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.4/userprofiles/{profileId}/targetingTemplates').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PUT',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    dfareporting_v3_4.Resource$Targetingtemplates = Resource$Targetingtemplates;\n    class Resource$Userprofiles {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/dfareporting/v3.4/userprofiles').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: [],\n                pathParams: [],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    dfareporting_v3_4.Resource$Userprofiles = Resource$Userprofiles;\n    class Resource$Userrolepermissiongroups {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.4/userprofiles/{profileId}/userRolePermissionGroups/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['id', 'profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.4/userprofiles/{profileId}/userRolePermissionGroups').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    dfareporting_v3_4.Resource$Userrolepermissiongroups = Resource$Userrolepermissiongroups;\n    class Resource$Userrolepermissions {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.4/userprofiles/{profileId}/userRolePermissions/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['id', 'profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.4/userprofiles/{profileId}/userRolePermissions').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    dfareporting_v3_4.Resource$Userrolepermissions = Resource$Userrolepermissions;\n    class Resource$Userroles {\n        constructor(context) {\n            this.context = context;\n        }\n        delete(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.4/userprofiles/{profileId}/userRoles/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'DELETE',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['id', 'profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.4/userprofiles/{profileId}/userRoles/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['id', 'profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        insert(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/userRoles').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/userRoles').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        patch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/userRoles').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PATCH',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        update(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/userRoles').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PUT',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    dfareporting_v3_4.Resource$Userroles = Resource$Userroles;\n    class Resource$Videoformats {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.4/userprofiles/{profileId}/videoFormats/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['id', 'profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.4/userprofiles/{profileId}/videoFormats').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    dfareporting_v3_4.Resource$Videoformats = Resource$Videoformats;\n})(dfareporting_v3_4 = exports.dfareporting_v3_4 || (exports.dfareporting_v3_4 = {}));\n//# sourceMappingURL=v3.4.js.map"]},"metadata":{},"sourceType":"script"}