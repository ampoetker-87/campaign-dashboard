{"ast":null,"code":"\"use strict\"; // Copyright 2020 Google LLC\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//    http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nvar _createClass = require(\"/Users/amandapoetker-alles/Desktop/campaign-dashboard/Campaign-Planner/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _classCallCheck = require(\"/Users/amandapoetker-alles/Desktop/campaign-dashboard/Campaign-Planner/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.androidpublisher_v3 = void 0;\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\n/* eslint-disable @typescript-eslint/class-name-casing */\n\n/* eslint-disable @typescript-eslint/no-unused-vars */\n\n/* eslint-disable @typescript-eslint/no-empty-interface */\n\n/* eslint-disable @typescript-eslint/no-namespace */\n\n/* eslint-disable no-irregular-whitespace */\n\nvar googleapis_common_1 = require(\"googleapis-common\");\n\nvar androidpublisher_v3;\n\n(function (androidpublisher_v3) {\n  /**\n   * Google Play Android Developer API\n   *\n   * Lets Android application developers access their Google Play accounts.\n   *\n   * @example\n   * ```js\n   * const {google} = require('googleapis');\n   * const androidpublisher = google.androidpublisher('v3');\n   * ```\n   */\n  var Androidpublisher = function Androidpublisher(options, google) {\n    _classCallCheck(this, Androidpublisher);\n\n    this.context = {\n      _options: options || {},\n      google\n    };\n    this.edits = new Resource$Edits(this.context);\n    this.inappproducts = new Resource$Inappproducts(this.context);\n    this.internalappsharingartifacts = new Resource$Internalappsharingartifacts(this.context);\n    this.orders = new Resource$Orders(this.context);\n    this.purchases = new Resource$Purchases(this.context);\n    this.reviews = new Resource$Reviews(this.context);\n    this.systemapks = new Resource$Systemapks(this.context);\n  };\n\n  androidpublisher_v3.Androidpublisher = Androidpublisher;\n\n  var Resource$Edits = /*#__PURE__*/function () {\n    function Resource$Edits(context) {\n      _classCallCheck(this, Resource$Edits);\n\n      this.context = context;\n      this.apks = new Resource$Edits$Apks(this.context);\n      this.bundles = new Resource$Edits$Bundles(this.context);\n      this.deobfuscationfiles = new Resource$Edits$Deobfuscationfiles(this.context);\n      this.details = new Resource$Edits$Details(this.context);\n      this.expansionfiles = new Resource$Edits$Expansionfiles(this.context);\n      this.images = new Resource$Edits$Images(this.context);\n      this.listings = new Resource$Edits$Listings(this.context);\n      this.testers = new Resource$Edits$Testers(this.context);\n      this.tracks = new Resource$Edits$Tracks(this.context);\n    }\n\n    _createClass(Resource$Edits, [{\n      key: \"commit\",\n      value: function commit(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://androidpublisher.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/androidpublisher/v3/applications/{packageName}/edits/{editId}:commit').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['packageName', 'editId'],\n          pathParams: ['editId', 'packageName'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"delete\",\n      value: function _delete(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://androidpublisher.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/androidpublisher/v3/applications/{packageName}/edits/{editId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'DELETE'\n          }, options),\n          params,\n          requiredParams: ['packageName', 'editId'],\n          pathParams: ['editId', 'packageName'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://androidpublisher.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/androidpublisher/v3/applications/{packageName}/edits/{editId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['packageName', 'editId'],\n          pathParams: ['editId', 'packageName'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"insert\",\n      value: function insert(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://androidpublisher.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/androidpublisher/v3/applications/{packageName}/edits').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['packageName'],\n          pathParams: ['packageName'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"validate\",\n      value: function validate(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://androidpublisher.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/androidpublisher/v3/applications/{packageName}/edits/{editId}:validate').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['packageName', 'editId'],\n          pathParams: ['editId', 'packageName'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Edits;\n  }();\n\n  androidpublisher_v3.Resource$Edits = Resource$Edits;\n\n  var Resource$Edits$Apks = /*#__PURE__*/function () {\n    function Resource$Edits$Apks(context) {\n      _classCallCheck(this, Resource$Edits$Apks);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Edits$Apks, [{\n      key: \"addexternallyhosted\",\n      value: function addexternallyhosted(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://androidpublisher.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/androidpublisher/v3/applications/{packageName}/edits/{editId}/apks/externallyHosted').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['packageName', 'editId'],\n          pathParams: ['editId', 'packageName'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://androidpublisher.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/androidpublisher/v3/applications/{packageName}/edits/{editId}/apks').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['packageName', 'editId'],\n          pathParams: ['editId', 'packageName'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"upload\",\n      value: function upload(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://androidpublisher.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/androidpublisher/v3/applications/{packageName}/edits/{editId}/apks').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          mediaUrl: (rootUrl + '/upload/androidpublisher/v3/applications/{packageName}/edits/{editId}/apks').replace(/([^:]\\/)\\/+/g, '$1'),\n          requiredParams: ['packageName', 'editId'],\n          pathParams: ['editId', 'packageName'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Edits$Apks;\n  }();\n\n  androidpublisher_v3.Resource$Edits$Apks = Resource$Edits$Apks;\n\n  var Resource$Edits$Bundles = /*#__PURE__*/function () {\n    function Resource$Edits$Bundles(context) {\n      _classCallCheck(this, Resource$Edits$Bundles);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Edits$Bundles, [{\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://androidpublisher.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/androidpublisher/v3/applications/{packageName}/edits/{editId}/bundles').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['packageName', 'editId'],\n          pathParams: ['editId', 'packageName'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"upload\",\n      value: function upload(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://androidpublisher.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/androidpublisher/v3/applications/{packageName}/edits/{editId}/bundles').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          mediaUrl: (rootUrl + '/upload/androidpublisher/v3/applications/{packageName}/edits/{editId}/bundles').replace(/([^:]\\/)\\/+/g, '$1'),\n          requiredParams: ['packageName', 'editId'],\n          pathParams: ['editId', 'packageName'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Edits$Bundles;\n  }();\n\n  androidpublisher_v3.Resource$Edits$Bundles = Resource$Edits$Bundles;\n\n  var Resource$Edits$Deobfuscationfiles = /*#__PURE__*/function () {\n    function Resource$Edits$Deobfuscationfiles(context) {\n      _classCallCheck(this, Resource$Edits$Deobfuscationfiles);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Edits$Deobfuscationfiles, [{\n      key: \"upload\",\n      value: function upload(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://androidpublisher.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/androidpublisher/v3/applications/{packageName}/edits/{editId}/apks/{apkVersionCode}/deobfuscationFiles/{deobfuscationFileType}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          mediaUrl: (rootUrl + '/upload/androidpublisher/v3/applications/{packageName}/edits/{editId}/apks/{apkVersionCode}/deobfuscationFiles/{deobfuscationFileType}').replace(/([^:]\\/)\\/+/g, '$1'),\n          requiredParams: ['packageName', 'editId', 'apkVersionCode', 'deobfuscationFileType'],\n          pathParams: ['apkVersionCode', 'deobfuscationFileType', 'editId', 'packageName'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Edits$Deobfuscationfiles;\n  }();\n\n  androidpublisher_v3.Resource$Edits$Deobfuscationfiles = Resource$Edits$Deobfuscationfiles;\n\n  var Resource$Edits$Details = /*#__PURE__*/function () {\n    function Resource$Edits$Details(context) {\n      _classCallCheck(this, Resource$Edits$Details);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Edits$Details, [{\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://androidpublisher.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/androidpublisher/v3/applications/{packageName}/edits/{editId}/details').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['packageName', 'editId'],\n          pathParams: ['editId', 'packageName'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"patch\",\n      value: function patch(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://androidpublisher.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/androidpublisher/v3/applications/{packageName}/edits/{editId}/details').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PATCH'\n          }, options),\n          params,\n          requiredParams: ['packageName', 'editId'],\n          pathParams: ['editId', 'packageName'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"update\",\n      value: function update(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://androidpublisher.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/androidpublisher/v3/applications/{packageName}/edits/{editId}/details').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PUT'\n          }, options),\n          params,\n          requiredParams: ['packageName', 'editId'],\n          pathParams: ['editId', 'packageName'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Edits$Details;\n  }();\n\n  androidpublisher_v3.Resource$Edits$Details = Resource$Edits$Details;\n\n  var Resource$Edits$Expansionfiles = /*#__PURE__*/function () {\n    function Resource$Edits$Expansionfiles(context) {\n      _classCallCheck(this, Resource$Edits$Expansionfiles);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Edits$Expansionfiles, [{\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://androidpublisher.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/androidpublisher/v3/applications/{packageName}/edits/{editId}/apks/{apkVersionCode}/expansionFiles/{expansionFileType}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['packageName', 'editId', 'apkVersionCode', 'expansionFileType'],\n          pathParams: ['apkVersionCode', 'editId', 'expansionFileType', 'packageName'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"patch\",\n      value: function patch(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://androidpublisher.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/androidpublisher/v3/applications/{packageName}/edits/{editId}/apks/{apkVersionCode}/expansionFiles/{expansionFileType}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PATCH'\n          }, options),\n          params,\n          requiredParams: ['packageName', 'editId', 'apkVersionCode', 'expansionFileType'],\n          pathParams: ['apkVersionCode', 'editId', 'expansionFileType', 'packageName'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"update\",\n      value: function update(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://androidpublisher.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/androidpublisher/v3/applications/{packageName}/edits/{editId}/apks/{apkVersionCode}/expansionFiles/{expansionFileType}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PUT'\n          }, options),\n          params,\n          requiredParams: ['packageName', 'editId', 'apkVersionCode', 'expansionFileType'],\n          pathParams: ['apkVersionCode', 'editId', 'expansionFileType', 'packageName'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"upload\",\n      value: function upload(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://androidpublisher.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/androidpublisher/v3/applications/{packageName}/edits/{editId}/apks/{apkVersionCode}/expansionFiles/{expansionFileType}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          mediaUrl: (rootUrl + '/upload/androidpublisher/v3/applications/{packageName}/edits/{editId}/apks/{apkVersionCode}/expansionFiles/{expansionFileType}').replace(/([^:]\\/)\\/+/g, '$1'),\n          requiredParams: ['packageName', 'editId', 'apkVersionCode', 'expansionFileType'],\n          pathParams: ['apkVersionCode', 'editId', 'expansionFileType', 'packageName'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Edits$Expansionfiles;\n  }();\n\n  androidpublisher_v3.Resource$Edits$Expansionfiles = Resource$Edits$Expansionfiles;\n\n  var Resource$Edits$Images = /*#__PURE__*/function () {\n    function Resource$Edits$Images(context) {\n      _classCallCheck(this, Resource$Edits$Images);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Edits$Images, [{\n      key: \"delete\",\n      value: function _delete(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://androidpublisher.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/androidpublisher/v3/applications/{packageName}/edits/{editId}/listings/{language}/{imageType}/{imageId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'DELETE'\n          }, options),\n          params,\n          requiredParams: ['packageName', 'editId', 'language', 'imageType', 'imageId'],\n          pathParams: ['editId', 'imageId', 'imageType', 'language', 'packageName'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"deleteall\",\n      value: function deleteall(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://androidpublisher.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/androidpublisher/v3/applications/{packageName}/edits/{editId}/listings/{language}/{imageType}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'DELETE'\n          }, options),\n          params,\n          requiredParams: ['packageName', 'editId', 'language', 'imageType'],\n          pathParams: ['editId', 'imageType', 'language', 'packageName'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://androidpublisher.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/androidpublisher/v3/applications/{packageName}/edits/{editId}/listings/{language}/{imageType}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['packageName', 'editId', 'language', 'imageType'],\n          pathParams: ['editId', 'imageType', 'language', 'packageName'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"upload\",\n      value: function upload(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://androidpublisher.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/androidpublisher/v3/applications/{packageName}/edits/{editId}/listings/{language}/{imageType}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          mediaUrl: (rootUrl + '/upload/androidpublisher/v3/applications/{packageName}/edits/{editId}/listings/{language}/{imageType}').replace(/([^:]\\/)\\/+/g, '$1'),\n          requiredParams: ['packageName', 'editId', 'language', 'imageType'],\n          pathParams: ['editId', 'imageType', 'language', 'packageName'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Edits$Images;\n  }();\n\n  androidpublisher_v3.Resource$Edits$Images = Resource$Edits$Images;\n\n  var Resource$Edits$Listings = /*#__PURE__*/function () {\n    function Resource$Edits$Listings(context) {\n      _classCallCheck(this, Resource$Edits$Listings);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Edits$Listings, [{\n      key: \"delete\",\n      value: function _delete(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://androidpublisher.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/androidpublisher/v3/applications/{packageName}/edits/{editId}/listings/{language}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'DELETE'\n          }, options),\n          params,\n          requiredParams: ['packageName', 'editId', 'language'],\n          pathParams: ['editId', 'language', 'packageName'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"deleteall\",\n      value: function deleteall(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://androidpublisher.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/androidpublisher/v3/applications/{packageName}/edits/{editId}/listings').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'DELETE'\n          }, options),\n          params,\n          requiredParams: ['packageName', 'editId'],\n          pathParams: ['editId', 'packageName'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://androidpublisher.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/androidpublisher/v3/applications/{packageName}/edits/{editId}/listings/{language}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['packageName', 'editId', 'language'],\n          pathParams: ['editId', 'language', 'packageName'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://androidpublisher.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/androidpublisher/v3/applications/{packageName}/edits/{editId}/listings').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['packageName', 'editId'],\n          pathParams: ['editId', 'packageName'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"patch\",\n      value: function patch(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://androidpublisher.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/androidpublisher/v3/applications/{packageName}/edits/{editId}/listings/{language}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PATCH'\n          }, options),\n          params,\n          requiredParams: ['packageName', 'editId', 'language'],\n          pathParams: ['editId', 'language', 'packageName'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"update\",\n      value: function update(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://androidpublisher.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/androidpublisher/v3/applications/{packageName}/edits/{editId}/listings/{language}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PUT'\n          }, options),\n          params,\n          requiredParams: ['packageName', 'editId', 'language'],\n          pathParams: ['editId', 'language', 'packageName'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Edits$Listings;\n  }();\n\n  androidpublisher_v3.Resource$Edits$Listings = Resource$Edits$Listings;\n\n  var Resource$Edits$Testers = /*#__PURE__*/function () {\n    function Resource$Edits$Testers(context) {\n      _classCallCheck(this, Resource$Edits$Testers);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Edits$Testers, [{\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://androidpublisher.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/androidpublisher/v3/applications/{packageName}/edits/{editId}/testers/{track}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['packageName', 'editId', 'track'],\n          pathParams: ['editId', 'packageName', 'track'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"patch\",\n      value: function patch(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://androidpublisher.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/androidpublisher/v3/applications/{packageName}/edits/{editId}/testers/{track}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PATCH'\n          }, options),\n          params,\n          requiredParams: ['packageName', 'editId', 'track'],\n          pathParams: ['editId', 'packageName', 'track'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"update\",\n      value: function update(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://androidpublisher.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/androidpublisher/v3/applications/{packageName}/edits/{editId}/testers/{track}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PUT'\n          }, options),\n          params,\n          requiredParams: ['packageName', 'editId', 'track'],\n          pathParams: ['editId', 'packageName', 'track'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Edits$Testers;\n  }();\n\n  androidpublisher_v3.Resource$Edits$Testers = Resource$Edits$Testers;\n\n  var Resource$Edits$Tracks = /*#__PURE__*/function () {\n    function Resource$Edits$Tracks(context) {\n      _classCallCheck(this, Resource$Edits$Tracks);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Edits$Tracks, [{\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://androidpublisher.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/androidpublisher/v3/applications/{packageName}/edits/{editId}/tracks/{track}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['packageName', 'editId', 'track'],\n          pathParams: ['editId', 'packageName', 'track'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://androidpublisher.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/androidpublisher/v3/applications/{packageName}/edits/{editId}/tracks').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['packageName', 'editId'],\n          pathParams: ['editId', 'packageName'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"patch\",\n      value: function patch(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://androidpublisher.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/androidpublisher/v3/applications/{packageName}/edits/{editId}/tracks/{track}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PATCH'\n          }, options),\n          params,\n          requiredParams: ['packageName', 'editId', 'track'],\n          pathParams: ['editId', 'packageName', 'track'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"update\",\n      value: function update(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://androidpublisher.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/androidpublisher/v3/applications/{packageName}/edits/{editId}/tracks/{track}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PUT'\n          }, options),\n          params,\n          requiredParams: ['packageName', 'editId', 'track'],\n          pathParams: ['editId', 'packageName', 'track'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Edits$Tracks;\n  }();\n\n  androidpublisher_v3.Resource$Edits$Tracks = Resource$Edits$Tracks;\n\n  var Resource$Inappproducts = /*#__PURE__*/function () {\n    function Resource$Inappproducts(context) {\n      _classCallCheck(this, Resource$Inappproducts);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Inappproducts, [{\n      key: \"delete\",\n      value: function _delete(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://androidpublisher.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/androidpublisher/v3/applications/{packageName}/inappproducts/{sku}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'DELETE'\n          }, options),\n          params,\n          requiredParams: ['packageName', 'sku'],\n          pathParams: ['packageName', 'sku'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://androidpublisher.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/androidpublisher/v3/applications/{packageName}/inappproducts/{sku}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['packageName', 'sku'],\n          pathParams: ['packageName', 'sku'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"insert\",\n      value: function insert(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://androidpublisher.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/androidpublisher/v3/applications/{packageName}/inappproducts').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['packageName'],\n          pathParams: ['packageName'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://androidpublisher.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/androidpublisher/v3/applications/{packageName}/inappproducts').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['packageName'],\n          pathParams: ['packageName'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"patch\",\n      value: function patch(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://androidpublisher.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/androidpublisher/v3/applications/{packageName}/inappproducts/{sku}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PATCH'\n          }, options),\n          params,\n          requiredParams: ['packageName', 'sku'],\n          pathParams: ['packageName', 'sku'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"update\",\n      value: function update(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://androidpublisher.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/androidpublisher/v3/applications/{packageName}/inappproducts/{sku}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PUT'\n          }, options),\n          params,\n          requiredParams: ['packageName', 'sku'],\n          pathParams: ['packageName', 'sku'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Inappproducts;\n  }();\n\n  androidpublisher_v3.Resource$Inappproducts = Resource$Inappproducts;\n\n  var Resource$Internalappsharingartifacts = /*#__PURE__*/function () {\n    function Resource$Internalappsharingartifacts(context) {\n      _classCallCheck(this, Resource$Internalappsharingartifacts);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Internalappsharingartifacts, [{\n      key: \"uploadapk\",\n      value: function uploadapk(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://androidpublisher.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/androidpublisher/v3/applications/internalappsharing/{packageName}/artifacts/apk').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          mediaUrl: (rootUrl + '/upload/androidpublisher/v3/applications/internalappsharing/{packageName}/artifacts/apk').replace(/([^:]\\/)\\/+/g, '$1'),\n          requiredParams: ['packageName'],\n          pathParams: ['packageName'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"uploadbundle\",\n      value: function uploadbundle(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://androidpublisher.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/androidpublisher/v3/applications/internalappsharing/{packageName}/artifacts/bundle').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          mediaUrl: (rootUrl + '/upload/androidpublisher/v3/applications/internalappsharing/{packageName}/artifacts/bundle').replace(/([^:]\\/)\\/+/g, '$1'),\n          requiredParams: ['packageName'],\n          pathParams: ['packageName'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Internalappsharingartifacts;\n  }();\n\n  androidpublisher_v3.Resource$Internalappsharingartifacts = Resource$Internalappsharingartifacts;\n\n  var Resource$Orders = /*#__PURE__*/function () {\n    function Resource$Orders(context) {\n      _classCallCheck(this, Resource$Orders);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Orders, [{\n      key: \"refund\",\n      value: function refund(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://androidpublisher.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/androidpublisher/v3/applications/{packageName}/orders/{orderId}:refund').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['packageName', 'orderId'],\n          pathParams: ['orderId', 'packageName'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Orders;\n  }();\n\n  androidpublisher_v3.Resource$Orders = Resource$Orders;\n\n  var Resource$Purchases = function Resource$Purchases(context) {\n    _classCallCheck(this, Resource$Purchases);\n\n    this.context = context;\n    this.products = new Resource$Purchases$Products(this.context);\n    this.subscriptions = new Resource$Purchases$Subscriptions(this.context);\n    this.voidedpurchases = new Resource$Purchases$Voidedpurchases(this.context);\n  };\n\n  androidpublisher_v3.Resource$Purchases = Resource$Purchases;\n\n  var Resource$Purchases$Products = /*#__PURE__*/function () {\n    function Resource$Purchases$Products(context) {\n      _classCallCheck(this, Resource$Purchases$Products);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Purchases$Products, [{\n      key: \"acknowledge\",\n      value: function acknowledge(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://androidpublisher.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/androidpublisher/v3/applications/{packageName}/purchases/products/{productId}/tokens/{token}:acknowledge').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['packageName', 'productId', 'token'],\n          pathParams: ['packageName', 'productId', 'token'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://androidpublisher.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/androidpublisher/v3/applications/{packageName}/purchases/products/{productId}/tokens/{token}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['packageName', 'productId', 'token'],\n          pathParams: ['packageName', 'productId', 'token'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Purchases$Products;\n  }();\n\n  androidpublisher_v3.Resource$Purchases$Products = Resource$Purchases$Products;\n\n  var Resource$Purchases$Subscriptions = /*#__PURE__*/function () {\n    function Resource$Purchases$Subscriptions(context) {\n      _classCallCheck(this, Resource$Purchases$Subscriptions);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Purchases$Subscriptions, [{\n      key: \"acknowledge\",\n      value: function acknowledge(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://androidpublisher.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/androidpublisher/v3/applications/{packageName}/purchases/subscriptions/{subscriptionId}/tokens/{token}:acknowledge').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['packageName', 'subscriptionId', 'token'],\n          pathParams: ['packageName', 'subscriptionId', 'token'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"cancel\",\n      value: function cancel(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://androidpublisher.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/androidpublisher/v3/applications/{packageName}/purchases/subscriptions/{subscriptionId}/tokens/{token}:cancel').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['packageName', 'subscriptionId', 'token'],\n          pathParams: ['packageName', 'subscriptionId', 'token'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"defer\",\n      value: function defer(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://androidpublisher.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/androidpublisher/v3/applications/{packageName}/purchases/subscriptions/{subscriptionId}/tokens/{token}:defer').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['packageName', 'subscriptionId', 'token'],\n          pathParams: ['packageName', 'subscriptionId', 'token'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://androidpublisher.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/androidpublisher/v3/applications/{packageName}/purchases/subscriptions/{subscriptionId}/tokens/{token}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['packageName', 'subscriptionId', 'token'],\n          pathParams: ['packageName', 'subscriptionId', 'token'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"refund\",\n      value: function refund(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://androidpublisher.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/androidpublisher/v3/applications/{packageName}/purchases/subscriptions/{subscriptionId}/tokens/{token}:refund').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['packageName', 'subscriptionId', 'token'],\n          pathParams: ['packageName', 'subscriptionId', 'token'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"revoke\",\n      value: function revoke(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://androidpublisher.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/androidpublisher/v3/applications/{packageName}/purchases/subscriptions/{subscriptionId}/tokens/{token}:revoke').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['packageName', 'subscriptionId', 'token'],\n          pathParams: ['packageName', 'subscriptionId', 'token'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Purchases$Subscriptions;\n  }();\n\n  androidpublisher_v3.Resource$Purchases$Subscriptions = Resource$Purchases$Subscriptions;\n\n  var Resource$Purchases$Voidedpurchases = /*#__PURE__*/function () {\n    function Resource$Purchases$Voidedpurchases(context) {\n      _classCallCheck(this, Resource$Purchases$Voidedpurchases);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Purchases$Voidedpurchases, [{\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://androidpublisher.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/androidpublisher/v3/applications/{packageName}/purchases/voidedpurchases').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['packageName'],\n          pathParams: ['packageName'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Purchases$Voidedpurchases;\n  }();\n\n  androidpublisher_v3.Resource$Purchases$Voidedpurchases = Resource$Purchases$Voidedpurchases;\n\n  var Resource$Reviews = /*#__PURE__*/function () {\n    function Resource$Reviews(context) {\n      _classCallCheck(this, Resource$Reviews);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Reviews, [{\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://androidpublisher.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/androidpublisher/v3/applications/{packageName}/reviews/{reviewId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['packageName', 'reviewId'],\n          pathParams: ['packageName', 'reviewId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://androidpublisher.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/androidpublisher/v3/applications/{packageName}/reviews').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['packageName'],\n          pathParams: ['packageName'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"reply\",\n      value: function reply(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://androidpublisher.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/androidpublisher/v3/applications/{packageName}/reviews/{reviewId}:reply').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['packageName', 'reviewId'],\n          pathParams: ['packageName', 'reviewId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Reviews;\n  }();\n\n  androidpublisher_v3.Resource$Reviews = Resource$Reviews;\n\n  var Resource$Systemapks = function Resource$Systemapks(context) {\n    _classCallCheck(this, Resource$Systemapks);\n\n    this.context = context;\n    this.variants = new Resource$Systemapks$Variants(this.context);\n  };\n\n  androidpublisher_v3.Resource$Systemapks = Resource$Systemapks;\n\n  var Resource$Systemapks$Variants = /*#__PURE__*/function () {\n    function Resource$Systemapks$Variants(context) {\n      _classCallCheck(this, Resource$Systemapks$Variants);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Systemapks$Variants, [{\n      key: \"create\",\n      value: function create(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://androidpublisher.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/androidpublisher/v3/applications/{packageName}/systemApks/{versionCode}/variants').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['packageName', 'versionCode'],\n          pathParams: ['packageName', 'versionCode'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"download\",\n      value: function download(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://androidpublisher.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/androidpublisher/v3/applications/{packageName}/systemApks/{versionCode}/variants/{variantId}:download').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['packageName', 'versionCode', 'variantId'],\n          pathParams: ['packageName', 'variantId', 'versionCode'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://androidpublisher.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/androidpublisher/v3/applications/{packageName}/systemApks/{versionCode}/variants/{variantId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['packageName', 'versionCode', 'variantId'],\n          pathParams: ['packageName', 'variantId', 'versionCode'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://androidpublisher.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/androidpublisher/v3/applications/{packageName}/systemApks/{versionCode}/variants').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['packageName', 'versionCode'],\n          pathParams: ['packageName', 'versionCode'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Systemapks$Variants;\n  }();\n\n  androidpublisher_v3.Resource$Systemapks$Variants = Resource$Systemapks$Variants;\n})(androidpublisher_v3 = exports.androidpublisher_v3 || (exports.androidpublisher_v3 = {}));","map":{"version":3,"sources":["/Users/amandapoetker-alles/Desktop/campaign-dashboard/Campaign-Planner/node_modules/googleapis/build/src/apis/androidpublisher/v3.js"],"names":["Object","defineProperty","exports","value","androidpublisher_v3","googleapis_common_1","require","Androidpublisher","options","google","context","_options","edits","Resource$Edits","inappproducts","Resource$Inappproducts","internalappsharingartifacts","Resource$Internalappsharingartifacts","orders","Resource$Orders","purchases","Resource$Purchases","reviews","Resource$Reviews","systemapks","Resource$Systemapks","apks","Resource$Edits$Apks","bundles","Resource$Edits$Bundles","deobfuscationfiles","Resource$Edits$Deobfuscationfiles","details","Resource$Edits$Details","expansionfiles","Resource$Edits$Expansionfiles","images","Resource$Edits$Images","listings","Resource$Edits$Listings","testers","Resource$Edits$Testers","tracks","Resource$Edits$Tracks","paramsOrCallback","optionsOrCallback","callback","params","rootUrl","parameters","assign","url","replace","method","requiredParams","pathParams","createAPIRequest","mediaUrl","products","Resource$Purchases$Products","subscriptions","Resource$Purchases$Subscriptions","voidedpurchases","Resource$Purchases$Voidedpurchases","variants","Resource$Systemapks$Variants"],"mappings":"AAAA,a,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,mBAAR,GAA8B,KAAK,CAAnC;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA,IAAMC,mBAAmB,GAAGC,OAAO,CAAC,mBAAD,CAAnC;;AACA,IAAIF,mBAAJ;;AACA,CAAC,UAAUA,mBAAV,EAA+B;AAC5B;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAXgC,MAYtBG,gBAZsB,GAaxB,0BAAYC,OAAZ,EAAqBC,MAArB,EAA6B;AAAA;;AACzB,SAAKC,OAAL,GAAe;AACXC,MAAAA,QAAQ,EAAEH,OAAO,IAAI,EADV;AAEXC,MAAAA;AAFW,KAAf;AAIA,SAAKG,KAAL,GAAa,IAAIC,cAAJ,CAAmB,KAAKH,OAAxB,CAAb;AACA,SAAKI,aAAL,GAAqB,IAAIC,sBAAJ,CAA2B,KAAKL,OAAhC,CAArB;AACA,SAAKM,2BAAL,GAAmC,IAAIC,oCAAJ,CAAyC,KAAKP,OAA9C,CAAnC;AACA,SAAKQ,MAAL,GAAc,IAAIC,eAAJ,CAAoB,KAAKT,OAAzB,CAAd;AACA,SAAKU,SAAL,GAAiB,IAAIC,kBAAJ,CAAuB,KAAKX,OAA5B,CAAjB;AACA,SAAKY,OAAL,GAAe,IAAIC,gBAAJ,CAAqB,KAAKb,OAA1B,CAAf;AACA,SAAKc,UAAL,GAAkB,IAAIC,mBAAJ,CAAwB,KAAKf,OAA7B,CAAlB;AACH,GAzBuB;;AA2B5BN,EAAAA,mBAAmB,CAACG,gBAApB,GAAuCA,gBAAvC;;AA3B4B,MA4BtBM,cA5BsB;AA6BxB,4BAAYH,OAAZ,EAAqB;AAAA;;AACjB,WAAKA,OAAL,GAAeA,OAAf;AACA,WAAKgB,IAAL,GAAY,IAAIC,mBAAJ,CAAwB,KAAKjB,OAA7B,CAAZ;AACA,WAAKkB,OAAL,GAAe,IAAIC,sBAAJ,CAA2B,KAAKnB,OAAhC,CAAf;AACA,WAAKoB,kBAAL,GAA0B,IAAIC,iCAAJ,CAAsC,KAAKrB,OAA3C,CAA1B;AACA,WAAKsB,OAAL,GAAe,IAAIC,sBAAJ,CAA2B,KAAKvB,OAAhC,CAAf;AACA,WAAKwB,cAAL,GAAsB,IAAIC,6BAAJ,CAAkC,KAAKzB,OAAvC,CAAtB;AACA,WAAK0B,MAAL,GAAc,IAAIC,qBAAJ,CAA0B,KAAK3B,OAA/B,CAAd;AACA,WAAK4B,QAAL,GAAgB,IAAIC,uBAAJ,CAA4B,KAAK7B,OAAjC,CAAhB;AACA,WAAK8B,OAAL,GAAe,IAAIC,sBAAJ,CAA2B,KAAK/B,OAAhC,CAAf;AACA,WAAKgC,MAAL,GAAc,IAAIC,qBAAJ,CAA0B,KAAKjC,OAA/B,CAAd;AACH;;AAxCuB;AAAA;AAAA,6BAyCjBkC,gBAzCiB,EAyCCC,iBAzCD,EAyCoBC,QAzCpB,EAyC8B;AAClD,YAAIC,MAAM,GAAIH,gBAAgB,IAAI,EAAlC;AACA,YAAIpC,OAAO,GAAIqC,iBAAiB,IAAI,EAApC;;AACA,YAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;AACxCE,UAAAA,QAAQ,GAAGF,gBAAX;AACAG,UAAAA,MAAM,GAAG,EAAT;AACAvC,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAI,OAAOqC,iBAAP,KAA6B,UAAjC,EAA6C;AACzCC,UAAAA,QAAQ,GAAGD,iBAAX;AACArC,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAMwC,OAAO,GAAGxC,OAAO,CAACwC,OAAR,IAAmB,0CAAnC;AACA,YAAMC,UAAU,GAAG;AACfzC,UAAAA,OAAO,EAAER,MAAM,CAACkD,MAAP,CAAc;AACnBC,YAAAA,GAAG,EAAE,CAACH,OAAO,GACT,uEADC,EACwEI,OADxE,CACgF,cADhF,EACgG,IADhG,CADc;AAGnBC,YAAAA,MAAM,EAAE;AAHW,WAAd,EAIN7C,OAJM,CADM;AAMfuC,UAAAA,MANe;AAOfO,UAAAA,cAAc,EAAE,CAAC,aAAD,EAAgB,QAAhB,CAPD;AAQfC,UAAAA,UAAU,EAAE,CAAC,QAAD,EAAW,aAAX,CARG;AASf7C,UAAAA,OAAO,EAAE,KAAKA;AATC,SAAnB;;AAWA,YAAIoC,QAAJ,EAAc;AACVzC,UAAAA,mBAAmB,CAACmD,gBAApB,CAAqCP,UAArC,EAAiDH,QAAjD;AACH,SAFD,MAGK;AACD,iBAAOzC,mBAAmB,CAACmD,gBAApB,CAAqCP,UAArC,CAAP;AACH;AACJ;AAvEuB;AAAA;AAAA,8BAwEjBL,gBAxEiB,EAwECC,iBAxED,EAwEoBC,QAxEpB,EAwE8B;AAClD,YAAIC,MAAM,GAAIH,gBAAgB,IAAI,EAAlC;AACA,YAAIpC,OAAO,GAAIqC,iBAAiB,IAAI,EAApC;;AACA,YAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;AACxCE,UAAAA,QAAQ,GAAGF,gBAAX;AACAG,UAAAA,MAAM,GAAG,EAAT;AACAvC,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAI,OAAOqC,iBAAP,KAA6B,UAAjC,EAA6C;AACzCC,UAAAA,QAAQ,GAAGD,iBAAX;AACArC,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAMwC,OAAO,GAAGxC,OAAO,CAACwC,OAAR,IAAmB,0CAAnC;AACA,YAAMC,UAAU,GAAG;AACfzC,UAAAA,OAAO,EAAER,MAAM,CAACkD,MAAP,CAAc;AACnBC,YAAAA,GAAG,EAAE,CAACH,OAAO,GACT,gEADC,EACiEI,OADjE,CACyE,cADzE,EACyF,IADzF,CADc;AAGnBC,YAAAA,MAAM,EAAE;AAHW,WAAd,EAIN7C,OAJM,CADM;AAMfuC,UAAAA,MANe;AAOfO,UAAAA,cAAc,EAAE,CAAC,aAAD,EAAgB,QAAhB,CAPD;AAQfC,UAAAA,UAAU,EAAE,CAAC,QAAD,EAAW,aAAX,CARG;AASf7C,UAAAA,OAAO,EAAE,KAAKA;AATC,SAAnB;;AAWA,YAAIoC,QAAJ,EAAc;AACVzC,UAAAA,mBAAmB,CAACmD,gBAApB,CAAqCP,UAArC,EAAiDH,QAAjD;AACH,SAFD,MAGK;AACD,iBAAOzC,mBAAmB,CAACmD,gBAApB,CAAqCP,UAArC,CAAP;AACH;AACJ;AAtGuB;AAAA;AAAA,0BAuGpBL,gBAvGoB,EAuGFC,iBAvGE,EAuGiBC,QAvGjB,EAuG2B;AAC/C,YAAIC,MAAM,GAAIH,gBAAgB,IAAI,EAAlC;AACA,YAAIpC,OAAO,GAAIqC,iBAAiB,IAAI,EAApC;;AACA,YAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;AACxCE,UAAAA,QAAQ,GAAGF,gBAAX;AACAG,UAAAA,MAAM,GAAG,EAAT;AACAvC,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAI,OAAOqC,iBAAP,KAA6B,UAAjC,EAA6C;AACzCC,UAAAA,QAAQ,GAAGD,iBAAX;AACArC,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAMwC,OAAO,GAAGxC,OAAO,CAACwC,OAAR,IAAmB,0CAAnC;AACA,YAAMC,UAAU,GAAG;AACfzC,UAAAA,OAAO,EAAER,MAAM,CAACkD,MAAP,CAAc;AACnBC,YAAAA,GAAG,EAAE,CAACH,OAAO,GACT,gEADC,EACiEI,OADjE,CACyE,cADzE,EACyF,IADzF,CADc;AAGnBC,YAAAA,MAAM,EAAE;AAHW,WAAd,EAIN7C,OAJM,CADM;AAMfuC,UAAAA,MANe;AAOfO,UAAAA,cAAc,EAAE,CAAC,aAAD,EAAgB,QAAhB,CAPD;AAQfC,UAAAA,UAAU,EAAE,CAAC,QAAD,EAAW,aAAX,CARG;AASf7C,UAAAA,OAAO,EAAE,KAAKA;AATC,SAAnB;;AAWA,YAAIoC,QAAJ,EAAc;AACVzC,UAAAA,mBAAmB,CAACmD,gBAApB,CAAqCP,UAArC,EAAiDH,QAAjD;AACH,SAFD,MAGK;AACD,iBAAOzC,mBAAmB,CAACmD,gBAApB,CAAqCP,UAArC,CAAP;AACH;AACJ;AArIuB;AAAA;AAAA,6BAsIjBL,gBAtIiB,EAsICC,iBAtID,EAsIoBC,QAtIpB,EAsI8B;AAClD,YAAIC,MAAM,GAAIH,gBAAgB,IAAI,EAAlC;AACA,YAAIpC,OAAO,GAAIqC,iBAAiB,IAAI,EAApC;;AACA,YAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;AACxCE,UAAAA,QAAQ,GAAGF,gBAAX;AACAG,UAAAA,MAAM,GAAG,EAAT;AACAvC,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAI,OAAOqC,iBAAP,KAA6B,UAAjC,EAA6C;AACzCC,UAAAA,QAAQ,GAAGD,iBAAX;AACArC,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAMwC,OAAO,GAAGxC,OAAO,CAACwC,OAAR,IAAmB,0CAAnC;AACA,YAAMC,UAAU,GAAG;AACfzC,UAAAA,OAAO,EAAER,MAAM,CAACkD,MAAP,CAAc;AACnBC,YAAAA,GAAG,EAAE,CAACH,OAAO,GAAG,uDAAX,EAAoEI,OAApE,CAA4E,cAA5E,EAA4F,IAA5F,CADc;AAEnBC,YAAAA,MAAM,EAAE;AAFW,WAAd,EAGN7C,OAHM,CADM;AAKfuC,UAAAA,MALe;AAMfO,UAAAA,cAAc,EAAE,CAAC,aAAD,CAND;AAOfC,UAAAA,UAAU,EAAE,CAAC,aAAD,CAPG;AAQf7C,UAAAA,OAAO,EAAE,KAAKA;AARC,SAAnB;;AAUA,YAAIoC,QAAJ,EAAc;AACVzC,UAAAA,mBAAmB,CAACmD,gBAApB,CAAqCP,UAArC,EAAiDH,QAAjD;AACH,SAFD,MAGK;AACD,iBAAOzC,mBAAmB,CAACmD,gBAApB,CAAqCP,UAArC,CAAP;AACH;AACJ;AAnKuB;AAAA;AAAA,+BAoKfL,gBApKe,EAoKGC,iBApKH,EAoKsBC,QApKtB,EAoKgC;AACpD,YAAIC,MAAM,GAAIH,gBAAgB,IAAI,EAAlC;AACA,YAAIpC,OAAO,GAAIqC,iBAAiB,IAAI,EAApC;;AACA,YAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;AACxCE,UAAAA,QAAQ,GAAGF,gBAAX;AACAG,UAAAA,MAAM,GAAG,EAAT;AACAvC,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAI,OAAOqC,iBAAP,KAA6B,UAAjC,EAA6C;AACzCC,UAAAA,QAAQ,GAAGD,iBAAX;AACArC,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAMwC,OAAO,GAAGxC,OAAO,CAACwC,OAAR,IAAmB,0CAAnC;AACA,YAAMC,UAAU,GAAG;AACfzC,UAAAA,OAAO,EAAER,MAAM,CAACkD,MAAP,CAAc;AACnBC,YAAAA,GAAG,EAAE,CAACH,OAAO,GACT,yEADC,EAC0EI,OAD1E,CACkF,cADlF,EACkG,IADlG,CADc;AAGnBC,YAAAA,MAAM,EAAE;AAHW,WAAd,EAIN7C,OAJM,CADM;AAMfuC,UAAAA,MANe;AAOfO,UAAAA,cAAc,EAAE,CAAC,aAAD,EAAgB,QAAhB,CAPD;AAQfC,UAAAA,UAAU,EAAE,CAAC,QAAD,EAAW,aAAX,CARG;AASf7C,UAAAA,OAAO,EAAE,KAAKA;AATC,SAAnB;;AAWA,YAAIoC,QAAJ,EAAc;AACVzC,UAAAA,mBAAmB,CAACmD,gBAApB,CAAqCP,UAArC,EAAiDH,QAAjD;AACH,SAFD,MAGK;AACD,iBAAOzC,mBAAmB,CAACmD,gBAApB,CAAqCP,UAArC,CAAP;AACH;AACJ;AAlMuB;;AAAA;AAAA;;AAoM5B7C,EAAAA,mBAAmB,CAACS,cAApB,GAAqCA,cAArC;;AApM4B,MAqMtBc,mBArMsB;AAsMxB,iCAAYjB,OAAZ,EAAqB;AAAA;;AACjB,WAAKA,OAAL,GAAeA,OAAf;AACH;;AAxMuB;AAAA;AAAA,0CAyMJkC,gBAzMI,EAyMcC,iBAzMd,EAyMiCC,QAzMjC,EAyM2C;AAC/D,YAAIC,MAAM,GAAIH,gBAAgB,IAC1B,EADJ;AAEA,YAAIpC,OAAO,GAAIqC,iBAAiB,IAAI,EAApC;;AACA,YAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;AACxCE,UAAAA,QAAQ,GAAGF,gBAAX;AACAG,UAAAA,MAAM,GAAG,EAAT;AACAvC,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAI,OAAOqC,iBAAP,KAA6B,UAAjC,EAA6C;AACzCC,UAAAA,QAAQ,GAAGD,iBAAX;AACArC,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAMwC,OAAO,GAAGxC,OAAO,CAACwC,OAAR,IAAmB,0CAAnC;AACA,YAAMC,UAAU,GAAG;AACfzC,UAAAA,OAAO,EAAER,MAAM,CAACkD,MAAP,CAAc;AACnBC,YAAAA,GAAG,EAAE,CAACH,OAAO,GACT,sFADC,EACuFI,OADvF,CAC+F,cAD/F,EAC+G,IAD/G,CADc;AAGnBC,YAAAA,MAAM,EAAE;AAHW,WAAd,EAIN7C,OAJM,CADM;AAMfuC,UAAAA,MANe;AAOfO,UAAAA,cAAc,EAAE,CAAC,aAAD,EAAgB,QAAhB,CAPD;AAQfC,UAAAA,UAAU,EAAE,CAAC,QAAD,EAAW,aAAX,CARG;AASf7C,UAAAA,OAAO,EAAE,KAAKA;AATC,SAAnB;;AAWA,YAAIoC,QAAJ,EAAc;AACVzC,UAAAA,mBAAmB,CAACmD,gBAApB,CAAqCP,UAArC,EAAiDH,QAAjD;AACH,SAFD,MAGK;AACD,iBAAOzC,mBAAmB,CAACmD,gBAApB,CAAqCP,UAArC,CAAP;AACH;AACJ;AAxOuB;AAAA;AAAA,2BAyOnBL,gBAzOmB,EAyODC,iBAzOC,EAyOkBC,QAzOlB,EAyO4B;AAChD,YAAIC,MAAM,GAAIH,gBAAgB,IAAI,EAAlC;AACA,YAAIpC,OAAO,GAAIqC,iBAAiB,IAAI,EAApC;;AACA,YAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;AACxCE,UAAAA,QAAQ,GAAGF,gBAAX;AACAG,UAAAA,MAAM,GAAG,EAAT;AACAvC,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAI,OAAOqC,iBAAP,KAA6B,UAAjC,EAA6C;AACzCC,UAAAA,QAAQ,GAAGD,iBAAX;AACArC,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAMwC,OAAO,GAAGxC,OAAO,CAACwC,OAAR,IAAmB,0CAAnC;AACA,YAAMC,UAAU,GAAG;AACfzC,UAAAA,OAAO,EAAER,MAAM,CAACkD,MAAP,CAAc;AACnBC,YAAAA,GAAG,EAAE,CAACH,OAAO,GACT,qEADC,EACsEI,OADtE,CAC8E,cAD9E,EAC8F,IAD9F,CADc;AAGnBC,YAAAA,MAAM,EAAE;AAHW,WAAd,EAIN7C,OAJM,CADM;AAMfuC,UAAAA,MANe;AAOfO,UAAAA,cAAc,EAAE,CAAC,aAAD,EAAgB,QAAhB,CAPD;AAQfC,UAAAA,UAAU,EAAE,CAAC,QAAD,EAAW,aAAX,CARG;AASf7C,UAAAA,OAAO,EAAE,KAAKA;AATC,SAAnB;;AAWA,YAAIoC,QAAJ,EAAc;AACVzC,UAAAA,mBAAmB,CAACmD,gBAApB,CAAqCP,UAArC,EAAiDH,QAAjD;AACH,SAFD,MAGK;AACD,iBAAOzC,mBAAmB,CAACmD,gBAApB,CAAqCP,UAArC,CAAP;AACH;AACJ;AAvQuB;AAAA;AAAA,6BAwQjBL,gBAxQiB,EAwQCC,iBAxQD,EAwQoBC,QAxQpB,EAwQ8B;AAClD,YAAIC,MAAM,GAAIH,gBAAgB,IAC1B,EADJ;AAEA,YAAIpC,OAAO,GAAIqC,iBAAiB,IAAI,EAApC;;AACA,YAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;AACxCE,UAAAA,QAAQ,GAAGF,gBAAX;AACAG,UAAAA,MAAM,GAAG,EAAT;AACAvC,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAI,OAAOqC,iBAAP,KAA6B,UAAjC,EAA6C;AACzCC,UAAAA,QAAQ,GAAGD,iBAAX;AACArC,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAMwC,OAAO,GAAGxC,OAAO,CAACwC,OAAR,IAAmB,0CAAnC;AACA,YAAMC,UAAU,GAAG;AACfzC,UAAAA,OAAO,EAAER,MAAM,CAACkD,MAAP,CAAc;AACnBC,YAAAA,GAAG,EAAE,CAACH,OAAO,GACT,qEADC,EACsEI,OADtE,CAC8E,cAD9E,EAC8F,IAD9F,CADc;AAGnBC,YAAAA,MAAM,EAAE;AAHW,WAAd,EAIN7C,OAJM,CADM;AAMfuC,UAAAA,MANe;AAOfU,UAAAA,QAAQ,EAAE,CAACT,OAAO,GACd,4EADM,EACwEI,OADxE,CACgF,cADhF,EACgG,IADhG,CAPK;AASfE,UAAAA,cAAc,EAAE,CAAC,aAAD,EAAgB,QAAhB,CATD;AAUfC,UAAAA,UAAU,EAAE,CAAC,QAAD,EAAW,aAAX,CAVG;AAWf7C,UAAAA,OAAO,EAAE,KAAKA;AAXC,SAAnB;;AAaA,YAAIoC,QAAJ,EAAc;AACVzC,UAAAA,mBAAmB,CAACmD,gBAApB,CAAqCP,UAArC,EAAiDH,QAAjD;AACH,SAFD,MAGK;AACD,iBAAOzC,mBAAmB,CAACmD,gBAApB,CAAqCP,UAArC,CAAP;AACH;AACJ;AAzSuB;;AAAA;AAAA;;AA2S5B7C,EAAAA,mBAAmB,CAACuB,mBAApB,GAA0CA,mBAA1C;;AA3S4B,MA4StBE,sBA5SsB;AA6SxB,oCAAYnB,OAAZ,EAAqB;AAAA;;AACjB,WAAKA,OAAL,GAAeA,OAAf;AACH;;AA/SuB;AAAA;AAAA,2BAgTnBkC,gBAhTmB,EAgTDC,iBAhTC,EAgTkBC,QAhTlB,EAgT4B;AAChD,YAAIC,MAAM,GAAIH,gBAAgB,IAC1B,EADJ;AAEA,YAAIpC,OAAO,GAAIqC,iBAAiB,IAAI,EAApC;;AACA,YAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;AACxCE,UAAAA,QAAQ,GAAGF,gBAAX;AACAG,UAAAA,MAAM,GAAG,EAAT;AACAvC,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAI,OAAOqC,iBAAP,KAA6B,UAAjC,EAA6C;AACzCC,UAAAA,QAAQ,GAAGD,iBAAX;AACArC,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAMwC,OAAO,GAAGxC,OAAO,CAACwC,OAAR,IAAmB,0CAAnC;AACA,YAAMC,UAAU,GAAG;AACfzC,UAAAA,OAAO,EAAER,MAAM,CAACkD,MAAP,CAAc;AACnBC,YAAAA,GAAG,EAAE,CAACH,OAAO,GACT,wEADC,EACyEI,OADzE,CACiF,cADjF,EACiG,IADjG,CADc;AAGnBC,YAAAA,MAAM,EAAE;AAHW,WAAd,EAIN7C,OAJM,CADM;AAMfuC,UAAAA,MANe;AAOfO,UAAAA,cAAc,EAAE,CAAC,aAAD,EAAgB,QAAhB,CAPD;AAQfC,UAAAA,UAAU,EAAE,CAAC,QAAD,EAAW,aAAX,CARG;AASf7C,UAAAA,OAAO,EAAE,KAAKA;AATC,SAAnB;;AAWA,YAAIoC,QAAJ,EAAc;AACVzC,UAAAA,mBAAmB,CAACmD,gBAApB,CAAqCP,UAArC,EAAiDH,QAAjD;AACH,SAFD,MAGK;AACD,iBAAOzC,mBAAmB,CAACmD,gBAApB,CAAqCP,UAArC,CAAP;AACH;AACJ;AA/UuB;AAAA;AAAA,6BAgVjBL,gBAhViB,EAgVCC,iBAhVD,EAgVoBC,QAhVpB,EAgV8B;AAClD,YAAIC,MAAM,GAAIH,gBAAgB,IAC1B,EADJ;AAEA,YAAIpC,OAAO,GAAIqC,iBAAiB,IAAI,EAApC;;AACA,YAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;AACxCE,UAAAA,QAAQ,GAAGF,gBAAX;AACAG,UAAAA,MAAM,GAAG,EAAT;AACAvC,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAI,OAAOqC,iBAAP,KAA6B,UAAjC,EAA6C;AACzCC,UAAAA,QAAQ,GAAGD,iBAAX;AACArC,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAMwC,OAAO,GAAGxC,OAAO,CAACwC,OAAR,IAAmB,0CAAnC;AACA,YAAMC,UAAU,GAAG;AACfzC,UAAAA,OAAO,EAAER,MAAM,CAACkD,MAAP,CAAc;AACnBC,YAAAA,GAAG,EAAE,CAACH,OAAO,GACT,wEADC,EACyEI,OADzE,CACiF,cADjF,EACiG,IADjG,CADc;AAGnBC,YAAAA,MAAM,EAAE;AAHW,WAAd,EAIN7C,OAJM,CADM;AAMfuC,UAAAA,MANe;AAOfU,UAAAA,QAAQ,EAAE,CAACT,OAAO,GACd,+EADM,EAC2EI,OAD3E,CACmF,cADnF,EACmG,IADnG,CAPK;AASfE,UAAAA,cAAc,EAAE,CAAC,aAAD,EAAgB,QAAhB,CATD;AAUfC,UAAAA,UAAU,EAAE,CAAC,QAAD,EAAW,aAAX,CAVG;AAWf7C,UAAAA,OAAO,EAAE,KAAKA;AAXC,SAAnB;;AAaA,YAAIoC,QAAJ,EAAc;AACVzC,UAAAA,mBAAmB,CAACmD,gBAApB,CAAqCP,UAArC,EAAiDH,QAAjD;AACH,SAFD,MAGK;AACD,iBAAOzC,mBAAmB,CAACmD,gBAApB,CAAqCP,UAArC,CAAP;AACH;AACJ;AAjXuB;;AAAA;AAAA;;AAmX5B7C,EAAAA,mBAAmB,CAACyB,sBAApB,GAA6CA,sBAA7C;;AAnX4B,MAoXtBE,iCApXsB;AAqXxB,+CAAYrB,OAAZ,EAAqB;AAAA;;AACjB,WAAKA,OAAL,GAAeA,OAAf;AACH;;AAvXuB;AAAA;AAAA,6BAwXjBkC,gBAxXiB,EAwXCC,iBAxXD,EAwXoBC,QAxXpB,EAwX8B;AAClD,YAAIC,MAAM,GAAIH,gBAAgB,IAC1B,EADJ;AAEA,YAAIpC,OAAO,GAAIqC,iBAAiB,IAAI,EAApC;;AACA,YAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;AACxCE,UAAAA,QAAQ,GAAGF,gBAAX;AACAG,UAAAA,MAAM,GAAG,EAAT;AACAvC,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAI,OAAOqC,iBAAP,KAA6B,UAAjC,EAA6C;AACzCC,UAAAA,QAAQ,GAAGD,iBAAX;AACArC,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAMwC,OAAO,GAAGxC,OAAO,CAACwC,OAAR,IAAmB,0CAAnC;AACA,YAAMC,UAAU,GAAG;AACfzC,UAAAA,OAAO,EAAER,MAAM,CAACkD,MAAP,CAAc;AACnBC,YAAAA,GAAG,EAAE,CAACH,OAAO,GACT,iIADC,EACkII,OADlI,CAC0I,cAD1I,EAC0J,IAD1J,CADc;AAGnBC,YAAAA,MAAM,EAAE;AAHW,WAAd,EAIN7C,OAJM,CADM;AAMfuC,UAAAA,MANe;AAOfU,UAAAA,QAAQ,EAAE,CAACT,OAAO,GACd,wIADM,EACoII,OADpI,CAC4I,cAD5I,EAC4J,IAD5J,CAPK;AASfE,UAAAA,cAAc,EAAE,CACZ,aADY,EAEZ,QAFY,EAGZ,gBAHY,EAIZ,uBAJY,CATD;AAefC,UAAAA,UAAU,EAAE,CACR,gBADQ,EAER,uBAFQ,EAGR,QAHQ,EAIR,aAJQ,CAfG;AAqBf7C,UAAAA,OAAO,EAAE,KAAKA;AArBC,SAAnB;;AAuBA,YAAIoC,QAAJ,EAAc;AACVzC,UAAAA,mBAAmB,CAACmD,gBAApB,CAAqCP,UAArC,EAAiDH,QAAjD;AACH,SAFD,MAGK;AACD,iBAAOzC,mBAAmB,CAACmD,gBAApB,CAAqCP,UAArC,CAAP;AACH;AACJ;AAnauB;;AAAA;AAAA;;AAqa5B7C,EAAAA,mBAAmB,CAAC2B,iCAApB,GAAwDA,iCAAxD;;AAra4B,MAsatBE,sBAtasB;AAuaxB,oCAAYvB,OAAZ,EAAqB;AAAA;;AACjB,WAAKA,OAAL,GAAeA,OAAf;AACH;;AAzauB;AAAA;AAAA,0BA0apBkC,gBA1aoB,EA0aFC,iBA1aE,EA0aiBC,QA1ajB,EA0a2B;AAC/C,YAAIC,MAAM,GAAIH,gBAAgB,IAC1B,EADJ;AAEA,YAAIpC,OAAO,GAAIqC,iBAAiB,IAAI,EAApC;;AACA,YAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;AACxCE,UAAAA,QAAQ,GAAGF,gBAAX;AACAG,UAAAA,MAAM,GAAG,EAAT;AACAvC,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAI,OAAOqC,iBAAP,KAA6B,UAAjC,EAA6C;AACzCC,UAAAA,QAAQ,GAAGD,iBAAX;AACArC,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAMwC,OAAO,GAAGxC,OAAO,CAACwC,OAAR,IAAmB,0CAAnC;AACA,YAAMC,UAAU,GAAG;AACfzC,UAAAA,OAAO,EAAER,MAAM,CAACkD,MAAP,CAAc;AACnBC,YAAAA,GAAG,EAAE,CAACH,OAAO,GACT,wEADC,EACyEI,OADzE,CACiF,cADjF,EACiG,IADjG,CADc;AAGnBC,YAAAA,MAAM,EAAE;AAHW,WAAd,EAIN7C,OAJM,CADM;AAMfuC,UAAAA,MANe;AAOfO,UAAAA,cAAc,EAAE,CAAC,aAAD,EAAgB,QAAhB,CAPD;AAQfC,UAAAA,UAAU,EAAE,CAAC,QAAD,EAAW,aAAX,CARG;AASf7C,UAAAA,OAAO,EAAE,KAAKA;AATC,SAAnB;;AAWA,YAAIoC,QAAJ,EAAc;AACVzC,UAAAA,mBAAmB,CAACmD,gBAApB,CAAqCP,UAArC,EAAiDH,QAAjD;AACH,SAFD,MAGK;AACD,iBAAOzC,mBAAmB,CAACmD,gBAApB,CAAqCP,UAArC,CAAP;AACH;AACJ;AAzcuB;AAAA;AAAA,4BA0clBL,gBA1ckB,EA0cAC,iBA1cA,EA0cmBC,QA1cnB,EA0c6B;AACjD,YAAIC,MAAM,GAAIH,gBAAgB,IAC1B,EADJ;AAEA,YAAIpC,OAAO,GAAIqC,iBAAiB,IAAI,EAApC;;AACA,YAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;AACxCE,UAAAA,QAAQ,GAAGF,gBAAX;AACAG,UAAAA,MAAM,GAAG,EAAT;AACAvC,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAI,OAAOqC,iBAAP,KAA6B,UAAjC,EAA6C;AACzCC,UAAAA,QAAQ,GAAGD,iBAAX;AACArC,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAMwC,OAAO,GAAGxC,OAAO,CAACwC,OAAR,IAAmB,0CAAnC;AACA,YAAMC,UAAU,GAAG;AACfzC,UAAAA,OAAO,EAAER,MAAM,CAACkD,MAAP,CAAc;AACnBC,YAAAA,GAAG,EAAE,CAACH,OAAO,GACT,wEADC,EACyEI,OADzE,CACiF,cADjF,EACiG,IADjG,CADc;AAGnBC,YAAAA,MAAM,EAAE;AAHW,WAAd,EAIN7C,OAJM,CADM;AAMfuC,UAAAA,MANe;AAOfO,UAAAA,cAAc,EAAE,CAAC,aAAD,EAAgB,QAAhB,CAPD;AAQfC,UAAAA,UAAU,EAAE,CAAC,QAAD,EAAW,aAAX,CARG;AASf7C,UAAAA,OAAO,EAAE,KAAKA;AATC,SAAnB;;AAWA,YAAIoC,QAAJ,EAAc;AACVzC,UAAAA,mBAAmB,CAACmD,gBAApB,CAAqCP,UAArC,EAAiDH,QAAjD;AACH,SAFD,MAGK;AACD,iBAAOzC,mBAAmB,CAACmD,gBAApB,CAAqCP,UAArC,CAAP;AACH;AACJ;AAzeuB;AAAA;AAAA,6BA0ejBL,gBA1eiB,EA0eCC,iBA1eD,EA0eoBC,QA1epB,EA0e8B;AAClD,YAAIC,MAAM,GAAIH,gBAAgB,IAC1B,EADJ;AAEA,YAAIpC,OAAO,GAAIqC,iBAAiB,IAAI,EAApC;;AACA,YAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;AACxCE,UAAAA,QAAQ,GAAGF,gBAAX;AACAG,UAAAA,MAAM,GAAG,EAAT;AACAvC,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAI,OAAOqC,iBAAP,KAA6B,UAAjC,EAA6C;AACzCC,UAAAA,QAAQ,GAAGD,iBAAX;AACArC,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAMwC,OAAO,GAAGxC,OAAO,CAACwC,OAAR,IAAmB,0CAAnC;AACA,YAAMC,UAAU,GAAG;AACfzC,UAAAA,OAAO,EAAER,MAAM,CAACkD,MAAP,CAAc;AACnBC,YAAAA,GAAG,EAAE,CAACH,OAAO,GACT,wEADC,EACyEI,OADzE,CACiF,cADjF,EACiG,IADjG,CADc;AAGnBC,YAAAA,MAAM,EAAE;AAHW,WAAd,EAIN7C,OAJM,CADM;AAMfuC,UAAAA,MANe;AAOfO,UAAAA,cAAc,EAAE,CAAC,aAAD,EAAgB,QAAhB,CAPD;AAQfC,UAAAA,UAAU,EAAE,CAAC,QAAD,EAAW,aAAX,CARG;AASf7C,UAAAA,OAAO,EAAE,KAAKA;AATC,SAAnB;;AAWA,YAAIoC,QAAJ,EAAc;AACVzC,UAAAA,mBAAmB,CAACmD,gBAApB,CAAqCP,UAArC,EAAiDH,QAAjD;AACH,SAFD,MAGK;AACD,iBAAOzC,mBAAmB,CAACmD,gBAApB,CAAqCP,UAArC,CAAP;AACH;AACJ;AAzgBuB;;AAAA;AAAA;;AA2gB5B7C,EAAAA,mBAAmB,CAAC6B,sBAApB,GAA6CA,sBAA7C;;AA3gB4B,MA4gBtBE,6BA5gBsB;AA6gBxB,2CAAYzB,OAAZ,EAAqB;AAAA;;AACjB,WAAKA,OAAL,GAAeA,OAAf;AACH;;AA/gBuB;AAAA;AAAA,0BAghBpBkC,gBAhhBoB,EAghBFC,iBAhhBE,EAghBiBC,QAhhBjB,EAghB2B;AAC/C,YAAIC,MAAM,GAAIH,gBAAgB,IAC1B,EADJ;AAEA,YAAIpC,OAAO,GAAIqC,iBAAiB,IAAI,EAApC;;AACA,YAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;AACxCE,UAAAA,QAAQ,GAAGF,gBAAX;AACAG,UAAAA,MAAM,GAAG,EAAT;AACAvC,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAI,OAAOqC,iBAAP,KAA6B,UAAjC,EAA6C;AACzCC,UAAAA,QAAQ,GAAGD,iBAAX;AACArC,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAMwC,OAAO,GAAGxC,OAAO,CAACwC,OAAR,IAAmB,0CAAnC;AACA,YAAMC,UAAU,GAAG;AACfzC,UAAAA,OAAO,EAAER,MAAM,CAACkD,MAAP,CAAc;AACnBC,YAAAA,GAAG,EAAE,CAACH,OAAO,GACT,yHADC,EAC0HI,OAD1H,CACkI,cADlI,EACkJ,IADlJ,CADc;AAGnBC,YAAAA,MAAM,EAAE;AAHW,WAAd,EAIN7C,OAJM,CADM;AAMfuC,UAAAA,MANe;AAOfO,UAAAA,cAAc,EAAE,CACZ,aADY,EAEZ,QAFY,EAGZ,gBAHY,EAIZ,mBAJY,CAPD;AAafC,UAAAA,UAAU,EAAE,CACR,gBADQ,EAER,QAFQ,EAGR,mBAHQ,EAIR,aAJQ,CAbG;AAmBf7C,UAAAA,OAAO,EAAE,KAAKA;AAnBC,SAAnB;;AAqBA,YAAIoC,QAAJ,EAAc;AACVzC,UAAAA,mBAAmB,CAACmD,gBAApB,CAAqCP,UAArC,EAAiDH,QAAjD;AACH,SAFD,MAGK;AACD,iBAAOzC,mBAAmB,CAACmD,gBAApB,CAAqCP,UAArC,CAAP;AACH;AACJ;AAzjBuB;AAAA;AAAA,4BA0jBlBL,gBA1jBkB,EA0jBAC,iBA1jBA,EA0jBmBC,QA1jBnB,EA0jB6B;AACjD,YAAIC,MAAM,GAAIH,gBAAgB,IAC1B,EADJ;AAEA,YAAIpC,OAAO,GAAIqC,iBAAiB,IAAI,EAApC;;AACA,YAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;AACxCE,UAAAA,QAAQ,GAAGF,gBAAX;AACAG,UAAAA,MAAM,GAAG,EAAT;AACAvC,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAI,OAAOqC,iBAAP,KAA6B,UAAjC,EAA6C;AACzCC,UAAAA,QAAQ,GAAGD,iBAAX;AACArC,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAMwC,OAAO,GAAGxC,OAAO,CAACwC,OAAR,IAAmB,0CAAnC;AACA,YAAMC,UAAU,GAAG;AACfzC,UAAAA,OAAO,EAAER,MAAM,CAACkD,MAAP,CAAc;AACnBC,YAAAA,GAAG,EAAE,CAACH,OAAO,GACT,yHADC,EAC0HI,OAD1H,CACkI,cADlI,EACkJ,IADlJ,CADc;AAGnBC,YAAAA,MAAM,EAAE;AAHW,WAAd,EAIN7C,OAJM,CADM;AAMfuC,UAAAA,MANe;AAOfO,UAAAA,cAAc,EAAE,CACZ,aADY,EAEZ,QAFY,EAGZ,gBAHY,EAIZ,mBAJY,CAPD;AAafC,UAAAA,UAAU,EAAE,CACR,gBADQ,EAER,QAFQ,EAGR,mBAHQ,EAIR,aAJQ,CAbG;AAmBf7C,UAAAA,OAAO,EAAE,KAAKA;AAnBC,SAAnB;;AAqBA,YAAIoC,QAAJ,EAAc;AACVzC,UAAAA,mBAAmB,CAACmD,gBAApB,CAAqCP,UAArC,EAAiDH,QAAjD;AACH,SAFD,MAGK;AACD,iBAAOzC,mBAAmB,CAACmD,gBAApB,CAAqCP,UAArC,CAAP;AACH;AACJ;AAnmBuB;AAAA;AAAA,6BAomBjBL,gBApmBiB,EAomBCC,iBApmBD,EAomBoBC,QApmBpB,EAomB8B;AAClD,YAAIC,MAAM,GAAIH,gBAAgB,IAC1B,EADJ;AAEA,YAAIpC,OAAO,GAAIqC,iBAAiB,IAAI,EAApC;;AACA,YAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;AACxCE,UAAAA,QAAQ,GAAGF,gBAAX;AACAG,UAAAA,MAAM,GAAG,EAAT;AACAvC,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAI,OAAOqC,iBAAP,KAA6B,UAAjC,EAA6C;AACzCC,UAAAA,QAAQ,GAAGD,iBAAX;AACArC,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAMwC,OAAO,GAAGxC,OAAO,CAACwC,OAAR,IAAmB,0CAAnC;AACA,YAAMC,UAAU,GAAG;AACfzC,UAAAA,OAAO,EAAER,MAAM,CAACkD,MAAP,CAAc;AACnBC,YAAAA,GAAG,EAAE,CAACH,OAAO,GACT,yHADC,EAC0HI,OAD1H,CACkI,cADlI,EACkJ,IADlJ,CADc;AAGnBC,YAAAA,MAAM,EAAE;AAHW,WAAd,EAIN7C,OAJM,CADM;AAMfuC,UAAAA,MANe;AAOfO,UAAAA,cAAc,EAAE,CACZ,aADY,EAEZ,QAFY,EAGZ,gBAHY,EAIZ,mBAJY,CAPD;AAafC,UAAAA,UAAU,EAAE,CACR,gBADQ,EAER,QAFQ,EAGR,mBAHQ,EAIR,aAJQ,CAbG;AAmBf7C,UAAAA,OAAO,EAAE,KAAKA;AAnBC,SAAnB;;AAqBA,YAAIoC,QAAJ,EAAc;AACVzC,UAAAA,mBAAmB,CAACmD,gBAApB,CAAqCP,UAArC,EAAiDH,QAAjD;AACH,SAFD,MAGK;AACD,iBAAOzC,mBAAmB,CAACmD,gBAApB,CAAqCP,UAArC,CAAP;AACH;AACJ;AA7oBuB;AAAA;AAAA,6BA8oBjBL,gBA9oBiB,EA8oBCC,iBA9oBD,EA8oBoBC,QA9oBpB,EA8oB8B;AAClD,YAAIC,MAAM,GAAIH,gBAAgB,IAC1B,EADJ;AAEA,YAAIpC,OAAO,GAAIqC,iBAAiB,IAAI,EAApC;;AACA,YAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;AACxCE,UAAAA,QAAQ,GAAGF,gBAAX;AACAG,UAAAA,MAAM,GAAG,EAAT;AACAvC,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAI,OAAOqC,iBAAP,KAA6B,UAAjC,EAA6C;AACzCC,UAAAA,QAAQ,GAAGD,iBAAX;AACArC,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAMwC,OAAO,GAAGxC,OAAO,CAACwC,OAAR,IAAmB,0CAAnC;AACA,YAAMC,UAAU,GAAG;AACfzC,UAAAA,OAAO,EAAER,MAAM,CAACkD,MAAP,CAAc;AACnBC,YAAAA,GAAG,EAAE,CAACH,OAAO,GACT,yHADC,EAC0HI,OAD1H,CACkI,cADlI,EACkJ,IADlJ,CADc;AAGnBC,YAAAA,MAAM,EAAE;AAHW,WAAd,EAIN7C,OAJM,CADM;AAMfuC,UAAAA,MANe;AAOfU,UAAAA,QAAQ,EAAE,CAACT,OAAO,GACd,gIADM,EAC4HI,OAD5H,CACoI,cADpI,EACoJ,IADpJ,CAPK;AASfE,UAAAA,cAAc,EAAE,CACZ,aADY,EAEZ,QAFY,EAGZ,gBAHY,EAIZ,mBAJY,CATD;AAefC,UAAAA,UAAU,EAAE,CACR,gBADQ,EAER,QAFQ,EAGR,mBAHQ,EAIR,aAJQ,CAfG;AAqBf7C,UAAAA,OAAO,EAAE,KAAKA;AArBC,SAAnB;;AAuBA,YAAIoC,QAAJ,EAAc;AACVzC,UAAAA,mBAAmB,CAACmD,gBAApB,CAAqCP,UAArC,EAAiDH,QAAjD;AACH,SAFD,MAGK;AACD,iBAAOzC,mBAAmB,CAACmD,gBAApB,CAAqCP,UAArC,CAAP;AACH;AACJ;AAzrBuB;;AAAA;AAAA;;AA2rB5B7C,EAAAA,mBAAmB,CAAC+B,6BAApB,GAAoDA,6BAApD;;AA3rB4B,MA4rBtBE,qBA5rBsB;AA6rBxB,mCAAY3B,OAAZ,EAAqB;AAAA;;AACjB,WAAKA,OAAL,GAAeA,OAAf;AACH;;AA/rBuB;AAAA;AAAA,8BAgsBjBkC,gBAhsBiB,EAgsBCC,iBAhsBD,EAgsBoBC,QAhsBpB,EAgsB8B;AAClD,YAAIC,MAAM,GAAIH,gBAAgB,IAC1B,EADJ;AAEA,YAAIpC,OAAO,GAAIqC,iBAAiB,IAAI,EAApC;;AACA,YAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;AACxCE,UAAAA,QAAQ,GAAGF,gBAAX;AACAG,UAAAA,MAAM,GAAG,EAAT;AACAvC,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAI,OAAOqC,iBAAP,KAA6B,UAAjC,EAA6C;AACzCC,UAAAA,QAAQ,GAAGD,iBAAX;AACArC,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAMwC,OAAO,GAAGxC,OAAO,CAACwC,OAAR,IAAmB,0CAAnC;AACA,YAAMC,UAAU,GAAG;AACfzC,UAAAA,OAAO,EAAER,MAAM,CAACkD,MAAP,CAAc;AACnBC,YAAAA,GAAG,EAAE,CAACH,OAAO,GACT,0GADC,EAC2GI,OAD3G,CACmH,cADnH,EACmI,IADnI,CADc;AAGnBC,YAAAA,MAAM,EAAE;AAHW,WAAd,EAIN7C,OAJM,CADM;AAMfuC,UAAAA,MANe;AAOfO,UAAAA,cAAc,EAAE,CACZ,aADY,EAEZ,QAFY,EAGZ,UAHY,EAIZ,WAJY,EAKZ,SALY,CAPD;AAcfC,UAAAA,UAAU,EAAE,CACR,QADQ,EAER,SAFQ,EAGR,WAHQ,EAIR,UAJQ,EAKR,aALQ,CAdG;AAqBf7C,UAAAA,OAAO,EAAE,KAAKA;AArBC,SAAnB;;AAuBA,YAAIoC,QAAJ,EAAc;AACVzC,UAAAA,mBAAmB,CAACmD,gBAApB,CAAqCP,UAArC,EAAiDH,QAAjD;AACH,SAFD,MAGK;AACD,iBAAOzC,mBAAmB,CAACmD,gBAApB,CAAqCP,UAArC,CAAP;AACH;AACJ;AA3uBuB;AAAA;AAAA,gCA4uBdL,gBA5uBc,EA4uBIC,iBA5uBJ,EA4uBuBC,QA5uBvB,EA4uBiC;AACrD,YAAIC,MAAM,GAAIH,gBAAgB,IAC1B,EADJ;AAEA,YAAIpC,OAAO,GAAIqC,iBAAiB,IAAI,EAApC;;AACA,YAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;AACxCE,UAAAA,QAAQ,GAAGF,gBAAX;AACAG,UAAAA,MAAM,GAAG,EAAT;AACAvC,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAI,OAAOqC,iBAAP,KAA6B,UAAjC,EAA6C;AACzCC,UAAAA,QAAQ,GAAGD,iBAAX;AACArC,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAMwC,OAAO,GAAGxC,OAAO,CAACwC,OAAR,IAAmB,0CAAnC;AACA,YAAMC,UAAU,GAAG;AACfzC,UAAAA,OAAO,EAAER,MAAM,CAACkD,MAAP,CAAc;AACnBC,YAAAA,GAAG,EAAE,CAACH,OAAO,GACT,gGADC,EACiGI,OADjG,CACyG,cADzG,EACyH,IADzH,CADc;AAGnBC,YAAAA,MAAM,EAAE;AAHW,WAAd,EAIN7C,OAJM,CADM;AAMfuC,UAAAA,MANe;AAOfO,UAAAA,cAAc,EAAE,CAAC,aAAD,EAAgB,QAAhB,EAA0B,UAA1B,EAAsC,WAAtC,CAPD;AAQfC,UAAAA,UAAU,EAAE,CAAC,QAAD,EAAW,WAAX,EAAwB,UAAxB,EAAoC,aAApC,CARG;AASf7C,UAAAA,OAAO,EAAE,KAAKA;AATC,SAAnB;;AAWA,YAAIoC,QAAJ,EAAc;AACVzC,UAAAA,mBAAmB,CAACmD,gBAApB,CAAqCP,UAArC,EAAiDH,QAAjD;AACH,SAFD,MAGK;AACD,iBAAOzC,mBAAmB,CAACmD,gBAApB,CAAqCP,UAArC,CAAP;AACH;AACJ;AA3wBuB;AAAA;AAAA,2BA4wBnBL,gBA5wBmB,EA4wBDC,iBA5wBC,EA4wBkBC,QA5wBlB,EA4wB4B;AAChD,YAAIC,MAAM,GAAIH,gBAAgB,IAC1B,EADJ;AAEA,YAAIpC,OAAO,GAAIqC,iBAAiB,IAAI,EAApC;;AACA,YAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;AACxCE,UAAAA,QAAQ,GAAGF,gBAAX;AACAG,UAAAA,MAAM,GAAG,EAAT;AACAvC,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAI,OAAOqC,iBAAP,KAA6B,UAAjC,EAA6C;AACzCC,UAAAA,QAAQ,GAAGD,iBAAX;AACArC,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAMwC,OAAO,GAAGxC,OAAO,CAACwC,OAAR,IAAmB,0CAAnC;AACA,YAAMC,UAAU,GAAG;AACfzC,UAAAA,OAAO,EAAER,MAAM,CAACkD,MAAP,CAAc;AACnBC,YAAAA,GAAG,EAAE,CAACH,OAAO,GACT,gGADC,EACiGI,OADjG,CACyG,cADzG,EACyH,IADzH,CADc;AAGnBC,YAAAA,MAAM,EAAE;AAHW,WAAd,EAIN7C,OAJM,CADM;AAMfuC,UAAAA,MANe;AAOfO,UAAAA,cAAc,EAAE,CAAC,aAAD,EAAgB,QAAhB,EAA0B,UAA1B,EAAsC,WAAtC,CAPD;AAQfC,UAAAA,UAAU,EAAE,CAAC,QAAD,EAAW,WAAX,EAAwB,UAAxB,EAAoC,aAApC,CARG;AASf7C,UAAAA,OAAO,EAAE,KAAKA;AATC,SAAnB;;AAWA,YAAIoC,QAAJ,EAAc;AACVzC,UAAAA,mBAAmB,CAACmD,gBAApB,CAAqCP,UAArC,EAAiDH,QAAjD;AACH,SAFD,MAGK;AACD,iBAAOzC,mBAAmB,CAACmD,gBAApB,CAAqCP,UAArC,CAAP;AACH;AACJ;AA3yBuB;AAAA;AAAA,6BA4yBjBL,gBA5yBiB,EA4yBCC,iBA5yBD,EA4yBoBC,QA5yBpB,EA4yB8B;AAClD,YAAIC,MAAM,GAAIH,gBAAgB,IAC1B,EADJ;AAEA,YAAIpC,OAAO,GAAIqC,iBAAiB,IAAI,EAApC;;AACA,YAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;AACxCE,UAAAA,QAAQ,GAAGF,gBAAX;AACAG,UAAAA,MAAM,GAAG,EAAT;AACAvC,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAI,OAAOqC,iBAAP,KAA6B,UAAjC,EAA6C;AACzCC,UAAAA,QAAQ,GAAGD,iBAAX;AACArC,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAMwC,OAAO,GAAGxC,OAAO,CAACwC,OAAR,IAAmB,0CAAnC;AACA,YAAMC,UAAU,GAAG;AACfzC,UAAAA,OAAO,EAAER,MAAM,CAACkD,MAAP,CAAc;AACnBC,YAAAA,GAAG,EAAE,CAACH,OAAO,GACT,gGADC,EACiGI,OADjG,CACyG,cADzG,EACyH,IADzH,CADc;AAGnBC,YAAAA,MAAM,EAAE;AAHW,WAAd,EAIN7C,OAJM,CADM;AAMfuC,UAAAA,MANe;AAOfU,UAAAA,QAAQ,EAAE,CAACT,OAAO,GACd,uGADM,EACmGI,OADnG,CAC2G,cAD3G,EAC2H,IAD3H,CAPK;AASfE,UAAAA,cAAc,EAAE,CAAC,aAAD,EAAgB,QAAhB,EAA0B,UAA1B,EAAsC,WAAtC,CATD;AAUfC,UAAAA,UAAU,EAAE,CAAC,QAAD,EAAW,WAAX,EAAwB,UAAxB,EAAoC,aAApC,CAVG;AAWf7C,UAAAA,OAAO,EAAE,KAAKA;AAXC,SAAnB;;AAaA,YAAIoC,QAAJ,EAAc;AACVzC,UAAAA,mBAAmB,CAACmD,gBAApB,CAAqCP,UAArC,EAAiDH,QAAjD;AACH,SAFD,MAGK;AACD,iBAAOzC,mBAAmB,CAACmD,gBAApB,CAAqCP,UAArC,CAAP;AACH;AACJ;AA70BuB;;AAAA;AAAA;;AA+0B5B7C,EAAAA,mBAAmB,CAACiC,qBAApB,GAA4CA,qBAA5C;;AA/0B4B,MAg1BtBE,uBAh1BsB;AAi1BxB,qCAAY7B,OAAZ,EAAqB;AAAA;;AACjB,WAAKA,OAAL,GAAeA,OAAf;AACH;;AAn1BuB;AAAA;AAAA,8BAo1BjBkC,gBAp1BiB,EAo1BCC,iBAp1BD,EAo1BoBC,QAp1BpB,EAo1B8B;AAClD,YAAIC,MAAM,GAAIH,gBAAgB,IAC1B,EADJ;AAEA,YAAIpC,OAAO,GAAIqC,iBAAiB,IAAI,EAApC;;AACA,YAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;AACxCE,UAAAA,QAAQ,GAAGF,gBAAX;AACAG,UAAAA,MAAM,GAAG,EAAT;AACAvC,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAI,OAAOqC,iBAAP,KAA6B,UAAjC,EAA6C;AACzCC,UAAAA,QAAQ,GAAGD,iBAAX;AACArC,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAMwC,OAAO,GAAGxC,OAAO,CAACwC,OAAR,IAAmB,0CAAnC;AACA,YAAMC,UAAU,GAAG;AACfzC,UAAAA,OAAO,EAAER,MAAM,CAACkD,MAAP,CAAc;AACnBC,YAAAA,GAAG,EAAE,CAACH,OAAO,GACT,oFADC,EACqFI,OADrF,CAC6F,cAD7F,EAC6G,IAD7G,CADc;AAGnBC,YAAAA,MAAM,EAAE;AAHW,WAAd,EAIN7C,OAJM,CADM;AAMfuC,UAAAA,MANe;AAOfO,UAAAA,cAAc,EAAE,CAAC,aAAD,EAAgB,QAAhB,EAA0B,UAA1B,CAPD;AAQfC,UAAAA,UAAU,EAAE,CAAC,QAAD,EAAW,UAAX,EAAuB,aAAvB,CARG;AASf7C,UAAAA,OAAO,EAAE,KAAKA;AATC,SAAnB;;AAWA,YAAIoC,QAAJ,EAAc;AACVzC,UAAAA,mBAAmB,CAACmD,gBAApB,CAAqCP,UAArC,EAAiDH,QAAjD;AACH,SAFD,MAGK;AACD,iBAAOzC,mBAAmB,CAACmD,gBAApB,CAAqCP,UAArC,CAAP;AACH;AACJ;AAn3BuB;AAAA;AAAA,gCAo3BdL,gBAp3Bc,EAo3BIC,iBAp3BJ,EAo3BuBC,QAp3BvB,EAo3BiC;AACrD,YAAIC,MAAM,GAAIH,gBAAgB,IAC1B,EADJ;AAEA,YAAIpC,OAAO,GAAIqC,iBAAiB,IAAI,EAApC;;AACA,YAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;AACxCE,UAAAA,QAAQ,GAAGF,gBAAX;AACAG,UAAAA,MAAM,GAAG,EAAT;AACAvC,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAI,OAAOqC,iBAAP,KAA6B,UAAjC,EAA6C;AACzCC,UAAAA,QAAQ,GAAGD,iBAAX;AACArC,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAMwC,OAAO,GAAGxC,OAAO,CAACwC,OAAR,IAAmB,0CAAnC;AACA,YAAMC,UAAU,GAAG;AACfzC,UAAAA,OAAO,EAAER,MAAM,CAACkD,MAAP,CAAc;AACnBC,YAAAA,GAAG,EAAE,CAACH,OAAO,GACT,yEADC,EAC0EI,OAD1E,CACkF,cADlF,EACkG,IADlG,CADc;AAGnBC,YAAAA,MAAM,EAAE;AAHW,WAAd,EAIN7C,OAJM,CADM;AAMfuC,UAAAA,MANe;AAOfO,UAAAA,cAAc,EAAE,CAAC,aAAD,EAAgB,QAAhB,CAPD;AAQfC,UAAAA,UAAU,EAAE,CAAC,QAAD,EAAW,aAAX,CARG;AASf7C,UAAAA,OAAO,EAAE,KAAKA;AATC,SAAnB;;AAWA,YAAIoC,QAAJ,EAAc;AACVzC,UAAAA,mBAAmB,CAACmD,gBAApB,CAAqCP,UAArC,EAAiDH,QAAjD;AACH,SAFD,MAGK;AACD,iBAAOzC,mBAAmB,CAACmD,gBAApB,CAAqCP,UAArC,CAAP;AACH;AACJ;AAn5BuB;AAAA;AAAA,0BAo5BpBL,gBAp5BoB,EAo5BFC,iBAp5BE,EAo5BiBC,QAp5BjB,EAo5B2B;AAC/C,YAAIC,MAAM,GAAIH,gBAAgB,IAC1B,EADJ;AAEA,YAAIpC,OAAO,GAAIqC,iBAAiB,IAAI,EAApC;;AACA,YAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;AACxCE,UAAAA,QAAQ,GAAGF,gBAAX;AACAG,UAAAA,MAAM,GAAG,EAAT;AACAvC,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAI,OAAOqC,iBAAP,KAA6B,UAAjC,EAA6C;AACzCC,UAAAA,QAAQ,GAAGD,iBAAX;AACArC,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAMwC,OAAO,GAAGxC,OAAO,CAACwC,OAAR,IAAmB,0CAAnC;AACA,YAAMC,UAAU,GAAG;AACfzC,UAAAA,OAAO,EAAER,MAAM,CAACkD,MAAP,CAAc;AACnBC,YAAAA,GAAG,EAAE,CAACH,OAAO,GACT,oFADC,EACqFI,OADrF,CAC6F,cAD7F,EAC6G,IAD7G,CADc;AAGnBC,YAAAA,MAAM,EAAE;AAHW,WAAd,EAIN7C,OAJM,CADM;AAMfuC,UAAAA,MANe;AAOfO,UAAAA,cAAc,EAAE,CAAC,aAAD,EAAgB,QAAhB,EAA0B,UAA1B,CAPD;AAQfC,UAAAA,UAAU,EAAE,CAAC,QAAD,EAAW,UAAX,EAAuB,aAAvB,CARG;AASf7C,UAAAA,OAAO,EAAE,KAAKA;AATC,SAAnB;;AAWA,YAAIoC,QAAJ,EAAc;AACVzC,UAAAA,mBAAmB,CAACmD,gBAApB,CAAqCP,UAArC,EAAiDH,QAAjD;AACH,SAFD,MAGK;AACD,iBAAOzC,mBAAmB,CAACmD,gBAApB,CAAqCP,UAArC,CAAP;AACH;AACJ;AAn7BuB;AAAA;AAAA,2BAo7BnBL,gBAp7BmB,EAo7BDC,iBAp7BC,EAo7BkBC,QAp7BlB,EAo7B4B;AAChD,YAAIC,MAAM,GAAIH,gBAAgB,IAC1B,EADJ;AAEA,YAAIpC,OAAO,GAAIqC,iBAAiB,IAAI,EAApC;;AACA,YAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;AACxCE,UAAAA,QAAQ,GAAGF,gBAAX;AACAG,UAAAA,MAAM,GAAG,EAAT;AACAvC,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAI,OAAOqC,iBAAP,KAA6B,UAAjC,EAA6C;AACzCC,UAAAA,QAAQ,GAAGD,iBAAX;AACArC,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAMwC,OAAO,GAAGxC,OAAO,CAACwC,OAAR,IAAmB,0CAAnC;AACA,YAAMC,UAAU,GAAG;AACfzC,UAAAA,OAAO,EAAER,MAAM,CAACkD,MAAP,CAAc;AACnBC,YAAAA,GAAG,EAAE,CAACH,OAAO,GACT,yEADC,EAC0EI,OAD1E,CACkF,cADlF,EACkG,IADlG,CADc;AAGnBC,YAAAA,MAAM,EAAE;AAHW,WAAd,EAIN7C,OAJM,CADM;AAMfuC,UAAAA,MANe;AAOfO,UAAAA,cAAc,EAAE,CAAC,aAAD,EAAgB,QAAhB,CAPD;AAQfC,UAAAA,UAAU,EAAE,CAAC,QAAD,EAAW,aAAX,CARG;AASf7C,UAAAA,OAAO,EAAE,KAAKA;AATC,SAAnB;;AAWA,YAAIoC,QAAJ,EAAc;AACVzC,UAAAA,mBAAmB,CAACmD,gBAApB,CAAqCP,UAArC,EAAiDH,QAAjD;AACH,SAFD,MAGK;AACD,iBAAOzC,mBAAmB,CAACmD,gBAApB,CAAqCP,UAArC,CAAP;AACH;AACJ;AAn9BuB;AAAA;AAAA,4BAo9BlBL,gBAp9BkB,EAo9BAC,iBAp9BA,EAo9BmBC,QAp9BnB,EAo9B6B;AACjD,YAAIC,MAAM,GAAIH,gBAAgB,IAC1B,EADJ;AAEA,YAAIpC,OAAO,GAAIqC,iBAAiB,IAAI,EAApC;;AACA,YAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;AACxCE,UAAAA,QAAQ,GAAGF,gBAAX;AACAG,UAAAA,MAAM,GAAG,EAAT;AACAvC,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAI,OAAOqC,iBAAP,KAA6B,UAAjC,EAA6C;AACzCC,UAAAA,QAAQ,GAAGD,iBAAX;AACArC,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAMwC,OAAO,GAAGxC,OAAO,CAACwC,OAAR,IAAmB,0CAAnC;AACA,YAAMC,UAAU,GAAG;AACfzC,UAAAA,OAAO,EAAER,MAAM,CAACkD,MAAP,CAAc;AACnBC,YAAAA,GAAG,EAAE,CAACH,OAAO,GACT,oFADC,EACqFI,OADrF,CAC6F,cAD7F,EAC6G,IAD7G,CADc;AAGnBC,YAAAA,MAAM,EAAE;AAHW,WAAd,EAIN7C,OAJM,CADM;AAMfuC,UAAAA,MANe;AAOfO,UAAAA,cAAc,EAAE,CAAC,aAAD,EAAgB,QAAhB,EAA0B,UAA1B,CAPD;AAQfC,UAAAA,UAAU,EAAE,CAAC,QAAD,EAAW,UAAX,EAAuB,aAAvB,CARG;AASf7C,UAAAA,OAAO,EAAE,KAAKA;AATC,SAAnB;;AAWA,YAAIoC,QAAJ,EAAc;AACVzC,UAAAA,mBAAmB,CAACmD,gBAApB,CAAqCP,UAArC,EAAiDH,QAAjD;AACH,SAFD,MAGK;AACD,iBAAOzC,mBAAmB,CAACmD,gBAApB,CAAqCP,UAArC,CAAP;AACH;AACJ;AAn/BuB;AAAA;AAAA,6BAo/BjBL,gBAp/BiB,EAo/BCC,iBAp/BD,EAo/BoBC,QAp/BpB,EAo/B8B;AAClD,YAAIC,MAAM,GAAIH,gBAAgB,IAC1B,EADJ;AAEA,YAAIpC,OAAO,GAAIqC,iBAAiB,IAAI,EAApC;;AACA,YAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;AACxCE,UAAAA,QAAQ,GAAGF,gBAAX;AACAG,UAAAA,MAAM,GAAG,EAAT;AACAvC,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAI,OAAOqC,iBAAP,KAA6B,UAAjC,EAA6C;AACzCC,UAAAA,QAAQ,GAAGD,iBAAX;AACArC,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAMwC,OAAO,GAAGxC,OAAO,CAACwC,OAAR,IAAmB,0CAAnC;AACA,YAAMC,UAAU,GAAG;AACfzC,UAAAA,OAAO,EAAER,MAAM,CAACkD,MAAP,CAAc;AACnBC,YAAAA,GAAG,EAAE,CAACH,OAAO,GACT,oFADC,EACqFI,OADrF,CAC6F,cAD7F,EAC6G,IAD7G,CADc;AAGnBC,YAAAA,MAAM,EAAE;AAHW,WAAd,EAIN7C,OAJM,CADM;AAMfuC,UAAAA,MANe;AAOfO,UAAAA,cAAc,EAAE,CAAC,aAAD,EAAgB,QAAhB,EAA0B,UAA1B,CAPD;AAQfC,UAAAA,UAAU,EAAE,CAAC,QAAD,EAAW,UAAX,EAAuB,aAAvB,CARG;AASf7C,UAAAA,OAAO,EAAE,KAAKA;AATC,SAAnB;;AAWA,YAAIoC,QAAJ,EAAc;AACVzC,UAAAA,mBAAmB,CAACmD,gBAApB,CAAqCP,UAArC,EAAiDH,QAAjD;AACH,SAFD,MAGK;AACD,iBAAOzC,mBAAmB,CAACmD,gBAApB,CAAqCP,UAArC,CAAP;AACH;AACJ;AAnhCuB;;AAAA;AAAA;;AAqhC5B7C,EAAAA,mBAAmB,CAACmC,uBAApB,GAA8CA,uBAA9C;;AArhC4B,MAshCtBE,sBAthCsB;AAuhCxB,oCAAY/B,OAAZ,EAAqB;AAAA;;AACjB,WAAKA,OAAL,GAAeA,OAAf;AACH;;AAzhCuB;AAAA;AAAA,0BA0hCpBkC,gBA1hCoB,EA0hCFC,iBA1hCE,EA0hCiBC,QA1hCjB,EA0hC2B;AAC/C,YAAIC,MAAM,GAAIH,gBAAgB,IAC1B,EADJ;AAEA,YAAIpC,OAAO,GAAIqC,iBAAiB,IAAI,EAApC;;AACA,YAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;AACxCE,UAAAA,QAAQ,GAAGF,gBAAX;AACAG,UAAAA,MAAM,GAAG,EAAT;AACAvC,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAI,OAAOqC,iBAAP,KAA6B,UAAjC,EAA6C;AACzCC,UAAAA,QAAQ,GAAGD,iBAAX;AACArC,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAMwC,OAAO,GAAGxC,OAAO,CAACwC,OAAR,IAAmB,0CAAnC;AACA,YAAMC,UAAU,GAAG;AACfzC,UAAAA,OAAO,EAAER,MAAM,CAACkD,MAAP,CAAc;AACnBC,YAAAA,GAAG,EAAE,CAACH,OAAO,GACT,gFADC,EACiFI,OADjF,CACyF,cADzF,EACyG,IADzG,CADc;AAGnBC,YAAAA,MAAM,EAAE;AAHW,WAAd,EAIN7C,OAJM,CADM;AAMfuC,UAAAA,MANe;AAOfO,UAAAA,cAAc,EAAE,CAAC,aAAD,EAAgB,QAAhB,EAA0B,OAA1B,CAPD;AAQfC,UAAAA,UAAU,EAAE,CAAC,QAAD,EAAW,aAAX,EAA0B,OAA1B,CARG;AASf7C,UAAAA,OAAO,EAAE,KAAKA;AATC,SAAnB;;AAWA,YAAIoC,QAAJ,EAAc;AACVzC,UAAAA,mBAAmB,CAACmD,gBAApB,CAAqCP,UAArC,EAAiDH,QAAjD;AACH,SAFD,MAGK;AACD,iBAAOzC,mBAAmB,CAACmD,gBAApB,CAAqCP,UAArC,CAAP;AACH;AACJ;AAzjCuB;AAAA;AAAA,4BA0jClBL,gBA1jCkB,EA0jCAC,iBA1jCA,EA0jCmBC,QA1jCnB,EA0jC6B;AACjD,YAAIC,MAAM,GAAIH,gBAAgB,IAC1B,EADJ;AAEA,YAAIpC,OAAO,GAAIqC,iBAAiB,IAAI,EAApC;;AACA,YAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;AACxCE,UAAAA,QAAQ,GAAGF,gBAAX;AACAG,UAAAA,MAAM,GAAG,EAAT;AACAvC,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAI,OAAOqC,iBAAP,KAA6B,UAAjC,EAA6C;AACzCC,UAAAA,QAAQ,GAAGD,iBAAX;AACArC,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAMwC,OAAO,GAAGxC,OAAO,CAACwC,OAAR,IAAmB,0CAAnC;AACA,YAAMC,UAAU,GAAG;AACfzC,UAAAA,OAAO,EAAER,MAAM,CAACkD,MAAP,CAAc;AACnBC,YAAAA,GAAG,EAAE,CAACH,OAAO,GACT,gFADC,EACiFI,OADjF,CACyF,cADzF,EACyG,IADzG,CADc;AAGnBC,YAAAA,MAAM,EAAE;AAHW,WAAd,EAIN7C,OAJM,CADM;AAMfuC,UAAAA,MANe;AAOfO,UAAAA,cAAc,EAAE,CAAC,aAAD,EAAgB,QAAhB,EAA0B,OAA1B,CAPD;AAQfC,UAAAA,UAAU,EAAE,CAAC,QAAD,EAAW,aAAX,EAA0B,OAA1B,CARG;AASf7C,UAAAA,OAAO,EAAE,KAAKA;AATC,SAAnB;;AAWA,YAAIoC,QAAJ,EAAc;AACVzC,UAAAA,mBAAmB,CAACmD,gBAApB,CAAqCP,UAArC,EAAiDH,QAAjD;AACH,SAFD,MAGK;AACD,iBAAOzC,mBAAmB,CAACmD,gBAApB,CAAqCP,UAArC,CAAP;AACH;AACJ;AAzlCuB;AAAA;AAAA,6BA0lCjBL,gBA1lCiB,EA0lCCC,iBA1lCD,EA0lCoBC,QA1lCpB,EA0lC8B;AAClD,YAAIC,MAAM,GAAIH,gBAAgB,IAC1B,EADJ;AAEA,YAAIpC,OAAO,GAAIqC,iBAAiB,IAAI,EAApC;;AACA,YAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;AACxCE,UAAAA,QAAQ,GAAGF,gBAAX;AACAG,UAAAA,MAAM,GAAG,EAAT;AACAvC,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAI,OAAOqC,iBAAP,KAA6B,UAAjC,EAA6C;AACzCC,UAAAA,QAAQ,GAAGD,iBAAX;AACArC,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAMwC,OAAO,GAAGxC,OAAO,CAACwC,OAAR,IAAmB,0CAAnC;AACA,YAAMC,UAAU,GAAG;AACfzC,UAAAA,OAAO,EAAER,MAAM,CAACkD,MAAP,CAAc;AACnBC,YAAAA,GAAG,EAAE,CAACH,OAAO,GACT,gFADC,EACiFI,OADjF,CACyF,cADzF,EACyG,IADzG,CADc;AAGnBC,YAAAA,MAAM,EAAE;AAHW,WAAd,EAIN7C,OAJM,CADM;AAMfuC,UAAAA,MANe;AAOfO,UAAAA,cAAc,EAAE,CAAC,aAAD,EAAgB,QAAhB,EAA0B,OAA1B,CAPD;AAQfC,UAAAA,UAAU,EAAE,CAAC,QAAD,EAAW,aAAX,EAA0B,OAA1B,CARG;AASf7C,UAAAA,OAAO,EAAE,KAAKA;AATC,SAAnB;;AAWA,YAAIoC,QAAJ,EAAc;AACVzC,UAAAA,mBAAmB,CAACmD,gBAApB,CAAqCP,UAArC,EAAiDH,QAAjD;AACH,SAFD,MAGK;AACD,iBAAOzC,mBAAmB,CAACmD,gBAApB,CAAqCP,UAArC,CAAP;AACH;AACJ;AAznCuB;;AAAA;AAAA;;AA2nC5B7C,EAAAA,mBAAmB,CAACqC,sBAApB,GAA6CA,sBAA7C;;AA3nC4B,MA4nCtBE,qBA5nCsB;AA6nCxB,mCAAYjC,OAAZ,EAAqB;AAAA;;AACjB,WAAKA,OAAL,GAAeA,OAAf;AACH;;AA/nCuB;AAAA;AAAA,0BAgoCpBkC,gBAhoCoB,EAgoCFC,iBAhoCE,EAgoCiBC,QAhoCjB,EAgoC2B;AAC/C,YAAIC,MAAM,GAAIH,gBAAgB,IAAI,EAAlC;AACA,YAAIpC,OAAO,GAAIqC,iBAAiB,IAAI,EAApC;;AACA,YAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;AACxCE,UAAAA,QAAQ,GAAGF,gBAAX;AACAG,UAAAA,MAAM,GAAG,EAAT;AACAvC,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAI,OAAOqC,iBAAP,KAA6B,UAAjC,EAA6C;AACzCC,UAAAA,QAAQ,GAAGD,iBAAX;AACArC,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAMwC,OAAO,GAAGxC,OAAO,CAACwC,OAAR,IAAmB,0CAAnC;AACA,YAAMC,UAAU,GAAG;AACfzC,UAAAA,OAAO,EAAER,MAAM,CAACkD,MAAP,CAAc;AACnBC,YAAAA,GAAG,EAAE,CAACH,OAAO,GACT,+EADC,EACgFI,OADhF,CACwF,cADxF,EACwG,IADxG,CADc;AAGnBC,YAAAA,MAAM,EAAE;AAHW,WAAd,EAIN7C,OAJM,CADM;AAMfuC,UAAAA,MANe;AAOfO,UAAAA,cAAc,EAAE,CAAC,aAAD,EAAgB,QAAhB,EAA0B,OAA1B,CAPD;AAQfC,UAAAA,UAAU,EAAE,CAAC,QAAD,EAAW,aAAX,EAA0B,OAA1B,CARG;AASf7C,UAAAA,OAAO,EAAE,KAAKA;AATC,SAAnB;;AAWA,YAAIoC,QAAJ,EAAc;AACVzC,UAAAA,mBAAmB,CAACmD,gBAApB,CAAqCP,UAArC,EAAiDH,QAAjD;AACH,SAFD,MAGK;AACD,iBAAOzC,mBAAmB,CAACmD,gBAApB,CAAqCP,UAArC,CAAP;AACH;AACJ;AA9pCuB;AAAA;AAAA,2BA+pCnBL,gBA/pCmB,EA+pCDC,iBA/pCC,EA+pCkBC,QA/pClB,EA+pC4B;AAChD,YAAIC,MAAM,GAAIH,gBAAgB,IAC1B,EADJ;AAEA,YAAIpC,OAAO,GAAIqC,iBAAiB,IAAI,EAApC;;AACA,YAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;AACxCE,UAAAA,QAAQ,GAAGF,gBAAX;AACAG,UAAAA,MAAM,GAAG,EAAT;AACAvC,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAI,OAAOqC,iBAAP,KAA6B,UAAjC,EAA6C;AACzCC,UAAAA,QAAQ,GAAGD,iBAAX;AACArC,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAMwC,OAAO,GAAGxC,OAAO,CAACwC,OAAR,IAAmB,0CAAnC;AACA,YAAMC,UAAU,GAAG;AACfzC,UAAAA,OAAO,EAAER,MAAM,CAACkD,MAAP,CAAc;AACnBC,YAAAA,GAAG,EAAE,CAACH,OAAO,GACT,uEADC,EACwEI,OADxE,CACgF,cADhF,EACgG,IADhG,CADc;AAGnBC,YAAAA,MAAM,EAAE;AAHW,WAAd,EAIN7C,OAJM,CADM;AAMfuC,UAAAA,MANe;AAOfO,UAAAA,cAAc,EAAE,CAAC,aAAD,EAAgB,QAAhB,CAPD;AAQfC,UAAAA,UAAU,EAAE,CAAC,QAAD,EAAW,aAAX,CARG;AASf7C,UAAAA,OAAO,EAAE,KAAKA;AATC,SAAnB;;AAWA,YAAIoC,QAAJ,EAAc;AACVzC,UAAAA,mBAAmB,CAACmD,gBAApB,CAAqCP,UAArC,EAAiDH,QAAjD;AACH,SAFD,MAGK;AACD,iBAAOzC,mBAAmB,CAACmD,gBAApB,CAAqCP,UAArC,CAAP;AACH;AACJ;AA9rCuB;AAAA;AAAA,4BA+rClBL,gBA/rCkB,EA+rCAC,iBA/rCA,EA+rCmBC,QA/rCnB,EA+rC6B;AACjD,YAAIC,MAAM,GAAIH,gBAAgB,IAC1B,EADJ;AAEA,YAAIpC,OAAO,GAAIqC,iBAAiB,IAAI,EAApC;;AACA,YAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;AACxCE,UAAAA,QAAQ,GAAGF,gBAAX;AACAG,UAAAA,MAAM,GAAG,EAAT;AACAvC,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAI,OAAOqC,iBAAP,KAA6B,UAAjC,EAA6C;AACzCC,UAAAA,QAAQ,GAAGD,iBAAX;AACArC,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAMwC,OAAO,GAAGxC,OAAO,CAACwC,OAAR,IAAmB,0CAAnC;AACA,YAAMC,UAAU,GAAG;AACfzC,UAAAA,OAAO,EAAER,MAAM,CAACkD,MAAP,CAAc;AACnBC,YAAAA,GAAG,EAAE,CAACH,OAAO,GACT,+EADC,EACgFI,OADhF,CACwF,cADxF,EACwG,IADxG,CADc;AAGnBC,YAAAA,MAAM,EAAE;AAHW,WAAd,EAIN7C,OAJM,CADM;AAMfuC,UAAAA,MANe;AAOfO,UAAAA,cAAc,EAAE,CAAC,aAAD,EAAgB,QAAhB,EAA0B,OAA1B,CAPD;AAQfC,UAAAA,UAAU,EAAE,CAAC,QAAD,EAAW,aAAX,EAA0B,OAA1B,CARG;AASf7C,UAAAA,OAAO,EAAE,KAAKA;AATC,SAAnB;;AAWA,YAAIoC,QAAJ,EAAc;AACVzC,UAAAA,mBAAmB,CAACmD,gBAApB,CAAqCP,UAArC,EAAiDH,QAAjD;AACH,SAFD,MAGK;AACD,iBAAOzC,mBAAmB,CAACmD,gBAApB,CAAqCP,UAArC,CAAP;AACH;AACJ;AA9tCuB;AAAA;AAAA,6BA+tCjBL,gBA/tCiB,EA+tCCC,iBA/tCD,EA+tCoBC,QA/tCpB,EA+tC8B;AAClD,YAAIC,MAAM,GAAIH,gBAAgB,IAC1B,EADJ;AAEA,YAAIpC,OAAO,GAAIqC,iBAAiB,IAAI,EAApC;;AACA,YAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;AACxCE,UAAAA,QAAQ,GAAGF,gBAAX;AACAG,UAAAA,MAAM,GAAG,EAAT;AACAvC,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAI,OAAOqC,iBAAP,KAA6B,UAAjC,EAA6C;AACzCC,UAAAA,QAAQ,GAAGD,iBAAX;AACArC,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAMwC,OAAO,GAAGxC,OAAO,CAACwC,OAAR,IAAmB,0CAAnC;AACA,YAAMC,UAAU,GAAG;AACfzC,UAAAA,OAAO,EAAER,MAAM,CAACkD,MAAP,CAAc;AACnBC,YAAAA,GAAG,EAAE,CAACH,OAAO,GACT,+EADC,EACgFI,OADhF,CACwF,cADxF,EACwG,IADxG,CADc;AAGnBC,YAAAA,MAAM,EAAE;AAHW,WAAd,EAIN7C,OAJM,CADM;AAMfuC,UAAAA,MANe;AAOfO,UAAAA,cAAc,EAAE,CAAC,aAAD,EAAgB,QAAhB,EAA0B,OAA1B,CAPD;AAQfC,UAAAA,UAAU,EAAE,CAAC,QAAD,EAAW,aAAX,EAA0B,OAA1B,CARG;AASf7C,UAAAA,OAAO,EAAE,KAAKA;AATC,SAAnB;;AAWA,YAAIoC,QAAJ,EAAc;AACVzC,UAAAA,mBAAmB,CAACmD,gBAApB,CAAqCP,UAArC,EAAiDH,QAAjD;AACH,SAFD,MAGK;AACD,iBAAOzC,mBAAmB,CAACmD,gBAApB,CAAqCP,UAArC,CAAP;AACH;AACJ;AA9vCuB;;AAAA;AAAA;;AAgwC5B7C,EAAAA,mBAAmB,CAACuC,qBAApB,GAA4CA,qBAA5C;;AAhwC4B,MAiwCtB5B,sBAjwCsB;AAkwCxB,oCAAYL,OAAZ,EAAqB;AAAA;;AACjB,WAAKA,OAAL,GAAeA,OAAf;AACH;;AApwCuB;AAAA;AAAA,8BAqwCjBkC,gBArwCiB,EAqwCCC,iBArwCD,EAqwCoBC,QArwCpB,EAqwC8B;AAClD,YAAIC,MAAM,GAAIH,gBAAgB,IAC1B,EADJ;AAEA,YAAIpC,OAAO,GAAIqC,iBAAiB,IAAI,EAApC;;AACA,YAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;AACxCE,UAAAA,QAAQ,GAAGF,gBAAX;AACAG,UAAAA,MAAM,GAAG,EAAT;AACAvC,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAI,OAAOqC,iBAAP,KAA6B,UAAjC,EAA6C;AACzCC,UAAAA,QAAQ,GAAGD,iBAAX;AACArC,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAMwC,OAAO,GAAGxC,OAAO,CAACwC,OAAR,IAAmB,0CAAnC;AACA,YAAMC,UAAU,GAAG;AACfzC,UAAAA,OAAO,EAAER,MAAM,CAACkD,MAAP,CAAc;AACnBC,YAAAA,GAAG,EAAE,CAACH,OAAO,GACT,qEADC,EACsEI,OADtE,CAC8E,cAD9E,EAC8F,IAD9F,CADc;AAGnBC,YAAAA,MAAM,EAAE;AAHW,WAAd,EAIN7C,OAJM,CADM;AAMfuC,UAAAA,MANe;AAOfO,UAAAA,cAAc,EAAE,CAAC,aAAD,EAAgB,KAAhB,CAPD;AAQfC,UAAAA,UAAU,EAAE,CAAC,aAAD,EAAgB,KAAhB,CARG;AASf7C,UAAAA,OAAO,EAAE,KAAKA;AATC,SAAnB;;AAWA,YAAIoC,QAAJ,EAAc;AACVzC,UAAAA,mBAAmB,CAACmD,gBAApB,CAAqCP,UAArC,EAAiDH,QAAjD;AACH,SAFD,MAGK;AACD,iBAAOzC,mBAAmB,CAACmD,gBAApB,CAAqCP,UAArC,CAAP;AACH;AACJ;AApyCuB;AAAA;AAAA,0BAqyCpBL,gBAryCoB,EAqyCFC,iBAryCE,EAqyCiBC,QAryCjB,EAqyC2B;AAC/C,YAAIC,MAAM,GAAIH,gBAAgB,IAC1B,EADJ;AAEA,YAAIpC,OAAO,GAAIqC,iBAAiB,IAAI,EAApC;;AACA,YAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;AACxCE,UAAAA,QAAQ,GAAGF,gBAAX;AACAG,UAAAA,MAAM,GAAG,EAAT;AACAvC,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAI,OAAOqC,iBAAP,KAA6B,UAAjC,EAA6C;AACzCC,UAAAA,QAAQ,GAAGD,iBAAX;AACArC,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAMwC,OAAO,GAAGxC,OAAO,CAACwC,OAAR,IAAmB,0CAAnC;AACA,YAAMC,UAAU,GAAG;AACfzC,UAAAA,OAAO,EAAER,MAAM,CAACkD,MAAP,CAAc;AACnBC,YAAAA,GAAG,EAAE,CAACH,OAAO,GACT,qEADC,EACsEI,OADtE,CAC8E,cAD9E,EAC8F,IAD9F,CADc;AAGnBC,YAAAA,MAAM,EAAE;AAHW,WAAd,EAIN7C,OAJM,CADM;AAMfuC,UAAAA,MANe;AAOfO,UAAAA,cAAc,EAAE,CAAC,aAAD,EAAgB,KAAhB,CAPD;AAQfC,UAAAA,UAAU,EAAE,CAAC,aAAD,EAAgB,KAAhB,CARG;AASf7C,UAAAA,OAAO,EAAE,KAAKA;AATC,SAAnB;;AAWA,YAAIoC,QAAJ,EAAc;AACVzC,UAAAA,mBAAmB,CAACmD,gBAApB,CAAqCP,UAArC,EAAiDH,QAAjD;AACH,SAFD,MAGK;AACD,iBAAOzC,mBAAmB,CAACmD,gBAApB,CAAqCP,UAArC,CAAP;AACH;AACJ;AAp0CuB;AAAA;AAAA,6BAq0CjBL,gBAr0CiB,EAq0CCC,iBAr0CD,EAq0CoBC,QAr0CpB,EAq0C8B;AAClD,YAAIC,MAAM,GAAIH,gBAAgB,IAC1B,EADJ;AAEA,YAAIpC,OAAO,GAAIqC,iBAAiB,IAAI,EAApC;;AACA,YAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;AACxCE,UAAAA,QAAQ,GAAGF,gBAAX;AACAG,UAAAA,MAAM,GAAG,EAAT;AACAvC,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAI,OAAOqC,iBAAP,KAA6B,UAAjC,EAA6C;AACzCC,UAAAA,QAAQ,GAAGD,iBAAX;AACArC,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAMwC,OAAO,GAAGxC,OAAO,CAACwC,OAAR,IAAmB,0CAAnC;AACA,YAAMC,UAAU,GAAG;AACfzC,UAAAA,OAAO,EAAER,MAAM,CAACkD,MAAP,CAAc;AACnBC,YAAAA,GAAG,EAAE,CAACH,OAAO,GACT,+DADC,EACgEI,OADhE,CACwE,cADxE,EACwF,IADxF,CADc;AAGnBC,YAAAA,MAAM,EAAE;AAHW,WAAd,EAIN7C,OAJM,CADM;AAMfuC,UAAAA,MANe;AAOfO,UAAAA,cAAc,EAAE,CAAC,aAAD,CAPD;AAQfC,UAAAA,UAAU,EAAE,CAAC,aAAD,CARG;AASf7C,UAAAA,OAAO,EAAE,KAAKA;AATC,SAAnB;;AAWA,YAAIoC,QAAJ,EAAc;AACVzC,UAAAA,mBAAmB,CAACmD,gBAApB,CAAqCP,UAArC,EAAiDH,QAAjD;AACH,SAFD,MAGK;AACD,iBAAOzC,mBAAmB,CAACmD,gBAApB,CAAqCP,UAArC,CAAP;AACH;AACJ;AAp2CuB;AAAA;AAAA,2BAq2CnBL,gBAr2CmB,EAq2CDC,iBAr2CC,EAq2CkBC,QAr2ClB,EAq2C4B;AAChD,YAAIC,MAAM,GAAIH,gBAAgB,IAC1B,EADJ;AAEA,YAAIpC,OAAO,GAAIqC,iBAAiB,IAAI,EAApC;;AACA,YAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;AACxCE,UAAAA,QAAQ,GAAGF,gBAAX;AACAG,UAAAA,MAAM,GAAG,EAAT;AACAvC,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAI,OAAOqC,iBAAP,KAA6B,UAAjC,EAA6C;AACzCC,UAAAA,QAAQ,GAAGD,iBAAX;AACArC,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAMwC,OAAO,GAAGxC,OAAO,CAACwC,OAAR,IAAmB,0CAAnC;AACA,YAAMC,UAAU,GAAG;AACfzC,UAAAA,OAAO,EAAER,MAAM,CAACkD,MAAP,CAAc;AACnBC,YAAAA,GAAG,EAAE,CAACH,OAAO,GACT,+DADC,EACgEI,OADhE,CACwE,cADxE,EACwF,IADxF,CADc;AAGnBC,YAAAA,MAAM,EAAE;AAHW,WAAd,EAIN7C,OAJM,CADM;AAMfuC,UAAAA,MANe;AAOfO,UAAAA,cAAc,EAAE,CAAC,aAAD,CAPD;AAQfC,UAAAA,UAAU,EAAE,CAAC,aAAD,CARG;AASf7C,UAAAA,OAAO,EAAE,KAAKA;AATC,SAAnB;;AAWA,YAAIoC,QAAJ,EAAc;AACVzC,UAAAA,mBAAmB,CAACmD,gBAApB,CAAqCP,UAArC,EAAiDH,QAAjD;AACH,SAFD,MAGK;AACD,iBAAOzC,mBAAmB,CAACmD,gBAApB,CAAqCP,UAArC,CAAP;AACH;AACJ;AAp4CuB;AAAA;AAAA,4BAq4ClBL,gBAr4CkB,EAq4CAC,iBAr4CA,EAq4CmBC,QAr4CnB,EAq4C6B;AACjD,YAAIC,MAAM,GAAIH,gBAAgB,IAC1B,EADJ;AAEA,YAAIpC,OAAO,GAAIqC,iBAAiB,IAAI,EAApC;;AACA,YAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;AACxCE,UAAAA,QAAQ,GAAGF,gBAAX;AACAG,UAAAA,MAAM,GAAG,EAAT;AACAvC,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAI,OAAOqC,iBAAP,KAA6B,UAAjC,EAA6C;AACzCC,UAAAA,QAAQ,GAAGD,iBAAX;AACArC,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAMwC,OAAO,GAAGxC,OAAO,CAACwC,OAAR,IAAmB,0CAAnC;AACA,YAAMC,UAAU,GAAG;AACfzC,UAAAA,OAAO,EAAER,MAAM,CAACkD,MAAP,CAAc;AACnBC,YAAAA,GAAG,EAAE,CAACH,OAAO,GACT,qEADC,EACsEI,OADtE,CAC8E,cAD9E,EAC8F,IAD9F,CADc;AAGnBC,YAAAA,MAAM,EAAE;AAHW,WAAd,EAIN7C,OAJM,CADM;AAMfuC,UAAAA,MANe;AAOfO,UAAAA,cAAc,EAAE,CAAC,aAAD,EAAgB,KAAhB,CAPD;AAQfC,UAAAA,UAAU,EAAE,CAAC,aAAD,EAAgB,KAAhB,CARG;AASf7C,UAAAA,OAAO,EAAE,KAAKA;AATC,SAAnB;;AAWA,YAAIoC,QAAJ,EAAc;AACVzC,UAAAA,mBAAmB,CAACmD,gBAApB,CAAqCP,UAArC,EAAiDH,QAAjD;AACH,SAFD,MAGK;AACD,iBAAOzC,mBAAmB,CAACmD,gBAApB,CAAqCP,UAArC,CAAP;AACH;AACJ;AAp6CuB;AAAA;AAAA,6BAq6CjBL,gBAr6CiB,EAq6CCC,iBAr6CD,EAq6CoBC,QAr6CpB,EAq6C8B;AAClD,YAAIC,MAAM,GAAIH,gBAAgB,IAC1B,EADJ;AAEA,YAAIpC,OAAO,GAAIqC,iBAAiB,IAAI,EAApC;;AACA,YAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;AACxCE,UAAAA,QAAQ,GAAGF,gBAAX;AACAG,UAAAA,MAAM,GAAG,EAAT;AACAvC,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAI,OAAOqC,iBAAP,KAA6B,UAAjC,EAA6C;AACzCC,UAAAA,QAAQ,GAAGD,iBAAX;AACArC,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAMwC,OAAO,GAAGxC,OAAO,CAACwC,OAAR,IAAmB,0CAAnC;AACA,YAAMC,UAAU,GAAG;AACfzC,UAAAA,OAAO,EAAER,MAAM,CAACkD,MAAP,CAAc;AACnBC,YAAAA,GAAG,EAAE,CAACH,OAAO,GACT,qEADC,EACsEI,OADtE,CAC8E,cAD9E,EAC8F,IAD9F,CADc;AAGnBC,YAAAA,MAAM,EAAE;AAHW,WAAd,EAIN7C,OAJM,CADM;AAMfuC,UAAAA,MANe;AAOfO,UAAAA,cAAc,EAAE,CAAC,aAAD,EAAgB,KAAhB,CAPD;AAQfC,UAAAA,UAAU,EAAE,CAAC,aAAD,EAAgB,KAAhB,CARG;AASf7C,UAAAA,OAAO,EAAE,KAAKA;AATC,SAAnB;;AAWA,YAAIoC,QAAJ,EAAc;AACVzC,UAAAA,mBAAmB,CAACmD,gBAApB,CAAqCP,UAArC,EAAiDH,QAAjD;AACH,SAFD,MAGK;AACD,iBAAOzC,mBAAmB,CAACmD,gBAApB,CAAqCP,UAArC,CAAP;AACH;AACJ;AAp8CuB;;AAAA;AAAA;;AAs8C5B7C,EAAAA,mBAAmB,CAACW,sBAApB,GAA6CA,sBAA7C;;AAt8C4B,MAu8CtBE,oCAv8CsB;AAw8CxB,kDAAYP,OAAZ,EAAqB;AAAA;;AACjB,WAAKA,OAAL,GAAeA,OAAf;AACH;;AA18CuB;AAAA;AAAA,gCA28CdkC,gBA38Cc,EA28CIC,iBA38CJ,EA28CuBC,QA38CvB,EA28CiC;AACrD,YAAIC,MAAM,GAAIH,gBAAgB,IAC1B,EADJ;AAEA,YAAIpC,OAAO,GAAIqC,iBAAiB,IAAI,EAApC;;AACA,YAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;AACxCE,UAAAA,QAAQ,GAAGF,gBAAX;AACAG,UAAAA,MAAM,GAAG,EAAT;AACAvC,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAI,OAAOqC,iBAAP,KAA6B,UAAjC,EAA6C;AACzCC,UAAAA,QAAQ,GAAGD,iBAAX;AACArC,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAMwC,OAAO,GAAGxC,OAAO,CAACwC,OAAR,IAAmB,0CAAnC;AACA,YAAMC,UAAU,GAAG;AACfzC,UAAAA,OAAO,EAAER,MAAM,CAACkD,MAAP,CAAc;AACnBC,YAAAA,GAAG,EAAE,CAACH,OAAO,GACT,kFADC,EACmFI,OADnF,CAC2F,cAD3F,EAC2G,IAD3G,CADc;AAGnBC,YAAAA,MAAM,EAAE;AAHW,WAAd,EAIN7C,OAJM,CADM;AAMfuC,UAAAA,MANe;AAOfU,UAAAA,QAAQ,EAAE,CAACT,OAAO,GACd,yFADM,EACqFI,OADrF,CAC6F,cAD7F,EAC6G,IAD7G,CAPK;AASfE,UAAAA,cAAc,EAAE,CAAC,aAAD,CATD;AAUfC,UAAAA,UAAU,EAAE,CAAC,aAAD,CAVG;AAWf7C,UAAAA,OAAO,EAAE,KAAKA;AAXC,SAAnB;;AAaA,YAAIoC,QAAJ,EAAc;AACVzC,UAAAA,mBAAmB,CAACmD,gBAApB,CAAqCP,UAArC,EAAiDH,QAAjD;AACH,SAFD,MAGK;AACD,iBAAOzC,mBAAmB,CAACmD,gBAApB,CAAqCP,UAArC,CAAP;AACH;AACJ;AA5+CuB;AAAA;AAAA,mCA6+CXL,gBA7+CW,EA6+COC,iBA7+CP,EA6+C0BC,QA7+C1B,EA6+CoC;AACxD,YAAIC,MAAM,GAAIH,gBAAgB,IAC1B,EADJ;AAEA,YAAIpC,OAAO,GAAIqC,iBAAiB,IAAI,EAApC;;AACA,YAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;AACxCE,UAAAA,QAAQ,GAAGF,gBAAX;AACAG,UAAAA,MAAM,GAAG,EAAT;AACAvC,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAI,OAAOqC,iBAAP,KAA6B,UAAjC,EAA6C;AACzCC,UAAAA,QAAQ,GAAGD,iBAAX;AACArC,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAMwC,OAAO,GAAGxC,OAAO,CAACwC,OAAR,IAAmB,0CAAnC;AACA,YAAMC,UAAU,GAAG;AACfzC,UAAAA,OAAO,EAAER,MAAM,CAACkD,MAAP,CAAc;AACnBC,YAAAA,GAAG,EAAE,CAACH,OAAO,GACT,qFADC,EACsFI,OADtF,CAC8F,cAD9F,EAC8G,IAD9G,CADc;AAGnBC,YAAAA,MAAM,EAAE;AAHW,WAAd,EAIN7C,OAJM,CADM;AAMfuC,UAAAA,MANe;AAOfU,UAAAA,QAAQ,EAAE,CAACT,OAAO,GACd,4FADM,EACwFI,OADxF,CACgG,cADhG,EACgH,IADhH,CAPK;AASfE,UAAAA,cAAc,EAAE,CAAC,aAAD,CATD;AAUfC,UAAAA,UAAU,EAAE,CAAC,aAAD,CAVG;AAWf7C,UAAAA,OAAO,EAAE,KAAKA;AAXC,SAAnB;;AAaA,YAAIoC,QAAJ,EAAc;AACVzC,UAAAA,mBAAmB,CAACmD,gBAApB,CAAqCP,UAArC,EAAiDH,QAAjD;AACH,SAFD,MAGK;AACD,iBAAOzC,mBAAmB,CAACmD,gBAApB,CAAqCP,UAArC,CAAP;AACH;AACJ;AA9gDuB;;AAAA;AAAA;;AAghD5B7C,EAAAA,mBAAmB,CAACa,oCAApB,GAA2DA,oCAA3D;;AAhhD4B,MAihDtBE,eAjhDsB;AAkhDxB,6BAAYT,OAAZ,EAAqB;AAAA;;AACjB,WAAKA,OAAL,GAAeA,OAAf;AACH;;AAphDuB;AAAA;AAAA,6BAqhDjBkC,gBArhDiB,EAqhDCC,iBArhDD,EAqhDoBC,QArhDpB,EAqhD8B;AAClD,YAAIC,MAAM,GAAIH,gBAAgB,IAAI,EAAlC;AACA,YAAIpC,OAAO,GAAIqC,iBAAiB,IAAI,EAApC;;AACA,YAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;AACxCE,UAAAA,QAAQ,GAAGF,gBAAX;AACAG,UAAAA,MAAM,GAAG,EAAT;AACAvC,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAI,OAAOqC,iBAAP,KAA6B,UAAjC,EAA6C;AACzCC,UAAAA,QAAQ,GAAGD,iBAAX;AACArC,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAMwC,OAAO,GAAGxC,OAAO,CAACwC,OAAR,IAAmB,0CAAnC;AACA,YAAMC,UAAU,GAAG;AACfzC,UAAAA,OAAO,EAAER,MAAM,CAACkD,MAAP,CAAc;AACnBC,YAAAA,GAAG,EAAE,CAACH,OAAO,GACT,yEADC,EAC0EI,OAD1E,CACkF,cADlF,EACkG,IADlG,CADc;AAGnBC,YAAAA,MAAM,EAAE;AAHW,WAAd,EAIN7C,OAJM,CADM;AAMfuC,UAAAA,MANe;AAOfO,UAAAA,cAAc,EAAE,CAAC,aAAD,EAAgB,SAAhB,CAPD;AAQfC,UAAAA,UAAU,EAAE,CAAC,SAAD,EAAY,aAAZ,CARG;AASf7C,UAAAA,OAAO,EAAE,KAAKA;AATC,SAAnB;;AAWA,YAAIoC,QAAJ,EAAc;AACVzC,UAAAA,mBAAmB,CAACmD,gBAApB,CAAqCP,UAArC,EAAiDH,QAAjD;AACH,SAFD,MAGK;AACD,iBAAOzC,mBAAmB,CAACmD,gBAApB,CAAqCP,UAArC,CAAP;AACH;AACJ;AAnjDuB;;AAAA;AAAA;;AAqjD5B7C,EAAAA,mBAAmB,CAACe,eAApB,GAAsCA,eAAtC;;AArjD4B,MAsjDtBE,kBAtjDsB,GAujDxB,4BAAYX,OAAZ,EAAqB;AAAA;;AACjB,SAAKA,OAAL,GAAeA,OAAf;AACA,SAAKgD,QAAL,GAAgB,IAAIC,2BAAJ,CAAgC,KAAKjD,OAArC,CAAhB;AACA,SAAKkD,aAAL,GAAqB,IAAIC,gCAAJ,CAAqC,KAAKnD,OAA1C,CAArB;AACA,SAAKoD,eAAL,GAAuB,IAAIC,kCAAJ,CAAuC,KAAKrD,OAA5C,CAAvB;AACH,GA5jDuB;;AA8jD5BN,EAAAA,mBAAmB,CAACiB,kBAApB,GAAyCA,kBAAzC;;AA9jD4B,MA+jDtBsC,2BA/jDsB;AAgkDxB,yCAAYjD,OAAZ,EAAqB;AAAA;;AACjB,WAAKA,OAAL,GAAeA,OAAf;AACH;;AAlkDuB;AAAA;AAAA,kCAmkDZkC,gBAnkDY,EAmkDMC,iBAnkDN,EAmkDyBC,QAnkDzB,EAmkDmC;AACvD,YAAIC,MAAM,GAAIH,gBAAgB,IAC1B,EADJ;AAEA,YAAIpC,OAAO,GAAIqC,iBAAiB,IAAI,EAApC;;AACA,YAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;AACxCE,UAAAA,QAAQ,GAAGF,gBAAX;AACAG,UAAAA,MAAM,GAAG,EAAT;AACAvC,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAI,OAAOqC,iBAAP,KAA6B,UAAjC,EAA6C;AACzCC,UAAAA,QAAQ,GAAGD,iBAAX;AACArC,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAMwC,OAAO,GAAGxC,OAAO,CAACwC,OAAR,IAAmB,0CAAnC;AACA,YAAMC,UAAU,GAAG;AACfzC,UAAAA,OAAO,EAAER,MAAM,CAACkD,MAAP,CAAc;AACnBC,YAAAA,GAAG,EAAE,CAACH,OAAO,GACT,2GADC,EAC4GI,OAD5G,CACoH,cADpH,EACoI,IADpI,CADc;AAGnBC,YAAAA,MAAM,EAAE;AAHW,WAAd,EAIN7C,OAJM,CADM;AAMfuC,UAAAA,MANe;AAOfO,UAAAA,cAAc,EAAE,CAAC,aAAD,EAAgB,WAAhB,EAA6B,OAA7B,CAPD;AAQfC,UAAAA,UAAU,EAAE,CAAC,aAAD,EAAgB,WAAhB,EAA6B,OAA7B,CARG;AASf7C,UAAAA,OAAO,EAAE,KAAKA;AATC,SAAnB;;AAWA,YAAIoC,QAAJ,EAAc;AACVzC,UAAAA,mBAAmB,CAACmD,gBAApB,CAAqCP,UAArC,EAAiDH,QAAjD;AACH,SAFD,MAGK;AACD,iBAAOzC,mBAAmB,CAACmD,gBAApB,CAAqCP,UAArC,CAAP;AACH;AACJ;AAlmDuB;AAAA;AAAA,0BAmmDpBL,gBAnmDoB,EAmmDFC,iBAnmDE,EAmmDiBC,QAnmDjB,EAmmD2B;AAC/C,YAAIC,MAAM,GAAIH,gBAAgB,IAC1B,EADJ;AAEA,YAAIpC,OAAO,GAAIqC,iBAAiB,IAAI,EAApC;;AACA,YAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;AACxCE,UAAAA,QAAQ,GAAGF,gBAAX;AACAG,UAAAA,MAAM,GAAG,EAAT;AACAvC,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAI,OAAOqC,iBAAP,KAA6B,UAAjC,EAA6C;AACzCC,UAAAA,QAAQ,GAAGD,iBAAX;AACArC,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAMwC,OAAO,GAAGxC,OAAO,CAACwC,OAAR,IAAmB,0CAAnC;AACA,YAAMC,UAAU,GAAG;AACfzC,UAAAA,OAAO,EAAER,MAAM,CAACkD,MAAP,CAAc;AACnBC,YAAAA,GAAG,EAAE,CAACH,OAAO,GACT,+FADC,EACgGI,OADhG,CACwG,cADxG,EACwH,IADxH,CADc;AAGnBC,YAAAA,MAAM,EAAE;AAHW,WAAd,EAIN7C,OAJM,CADM;AAMfuC,UAAAA,MANe;AAOfO,UAAAA,cAAc,EAAE,CAAC,aAAD,EAAgB,WAAhB,EAA6B,OAA7B,CAPD;AAQfC,UAAAA,UAAU,EAAE,CAAC,aAAD,EAAgB,WAAhB,EAA6B,OAA7B,CARG;AASf7C,UAAAA,OAAO,EAAE,KAAKA;AATC,SAAnB;;AAWA,YAAIoC,QAAJ,EAAc;AACVzC,UAAAA,mBAAmB,CAACmD,gBAApB,CAAqCP,UAArC,EAAiDH,QAAjD;AACH,SAFD,MAGK;AACD,iBAAOzC,mBAAmB,CAACmD,gBAApB,CAAqCP,UAArC,CAAP;AACH;AACJ;AAloDuB;;AAAA;AAAA;;AAooD5B7C,EAAAA,mBAAmB,CAACuD,2BAApB,GAAkDA,2BAAlD;;AApoD4B,MAqoDtBE,gCAroDsB;AAsoDxB,8CAAYnD,OAAZ,EAAqB;AAAA;;AACjB,WAAKA,OAAL,GAAeA,OAAf;AACH;;AAxoDuB;AAAA;AAAA,kCAyoDZkC,gBAzoDY,EAyoDMC,iBAzoDN,EAyoDyBC,QAzoDzB,EAyoDmC;AACvD,YAAIC,MAAM,GAAIH,gBAAgB,IAC1B,EADJ;AAEA,YAAIpC,OAAO,GAAIqC,iBAAiB,IAAI,EAApC;;AACA,YAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;AACxCE,UAAAA,QAAQ,GAAGF,gBAAX;AACAG,UAAAA,MAAM,GAAG,EAAT;AACAvC,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAI,OAAOqC,iBAAP,KAA6B,UAAjC,EAA6C;AACzCC,UAAAA,QAAQ,GAAGD,iBAAX;AACArC,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAMwC,OAAO,GAAGxC,OAAO,CAACwC,OAAR,IAAmB,0CAAnC;AACA,YAAMC,UAAU,GAAG;AACfzC,UAAAA,OAAO,EAAER,MAAM,CAACkD,MAAP,CAAc;AACnBC,YAAAA,GAAG,EAAE,CAACH,OAAO,GACT,qHADC,EACsHI,OADtH,CAC8H,cAD9H,EAC8I,IAD9I,CADc;AAGnBC,YAAAA,MAAM,EAAE;AAHW,WAAd,EAIN7C,OAJM,CADM;AAMfuC,UAAAA,MANe;AAOfO,UAAAA,cAAc,EAAE,CAAC,aAAD,EAAgB,gBAAhB,EAAkC,OAAlC,CAPD;AAQfC,UAAAA,UAAU,EAAE,CAAC,aAAD,EAAgB,gBAAhB,EAAkC,OAAlC,CARG;AASf7C,UAAAA,OAAO,EAAE,KAAKA;AATC,SAAnB;;AAWA,YAAIoC,QAAJ,EAAc;AACVzC,UAAAA,mBAAmB,CAACmD,gBAApB,CAAqCP,UAArC,EAAiDH,QAAjD;AACH,SAFD,MAGK;AACD,iBAAOzC,mBAAmB,CAACmD,gBAApB,CAAqCP,UAArC,CAAP;AACH;AACJ;AAxqDuB;AAAA;AAAA,6BAyqDjBL,gBAzqDiB,EAyqDCC,iBAzqDD,EAyqDoBC,QAzqDpB,EAyqD8B;AAClD,YAAIC,MAAM,GAAIH,gBAAgB,IAC1B,EADJ;AAEA,YAAIpC,OAAO,GAAIqC,iBAAiB,IAAI,EAApC;;AACA,YAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;AACxCE,UAAAA,QAAQ,GAAGF,gBAAX;AACAG,UAAAA,MAAM,GAAG,EAAT;AACAvC,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAI,OAAOqC,iBAAP,KAA6B,UAAjC,EAA6C;AACzCC,UAAAA,QAAQ,GAAGD,iBAAX;AACArC,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAMwC,OAAO,GAAGxC,OAAO,CAACwC,OAAR,IAAmB,0CAAnC;AACA,YAAMC,UAAU,GAAG;AACfzC,UAAAA,OAAO,EAAER,MAAM,CAACkD,MAAP,CAAc;AACnBC,YAAAA,GAAG,EAAE,CAACH,OAAO,GACT,gHADC,EACiHI,OADjH,CACyH,cADzH,EACyI,IADzI,CADc;AAGnBC,YAAAA,MAAM,EAAE;AAHW,WAAd,EAIN7C,OAJM,CADM;AAMfuC,UAAAA,MANe;AAOfO,UAAAA,cAAc,EAAE,CAAC,aAAD,EAAgB,gBAAhB,EAAkC,OAAlC,CAPD;AAQfC,UAAAA,UAAU,EAAE,CAAC,aAAD,EAAgB,gBAAhB,EAAkC,OAAlC,CARG;AASf7C,UAAAA,OAAO,EAAE,KAAKA;AATC,SAAnB;;AAWA,YAAIoC,QAAJ,EAAc;AACVzC,UAAAA,mBAAmB,CAACmD,gBAApB,CAAqCP,UAArC,EAAiDH,QAAjD;AACH,SAFD,MAGK;AACD,iBAAOzC,mBAAmB,CAACmD,gBAApB,CAAqCP,UAArC,CAAP;AACH;AACJ;AAxsDuB;AAAA;AAAA,4BAysDlBL,gBAzsDkB,EAysDAC,iBAzsDA,EAysDmBC,QAzsDnB,EAysD6B;AACjD,YAAIC,MAAM,GAAIH,gBAAgB,IAC1B,EADJ;AAEA,YAAIpC,OAAO,GAAIqC,iBAAiB,IAAI,EAApC;;AACA,YAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;AACxCE,UAAAA,QAAQ,GAAGF,gBAAX;AACAG,UAAAA,MAAM,GAAG,EAAT;AACAvC,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAI,OAAOqC,iBAAP,KAA6B,UAAjC,EAA6C;AACzCC,UAAAA,QAAQ,GAAGD,iBAAX;AACArC,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAMwC,OAAO,GAAGxC,OAAO,CAACwC,OAAR,IAAmB,0CAAnC;AACA,YAAMC,UAAU,GAAG;AACfzC,UAAAA,OAAO,EAAER,MAAM,CAACkD,MAAP,CAAc;AACnBC,YAAAA,GAAG,EAAE,CAACH,OAAO,GACT,+GADC,EACgHI,OADhH,CACwH,cADxH,EACwI,IADxI,CADc;AAGnBC,YAAAA,MAAM,EAAE;AAHW,WAAd,EAIN7C,OAJM,CADM;AAMfuC,UAAAA,MANe;AAOfO,UAAAA,cAAc,EAAE,CAAC,aAAD,EAAgB,gBAAhB,EAAkC,OAAlC,CAPD;AAQfC,UAAAA,UAAU,EAAE,CAAC,aAAD,EAAgB,gBAAhB,EAAkC,OAAlC,CARG;AASf7C,UAAAA,OAAO,EAAE,KAAKA;AATC,SAAnB;;AAWA,YAAIoC,QAAJ,EAAc;AACVzC,UAAAA,mBAAmB,CAACmD,gBAApB,CAAqCP,UAArC,EAAiDH,QAAjD;AACH,SAFD,MAGK;AACD,iBAAOzC,mBAAmB,CAACmD,gBAApB,CAAqCP,UAArC,CAAP;AACH;AACJ;AAxuDuB;AAAA;AAAA,0BAyuDpBL,gBAzuDoB,EAyuDFC,iBAzuDE,EAyuDiBC,QAzuDjB,EAyuD2B;AAC/C,YAAIC,MAAM,GAAIH,gBAAgB,IAC1B,EADJ;AAEA,YAAIpC,OAAO,GAAIqC,iBAAiB,IAAI,EAApC;;AACA,YAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;AACxCE,UAAAA,QAAQ,GAAGF,gBAAX;AACAG,UAAAA,MAAM,GAAG,EAAT;AACAvC,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAI,OAAOqC,iBAAP,KAA6B,UAAjC,EAA6C;AACzCC,UAAAA,QAAQ,GAAGD,iBAAX;AACArC,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAMwC,OAAO,GAAGxC,OAAO,CAACwC,OAAR,IAAmB,0CAAnC;AACA,YAAMC,UAAU,GAAG;AACfzC,UAAAA,OAAO,EAAER,MAAM,CAACkD,MAAP,CAAc;AACnBC,YAAAA,GAAG,EAAE,CAACH,OAAO,GACT,yGADC,EAC0GI,OAD1G,CACkH,cADlH,EACkI,IADlI,CADc;AAGnBC,YAAAA,MAAM,EAAE;AAHW,WAAd,EAIN7C,OAJM,CADM;AAMfuC,UAAAA,MANe;AAOfO,UAAAA,cAAc,EAAE,CAAC,aAAD,EAAgB,gBAAhB,EAAkC,OAAlC,CAPD;AAQfC,UAAAA,UAAU,EAAE,CAAC,aAAD,EAAgB,gBAAhB,EAAkC,OAAlC,CARG;AASf7C,UAAAA,OAAO,EAAE,KAAKA;AATC,SAAnB;;AAWA,YAAIoC,QAAJ,EAAc;AACVzC,UAAAA,mBAAmB,CAACmD,gBAApB,CAAqCP,UAArC,EAAiDH,QAAjD;AACH,SAFD,MAGK;AACD,iBAAOzC,mBAAmB,CAACmD,gBAApB,CAAqCP,UAArC,CAAP;AACH;AACJ;AAxwDuB;AAAA;AAAA,6BAywDjBL,gBAzwDiB,EAywDCC,iBAzwDD,EAywDoBC,QAzwDpB,EAywD8B;AAClD,YAAIC,MAAM,GAAIH,gBAAgB,IAC1B,EADJ;AAEA,YAAIpC,OAAO,GAAIqC,iBAAiB,IAAI,EAApC;;AACA,YAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;AACxCE,UAAAA,QAAQ,GAAGF,gBAAX;AACAG,UAAAA,MAAM,GAAG,EAAT;AACAvC,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAI,OAAOqC,iBAAP,KAA6B,UAAjC,EAA6C;AACzCC,UAAAA,QAAQ,GAAGD,iBAAX;AACArC,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAMwC,OAAO,GAAGxC,OAAO,CAACwC,OAAR,IAAmB,0CAAnC;AACA,YAAMC,UAAU,GAAG;AACfzC,UAAAA,OAAO,EAAER,MAAM,CAACkD,MAAP,CAAc;AACnBC,YAAAA,GAAG,EAAE,CAACH,OAAO,GACT,gHADC,EACiHI,OADjH,CACyH,cADzH,EACyI,IADzI,CADc;AAGnBC,YAAAA,MAAM,EAAE;AAHW,WAAd,EAIN7C,OAJM,CADM;AAMfuC,UAAAA,MANe;AAOfO,UAAAA,cAAc,EAAE,CAAC,aAAD,EAAgB,gBAAhB,EAAkC,OAAlC,CAPD;AAQfC,UAAAA,UAAU,EAAE,CAAC,aAAD,EAAgB,gBAAhB,EAAkC,OAAlC,CARG;AASf7C,UAAAA,OAAO,EAAE,KAAKA;AATC,SAAnB;;AAWA,YAAIoC,QAAJ,EAAc;AACVzC,UAAAA,mBAAmB,CAACmD,gBAApB,CAAqCP,UAArC,EAAiDH,QAAjD;AACH,SAFD,MAGK;AACD,iBAAOzC,mBAAmB,CAACmD,gBAApB,CAAqCP,UAArC,CAAP;AACH;AACJ;AAxyDuB;AAAA;AAAA,6BAyyDjBL,gBAzyDiB,EAyyDCC,iBAzyDD,EAyyDoBC,QAzyDpB,EAyyD8B;AAClD,YAAIC,MAAM,GAAIH,gBAAgB,IAC1B,EADJ;AAEA,YAAIpC,OAAO,GAAIqC,iBAAiB,IAAI,EAApC;;AACA,YAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;AACxCE,UAAAA,QAAQ,GAAGF,gBAAX;AACAG,UAAAA,MAAM,GAAG,EAAT;AACAvC,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAI,OAAOqC,iBAAP,KAA6B,UAAjC,EAA6C;AACzCC,UAAAA,QAAQ,GAAGD,iBAAX;AACArC,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAMwC,OAAO,GAAGxC,OAAO,CAACwC,OAAR,IAAmB,0CAAnC;AACA,YAAMC,UAAU,GAAG;AACfzC,UAAAA,OAAO,EAAER,MAAM,CAACkD,MAAP,CAAc;AACnBC,YAAAA,GAAG,EAAE,CAACH,OAAO,GACT,gHADC,EACiHI,OADjH,CACyH,cADzH,EACyI,IADzI,CADc;AAGnBC,YAAAA,MAAM,EAAE;AAHW,WAAd,EAIN7C,OAJM,CADM;AAMfuC,UAAAA,MANe;AAOfO,UAAAA,cAAc,EAAE,CAAC,aAAD,EAAgB,gBAAhB,EAAkC,OAAlC,CAPD;AAQfC,UAAAA,UAAU,EAAE,CAAC,aAAD,EAAgB,gBAAhB,EAAkC,OAAlC,CARG;AASf7C,UAAAA,OAAO,EAAE,KAAKA;AATC,SAAnB;;AAWA,YAAIoC,QAAJ,EAAc;AACVzC,UAAAA,mBAAmB,CAACmD,gBAApB,CAAqCP,UAArC,EAAiDH,QAAjD;AACH,SAFD,MAGK;AACD,iBAAOzC,mBAAmB,CAACmD,gBAApB,CAAqCP,UAArC,CAAP;AACH;AACJ;AAx0DuB;;AAAA;AAAA;;AA00D5B7C,EAAAA,mBAAmB,CAACyD,gCAApB,GAAuDA,gCAAvD;;AA10D4B,MA20DtBE,kCA30DsB;AA40DxB,gDAAYrD,OAAZ,EAAqB;AAAA;;AACjB,WAAKA,OAAL,GAAeA,OAAf;AACH;;AA90DuB;AAAA;AAAA,2BA+0DnBkC,gBA/0DmB,EA+0DDC,iBA/0DC,EA+0DkBC,QA/0DlB,EA+0D4B;AAChD,YAAIC,MAAM,GAAIH,gBAAgB,IAC1B,EADJ;AAEA,YAAIpC,OAAO,GAAIqC,iBAAiB,IAAI,EAApC;;AACA,YAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;AACxCE,UAAAA,QAAQ,GAAGF,gBAAX;AACAG,UAAAA,MAAM,GAAG,EAAT;AACAvC,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAI,OAAOqC,iBAAP,KAA6B,UAAjC,EAA6C;AACzCC,UAAAA,QAAQ,GAAGD,iBAAX;AACArC,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAMwC,OAAO,GAAGxC,OAAO,CAACwC,OAAR,IAAmB,0CAAnC;AACA,YAAMC,UAAU,GAAG;AACfzC,UAAAA,OAAO,EAAER,MAAM,CAACkD,MAAP,CAAc;AACnBC,YAAAA,GAAG,EAAE,CAACH,OAAO,GACT,2EADC,EAC4EI,OAD5E,CACoF,cADpF,EACoG,IADpG,CADc;AAGnBC,YAAAA,MAAM,EAAE;AAHW,WAAd,EAIN7C,OAJM,CADM;AAMfuC,UAAAA,MANe;AAOfO,UAAAA,cAAc,EAAE,CAAC,aAAD,CAPD;AAQfC,UAAAA,UAAU,EAAE,CAAC,aAAD,CARG;AASf7C,UAAAA,OAAO,EAAE,KAAKA;AATC,SAAnB;;AAWA,YAAIoC,QAAJ,EAAc;AACVzC,UAAAA,mBAAmB,CAACmD,gBAApB,CAAqCP,UAArC,EAAiDH,QAAjD;AACH,SAFD,MAGK;AACD,iBAAOzC,mBAAmB,CAACmD,gBAApB,CAAqCP,UAArC,CAAP;AACH;AACJ;AA92DuB;;AAAA;AAAA;;AAg3D5B7C,EAAAA,mBAAmB,CAAC2D,kCAApB,GAAyDA,kCAAzD;;AAh3D4B,MAi3DtBxC,gBAj3DsB;AAk3DxB,8BAAYb,OAAZ,EAAqB;AAAA;;AACjB,WAAKA,OAAL,GAAeA,OAAf;AACH;;AAp3DuB;AAAA;AAAA,0BAq3DpBkC,gBAr3DoB,EAq3DFC,iBAr3DE,EAq3DiBC,QAr3DjB,EAq3D2B;AAC/C,YAAIC,MAAM,GAAIH,gBAAgB,IAAI,EAAlC;AACA,YAAIpC,OAAO,GAAIqC,iBAAiB,IAAI,EAApC;;AACA,YAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;AACxCE,UAAAA,QAAQ,GAAGF,gBAAX;AACAG,UAAAA,MAAM,GAAG,EAAT;AACAvC,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAI,OAAOqC,iBAAP,KAA6B,UAAjC,EAA6C;AACzCC,UAAAA,QAAQ,GAAGD,iBAAX;AACArC,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAMwC,OAAO,GAAGxC,OAAO,CAACwC,OAAR,IAAmB,0CAAnC;AACA,YAAMC,UAAU,GAAG;AACfzC,UAAAA,OAAO,EAAER,MAAM,CAACkD,MAAP,CAAc;AACnBC,YAAAA,GAAG,EAAE,CAACH,OAAO,GACT,oEADC,EACqEI,OADrE,CAC6E,cAD7E,EAC6F,IAD7F,CADc;AAGnBC,YAAAA,MAAM,EAAE;AAHW,WAAd,EAIN7C,OAJM,CADM;AAMfuC,UAAAA,MANe;AAOfO,UAAAA,cAAc,EAAE,CAAC,aAAD,EAAgB,UAAhB,CAPD;AAQfC,UAAAA,UAAU,EAAE,CAAC,aAAD,EAAgB,UAAhB,CARG;AASf7C,UAAAA,OAAO,EAAE,KAAKA;AATC,SAAnB;;AAWA,YAAIoC,QAAJ,EAAc;AACVzC,UAAAA,mBAAmB,CAACmD,gBAApB,CAAqCP,UAArC,EAAiDH,QAAjD;AACH,SAFD,MAGK;AACD,iBAAOzC,mBAAmB,CAACmD,gBAApB,CAAqCP,UAArC,CAAP;AACH;AACJ;AAn5DuB;AAAA;AAAA,2BAo5DnBL,gBAp5DmB,EAo5DDC,iBAp5DC,EAo5DkBC,QAp5DlB,EAo5D4B;AAChD,YAAIC,MAAM,GAAIH,gBAAgB,IAAI,EAAlC;AACA,YAAIpC,OAAO,GAAIqC,iBAAiB,IAAI,EAApC;;AACA,YAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;AACxCE,UAAAA,QAAQ,GAAGF,gBAAX;AACAG,UAAAA,MAAM,GAAG,EAAT;AACAvC,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAI,OAAOqC,iBAAP,KAA6B,UAAjC,EAA6C;AACzCC,UAAAA,QAAQ,GAAGD,iBAAX;AACArC,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAMwC,OAAO,GAAGxC,OAAO,CAACwC,OAAR,IAAmB,0CAAnC;AACA,YAAMC,UAAU,GAAG;AACfzC,UAAAA,OAAO,EAAER,MAAM,CAACkD,MAAP,CAAc;AACnBC,YAAAA,GAAG,EAAE,CAACH,OAAO,GACT,yDADC,EAC0DI,OAD1D,CACkE,cADlE,EACkF,IADlF,CADc;AAGnBC,YAAAA,MAAM,EAAE;AAHW,WAAd,EAIN7C,OAJM,CADM;AAMfuC,UAAAA,MANe;AAOfO,UAAAA,cAAc,EAAE,CAAC,aAAD,CAPD;AAQfC,UAAAA,UAAU,EAAE,CAAC,aAAD,CARG;AASf7C,UAAAA,OAAO,EAAE,KAAKA;AATC,SAAnB;;AAWA,YAAIoC,QAAJ,EAAc;AACVzC,UAAAA,mBAAmB,CAACmD,gBAApB,CAAqCP,UAArC,EAAiDH,QAAjD;AACH,SAFD,MAGK;AACD,iBAAOzC,mBAAmB,CAACmD,gBAApB,CAAqCP,UAArC,CAAP;AACH;AACJ;AAl7DuB;AAAA;AAAA,4BAm7DlBL,gBAn7DkB,EAm7DAC,iBAn7DA,EAm7DmBC,QAn7DnB,EAm7D6B;AACjD,YAAIC,MAAM,GAAIH,gBAAgB,IAAI,EAAlC;AACA,YAAIpC,OAAO,GAAIqC,iBAAiB,IAAI,EAApC;;AACA,YAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;AACxCE,UAAAA,QAAQ,GAAGF,gBAAX;AACAG,UAAAA,MAAM,GAAG,EAAT;AACAvC,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAI,OAAOqC,iBAAP,KAA6B,UAAjC,EAA6C;AACzCC,UAAAA,QAAQ,GAAGD,iBAAX;AACArC,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAMwC,OAAO,GAAGxC,OAAO,CAACwC,OAAR,IAAmB,0CAAnC;AACA,YAAMC,UAAU,GAAG;AACfzC,UAAAA,OAAO,EAAER,MAAM,CAACkD,MAAP,CAAc;AACnBC,YAAAA,GAAG,EAAE,CAACH,OAAO,GACT,0EADC,EAC2EI,OAD3E,CACmF,cADnF,EACmG,IADnG,CADc;AAGnBC,YAAAA,MAAM,EAAE;AAHW,WAAd,EAIN7C,OAJM,CADM;AAMfuC,UAAAA,MANe;AAOfO,UAAAA,cAAc,EAAE,CAAC,aAAD,EAAgB,UAAhB,CAPD;AAQfC,UAAAA,UAAU,EAAE,CAAC,aAAD,EAAgB,UAAhB,CARG;AASf7C,UAAAA,OAAO,EAAE,KAAKA;AATC,SAAnB;;AAWA,YAAIoC,QAAJ,EAAc;AACVzC,UAAAA,mBAAmB,CAACmD,gBAApB,CAAqCP,UAArC,EAAiDH,QAAjD;AACH,SAFD,MAGK;AACD,iBAAOzC,mBAAmB,CAACmD,gBAApB,CAAqCP,UAArC,CAAP;AACH;AACJ;AAj9DuB;;AAAA;AAAA;;AAm9D5B7C,EAAAA,mBAAmB,CAACmB,gBAApB,GAAuCA,gBAAvC;;AAn9D4B,MAo9DtBE,mBAp9DsB,GAq9DxB,6BAAYf,OAAZ,EAAqB;AAAA;;AACjB,SAAKA,OAAL,GAAeA,OAAf;AACA,SAAKsD,QAAL,GAAgB,IAAIC,4BAAJ,CAAiC,KAAKvD,OAAtC,CAAhB;AACH,GAx9DuB;;AA09D5BN,EAAAA,mBAAmB,CAACqB,mBAApB,GAA0CA,mBAA1C;;AA19D4B,MA29DtBwC,4BA39DsB;AA49DxB,0CAAYvD,OAAZ,EAAqB;AAAA;;AACjB,WAAKA,OAAL,GAAeA,OAAf;AACH;;AA99DuB;AAAA;AAAA,6BA+9DjBkC,gBA/9DiB,EA+9DCC,iBA/9DD,EA+9DoBC,QA/9DpB,EA+9D8B;AAClD,YAAIC,MAAM,GAAIH,gBAAgB,IAC1B,EADJ;AAEA,YAAIpC,OAAO,GAAIqC,iBAAiB,IAAI,EAApC;;AACA,YAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;AACxCE,UAAAA,QAAQ,GAAGF,gBAAX;AACAG,UAAAA,MAAM,GAAG,EAAT;AACAvC,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAI,OAAOqC,iBAAP,KAA6B,UAAjC,EAA6C;AACzCC,UAAAA,QAAQ,GAAGD,iBAAX;AACArC,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAMwC,OAAO,GAAGxC,OAAO,CAACwC,OAAR,IAAmB,0CAAnC;AACA,YAAMC,UAAU,GAAG;AACfzC,UAAAA,OAAO,EAAER,MAAM,CAACkD,MAAP,CAAc;AACnBC,YAAAA,GAAG,EAAE,CAACH,OAAO,GACT,mFADC,EACoFI,OADpF,CAC4F,cAD5F,EAC4G,IAD5G,CADc;AAGnBC,YAAAA,MAAM,EAAE;AAHW,WAAd,EAIN7C,OAJM,CADM;AAMfuC,UAAAA,MANe;AAOfO,UAAAA,cAAc,EAAE,CAAC,aAAD,EAAgB,aAAhB,CAPD;AAQfC,UAAAA,UAAU,EAAE,CAAC,aAAD,EAAgB,aAAhB,CARG;AASf7C,UAAAA,OAAO,EAAE,KAAKA;AATC,SAAnB;;AAWA,YAAIoC,QAAJ,EAAc;AACVzC,UAAAA,mBAAmB,CAACmD,gBAApB,CAAqCP,UAArC,EAAiDH,QAAjD;AACH,SAFD,MAGK;AACD,iBAAOzC,mBAAmB,CAACmD,gBAApB,CAAqCP,UAArC,CAAP;AACH;AACJ;AA9/DuB;AAAA;AAAA,+BA+/DfL,gBA//De,EA+/DGC,iBA//DH,EA+/DsBC,QA//DtB,EA+/DgC;AACpD,YAAIC,MAAM,GAAIH,gBAAgB,IAC1B,EADJ;AAEA,YAAIpC,OAAO,GAAIqC,iBAAiB,IAAI,EAApC;;AACA,YAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;AACxCE,UAAAA,QAAQ,GAAGF,gBAAX;AACAG,UAAAA,MAAM,GAAG,EAAT;AACAvC,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAI,OAAOqC,iBAAP,KAA6B,UAAjC,EAA6C;AACzCC,UAAAA,QAAQ,GAAGD,iBAAX;AACArC,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAMwC,OAAO,GAAGxC,OAAO,CAACwC,OAAR,IAAmB,0CAAnC;AACA,YAAMC,UAAU,GAAG;AACfzC,UAAAA,OAAO,EAAER,MAAM,CAACkD,MAAP,CAAc;AACnBC,YAAAA,GAAG,EAAE,CAACH,OAAO,GACT,wGADC,EACyGI,OADzG,CACiH,cADjH,EACiI,IADjI,CADc;AAGnBC,YAAAA,MAAM,EAAE;AAHW,WAAd,EAIN7C,OAJM,CADM;AAMfuC,UAAAA,MANe;AAOfO,UAAAA,cAAc,EAAE,CAAC,aAAD,EAAgB,aAAhB,EAA+B,WAA/B,CAPD;AAQfC,UAAAA,UAAU,EAAE,CAAC,aAAD,EAAgB,WAAhB,EAA6B,aAA7B,CARG;AASf7C,UAAAA,OAAO,EAAE,KAAKA;AATC,SAAnB;;AAWA,YAAIoC,QAAJ,EAAc;AACVzC,UAAAA,mBAAmB,CAACmD,gBAApB,CAAqCP,UAArC,EAAiDH,QAAjD;AACH,SAFD,MAGK;AACD,iBAAOzC,mBAAmB,CAACmD,gBAApB,CAAqCP,UAArC,CAAP;AACH;AACJ;AA9hEuB;AAAA;AAAA,0BA+hEpBL,gBA/hEoB,EA+hEFC,iBA/hEE,EA+hEiBC,QA/hEjB,EA+hE2B;AAC/C,YAAIC,MAAM,GAAIH,gBAAgB,IAC1B,EADJ;AAEA,YAAIpC,OAAO,GAAIqC,iBAAiB,IAAI,EAApC;;AACA,YAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;AACxCE,UAAAA,QAAQ,GAAGF,gBAAX;AACAG,UAAAA,MAAM,GAAG,EAAT;AACAvC,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAI,OAAOqC,iBAAP,KAA6B,UAAjC,EAA6C;AACzCC,UAAAA,QAAQ,GAAGD,iBAAX;AACArC,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAMwC,OAAO,GAAGxC,OAAO,CAACwC,OAAR,IAAmB,0CAAnC;AACA,YAAMC,UAAU,GAAG;AACfzC,UAAAA,OAAO,EAAER,MAAM,CAACkD,MAAP,CAAc;AACnBC,YAAAA,GAAG,EAAE,CAACH,OAAO,GACT,+FADC,EACgGI,OADhG,CACwG,cADxG,EACwH,IADxH,CADc;AAGnBC,YAAAA,MAAM,EAAE;AAHW,WAAd,EAIN7C,OAJM,CADM;AAMfuC,UAAAA,MANe;AAOfO,UAAAA,cAAc,EAAE,CAAC,aAAD,EAAgB,aAAhB,EAA+B,WAA/B,CAPD;AAQfC,UAAAA,UAAU,EAAE,CAAC,aAAD,EAAgB,WAAhB,EAA6B,aAA7B,CARG;AASf7C,UAAAA,OAAO,EAAE,KAAKA;AATC,SAAnB;;AAWA,YAAIoC,QAAJ,EAAc;AACVzC,UAAAA,mBAAmB,CAACmD,gBAApB,CAAqCP,UAArC,EAAiDH,QAAjD;AACH,SAFD,MAGK;AACD,iBAAOzC,mBAAmB,CAACmD,gBAApB,CAAqCP,UAArC,CAAP;AACH;AACJ;AA9jEuB;AAAA;AAAA,2BA+jEnBL,gBA/jEmB,EA+jEDC,iBA/jEC,EA+jEkBC,QA/jElB,EA+jE4B;AAChD,YAAIC,MAAM,GAAIH,gBAAgB,IAC1B,EADJ;AAEA,YAAIpC,OAAO,GAAIqC,iBAAiB,IAAI,EAApC;;AACA,YAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;AACxCE,UAAAA,QAAQ,GAAGF,gBAAX;AACAG,UAAAA,MAAM,GAAG,EAAT;AACAvC,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAI,OAAOqC,iBAAP,KAA6B,UAAjC,EAA6C;AACzCC,UAAAA,QAAQ,GAAGD,iBAAX;AACArC,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAMwC,OAAO,GAAGxC,OAAO,CAACwC,OAAR,IAAmB,0CAAnC;AACA,YAAMC,UAAU,GAAG;AACfzC,UAAAA,OAAO,EAAER,MAAM,CAACkD,MAAP,CAAc;AACnBC,YAAAA,GAAG,EAAE,CAACH,OAAO,GACT,mFADC,EACoFI,OADpF,CAC4F,cAD5F,EAC4G,IAD5G,CADc;AAGnBC,YAAAA,MAAM,EAAE;AAHW,WAAd,EAIN7C,OAJM,CADM;AAMfuC,UAAAA,MANe;AAOfO,UAAAA,cAAc,EAAE,CAAC,aAAD,EAAgB,aAAhB,CAPD;AAQfC,UAAAA,UAAU,EAAE,CAAC,aAAD,EAAgB,aAAhB,CARG;AASf7C,UAAAA,OAAO,EAAE,KAAKA;AATC,SAAnB;;AAWA,YAAIoC,QAAJ,EAAc;AACVzC,UAAAA,mBAAmB,CAACmD,gBAApB,CAAqCP,UAArC,EAAiDH,QAAjD;AACH,SAFD,MAGK;AACD,iBAAOzC,mBAAmB,CAACmD,gBAApB,CAAqCP,UAArC,CAAP;AACH;AACJ;AA9lEuB;;AAAA;AAAA;;AAgmE5B7C,EAAAA,mBAAmB,CAAC6D,4BAApB,GAAmDA,4BAAnD;AACH,CAjmED,EAimEG7D,mBAAmB,GAAGF,OAAO,CAACE,mBAAR,KAAgCF,OAAO,CAACE,mBAAR,GAA8B,EAA9D,CAjmEzB","sourcesContent":["\"use strict\";\n// Copyright 2020 Google LLC\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//    http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.androidpublisher_v3 = void 0;\n/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/class-name-casing */\n/* eslint-disable @typescript-eslint/no-unused-vars */\n/* eslint-disable @typescript-eslint/no-empty-interface */\n/* eslint-disable @typescript-eslint/no-namespace */\n/* eslint-disable no-irregular-whitespace */\nconst googleapis_common_1 = require(\"googleapis-common\");\nvar androidpublisher_v3;\n(function (androidpublisher_v3) {\n    /**\n     * Google Play Android Developer API\n     *\n     * Lets Android application developers access their Google Play accounts.\n     *\n     * @example\n     * ```js\n     * const {google} = require('googleapis');\n     * const androidpublisher = google.androidpublisher('v3');\n     * ```\n     */\n    class Androidpublisher {\n        constructor(options, google) {\n            this.context = {\n                _options: options || {},\n                google,\n            };\n            this.edits = new Resource$Edits(this.context);\n            this.inappproducts = new Resource$Inappproducts(this.context);\n            this.internalappsharingartifacts = new Resource$Internalappsharingartifacts(this.context);\n            this.orders = new Resource$Orders(this.context);\n            this.purchases = new Resource$Purchases(this.context);\n            this.reviews = new Resource$Reviews(this.context);\n            this.systemapks = new Resource$Systemapks(this.context);\n        }\n    }\n    androidpublisher_v3.Androidpublisher = Androidpublisher;\n    class Resource$Edits {\n        constructor(context) {\n            this.context = context;\n            this.apks = new Resource$Edits$Apks(this.context);\n            this.bundles = new Resource$Edits$Bundles(this.context);\n            this.deobfuscationfiles = new Resource$Edits$Deobfuscationfiles(this.context);\n            this.details = new Resource$Edits$Details(this.context);\n            this.expansionfiles = new Resource$Edits$Expansionfiles(this.context);\n            this.images = new Resource$Edits$Images(this.context);\n            this.listings = new Resource$Edits$Listings(this.context);\n            this.testers = new Resource$Edits$Testers(this.context);\n            this.tracks = new Resource$Edits$Tracks(this.context);\n        }\n        commit(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://androidpublisher.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/androidpublisher/v3/applications/{packageName}/edits/{editId}:commit').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['packageName', 'editId'],\n                pathParams: ['editId', 'packageName'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        delete(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://androidpublisher.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/androidpublisher/v3/applications/{packageName}/edits/{editId}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'DELETE',\n                }, options),\n                params,\n                requiredParams: ['packageName', 'editId'],\n                pathParams: ['editId', 'packageName'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://androidpublisher.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/androidpublisher/v3/applications/{packageName}/edits/{editId}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['packageName', 'editId'],\n                pathParams: ['editId', 'packageName'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        insert(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://androidpublisher.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/androidpublisher/v3/applications/{packageName}/edits').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['packageName'],\n                pathParams: ['packageName'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        validate(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://androidpublisher.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/androidpublisher/v3/applications/{packageName}/edits/{editId}:validate').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['packageName', 'editId'],\n                pathParams: ['editId', 'packageName'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    androidpublisher_v3.Resource$Edits = Resource$Edits;\n    class Resource$Edits$Apks {\n        constructor(context) {\n            this.context = context;\n        }\n        addexternallyhosted(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://androidpublisher.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/androidpublisher/v3/applications/{packageName}/edits/{editId}/apks/externallyHosted').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['packageName', 'editId'],\n                pathParams: ['editId', 'packageName'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://androidpublisher.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/androidpublisher/v3/applications/{packageName}/edits/{editId}/apks').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['packageName', 'editId'],\n                pathParams: ['editId', 'packageName'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        upload(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://androidpublisher.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/androidpublisher/v3/applications/{packageName}/edits/{editId}/apks').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                mediaUrl: (rootUrl +\n                    '/upload/androidpublisher/v3/applications/{packageName}/edits/{editId}/apks').replace(/([^:]\\/)\\/+/g, '$1'),\n                requiredParams: ['packageName', 'editId'],\n                pathParams: ['editId', 'packageName'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    androidpublisher_v3.Resource$Edits$Apks = Resource$Edits$Apks;\n    class Resource$Edits$Bundles {\n        constructor(context) {\n            this.context = context;\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://androidpublisher.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/androidpublisher/v3/applications/{packageName}/edits/{editId}/bundles').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['packageName', 'editId'],\n                pathParams: ['editId', 'packageName'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        upload(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://androidpublisher.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/androidpublisher/v3/applications/{packageName}/edits/{editId}/bundles').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                mediaUrl: (rootUrl +\n                    '/upload/androidpublisher/v3/applications/{packageName}/edits/{editId}/bundles').replace(/([^:]\\/)\\/+/g, '$1'),\n                requiredParams: ['packageName', 'editId'],\n                pathParams: ['editId', 'packageName'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    androidpublisher_v3.Resource$Edits$Bundles = Resource$Edits$Bundles;\n    class Resource$Edits$Deobfuscationfiles {\n        constructor(context) {\n            this.context = context;\n        }\n        upload(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://androidpublisher.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/androidpublisher/v3/applications/{packageName}/edits/{editId}/apks/{apkVersionCode}/deobfuscationFiles/{deobfuscationFileType}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                mediaUrl: (rootUrl +\n                    '/upload/androidpublisher/v3/applications/{packageName}/edits/{editId}/apks/{apkVersionCode}/deobfuscationFiles/{deobfuscationFileType}').replace(/([^:]\\/)\\/+/g, '$1'),\n                requiredParams: [\n                    'packageName',\n                    'editId',\n                    'apkVersionCode',\n                    'deobfuscationFileType',\n                ],\n                pathParams: [\n                    'apkVersionCode',\n                    'deobfuscationFileType',\n                    'editId',\n                    'packageName',\n                ],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    androidpublisher_v3.Resource$Edits$Deobfuscationfiles = Resource$Edits$Deobfuscationfiles;\n    class Resource$Edits$Details {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://androidpublisher.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/androidpublisher/v3/applications/{packageName}/edits/{editId}/details').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['packageName', 'editId'],\n                pathParams: ['editId', 'packageName'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        patch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://androidpublisher.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/androidpublisher/v3/applications/{packageName}/edits/{editId}/details').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PATCH',\n                }, options),\n                params,\n                requiredParams: ['packageName', 'editId'],\n                pathParams: ['editId', 'packageName'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        update(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://androidpublisher.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/androidpublisher/v3/applications/{packageName}/edits/{editId}/details').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PUT',\n                }, options),\n                params,\n                requiredParams: ['packageName', 'editId'],\n                pathParams: ['editId', 'packageName'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    androidpublisher_v3.Resource$Edits$Details = Resource$Edits$Details;\n    class Resource$Edits$Expansionfiles {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://androidpublisher.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/androidpublisher/v3/applications/{packageName}/edits/{editId}/apks/{apkVersionCode}/expansionFiles/{expansionFileType}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: [\n                    'packageName',\n                    'editId',\n                    'apkVersionCode',\n                    'expansionFileType',\n                ],\n                pathParams: [\n                    'apkVersionCode',\n                    'editId',\n                    'expansionFileType',\n                    'packageName',\n                ],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        patch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://androidpublisher.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/androidpublisher/v3/applications/{packageName}/edits/{editId}/apks/{apkVersionCode}/expansionFiles/{expansionFileType}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PATCH',\n                }, options),\n                params,\n                requiredParams: [\n                    'packageName',\n                    'editId',\n                    'apkVersionCode',\n                    'expansionFileType',\n                ],\n                pathParams: [\n                    'apkVersionCode',\n                    'editId',\n                    'expansionFileType',\n                    'packageName',\n                ],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        update(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://androidpublisher.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/androidpublisher/v3/applications/{packageName}/edits/{editId}/apks/{apkVersionCode}/expansionFiles/{expansionFileType}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PUT',\n                }, options),\n                params,\n                requiredParams: [\n                    'packageName',\n                    'editId',\n                    'apkVersionCode',\n                    'expansionFileType',\n                ],\n                pathParams: [\n                    'apkVersionCode',\n                    'editId',\n                    'expansionFileType',\n                    'packageName',\n                ],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        upload(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://androidpublisher.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/androidpublisher/v3/applications/{packageName}/edits/{editId}/apks/{apkVersionCode}/expansionFiles/{expansionFileType}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                mediaUrl: (rootUrl +\n                    '/upload/androidpublisher/v3/applications/{packageName}/edits/{editId}/apks/{apkVersionCode}/expansionFiles/{expansionFileType}').replace(/([^:]\\/)\\/+/g, '$1'),\n                requiredParams: [\n                    'packageName',\n                    'editId',\n                    'apkVersionCode',\n                    'expansionFileType',\n                ],\n                pathParams: [\n                    'apkVersionCode',\n                    'editId',\n                    'expansionFileType',\n                    'packageName',\n                ],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    androidpublisher_v3.Resource$Edits$Expansionfiles = Resource$Edits$Expansionfiles;\n    class Resource$Edits$Images {\n        constructor(context) {\n            this.context = context;\n        }\n        delete(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://androidpublisher.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/androidpublisher/v3/applications/{packageName}/edits/{editId}/listings/{language}/{imageType}/{imageId}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'DELETE',\n                }, options),\n                params,\n                requiredParams: [\n                    'packageName',\n                    'editId',\n                    'language',\n                    'imageType',\n                    'imageId',\n                ],\n                pathParams: [\n                    'editId',\n                    'imageId',\n                    'imageType',\n                    'language',\n                    'packageName',\n                ],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        deleteall(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://androidpublisher.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/androidpublisher/v3/applications/{packageName}/edits/{editId}/listings/{language}/{imageType}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'DELETE',\n                }, options),\n                params,\n                requiredParams: ['packageName', 'editId', 'language', 'imageType'],\n                pathParams: ['editId', 'imageType', 'language', 'packageName'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://androidpublisher.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/androidpublisher/v3/applications/{packageName}/edits/{editId}/listings/{language}/{imageType}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['packageName', 'editId', 'language', 'imageType'],\n                pathParams: ['editId', 'imageType', 'language', 'packageName'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        upload(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://androidpublisher.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/androidpublisher/v3/applications/{packageName}/edits/{editId}/listings/{language}/{imageType}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                mediaUrl: (rootUrl +\n                    '/upload/androidpublisher/v3/applications/{packageName}/edits/{editId}/listings/{language}/{imageType}').replace(/([^:]\\/)\\/+/g, '$1'),\n                requiredParams: ['packageName', 'editId', 'language', 'imageType'],\n                pathParams: ['editId', 'imageType', 'language', 'packageName'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    androidpublisher_v3.Resource$Edits$Images = Resource$Edits$Images;\n    class Resource$Edits$Listings {\n        constructor(context) {\n            this.context = context;\n        }\n        delete(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://androidpublisher.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/androidpublisher/v3/applications/{packageName}/edits/{editId}/listings/{language}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'DELETE',\n                }, options),\n                params,\n                requiredParams: ['packageName', 'editId', 'language'],\n                pathParams: ['editId', 'language', 'packageName'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        deleteall(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://androidpublisher.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/androidpublisher/v3/applications/{packageName}/edits/{editId}/listings').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'DELETE',\n                }, options),\n                params,\n                requiredParams: ['packageName', 'editId'],\n                pathParams: ['editId', 'packageName'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://androidpublisher.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/androidpublisher/v3/applications/{packageName}/edits/{editId}/listings/{language}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['packageName', 'editId', 'language'],\n                pathParams: ['editId', 'language', 'packageName'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://androidpublisher.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/androidpublisher/v3/applications/{packageName}/edits/{editId}/listings').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['packageName', 'editId'],\n                pathParams: ['editId', 'packageName'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        patch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://androidpublisher.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/androidpublisher/v3/applications/{packageName}/edits/{editId}/listings/{language}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PATCH',\n                }, options),\n                params,\n                requiredParams: ['packageName', 'editId', 'language'],\n                pathParams: ['editId', 'language', 'packageName'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        update(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://androidpublisher.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/androidpublisher/v3/applications/{packageName}/edits/{editId}/listings/{language}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PUT',\n                }, options),\n                params,\n                requiredParams: ['packageName', 'editId', 'language'],\n                pathParams: ['editId', 'language', 'packageName'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    androidpublisher_v3.Resource$Edits$Listings = Resource$Edits$Listings;\n    class Resource$Edits$Testers {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://androidpublisher.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/androidpublisher/v3/applications/{packageName}/edits/{editId}/testers/{track}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['packageName', 'editId', 'track'],\n                pathParams: ['editId', 'packageName', 'track'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        patch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://androidpublisher.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/androidpublisher/v3/applications/{packageName}/edits/{editId}/testers/{track}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PATCH',\n                }, options),\n                params,\n                requiredParams: ['packageName', 'editId', 'track'],\n                pathParams: ['editId', 'packageName', 'track'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        update(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://androidpublisher.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/androidpublisher/v3/applications/{packageName}/edits/{editId}/testers/{track}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PUT',\n                }, options),\n                params,\n                requiredParams: ['packageName', 'editId', 'track'],\n                pathParams: ['editId', 'packageName', 'track'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    androidpublisher_v3.Resource$Edits$Testers = Resource$Edits$Testers;\n    class Resource$Edits$Tracks {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://androidpublisher.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/androidpublisher/v3/applications/{packageName}/edits/{editId}/tracks/{track}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['packageName', 'editId', 'track'],\n                pathParams: ['editId', 'packageName', 'track'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://androidpublisher.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/androidpublisher/v3/applications/{packageName}/edits/{editId}/tracks').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['packageName', 'editId'],\n                pathParams: ['editId', 'packageName'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        patch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://androidpublisher.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/androidpublisher/v3/applications/{packageName}/edits/{editId}/tracks/{track}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PATCH',\n                }, options),\n                params,\n                requiredParams: ['packageName', 'editId', 'track'],\n                pathParams: ['editId', 'packageName', 'track'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        update(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://androidpublisher.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/androidpublisher/v3/applications/{packageName}/edits/{editId}/tracks/{track}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PUT',\n                }, options),\n                params,\n                requiredParams: ['packageName', 'editId', 'track'],\n                pathParams: ['editId', 'packageName', 'track'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    androidpublisher_v3.Resource$Edits$Tracks = Resource$Edits$Tracks;\n    class Resource$Inappproducts {\n        constructor(context) {\n            this.context = context;\n        }\n        delete(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://androidpublisher.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/androidpublisher/v3/applications/{packageName}/inappproducts/{sku}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'DELETE',\n                }, options),\n                params,\n                requiredParams: ['packageName', 'sku'],\n                pathParams: ['packageName', 'sku'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://androidpublisher.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/androidpublisher/v3/applications/{packageName}/inappproducts/{sku}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['packageName', 'sku'],\n                pathParams: ['packageName', 'sku'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        insert(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://androidpublisher.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/androidpublisher/v3/applications/{packageName}/inappproducts').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['packageName'],\n                pathParams: ['packageName'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://androidpublisher.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/androidpublisher/v3/applications/{packageName}/inappproducts').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['packageName'],\n                pathParams: ['packageName'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        patch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://androidpublisher.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/androidpublisher/v3/applications/{packageName}/inappproducts/{sku}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PATCH',\n                }, options),\n                params,\n                requiredParams: ['packageName', 'sku'],\n                pathParams: ['packageName', 'sku'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        update(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://androidpublisher.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/androidpublisher/v3/applications/{packageName}/inappproducts/{sku}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PUT',\n                }, options),\n                params,\n                requiredParams: ['packageName', 'sku'],\n                pathParams: ['packageName', 'sku'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    androidpublisher_v3.Resource$Inappproducts = Resource$Inappproducts;\n    class Resource$Internalappsharingartifacts {\n        constructor(context) {\n            this.context = context;\n        }\n        uploadapk(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://androidpublisher.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/androidpublisher/v3/applications/internalappsharing/{packageName}/artifacts/apk').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                mediaUrl: (rootUrl +\n                    '/upload/androidpublisher/v3/applications/internalappsharing/{packageName}/artifacts/apk').replace(/([^:]\\/)\\/+/g, '$1'),\n                requiredParams: ['packageName'],\n                pathParams: ['packageName'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        uploadbundle(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://androidpublisher.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/androidpublisher/v3/applications/internalappsharing/{packageName}/artifacts/bundle').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                mediaUrl: (rootUrl +\n                    '/upload/androidpublisher/v3/applications/internalappsharing/{packageName}/artifacts/bundle').replace(/([^:]\\/)\\/+/g, '$1'),\n                requiredParams: ['packageName'],\n                pathParams: ['packageName'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    androidpublisher_v3.Resource$Internalappsharingartifacts = Resource$Internalappsharingartifacts;\n    class Resource$Orders {\n        constructor(context) {\n            this.context = context;\n        }\n        refund(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://androidpublisher.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/androidpublisher/v3/applications/{packageName}/orders/{orderId}:refund').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['packageName', 'orderId'],\n                pathParams: ['orderId', 'packageName'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    androidpublisher_v3.Resource$Orders = Resource$Orders;\n    class Resource$Purchases {\n        constructor(context) {\n            this.context = context;\n            this.products = new Resource$Purchases$Products(this.context);\n            this.subscriptions = new Resource$Purchases$Subscriptions(this.context);\n            this.voidedpurchases = new Resource$Purchases$Voidedpurchases(this.context);\n        }\n    }\n    androidpublisher_v3.Resource$Purchases = Resource$Purchases;\n    class Resource$Purchases$Products {\n        constructor(context) {\n            this.context = context;\n        }\n        acknowledge(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://androidpublisher.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/androidpublisher/v3/applications/{packageName}/purchases/products/{productId}/tokens/{token}:acknowledge').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['packageName', 'productId', 'token'],\n                pathParams: ['packageName', 'productId', 'token'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://androidpublisher.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/androidpublisher/v3/applications/{packageName}/purchases/products/{productId}/tokens/{token}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['packageName', 'productId', 'token'],\n                pathParams: ['packageName', 'productId', 'token'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    androidpublisher_v3.Resource$Purchases$Products = Resource$Purchases$Products;\n    class Resource$Purchases$Subscriptions {\n        constructor(context) {\n            this.context = context;\n        }\n        acknowledge(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://androidpublisher.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/androidpublisher/v3/applications/{packageName}/purchases/subscriptions/{subscriptionId}/tokens/{token}:acknowledge').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['packageName', 'subscriptionId', 'token'],\n                pathParams: ['packageName', 'subscriptionId', 'token'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        cancel(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://androidpublisher.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/androidpublisher/v3/applications/{packageName}/purchases/subscriptions/{subscriptionId}/tokens/{token}:cancel').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['packageName', 'subscriptionId', 'token'],\n                pathParams: ['packageName', 'subscriptionId', 'token'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        defer(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://androidpublisher.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/androidpublisher/v3/applications/{packageName}/purchases/subscriptions/{subscriptionId}/tokens/{token}:defer').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['packageName', 'subscriptionId', 'token'],\n                pathParams: ['packageName', 'subscriptionId', 'token'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://androidpublisher.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/androidpublisher/v3/applications/{packageName}/purchases/subscriptions/{subscriptionId}/tokens/{token}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['packageName', 'subscriptionId', 'token'],\n                pathParams: ['packageName', 'subscriptionId', 'token'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        refund(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://androidpublisher.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/androidpublisher/v3/applications/{packageName}/purchases/subscriptions/{subscriptionId}/tokens/{token}:refund').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['packageName', 'subscriptionId', 'token'],\n                pathParams: ['packageName', 'subscriptionId', 'token'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        revoke(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://androidpublisher.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/androidpublisher/v3/applications/{packageName}/purchases/subscriptions/{subscriptionId}/tokens/{token}:revoke').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['packageName', 'subscriptionId', 'token'],\n                pathParams: ['packageName', 'subscriptionId', 'token'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    androidpublisher_v3.Resource$Purchases$Subscriptions = Resource$Purchases$Subscriptions;\n    class Resource$Purchases$Voidedpurchases {\n        constructor(context) {\n            this.context = context;\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://androidpublisher.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/androidpublisher/v3/applications/{packageName}/purchases/voidedpurchases').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['packageName'],\n                pathParams: ['packageName'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    androidpublisher_v3.Resource$Purchases$Voidedpurchases = Resource$Purchases$Voidedpurchases;\n    class Resource$Reviews {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://androidpublisher.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/androidpublisher/v3/applications/{packageName}/reviews/{reviewId}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['packageName', 'reviewId'],\n                pathParams: ['packageName', 'reviewId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://androidpublisher.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/androidpublisher/v3/applications/{packageName}/reviews').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['packageName'],\n                pathParams: ['packageName'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        reply(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://androidpublisher.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/androidpublisher/v3/applications/{packageName}/reviews/{reviewId}:reply').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['packageName', 'reviewId'],\n                pathParams: ['packageName', 'reviewId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    androidpublisher_v3.Resource$Reviews = Resource$Reviews;\n    class Resource$Systemapks {\n        constructor(context) {\n            this.context = context;\n            this.variants = new Resource$Systemapks$Variants(this.context);\n        }\n    }\n    androidpublisher_v3.Resource$Systemapks = Resource$Systemapks;\n    class Resource$Systemapks$Variants {\n        constructor(context) {\n            this.context = context;\n        }\n        create(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://androidpublisher.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/androidpublisher/v3/applications/{packageName}/systemApks/{versionCode}/variants').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['packageName', 'versionCode'],\n                pathParams: ['packageName', 'versionCode'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        download(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://androidpublisher.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/androidpublisher/v3/applications/{packageName}/systemApks/{versionCode}/variants/{variantId}:download').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['packageName', 'versionCode', 'variantId'],\n                pathParams: ['packageName', 'variantId', 'versionCode'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://androidpublisher.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/androidpublisher/v3/applications/{packageName}/systemApks/{versionCode}/variants/{variantId}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['packageName', 'versionCode', 'variantId'],\n                pathParams: ['packageName', 'variantId', 'versionCode'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://androidpublisher.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/androidpublisher/v3/applications/{packageName}/systemApks/{versionCode}/variants').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['packageName', 'versionCode'],\n                pathParams: ['packageName', 'versionCode'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    androidpublisher_v3.Resource$Systemapks$Variants = Resource$Systemapks$Variants;\n})(androidpublisher_v3 = exports.androidpublisher_v3 || (exports.androidpublisher_v3 = {}));\n//# sourceMappingURL=v3.js.map"]},"metadata":{},"sourceType":"script"}