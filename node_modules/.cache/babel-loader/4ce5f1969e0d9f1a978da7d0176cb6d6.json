{"ast":null,"code":"\"use strict\";\n/**\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar _createClass = require(\"/Users/amandapoetker-alles/Desktop/campaign-dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _classCallCheck = require(\"/Users/amandapoetker-alles/Desktop/campaign-dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar googleapis_common_1 = require(\"googleapis-common\"); // tslint:disable: no-any\n// tslint:disable: class-name\n// tslint:disable: variable-name\n// tslint:disable: jsdoc-format\n// tslint:disable: no-namespace\n\n\nvar cloudprivatecatalog_v1beta1;\n\n(function (cloudprivatecatalog_v1beta1) {\n  /**\n   * Cloud Private Catalog API\n   *\n   * Enable cloud users to discover enterprise catalogs and products in their\n   * organizations.\n   *\n   * @example\n   * const {google} = require('googleapis');\n   * const cloudprivatecatalog = google.cloudprivatecatalog('v1beta1');\n   *\n   * @namespace cloudprivatecatalog\n   * @type {Function}\n   * @version v1beta1\n   * @variation v1beta1\n   * @param {object=} options Options for Cloudprivatecatalog\n   */\n  var Cloudprivatecatalog = function Cloudprivatecatalog(options, google) {\n    _classCallCheck(this, Cloudprivatecatalog);\n\n    this.context = {\n      _options: options || {},\n      google\n    };\n    this.folders = new Resource$Folders(this.context);\n    this.organizations = new Resource$Organizations(this.context);\n    this.projects = new Resource$Projects(this.context);\n  };\n\n  cloudprivatecatalog_v1beta1.Cloudprivatecatalog = Cloudprivatecatalog;\n\n  var Resource$Folders = function Resource$Folders(context) {\n    _classCallCheck(this, Resource$Folders);\n\n    this.context = context;\n    this.catalogs = new Resource$Folders$Catalogs(this.context);\n    this.products = new Resource$Folders$Products(this.context);\n    this.versions = new Resource$Folders$Versions(this.context);\n  };\n\n  cloudprivatecatalog_v1beta1.Resource$Folders = Resource$Folders;\n\n  var Resource$Folders$Catalogs = /*#__PURE__*/function () {\n    function Resource$Folders$Catalogs(context) {\n      _classCallCheck(this, Resource$Folders$Catalogs);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Folders$Catalogs, [{\n      key: \"search\",\n      value: function search(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://cloudprivatecatalog.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1beta1/{+resource}/catalogs:search').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['resource'],\n          pathParams: ['resource'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Folders$Catalogs;\n  }();\n\n  cloudprivatecatalog_v1beta1.Resource$Folders$Catalogs = Resource$Folders$Catalogs;\n\n  var Resource$Folders$Products = /*#__PURE__*/function () {\n    function Resource$Folders$Products(context) {\n      _classCallCheck(this, Resource$Folders$Products);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Folders$Products, [{\n      key: \"search\",\n      value: function search(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://cloudprivatecatalog.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1beta1/{+resource}/products:search').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['resource'],\n          pathParams: ['resource'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Folders$Products;\n  }();\n\n  cloudprivatecatalog_v1beta1.Resource$Folders$Products = Resource$Folders$Products;\n\n  var Resource$Folders$Versions = /*#__PURE__*/function () {\n    function Resource$Folders$Versions(context) {\n      _classCallCheck(this, Resource$Folders$Versions);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Folders$Versions, [{\n      key: \"search\",\n      value: function search(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://cloudprivatecatalog.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1beta1/{+resource}/versions:search').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['resource'],\n          pathParams: ['resource'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Folders$Versions;\n  }();\n\n  cloudprivatecatalog_v1beta1.Resource$Folders$Versions = Resource$Folders$Versions;\n\n  var Resource$Organizations = function Resource$Organizations(context) {\n    _classCallCheck(this, Resource$Organizations);\n\n    this.context = context;\n    this.catalogs = new Resource$Organizations$Catalogs(this.context);\n    this.products = new Resource$Organizations$Products(this.context);\n    this.versions = new Resource$Organizations$Versions(this.context);\n  };\n\n  cloudprivatecatalog_v1beta1.Resource$Organizations = Resource$Organizations;\n\n  var Resource$Organizations$Catalogs = /*#__PURE__*/function () {\n    function Resource$Organizations$Catalogs(context) {\n      _classCallCheck(this, Resource$Organizations$Catalogs);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Organizations$Catalogs, [{\n      key: \"search\",\n      value: function search(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://cloudprivatecatalog.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1beta1/{+resource}/catalogs:search').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['resource'],\n          pathParams: ['resource'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Organizations$Catalogs;\n  }();\n\n  cloudprivatecatalog_v1beta1.Resource$Organizations$Catalogs = Resource$Organizations$Catalogs;\n\n  var Resource$Organizations$Products = /*#__PURE__*/function () {\n    function Resource$Organizations$Products(context) {\n      _classCallCheck(this, Resource$Organizations$Products);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Organizations$Products, [{\n      key: \"search\",\n      value: function search(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://cloudprivatecatalog.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1beta1/{+resource}/products:search').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['resource'],\n          pathParams: ['resource'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Organizations$Products;\n  }();\n\n  cloudprivatecatalog_v1beta1.Resource$Organizations$Products = Resource$Organizations$Products;\n\n  var Resource$Organizations$Versions = /*#__PURE__*/function () {\n    function Resource$Organizations$Versions(context) {\n      _classCallCheck(this, Resource$Organizations$Versions);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Organizations$Versions, [{\n      key: \"search\",\n      value: function search(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://cloudprivatecatalog.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1beta1/{+resource}/versions:search').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['resource'],\n          pathParams: ['resource'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Organizations$Versions;\n  }();\n\n  cloudprivatecatalog_v1beta1.Resource$Organizations$Versions = Resource$Organizations$Versions;\n\n  var Resource$Projects = function Resource$Projects(context) {\n    _classCallCheck(this, Resource$Projects);\n\n    this.context = context;\n    this.catalogs = new Resource$Projects$Catalogs(this.context);\n    this.products = new Resource$Projects$Products(this.context);\n    this.versions = new Resource$Projects$Versions(this.context);\n  };\n\n  cloudprivatecatalog_v1beta1.Resource$Projects = Resource$Projects;\n\n  var Resource$Projects$Catalogs = /*#__PURE__*/function () {\n    function Resource$Projects$Catalogs(context) {\n      _classCallCheck(this, Resource$Projects$Catalogs);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Projects$Catalogs, [{\n      key: \"search\",\n      value: function search(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://cloudprivatecatalog.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1beta1/{+resource}/catalogs:search').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['resource'],\n          pathParams: ['resource'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Projects$Catalogs;\n  }();\n\n  cloudprivatecatalog_v1beta1.Resource$Projects$Catalogs = Resource$Projects$Catalogs;\n\n  var Resource$Projects$Products = /*#__PURE__*/function () {\n    function Resource$Projects$Products(context) {\n      _classCallCheck(this, Resource$Projects$Products);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Projects$Products, [{\n      key: \"search\",\n      value: function search(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://cloudprivatecatalog.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1beta1/{+resource}/products:search').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['resource'],\n          pathParams: ['resource'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Projects$Products;\n  }();\n\n  cloudprivatecatalog_v1beta1.Resource$Projects$Products = Resource$Projects$Products;\n\n  var Resource$Projects$Versions = /*#__PURE__*/function () {\n    function Resource$Projects$Versions(context) {\n      _classCallCheck(this, Resource$Projects$Versions);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Projects$Versions, [{\n      key: \"search\",\n      value: function search(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://cloudprivatecatalog.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1beta1/{+resource}/versions:search').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['resource'],\n          pathParams: ['resource'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Projects$Versions;\n  }();\n\n  cloudprivatecatalog_v1beta1.Resource$Projects$Versions = Resource$Projects$Versions;\n})(cloudprivatecatalog_v1beta1 = exports.cloudprivatecatalog_v1beta1 || (exports.cloudprivatecatalog_v1beta1 = {}));","map":{"version":3,"sources":["/Users/amandapoetker-alles/Desktop/campaign-dashboard/node_modules/googleapis/build/src/apis/cloudprivatecatalog/v1beta1.js"],"names":["Object","defineProperty","exports","value","googleapis_common_1","require","cloudprivatecatalog_v1beta1","Cloudprivatecatalog","options","google","context","_options","folders","Resource$Folders","organizations","Resource$Organizations","projects","Resource$Projects","catalogs","Resource$Folders$Catalogs","products","Resource$Folders$Products","versions","Resource$Folders$Versions","paramsOrCallback","optionsOrCallback","callback","params","rootUrl","parameters","assign","url","replace","method","requiredParams","pathParams","createAPIRequest","Resource$Organizations$Catalogs","Resource$Organizations$Products","Resource$Organizations$Versions","Resource$Projects$Catalogs","Resource$Projects$Products","Resource$Projects$Versions"],"mappings":"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","sourcesContent":["\"use strict\";\n/**\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst googleapis_common_1 = require(\"googleapis-common\");\n// tslint:disable: no-any\n// tslint:disable: class-name\n// tslint:disable: variable-name\n// tslint:disable: jsdoc-format\n// tslint:disable: no-namespace\nvar cloudprivatecatalog_v1beta1;\n(function (cloudprivatecatalog_v1beta1) {\n    /**\n     * Cloud Private Catalog API\n     *\n     * Enable cloud users to discover enterprise catalogs and products in their\n     * organizations.\n     *\n     * @example\n     * const {google} = require('googleapis');\n     * const cloudprivatecatalog = google.cloudprivatecatalog('v1beta1');\n     *\n     * @namespace cloudprivatecatalog\n     * @type {Function}\n     * @version v1beta1\n     * @variation v1beta1\n     * @param {object=} options Options for Cloudprivatecatalog\n     */\n    class Cloudprivatecatalog {\n        constructor(options, google) {\n            this.context = { _options: options || {}, google };\n            this.folders = new Resource$Folders(this.context);\n            this.organizations = new Resource$Organizations(this.context);\n            this.projects = new Resource$Projects(this.context);\n        }\n    }\n    cloudprivatecatalog_v1beta1.Cloudprivatecatalog = Cloudprivatecatalog;\n    class Resource$Folders {\n        constructor(context) {\n            this.context = context;\n            this.catalogs = new Resource$Folders$Catalogs(this.context);\n            this.products = new Resource$Folders$Products(this.context);\n            this.versions = new Resource$Folders$Versions(this.context);\n        }\n    }\n    cloudprivatecatalog_v1beta1.Resource$Folders = Resource$Folders;\n    class Resource$Folders$Catalogs {\n        constructor(context) {\n            this.context = context;\n        }\n        search(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://cloudprivatecatalog.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1beta1/{+resource}/catalogs:search')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['resource'],\n                pathParams: ['resource'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    cloudprivatecatalog_v1beta1.Resource$Folders$Catalogs = Resource$Folders$Catalogs;\n    class Resource$Folders$Products {\n        constructor(context) {\n            this.context = context;\n        }\n        search(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://cloudprivatecatalog.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1beta1/{+resource}/products:search')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['resource'],\n                pathParams: ['resource'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    cloudprivatecatalog_v1beta1.Resource$Folders$Products = Resource$Folders$Products;\n    class Resource$Folders$Versions {\n        constructor(context) {\n            this.context = context;\n        }\n        search(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://cloudprivatecatalog.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1beta1/{+resource}/versions:search')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['resource'],\n                pathParams: ['resource'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    cloudprivatecatalog_v1beta1.Resource$Folders$Versions = Resource$Folders$Versions;\n    class Resource$Organizations {\n        constructor(context) {\n            this.context = context;\n            this.catalogs = new Resource$Organizations$Catalogs(this.context);\n            this.products = new Resource$Organizations$Products(this.context);\n            this.versions = new Resource$Organizations$Versions(this.context);\n        }\n    }\n    cloudprivatecatalog_v1beta1.Resource$Organizations = Resource$Organizations;\n    class Resource$Organizations$Catalogs {\n        constructor(context) {\n            this.context = context;\n        }\n        search(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://cloudprivatecatalog.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1beta1/{+resource}/catalogs:search')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['resource'],\n                pathParams: ['resource'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    cloudprivatecatalog_v1beta1.Resource$Organizations$Catalogs = Resource$Organizations$Catalogs;\n    class Resource$Organizations$Products {\n        constructor(context) {\n            this.context = context;\n        }\n        search(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://cloudprivatecatalog.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1beta1/{+resource}/products:search')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['resource'],\n                pathParams: ['resource'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    cloudprivatecatalog_v1beta1.Resource$Organizations$Products = Resource$Organizations$Products;\n    class Resource$Organizations$Versions {\n        constructor(context) {\n            this.context = context;\n        }\n        search(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://cloudprivatecatalog.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1beta1/{+resource}/versions:search')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['resource'],\n                pathParams: ['resource'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    cloudprivatecatalog_v1beta1.Resource$Organizations$Versions = Resource$Organizations$Versions;\n    class Resource$Projects {\n        constructor(context) {\n            this.context = context;\n            this.catalogs = new Resource$Projects$Catalogs(this.context);\n            this.products = new Resource$Projects$Products(this.context);\n            this.versions = new Resource$Projects$Versions(this.context);\n        }\n    }\n    cloudprivatecatalog_v1beta1.Resource$Projects = Resource$Projects;\n    class Resource$Projects$Catalogs {\n        constructor(context) {\n            this.context = context;\n        }\n        search(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://cloudprivatecatalog.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1beta1/{+resource}/catalogs:search')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['resource'],\n                pathParams: ['resource'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    cloudprivatecatalog_v1beta1.Resource$Projects$Catalogs = Resource$Projects$Catalogs;\n    class Resource$Projects$Products {\n        constructor(context) {\n            this.context = context;\n        }\n        search(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://cloudprivatecatalog.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1beta1/{+resource}/products:search')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['resource'],\n                pathParams: ['resource'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    cloudprivatecatalog_v1beta1.Resource$Projects$Products = Resource$Projects$Products;\n    class Resource$Projects$Versions {\n        constructor(context) {\n            this.context = context;\n        }\n        search(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://cloudprivatecatalog.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1beta1/{+resource}/versions:search')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['resource'],\n                pathParams: ['resource'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    cloudprivatecatalog_v1beta1.Resource$Projects$Versions = Resource$Projects$Versions;\n})(cloudprivatecatalog_v1beta1 = exports.cloudprivatecatalog_v1beta1 || (exports.cloudprivatecatalog_v1beta1 = {}));\n//# sourceMappingURL=v1beta1.js.map"]},"metadata":{},"sourceType":"script"}