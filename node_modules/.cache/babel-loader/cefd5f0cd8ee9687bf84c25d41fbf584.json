{"ast":null,"code":"\"use strict\"; // Copyright 2020 Google LLC\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//    http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nvar _createClass = require(\"/Users/amandapoetker-alles/Desktop/campaign-dashboard/Campaign-Planner/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _classCallCheck = require(\"/Users/amandapoetker-alles/Desktop/campaign-dashboard/Campaign-Planner/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.adsense_v1_4 = void 0;\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\n/* eslint-disable @typescript-eslint/class-name-casing */\n\n/* eslint-disable @typescript-eslint/no-unused-vars */\n\n/* eslint-disable @typescript-eslint/no-empty-interface */\n\n/* eslint-disable @typescript-eslint/no-namespace */\n\n/* eslint-disable no-irregular-whitespace */\n\nvar googleapis_common_1 = require(\"googleapis-common\");\n\nvar adsense_v1_4;\n\n(function (adsense_v1_4) {\n  /**\n   * AdSense Management API\n   *\n   * Accesses AdSense publishers&#39; inventory and generates performance reports.\n   *\n   * @example\n   * ```js\n   * const {google} = require('googleapis');\n   * const adsense = google.adsense('v1.4');\n   * ```\n   */\n  var Adsense = function Adsense(options, google) {\n    _classCallCheck(this, Adsense);\n\n    this.context = {\n      _options: options || {},\n      google\n    };\n    this.accounts = new Resource$Accounts(this.context);\n    this.adclients = new Resource$Adclients(this.context);\n    this.adunits = new Resource$Adunits(this.context);\n    this.alerts = new Resource$Alerts(this.context);\n    this.customchannels = new Resource$Customchannels(this.context);\n    this.metadata = new Resource$Metadata(this.context);\n    this.payments = new Resource$Payments(this.context);\n    this.reports = new Resource$Reports(this.context);\n    this.savedadstyles = new Resource$Savedadstyles(this.context);\n    this.urlchannels = new Resource$Urlchannels(this.context);\n  };\n\n  adsense_v1_4.Adsense = Adsense;\n\n  var Resource$Accounts = /*#__PURE__*/function () {\n    function Resource$Accounts(context) {\n      _classCallCheck(this, Resource$Accounts);\n\n      this.context = context;\n      this.adclients = new Resource$Accounts$Adclients(this.context);\n      this.adunits = new Resource$Accounts$Adunits(this.context);\n      this.alerts = new Resource$Accounts$Alerts(this.context);\n      this.customchannels = new Resource$Accounts$Customchannels(this.context);\n      this.payments = new Resource$Accounts$Payments(this.context);\n      this.reports = new Resource$Accounts$Reports(this.context);\n      this.savedadstyles = new Resource$Accounts$Savedadstyles(this.context);\n      this.urlchannels = new Resource$Accounts$Urlchannels(this.context);\n    }\n\n    _createClass(Resource$Accounts, [{\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/adsense/v1.4/accounts/{accountId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['accountId'],\n          pathParams: ['accountId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/adsense/v1.4/accounts').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: [],\n          pathParams: [],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Accounts;\n  }();\n\n  adsense_v1_4.Resource$Accounts = Resource$Accounts;\n\n  var Resource$Accounts$Adclients = /*#__PURE__*/function () {\n    function Resource$Accounts$Adclients(context) {\n      _classCallCheck(this, Resource$Accounts$Adclients);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Accounts$Adclients, [{\n      key: \"getAdCode\",\n      value: function getAdCode(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/adsense/v1.4/accounts/{accountId}/adclients/{adClientId}/adcode').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['accountId', 'adClientId'],\n          pathParams: ['accountId', 'adClientId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/adsense/v1.4/accounts/{accountId}/adclients').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['accountId'],\n          pathParams: ['accountId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Accounts$Adclients;\n  }();\n\n  adsense_v1_4.Resource$Accounts$Adclients = Resource$Accounts$Adclients;\n\n  var Resource$Accounts$Adunits = /*#__PURE__*/function () {\n    function Resource$Accounts$Adunits(context) {\n      _classCallCheck(this, Resource$Accounts$Adunits);\n\n      this.context = context;\n      this.customchannels = new Resource$Accounts$Adunits$Customchannels(this.context);\n    }\n\n    _createClass(Resource$Accounts$Adunits, [{\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/adsense/v1.4/accounts/{accountId}/adclients/{adClientId}/adunits/{adUnitId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['accountId', 'adClientId', 'adUnitId'],\n          pathParams: ['accountId', 'adClientId', 'adUnitId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"getAdCode\",\n      value: function getAdCode(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/adsense/v1.4/accounts/{accountId}/adclients/{adClientId}/adunits/{adUnitId}/adcode').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['accountId', 'adClientId', 'adUnitId'],\n          pathParams: ['accountId', 'adClientId', 'adUnitId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/adsense/v1.4/accounts/{accountId}/adclients/{adClientId}/adunits').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['accountId', 'adClientId'],\n          pathParams: ['accountId', 'adClientId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Accounts$Adunits;\n  }();\n\n  adsense_v1_4.Resource$Accounts$Adunits = Resource$Accounts$Adunits;\n\n  var Resource$Accounts$Adunits$Customchannels = /*#__PURE__*/function () {\n    function Resource$Accounts$Adunits$Customchannels(context) {\n      _classCallCheck(this, Resource$Accounts$Adunits$Customchannels);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Accounts$Adunits$Customchannels, [{\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/adsense/v1.4/accounts/{accountId}/adclients/{adClientId}/adunits/{adUnitId}/customchannels').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['accountId', 'adClientId', 'adUnitId'],\n          pathParams: ['accountId', 'adClientId', 'adUnitId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Accounts$Adunits$Customchannels;\n  }();\n\n  adsense_v1_4.Resource$Accounts$Adunits$Customchannels = Resource$Accounts$Adunits$Customchannels;\n\n  var Resource$Accounts$Alerts = /*#__PURE__*/function () {\n    function Resource$Accounts$Alerts(context) {\n      _classCallCheck(this, Resource$Accounts$Alerts);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Accounts$Alerts, [{\n      key: \"delete\",\n      value: function _delete(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/adsense/v1.4/accounts/{accountId}/alerts/{alertId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'DELETE'\n          }, options),\n          params,\n          requiredParams: ['accountId', 'alertId'],\n          pathParams: ['accountId', 'alertId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/adsense/v1.4/accounts/{accountId}/alerts').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['accountId'],\n          pathParams: ['accountId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Accounts$Alerts;\n  }();\n\n  adsense_v1_4.Resource$Accounts$Alerts = Resource$Accounts$Alerts;\n\n  var Resource$Accounts$Customchannels = /*#__PURE__*/function () {\n    function Resource$Accounts$Customchannels(context) {\n      _classCallCheck(this, Resource$Accounts$Customchannels);\n\n      this.context = context;\n      this.adunits = new Resource$Accounts$Customchannels$Adunits(this.context);\n    }\n\n    _createClass(Resource$Accounts$Customchannels, [{\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/adsense/v1.4/accounts/{accountId}/adclients/{adClientId}/customchannels/{customChannelId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['accountId', 'adClientId', 'customChannelId'],\n          pathParams: ['accountId', 'adClientId', 'customChannelId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/adsense/v1.4/accounts/{accountId}/adclients/{adClientId}/customchannels').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['accountId', 'adClientId'],\n          pathParams: ['accountId', 'adClientId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Accounts$Customchannels;\n  }();\n\n  adsense_v1_4.Resource$Accounts$Customchannels = Resource$Accounts$Customchannels;\n\n  var Resource$Accounts$Customchannels$Adunits = /*#__PURE__*/function () {\n    function Resource$Accounts$Customchannels$Adunits(context) {\n      _classCallCheck(this, Resource$Accounts$Customchannels$Adunits);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Accounts$Customchannels$Adunits, [{\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/adsense/v1.4/accounts/{accountId}/adclients/{adClientId}/customchannels/{customChannelId}/adunits').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['accountId', 'adClientId', 'customChannelId'],\n          pathParams: ['accountId', 'adClientId', 'customChannelId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Accounts$Customchannels$Adunits;\n  }();\n\n  adsense_v1_4.Resource$Accounts$Customchannels$Adunits = Resource$Accounts$Customchannels$Adunits;\n\n  var Resource$Accounts$Payments = /*#__PURE__*/function () {\n    function Resource$Accounts$Payments(context) {\n      _classCallCheck(this, Resource$Accounts$Payments);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Accounts$Payments, [{\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/adsense/v1.4/accounts/{accountId}/payments').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['accountId'],\n          pathParams: ['accountId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Accounts$Payments;\n  }();\n\n  adsense_v1_4.Resource$Accounts$Payments = Resource$Accounts$Payments;\n\n  var Resource$Accounts$Reports = /*#__PURE__*/function () {\n    function Resource$Accounts$Reports(context) {\n      _classCallCheck(this, Resource$Accounts$Reports);\n\n      this.context = context;\n      this.saved = new Resource$Accounts$Reports$Saved(this.context);\n    }\n\n    _createClass(Resource$Accounts$Reports, [{\n      key: \"generate\",\n      value: function generate(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/adsense/v1.4/accounts/{accountId}/reports').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['accountId', 'startDate', 'endDate'],\n          pathParams: ['accountId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Accounts$Reports;\n  }();\n\n  adsense_v1_4.Resource$Accounts$Reports = Resource$Accounts$Reports;\n\n  var Resource$Accounts$Reports$Saved = /*#__PURE__*/function () {\n    function Resource$Accounts$Reports$Saved(context) {\n      _classCallCheck(this, Resource$Accounts$Reports$Saved);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Accounts$Reports$Saved, [{\n      key: \"generate\",\n      value: function generate(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/adsense/v1.4/accounts/{accountId}/reports/{savedReportId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['accountId', 'savedReportId'],\n          pathParams: ['accountId', 'savedReportId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/adsense/v1.4/accounts/{accountId}/reports/saved').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['accountId'],\n          pathParams: ['accountId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Accounts$Reports$Saved;\n  }();\n\n  adsense_v1_4.Resource$Accounts$Reports$Saved = Resource$Accounts$Reports$Saved;\n\n  var Resource$Accounts$Savedadstyles = /*#__PURE__*/function () {\n    function Resource$Accounts$Savedadstyles(context) {\n      _classCallCheck(this, Resource$Accounts$Savedadstyles);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Accounts$Savedadstyles, [{\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/adsense/v1.4/accounts/{accountId}/savedadstyles/{savedAdStyleId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['accountId', 'savedAdStyleId'],\n          pathParams: ['accountId', 'savedAdStyleId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/adsense/v1.4/accounts/{accountId}/savedadstyles').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['accountId'],\n          pathParams: ['accountId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Accounts$Savedadstyles;\n  }();\n\n  adsense_v1_4.Resource$Accounts$Savedadstyles = Resource$Accounts$Savedadstyles;\n\n  var Resource$Accounts$Urlchannels = /*#__PURE__*/function () {\n    function Resource$Accounts$Urlchannels(context) {\n      _classCallCheck(this, Resource$Accounts$Urlchannels);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Accounts$Urlchannels, [{\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/adsense/v1.4/accounts/{accountId}/adclients/{adClientId}/urlchannels').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['accountId', 'adClientId'],\n          pathParams: ['accountId', 'adClientId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Accounts$Urlchannels;\n  }();\n\n  adsense_v1_4.Resource$Accounts$Urlchannels = Resource$Accounts$Urlchannels;\n\n  var Resource$Adclients = /*#__PURE__*/function () {\n    function Resource$Adclients(context) {\n      _classCallCheck(this, Resource$Adclients);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Adclients, [{\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/adsense/v1.4/adclients').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: [],\n          pathParams: [],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Adclients;\n  }();\n\n  adsense_v1_4.Resource$Adclients = Resource$Adclients;\n\n  var Resource$Adunits = /*#__PURE__*/function () {\n    function Resource$Adunits(context) {\n      _classCallCheck(this, Resource$Adunits);\n\n      this.context = context;\n      this.customchannels = new Resource$Adunits$Customchannels(this.context);\n    }\n\n    _createClass(Resource$Adunits, [{\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/adsense/v1.4/adclients/{adClientId}/adunits/{adUnitId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['adClientId', 'adUnitId'],\n          pathParams: ['adClientId', 'adUnitId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"getAdCode\",\n      value: function getAdCode(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/adsense/v1.4/adclients/{adClientId}/adunits/{adUnitId}/adcode').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['adClientId', 'adUnitId'],\n          pathParams: ['adClientId', 'adUnitId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/adsense/v1.4/adclients/{adClientId}/adunits').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['adClientId'],\n          pathParams: ['adClientId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Adunits;\n  }();\n\n  adsense_v1_4.Resource$Adunits = Resource$Adunits;\n\n  var Resource$Adunits$Customchannels = /*#__PURE__*/function () {\n    function Resource$Adunits$Customchannels(context) {\n      _classCallCheck(this, Resource$Adunits$Customchannels);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Adunits$Customchannels, [{\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/adsense/v1.4/adclients/{adClientId}/adunits/{adUnitId}/customchannels').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['adClientId', 'adUnitId'],\n          pathParams: ['adClientId', 'adUnitId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Adunits$Customchannels;\n  }();\n\n  adsense_v1_4.Resource$Adunits$Customchannels = Resource$Adunits$Customchannels;\n\n  var Resource$Alerts = /*#__PURE__*/function () {\n    function Resource$Alerts(context) {\n      _classCallCheck(this, Resource$Alerts);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Alerts, [{\n      key: \"delete\",\n      value: function _delete(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/adsense/v1.4/alerts/{alertId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'DELETE'\n          }, options),\n          params,\n          requiredParams: ['alertId'],\n          pathParams: ['alertId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/adsense/v1.4/alerts').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: [],\n          pathParams: [],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Alerts;\n  }();\n\n  adsense_v1_4.Resource$Alerts = Resource$Alerts;\n\n  var Resource$Customchannels = /*#__PURE__*/function () {\n    function Resource$Customchannels(context) {\n      _classCallCheck(this, Resource$Customchannels);\n\n      this.context = context;\n      this.adunits = new Resource$Customchannels$Adunits(this.context);\n    }\n\n    _createClass(Resource$Customchannels, [{\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/adsense/v1.4/adclients/{adClientId}/customchannels/{customChannelId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['adClientId', 'customChannelId'],\n          pathParams: ['adClientId', 'customChannelId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/adsense/v1.4/adclients/{adClientId}/customchannels').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['adClientId'],\n          pathParams: ['adClientId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Customchannels;\n  }();\n\n  adsense_v1_4.Resource$Customchannels = Resource$Customchannels;\n\n  var Resource$Customchannels$Adunits = /*#__PURE__*/function () {\n    function Resource$Customchannels$Adunits(context) {\n      _classCallCheck(this, Resource$Customchannels$Adunits);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Customchannels$Adunits, [{\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/adsense/v1.4/adclients/{adClientId}/customchannels/{customChannelId}/adunits').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['adClientId', 'customChannelId'],\n          pathParams: ['adClientId', 'customChannelId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Customchannels$Adunits;\n  }();\n\n  adsense_v1_4.Resource$Customchannels$Adunits = Resource$Customchannels$Adunits;\n\n  var Resource$Metadata = function Resource$Metadata(context) {\n    _classCallCheck(this, Resource$Metadata);\n\n    this.context = context;\n    this.dimensions = new Resource$Metadata$Dimensions(this.context);\n    this.metrics = new Resource$Metadata$Metrics(this.context);\n  };\n\n  adsense_v1_4.Resource$Metadata = Resource$Metadata;\n\n  var Resource$Metadata$Dimensions = /*#__PURE__*/function () {\n    function Resource$Metadata$Dimensions(context) {\n      _classCallCheck(this, Resource$Metadata$Dimensions);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Metadata$Dimensions, [{\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/adsense/v1.4/metadata/dimensions').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: [],\n          pathParams: [],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Metadata$Dimensions;\n  }();\n\n  adsense_v1_4.Resource$Metadata$Dimensions = Resource$Metadata$Dimensions;\n\n  var Resource$Metadata$Metrics = /*#__PURE__*/function () {\n    function Resource$Metadata$Metrics(context) {\n      _classCallCheck(this, Resource$Metadata$Metrics);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Metadata$Metrics, [{\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/adsense/v1.4/metadata/metrics').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: [],\n          pathParams: [],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Metadata$Metrics;\n  }();\n\n  adsense_v1_4.Resource$Metadata$Metrics = Resource$Metadata$Metrics;\n\n  var Resource$Payments = /*#__PURE__*/function () {\n    function Resource$Payments(context) {\n      _classCallCheck(this, Resource$Payments);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Payments, [{\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/adsense/v1.4/payments').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: [],\n          pathParams: [],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Payments;\n  }();\n\n  adsense_v1_4.Resource$Payments = Resource$Payments;\n\n  var Resource$Reports = /*#__PURE__*/function () {\n    function Resource$Reports(context) {\n      _classCallCheck(this, Resource$Reports);\n\n      this.context = context;\n      this.saved = new Resource$Reports$Saved(this.context);\n    }\n\n    _createClass(Resource$Reports, [{\n      key: \"generate\",\n      value: function generate(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/adsense/v1.4/reports').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['startDate', 'endDate'],\n          pathParams: [],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Reports;\n  }();\n\n  adsense_v1_4.Resource$Reports = Resource$Reports;\n\n  var Resource$Reports$Saved = /*#__PURE__*/function () {\n    function Resource$Reports$Saved(context) {\n      _classCallCheck(this, Resource$Reports$Saved);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Reports$Saved, [{\n      key: \"generate\",\n      value: function generate(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/adsense/v1.4/reports/{savedReportId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['savedReportId'],\n          pathParams: ['savedReportId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/adsense/v1.4/reports/saved').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: [],\n          pathParams: [],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Reports$Saved;\n  }();\n\n  adsense_v1_4.Resource$Reports$Saved = Resource$Reports$Saved;\n\n  var Resource$Savedadstyles = /*#__PURE__*/function () {\n    function Resource$Savedadstyles(context) {\n      _classCallCheck(this, Resource$Savedadstyles);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Savedadstyles, [{\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/adsense/v1.4/savedadstyles/{savedAdStyleId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['savedAdStyleId'],\n          pathParams: ['savedAdStyleId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/adsense/v1.4/savedadstyles').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: [],\n          pathParams: [],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Savedadstyles;\n  }();\n\n  adsense_v1_4.Resource$Savedadstyles = Resource$Savedadstyles;\n\n  var Resource$Urlchannels = /*#__PURE__*/function () {\n    function Resource$Urlchannels(context) {\n      _classCallCheck(this, Resource$Urlchannels);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Urlchannels, [{\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/adsense/v1.4/adclients/{adClientId}/urlchannels').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['adClientId'],\n          pathParams: ['adClientId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Urlchannels;\n  }();\n\n  adsense_v1_4.Resource$Urlchannels = Resource$Urlchannels;\n})(adsense_v1_4 = exports.adsense_v1_4 || (exports.adsense_v1_4 = {}));","map":{"version":3,"sources":["/Users/amandapoetker-alles/Desktop/campaign-dashboard/Campaign-Planner/node_modules/googleapis/build/src/apis/adsense/v1.4.js"],"names":["Object","defineProperty","exports","value","adsense_v1_4","googleapis_common_1","require","Adsense","options","google","context","_options","accounts","Resource$Accounts","adclients","Resource$Adclients","adunits","Resource$Adunits","alerts","Resource$Alerts","customchannels","Resource$Customchannels","metadata","Resource$Metadata","payments","Resource$Payments","reports","Resource$Reports","savedadstyles","Resource$Savedadstyles","urlchannels","Resource$Urlchannels","Resource$Accounts$Adclients","Resource$Accounts$Adunits","Resource$Accounts$Alerts","Resource$Accounts$Customchannels","Resource$Accounts$Payments","Resource$Accounts$Reports","Resource$Accounts$Savedadstyles","Resource$Accounts$Urlchannels","paramsOrCallback","optionsOrCallback","callback","params","rootUrl","parameters","assign","url","replace","method","requiredParams","pathParams","createAPIRequest","Resource$Accounts$Adunits$Customchannels","Resource$Accounts$Customchannels$Adunits","saved","Resource$Accounts$Reports$Saved","Resource$Adunits$Customchannels","Resource$Customchannels$Adunits","dimensions","Resource$Metadata$Dimensions","metrics","Resource$Metadata$Metrics","Resource$Reports$Saved"],"mappings":"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","sourcesContent":["\"use strict\";\n// Copyright 2020 Google LLC\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//    http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.adsense_v1_4 = void 0;\n/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/class-name-casing */\n/* eslint-disable @typescript-eslint/no-unused-vars */\n/* eslint-disable @typescript-eslint/no-empty-interface */\n/* eslint-disable @typescript-eslint/no-namespace */\n/* eslint-disable no-irregular-whitespace */\nconst googleapis_common_1 = require(\"googleapis-common\");\nvar adsense_v1_4;\n(function (adsense_v1_4) {\n    /**\n     * AdSense Management API\n     *\n     * Accesses AdSense publishers&#39; inventory and generates performance reports.\n     *\n     * @example\n     * ```js\n     * const {google} = require('googleapis');\n     * const adsense = google.adsense('v1.4');\n     * ```\n     */\n    class Adsense {\n        constructor(options, google) {\n            this.context = {\n                _options: options || {},\n                google,\n            };\n            this.accounts = new Resource$Accounts(this.context);\n            this.adclients = new Resource$Adclients(this.context);\n            this.adunits = new Resource$Adunits(this.context);\n            this.alerts = new Resource$Alerts(this.context);\n            this.customchannels = new Resource$Customchannels(this.context);\n            this.metadata = new Resource$Metadata(this.context);\n            this.payments = new Resource$Payments(this.context);\n            this.reports = new Resource$Reports(this.context);\n            this.savedadstyles = new Resource$Savedadstyles(this.context);\n            this.urlchannels = new Resource$Urlchannels(this.context);\n        }\n    }\n    adsense_v1_4.Adsense = Adsense;\n    class Resource$Accounts {\n        constructor(context) {\n            this.context = context;\n            this.adclients = new Resource$Accounts$Adclients(this.context);\n            this.adunits = new Resource$Accounts$Adunits(this.context);\n            this.alerts = new Resource$Accounts$Alerts(this.context);\n            this.customchannels = new Resource$Accounts$Customchannels(this.context);\n            this.payments = new Resource$Accounts$Payments(this.context);\n            this.reports = new Resource$Accounts$Reports(this.context);\n            this.savedadstyles = new Resource$Accounts$Savedadstyles(this.context);\n            this.urlchannels = new Resource$Accounts$Urlchannels(this.context);\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/adsense/v1.4/accounts/{accountId}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['accountId'],\n                pathParams: ['accountId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/adsense/v1.4/accounts').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: [],\n                pathParams: [],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    adsense_v1_4.Resource$Accounts = Resource$Accounts;\n    class Resource$Accounts$Adclients {\n        constructor(context) {\n            this.context = context;\n        }\n        getAdCode(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/adsense/v1.4/accounts/{accountId}/adclients/{adClientId}/adcode').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['accountId', 'adClientId'],\n                pathParams: ['accountId', 'adClientId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/adsense/v1.4/accounts/{accountId}/adclients').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['accountId'],\n                pathParams: ['accountId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    adsense_v1_4.Resource$Accounts$Adclients = Resource$Accounts$Adclients;\n    class Resource$Accounts$Adunits {\n        constructor(context) {\n            this.context = context;\n            this.customchannels = new Resource$Accounts$Adunits$Customchannels(this.context);\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/adsense/v1.4/accounts/{accountId}/adclients/{adClientId}/adunits/{adUnitId}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['accountId', 'adClientId', 'adUnitId'],\n                pathParams: ['accountId', 'adClientId', 'adUnitId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        getAdCode(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/adsense/v1.4/accounts/{accountId}/adclients/{adClientId}/adunits/{adUnitId}/adcode').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['accountId', 'adClientId', 'adUnitId'],\n                pathParams: ['accountId', 'adClientId', 'adUnitId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/adsense/v1.4/accounts/{accountId}/adclients/{adClientId}/adunits').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['accountId', 'adClientId'],\n                pathParams: ['accountId', 'adClientId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    adsense_v1_4.Resource$Accounts$Adunits = Resource$Accounts$Adunits;\n    class Resource$Accounts$Adunits$Customchannels {\n        constructor(context) {\n            this.context = context;\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/adsense/v1.4/accounts/{accountId}/adclients/{adClientId}/adunits/{adUnitId}/customchannels').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['accountId', 'adClientId', 'adUnitId'],\n                pathParams: ['accountId', 'adClientId', 'adUnitId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    adsense_v1_4.Resource$Accounts$Adunits$Customchannels = Resource$Accounts$Adunits$Customchannels;\n    class Resource$Accounts$Alerts {\n        constructor(context) {\n            this.context = context;\n        }\n        delete(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/adsense/v1.4/accounts/{accountId}/alerts/{alertId}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'DELETE',\n                }, options),\n                params,\n                requiredParams: ['accountId', 'alertId'],\n                pathParams: ['accountId', 'alertId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/adsense/v1.4/accounts/{accountId}/alerts').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['accountId'],\n                pathParams: ['accountId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    adsense_v1_4.Resource$Accounts$Alerts = Resource$Accounts$Alerts;\n    class Resource$Accounts$Customchannels {\n        constructor(context) {\n            this.context = context;\n            this.adunits = new Resource$Accounts$Customchannels$Adunits(this.context);\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/adsense/v1.4/accounts/{accountId}/adclients/{adClientId}/customchannels/{customChannelId}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['accountId', 'adClientId', 'customChannelId'],\n                pathParams: ['accountId', 'adClientId', 'customChannelId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/adsense/v1.4/accounts/{accountId}/adclients/{adClientId}/customchannels').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['accountId', 'adClientId'],\n                pathParams: ['accountId', 'adClientId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    adsense_v1_4.Resource$Accounts$Customchannels = Resource$Accounts$Customchannels;\n    class Resource$Accounts$Customchannels$Adunits {\n        constructor(context) {\n            this.context = context;\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/adsense/v1.4/accounts/{accountId}/adclients/{adClientId}/customchannels/{customChannelId}/adunits').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['accountId', 'adClientId', 'customChannelId'],\n                pathParams: ['accountId', 'adClientId', 'customChannelId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    adsense_v1_4.Resource$Accounts$Customchannels$Adunits = Resource$Accounts$Customchannels$Adunits;\n    class Resource$Accounts$Payments {\n        constructor(context) {\n            this.context = context;\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/adsense/v1.4/accounts/{accountId}/payments').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['accountId'],\n                pathParams: ['accountId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    adsense_v1_4.Resource$Accounts$Payments = Resource$Accounts$Payments;\n    class Resource$Accounts$Reports {\n        constructor(context) {\n            this.context = context;\n            this.saved = new Resource$Accounts$Reports$Saved(this.context);\n        }\n        generate(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/adsense/v1.4/accounts/{accountId}/reports').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['accountId', 'startDate', 'endDate'],\n                pathParams: ['accountId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    adsense_v1_4.Resource$Accounts$Reports = Resource$Accounts$Reports;\n    class Resource$Accounts$Reports$Saved {\n        constructor(context) {\n            this.context = context;\n        }\n        generate(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/adsense/v1.4/accounts/{accountId}/reports/{savedReportId}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['accountId', 'savedReportId'],\n                pathParams: ['accountId', 'savedReportId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/adsense/v1.4/accounts/{accountId}/reports/saved').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['accountId'],\n                pathParams: ['accountId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    adsense_v1_4.Resource$Accounts$Reports$Saved = Resource$Accounts$Reports$Saved;\n    class Resource$Accounts$Savedadstyles {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/adsense/v1.4/accounts/{accountId}/savedadstyles/{savedAdStyleId}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['accountId', 'savedAdStyleId'],\n                pathParams: ['accountId', 'savedAdStyleId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/adsense/v1.4/accounts/{accountId}/savedadstyles').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['accountId'],\n                pathParams: ['accountId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    adsense_v1_4.Resource$Accounts$Savedadstyles = Resource$Accounts$Savedadstyles;\n    class Resource$Accounts$Urlchannels {\n        constructor(context) {\n            this.context = context;\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/adsense/v1.4/accounts/{accountId}/adclients/{adClientId}/urlchannels').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['accountId', 'adClientId'],\n                pathParams: ['accountId', 'adClientId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    adsense_v1_4.Resource$Accounts$Urlchannels = Resource$Accounts$Urlchannels;\n    class Resource$Adclients {\n        constructor(context) {\n            this.context = context;\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/adsense/v1.4/adclients').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: [],\n                pathParams: [],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    adsense_v1_4.Resource$Adclients = Resource$Adclients;\n    class Resource$Adunits {\n        constructor(context) {\n            this.context = context;\n            this.customchannels = new Resource$Adunits$Customchannels(this.context);\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/adsense/v1.4/adclients/{adClientId}/adunits/{adUnitId}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['adClientId', 'adUnitId'],\n                pathParams: ['adClientId', 'adUnitId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        getAdCode(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/adsense/v1.4/adclients/{adClientId}/adunits/{adUnitId}/adcode').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['adClientId', 'adUnitId'],\n                pathParams: ['adClientId', 'adUnitId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/adsense/v1.4/adclients/{adClientId}/adunits').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['adClientId'],\n                pathParams: ['adClientId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    adsense_v1_4.Resource$Adunits = Resource$Adunits;\n    class Resource$Adunits$Customchannels {\n        constructor(context) {\n            this.context = context;\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/adsense/v1.4/adclients/{adClientId}/adunits/{adUnitId}/customchannels').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['adClientId', 'adUnitId'],\n                pathParams: ['adClientId', 'adUnitId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    adsense_v1_4.Resource$Adunits$Customchannels = Resource$Adunits$Customchannels;\n    class Resource$Alerts {\n        constructor(context) {\n            this.context = context;\n        }\n        delete(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/adsense/v1.4/alerts/{alertId}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'DELETE',\n                }, options),\n                params,\n                requiredParams: ['alertId'],\n                pathParams: ['alertId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/adsense/v1.4/alerts').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: [],\n                pathParams: [],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    adsense_v1_4.Resource$Alerts = Resource$Alerts;\n    class Resource$Customchannels {\n        constructor(context) {\n            this.context = context;\n            this.adunits = new Resource$Customchannels$Adunits(this.context);\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/adsense/v1.4/adclients/{adClientId}/customchannels/{customChannelId}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['adClientId', 'customChannelId'],\n                pathParams: ['adClientId', 'customChannelId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/adsense/v1.4/adclients/{adClientId}/customchannels').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['adClientId'],\n                pathParams: ['adClientId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    adsense_v1_4.Resource$Customchannels = Resource$Customchannels;\n    class Resource$Customchannels$Adunits {\n        constructor(context) {\n            this.context = context;\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/adsense/v1.4/adclients/{adClientId}/customchannels/{customChannelId}/adunits').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['adClientId', 'customChannelId'],\n                pathParams: ['adClientId', 'customChannelId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    adsense_v1_4.Resource$Customchannels$Adunits = Resource$Customchannels$Adunits;\n    class Resource$Metadata {\n        constructor(context) {\n            this.context = context;\n            this.dimensions = new Resource$Metadata$Dimensions(this.context);\n            this.metrics = new Resource$Metadata$Metrics(this.context);\n        }\n    }\n    adsense_v1_4.Resource$Metadata = Resource$Metadata;\n    class Resource$Metadata$Dimensions {\n        constructor(context) {\n            this.context = context;\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/adsense/v1.4/metadata/dimensions').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: [],\n                pathParams: [],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    adsense_v1_4.Resource$Metadata$Dimensions = Resource$Metadata$Dimensions;\n    class Resource$Metadata$Metrics {\n        constructor(context) {\n            this.context = context;\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/adsense/v1.4/metadata/metrics').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: [],\n                pathParams: [],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    adsense_v1_4.Resource$Metadata$Metrics = Resource$Metadata$Metrics;\n    class Resource$Payments {\n        constructor(context) {\n            this.context = context;\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/adsense/v1.4/payments').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: [],\n                pathParams: [],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    adsense_v1_4.Resource$Payments = Resource$Payments;\n    class Resource$Reports {\n        constructor(context) {\n            this.context = context;\n            this.saved = new Resource$Reports$Saved(this.context);\n        }\n        generate(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/adsense/v1.4/reports').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['startDate', 'endDate'],\n                pathParams: [],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    adsense_v1_4.Resource$Reports = Resource$Reports;\n    class Resource$Reports$Saved {\n        constructor(context) {\n            this.context = context;\n        }\n        generate(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/adsense/v1.4/reports/{savedReportId}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['savedReportId'],\n                pathParams: ['savedReportId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/adsense/v1.4/reports/saved').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: [],\n                pathParams: [],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    adsense_v1_4.Resource$Reports$Saved = Resource$Reports$Saved;\n    class Resource$Savedadstyles {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/adsense/v1.4/savedadstyles/{savedAdStyleId}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['savedAdStyleId'],\n                pathParams: ['savedAdStyleId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/adsense/v1.4/savedadstyles').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: [],\n                pathParams: [],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    adsense_v1_4.Resource$Savedadstyles = Resource$Savedadstyles;\n    class Resource$Urlchannels {\n        constructor(context) {\n            this.context = context;\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/adsense/v1.4/adclients/{adClientId}/urlchannels').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['adClientId'],\n                pathParams: ['adClientId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    adsense_v1_4.Resource$Urlchannels = Resource$Urlchannels;\n})(adsense_v1_4 = exports.adsense_v1_4 || (exports.adsense_v1_4 = {}));\n//# sourceMappingURL=v1.4.js.map"]},"metadata":{},"sourceType":"script"}