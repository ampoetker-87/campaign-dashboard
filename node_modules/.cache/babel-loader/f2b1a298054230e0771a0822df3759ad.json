{"ast":null,"code":"\"use strict\"; // Copyright 2020 Google LLC\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//    http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nvar _createClass = require(\"/Users/amandapoetker-alles/Desktop/campaign-dashboard/Campaign-Planner/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _classCallCheck = require(\"/Users/amandapoetker-alles/Desktop/campaign-dashboard/Campaign-Planner/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.deploymentmanager_alpha = void 0;\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\n/* eslint-disable @typescript-eslint/class-name-casing */\n\n/* eslint-disable @typescript-eslint/no-unused-vars */\n\n/* eslint-disable @typescript-eslint/no-empty-interface */\n\n/* eslint-disable @typescript-eslint/no-namespace */\n\n/* eslint-disable no-irregular-whitespace */\n\nvar googleapis_common_1 = require(\"googleapis-common\");\n\nvar deploymentmanager_alpha;\n\n(function (deploymentmanager_alpha) {\n  /**\n   * Cloud Deployment Manager V2 API\n   *\n   * The Google Cloud Deployment Manager v2 API provides services for configuring, deploying, and viewing Google Cloud services and APIs via templates which specify deployments of Cloud resources.\n   *\n   * @example\n   * ```js\n   * const {google} = require('googleapis');\n   * const deploymentmanager = google.deploymentmanager('alpha');\n   * ```\n   */\n  var Deploymentmanager = function Deploymentmanager(options, google) {\n    _classCallCheck(this, Deploymentmanager);\n\n    this.context = {\n      _options: options || {},\n      google\n    };\n    this.compositeTypes = new Resource$Compositetypes(this.context);\n    this.deployments = new Resource$Deployments(this.context);\n    this.manifests = new Resource$Manifests(this.context);\n    this.operations = new Resource$Operations(this.context);\n    this.resources = new Resource$Resources(this.context);\n    this.typeProviders = new Resource$Typeproviders(this.context);\n    this.types = new Resource$Types(this.context);\n  };\n\n  deploymentmanager_alpha.Deploymentmanager = Deploymentmanager;\n\n  var Resource$Compositetypes = /*#__PURE__*/function () {\n    function Resource$Compositetypes(context) {\n      _classCallCheck(this, Resource$Compositetypes);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Compositetypes, [{\n      key: \"delete\",\n      value: function _delete(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://deploymentmanager.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/deploymentmanager/alpha/projects/{project}/global/compositeTypes/{compositeType}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'DELETE'\n          }, options),\n          params,\n          requiredParams: ['project', 'compositeType'],\n          pathParams: ['compositeType', 'project'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://deploymentmanager.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/deploymentmanager/alpha/projects/{project}/global/compositeTypes/{compositeType}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['project', 'compositeType'],\n          pathParams: ['compositeType', 'project'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"insert\",\n      value: function insert(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://deploymentmanager.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/deploymentmanager/alpha/projects/{project}/global/compositeTypes').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['project'],\n          pathParams: ['project'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://deploymentmanager.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/deploymentmanager/alpha/projects/{project}/global/compositeTypes').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['project'],\n          pathParams: ['project'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"patch\",\n      value: function patch(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://deploymentmanager.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/deploymentmanager/alpha/projects/{project}/global/compositeTypes/{compositeType}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PATCH'\n          }, options),\n          params,\n          requiredParams: ['project', 'compositeType'],\n          pathParams: ['compositeType', 'project'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"update\",\n      value: function update(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://deploymentmanager.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/deploymentmanager/alpha/projects/{project}/global/compositeTypes/{compositeType}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PUT'\n          }, options),\n          params,\n          requiredParams: ['project', 'compositeType'],\n          pathParams: ['compositeType', 'project'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Compositetypes;\n  }();\n\n  deploymentmanager_alpha.Resource$Compositetypes = Resource$Compositetypes;\n\n  var Resource$Deployments = /*#__PURE__*/function () {\n    function Resource$Deployments(context) {\n      _classCallCheck(this, Resource$Deployments);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Deployments, [{\n      key: \"cancelPreview\",\n      value: function cancelPreview(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://deploymentmanager.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/deploymentmanager/alpha/projects/{project}/global/deployments/{deployment}/cancelPreview').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['project', 'deployment'],\n          pathParams: ['deployment', 'project'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"delete\",\n      value: function _delete(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://deploymentmanager.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/deploymentmanager/alpha/projects/{project}/global/deployments/{deployment}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'DELETE'\n          }, options),\n          params,\n          requiredParams: ['project', 'deployment'],\n          pathParams: ['deployment', 'project'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://deploymentmanager.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/deploymentmanager/alpha/projects/{project}/global/deployments/{deployment}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['project', 'deployment'],\n          pathParams: ['deployment', 'project'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"getIamPolicy\",\n      value: function getIamPolicy(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://deploymentmanager.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/deploymentmanager/alpha/projects/{project}/global/deployments/{resource}/getIamPolicy').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['project', 'resource'],\n          pathParams: ['project', 'resource'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"insert\",\n      value: function insert(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://deploymentmanager.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/deploymentmanager/alpha/projects/{project}/global/deployments').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['project'],\n          pathParams: ['project'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://deploymentmanager.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/deploymentmanager/alpha/projects/{project}/global/deployments').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['project'],\n          pathParams: ['project'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"patch\",\n      value: function patch(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://deploymentmanager.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/deploymentmanager/alpha/projects/{project}/global/deployments/{deployment}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PATCH'\n          }, options),\n          params,\n          requiredParams: ['project', 'deployment'],\n          pathParams: ['deployment', 'project'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"setIamPolicy\",\n      value: function setIamPolicy(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://deploymentmanager.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/deploymentmanager/alpha/projects/{project}/global/deployments/{resource}/setIamPolicy').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['project', 'resource'],\n          pathParams: ['project', 'resource'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"stop\",\n      value: function stop(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://deploymentmanager.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/deploymentmanager/alpha/projects/{project}/global/deployments/{deployment}/stop').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['project', 'deployment'],\n          pathParams: ['deployment', 'project'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"testIamPermissions\",\n      value: function testIamPermissions(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://deploymentmanager.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/deploymentmanager/alpha/projects/{project}/global/deployments/{resource}/testIamPermissions').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['project', 'resource'],\n          pathParams: ['project', 'resource'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"update\",\n      value: function update(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://deploymentmanager.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/deploymentmanager/alpha/projects/{project}/global/deployments/{deployment}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PUT'\n          }, options),\n          params,\n          requiredParams: ['project', 'deployment'],\n          pathParams: ['deployment', 'project'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Deployments;\n  }();\n\n  deploymentmanager_alpha.Resource$Deployments = Resource$Deployments;\n\n  var Resource$Manifests = /*#__PURE__*/function () {\n    function Resource$Manifests(context) {\n      _classCallCheck(this, Resource$Manifests);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Manifests, [{\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://deploymentmanager.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/deploymentmanager/alpha/projects/{project}/global/deployments/{deployment}/manifests/{manifest}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['project', 'deployment', 'manifest'],\n          pathParams: ['deployment', 'manifest', 'project'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://deploymentmanager.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/deploymentmanager/alpha/projects/{project}/global/deployments/{deployment}/manifests').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['project', 'deployment'],\n          pathParams: ['deployment', 'project'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Manifests;\n  }();\n\n  deploymentmanager_alpha.Resource$Manifests = Resource$Manifests;\n\n  var Resource$Operations = /*#__PURE__*/function () {\n    function Resource$Operations(context) {\n      _classCallCheck(this, Resource$Operations);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Operations, [{\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://deploymentmanager.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/deploymentmanager/alpha/projects/{project}/global/operations/{operation}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['project', 'operation'],\n          pathParams: ['operation', 'project'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://deploymentmanager.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/deploymentmanager/alpha/projects/{project}/global/operations').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['project'],\n          pathParams: ['project'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Operations;\n  }();\n\n  deploymentmanager_alpha.Resource$Operations = Resource$Operations;\n\n  var Resource$Resources = /*#__PURE__*/function () {\n    function Resource$Resources(context) {\n      _classCallCheck(this, Resource$Resources);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Resources, [{\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://deploymentmanager.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/deploymentmanager/alpha/projects/{project}/global/deployments/{deployment}/resources/{resource}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['project', 'deployment', 'resource'],\n          pathParams: ['deployment', 'project', 'resource'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://deploymentmanager.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/deploymentmanager/alpha/projects/{project}/global/deployments/{deployment}/resources').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['project', 'deployment'],\n          pathParams: ['deployment', 'project'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Resources;\n  }();\n\n  deploymentmanager_alpha.Resource$Resources = Resource$Resources;\n\n  var Resource$Typeproviders = /*#__PURE__*/function () {\n    function Resource$Typeproviders(context) {\n      _classCallCheck(this, Resource$Typeproviders);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Typeproviders, [{\n      key: \"delete\",\n      value: function _delete(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://deploymentmanager.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/deploymentmanager/alpha/projects/{project}/global/typeProviders/{typeProvider}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'DELETE'\n          }, options),\n          params,\n          requiredParams: ['project', 'typeProvider'],\n          pathParams: ['project', 'typeProvider'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://deploymentmanager.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/deploymentmanager/alpha/projects/{project}/global/typeProviders/{typeProvider}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['project', 'typeProvider'],\n          pathParams: ['project', 'typeProvider'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"getType\",\n      value: function getType(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://deploymentmanager.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/deploymentmanager/alpha/projects/{project}/global/typeProviders/{typeProvider}/types/{type}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['project', 'typeProvider', 'type'],\n          pathParams: ['project', 'type', 'typeProvider'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"insert\",\n      value: function insert(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://deploymentmanager.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/deploymentmanager/alpha/projects/{project}/global/typeProviders').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['project'],\n          pathParams: ['project'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://deploymentmanager.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/deploymentmanager/alpha/projects/{project}/global/typeProviders').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['project'],\n          pathParams: ['project'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"listTypes\",\n      value: function listTypes(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://deploymentmanager.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/deploymentmanager/alpha/projects/{project}/global/typeProviders/{typeProvider}/types').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['project', 'typeProvider'],\n          pathParams: ['project', 'typeProvider'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"patch\",\n      value: function patch(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://deploymentmanager.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/deploymentmanager/alpha/projects/{project}/global/typeProviders/{typeProvider}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PATCH'\n          }, options),\n          params,\n          requiredParams: ['project', 'typeProvider'],\n          pathParams: ['project', 'typeProvider'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"update\",\n      value: function update(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://deploymentmanager.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/deploymentmanager/alpha/projects/{project}/global/typeProviders/{typeProvider}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PUT'\n          }, options),\n          params,\n          requiredParams: ['project', 'typeProvider'],\n          pathParams: ['project', 'typeProvider'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Typeproviders;\n  }();\n\n  deploymentmanager_alpha.Resource$Typeproviders = Resource$Typeproviders;\n\n  var Resource$Types = /*#__PURE__*/function () {\n    function Resource$Types(context) {\n      _classCallCheck(this, Resource$Types);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Types, [{\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://deploymentmanager.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/deploymentmanager/alpha/projects/{project}/global/types/{type}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['project', 'type'],\n          pathParams: ['project', 'type'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://deploymentmanager.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/deploymentmanager/alpha/projects/{project}/global/types').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['project'],\n          pathParams: ['project'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Types;\n  }();\n\n  deploymentmanager_alpha.Resource$Types = Resource$Types;\n})(deploymentmanager_alpha = exports.deploymentmanager_alpha || (exports.deploymentmanager_alpha = {}));","map":{"version":3,"sources":["/Users/amandapoetker-alles/Desktop/campaign-dashboard/Campaign-Planner/node_modules/googleapis/build/src/apis/deploymentmanager/alpha.js"],"names":["Object","defineProperty","exports","value","deploymentmanager_alpha","googleapis_common_1","require","Deploymentmanager","options","google","context","_options","compositeTypes","Resource$Compositetypes","deployments","Resource$Deployments","manifests","Resource$Manifests","operations","Resource$Operations","resources","Resource$Resources","typeProviders","Resource$Typeproviders","types","Resource$Types","paramsOrCallback","optionsOrCallback","callback","params","rootUrl","parameters","assign","url","replace","method","requiredParams","pathParams","createAPIRequest"],"mappings":"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","sourcesContent":["\"use strict\";\n// Copyright 2020 Google LLC\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//    http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.deploymentmanager_alpha = void 0;\n/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/class-name-casing */\n/* eslint-disable @typescript-eslint/no-unused-vars */\n/* eslint-disable @typescript-eslint/no-empty-interface */\n/* eslint-disable @typescript-eslint/no-namespace */\n/* eslint-disable no-irregular-whitespace */\nconst googleapis_common_1 = require(\"googleapis-common\");\nvar deploymentmanager_alpha;\n(function (deploymentmanager_alpha) {\n    /**\n     * Cloud Deployment Manager V2 API\n     *\n     * The Google Cloud Deployment Manager v2 API provides services for configuring, deploying, and viewing Google Cloud services and APIs via templates which specify deployments of Cloud resources.\n     *\n     * @example\n     * ```js\n     * const {google} = require('googleapis');\n     * const deploymentmanager = google.deploymentmanager('alpha');\n     * ```\n     */\n    class Deploymentmanager {\n        constructor(options, google) {\n            this.context = {\n                _options: options || {},\n                google,\n            };\n            this.compositeTypes = new Resource$Compositetypes(this.context);\n            this.deployments = new Resource$Deployments(this.context);\n            this.manifests = new Resource$Manifests(this.context);\n            this.operations = new Resource$Operations(this.context);\n            this.resources = new Resource$Resources(this.context);\n            this.typeProviders = new Resource$Typeproviders(this.context);\n            this.types = new Resource$Types(this.context);\n        }\n    }\n    deploymentmanager_alpha.Deploymentmanager = Deploymentmanager;\n    class Resource$Compositetypes {\n        constructor(context) {\n            this.context = context;\n        }\n        delete(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://deploymentmanager.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/deploymentmanager/alpha/projects/{project}/global/compositeTypes/{compositeType}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'DELETE',\n                }, options),\n                params,\n                requiredParams: ['project', 'compositeType'],\n                pathParams: ['compositeType', 'project'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://deploymentmanager.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/deploymentmanager/alpha/projects/{project}/global/compositeTypes/{compositeType}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['project', 'compositeType'],\n                pathParams: ['compositeType', 'project'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        insert(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://deploymentmanager.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/deploymentmanager/alpha/projects/{project}/global/compositeTypes').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['project'],\n                pathParams: ['project'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://deploymentmanager.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/deploymentmanager/alpha/projects/{project}/global/compositeTypes').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['project'],\n                pathParams: ['project'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        patch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://deploymentmanager.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/deploymentmanager/alpha/projects/{project}/global/compositeTypes/{compositeType}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PATCH',\n                }, options),\n                params,\n                requiredParams: ['project', 'compositeType'],\n                pathParams: ['compositeType', 'project'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        update(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://deploymentmanager.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/deploymentmanager/alpha/projects/{project}/global/compositeTypes/{compositeType}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PUT',\n                }, options),\n                params,\n                requiredParams: ['project', 'compositeType'],\n                pathParams: ['compositeType', 'project'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    deploymentmanager_alpha.Resource$Compositetypes = Resource$Compositetypes;\n    class Resource$Deployments {\n        constructor(context) {\n            this.context = context;\n        }\n        cancelPreview(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://deploymentmanager.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/deploymentmanager/alpha/projects/{project}/global/deployments/{deployment}/cancelPreview').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['project', 'deployment'],\n                pathParams: ['deployment', 'project'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        delete(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://deploymentmanager.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/deploymentmanager/alpha/projects/{project}/global/deployments/{deployment}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'DELETE',\n                }, options),\n                params,\n                requiredParams: ['project', 'deployment'],\n                pathParams: ['deployment', 'project'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://deploymentmanager.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/deploymentmanager/alpha/projects/{project}/global/deployments/{deployment}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['project', 'deployment'],\n                pathParams: ['deployment', 'project'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        getIamPolicy(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://deploymentmanager.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/deploymentmanager/alpha/projects/{project}/global/deployments/{resource}/getIamPolicy').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['project', 'resource'],\n                pathParams: ['project', 'resource'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        insert(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://deploymentmanager.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/deploymentmanager/alpha/projects/{project}/global/deployments').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['project'],\n                pathParams: ['project'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://deploymentmanager.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/deploymentmanager/alpha/projects/{project}/global/deployments').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['project'],\n                pathParams: ['project'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        patch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://deploymentmanager.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/deploymentmanager/alpha/projects/{project}/global/deployments/{deployment}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PATCH',\n                }, options),\n                params,\n                requiredParams: ['project', 'deployment'],\n                pathParams: ['deployment', 'project'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        setIamPolicy(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://deploymentmanager.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/deploymentmanager/alpha/projects/{project}/global/deployments/{resource}/setIamPolicy').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['project', 'resource'],\n                pathParams: ['project', 'resource'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        stop(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://deploymentmanager.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/deploymentmanager/alpha/projects/{project}/global/deployments/{deployment}/stop').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['project', 'deployment'],\n                pathParams: ['deployment', 'project'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        testIamPermissions(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://deploymentmanager.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/deploymentmanager/alpha/projects/{project}/global/deployments/{resource}/testIamPermissions').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['project', 'resource'],\n                pathParams: ['project', 'resource'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        update(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://deploymentmanager.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/deploymentmanager/alpha/projects/{project}/global/deployments/{deployment}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PUT',\n                }, options),\n                params,\n                requiredParams: ['project', 'deployment'],\n                pathParams: ['deployment', 'project'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    deploymentmanager_alpha.Resource$Deployments = Resource$Deployments;\n    class Resource$Manifests {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://deploymentmanager.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/deploymentmanager/alpha/projects/{project}/global/deployments/{deployment}/manifests/{manifest}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['project', 'deployment', 'manifest'],\n                pathParams: ['deployment', 'manifest', 'project'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://deploymentmanager.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/deploymentmanager/alpha/projects/{project}/global/deployments/{deployment}/manifests').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['project', 'deployment'],\n                pathParams: ['deployment', 'project'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    deploymentmanager_alpha.Resource$Manifests = Resource$Manifests;\n    class Resource$Operations {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://deploymentmanager.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/deploymentmanager/alpha/projects/{project}/global/operations/{operation}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['project', 'operation'],\n                pathParams: ['operation', 'project'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://deploymentmanager.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/deploymentmanager/alpha/projects/{project}/global/operations').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['project'],\n                pathParams: ['project'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    deploymentmanager_alpha.Resource$Operations = Resource$Operations;\n    class Resource$Resources {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://deploymentmanager.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/deploymentmanager/alpha/projects/{project}/global/deployments/{deployment}/resources/{resource}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['project', 'deployment', 'resource'],\n                pathParams: ['deployment', 'project', 'resource'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://deploymentmanager.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/deploymentmanager/alpha/projects/{project}/global/deployments/{deployment}/resources').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['project', 'deployment'],\n                pathParams: ['deployment', 'project'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    deploymentmanager_alpha.Resource$Resources = Resource$Resources;\n    class Resource$Typeproviders {\n        constructor(context) {\n            this.context = context;\n        }\n        delete(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://deploymentmanager.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/deploymentmanager/alpha/projects/{project}/global/typeProviders/{typeProvider}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'DELETE',\n                }, options),\n                params,\n                requiredParams: ['project', 'typeProvider'],\n                pathParams: ['project', 'typeProvider'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://deploymentmanager.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/deploymentmanager/alpha/projects/{project}/global/typeProviders/{typeProvider}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['project', 'typeProvider'],\n                pathParams: ['project', 'typeProvider'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        getType(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://deploymentmanager.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/deploymentmanager/alpha/projects/{project}/global/typeProviders/{typeProvider}/types/{type}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['project', 'typeProvider', 'type'],\n                pathParams: ['project', 'type', 'typeProvider'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        insert(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://deploymentmanager.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/deploymentmanager/alpha/projects/{project}/global/typeProviders').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['project'],\n                pathParams: ['project'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://deploymentmanager.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/deploymentmanager/alpha/projects/{project}/global/typeProviders').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['project'],\n                pathParams: ['project'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        listTypes(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://deploymentmanager.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/deploymentmanager/alpha/projects/{project}/global/typeProviders/{typeProvider}/types').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['project', 'typeProvider'],\n                pathParams: ['project', 'typeProvider'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        patch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://deploymentmanager.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/deploymentmanager/alpha/projects/{project}/global/typeProviders/{typeProvider}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PATCH',\n                }, options),\n                params,\n                requiredParams: ['project', 'typeProvider'],\n                pathParams: ['project', 'typeProvider'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        update(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://deploymentmanager.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/deploymentmanager/alpha/projects/{project}/global/typeProviders/{typeProvider}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PUT',\n                }, options),\n                params,\n                requiredParams: ['project', 'typeProvider'],\n                pathParams: ['project', 'typeProvider'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    deploymentmanager_alpha.Resource$Typeproviders = Resource$Typeproviders;\n    class Resource$Types {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://deploymentmanager.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/deploymentmanager/alpha/projects/{project}/global/types/{type}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['project', 'type'],\n                pathParams: ['project', 'type'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://deploymentmanager.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/deploymentmanager/alpha/projects/{project}/global/types').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['project'],\n                pathParams: ['project'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    deploymentmanager_alpha.Resource$Types = Resource$Types;\n})(deploymentmanager_alpha = exports.deploymentmanager_alpha || (exports.deploymentmanager_alpha = {}));\n//# sourceMappingURL=alpha.js.map"]},"metadata":{},"sourceType":"script"}