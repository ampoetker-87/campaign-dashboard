{"ast":null,"code":"\"use strict\"; // Copyright 2020 Google LLC\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//    http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nvar _createClass = require(\"/Users/amandapoetker-alles/Desktop/campaign-dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _classCallCheck = require(\"/Users/amandapoetker-alles/Desktop/campaign-dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.displayvideo_v1 = void 0;\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\n/* eslint-disable @typescript-eslint/class-name-casing */\n\n/* eslint-disable @typescript-eslint/no-unused-vars */\n\n/* eslint-disable @typescript-eslint/no-empty-interface */\n\n/* eslint-disable @typescript-eslint/no-namespace */\n\n/* eslint-disable no-irregular-whitespace */\n\nvar googleapis_common_1 = require(\"googleapis-common\");\n\nvar displayvideo_v1;\n\n(function (displayvideo_v1) {\n  /**\n   * Display &amp; Video 360 API\n   *\n   * Display &amp; Video 360 API allows users to manage and create campaigns and reports.\n   *\n   * @example\n   * ```js\n   * const {google} = require('googleapis');\n   * const displayvideo = google.displayvideo('v1');\n   * ```\n   */\n  var Displayvideo = function Displayvideo(options, google) {\n    _classCallCheck(this, Displayvideo);\n\n    this.context = {\n      _options: options || {},\n      google\n    };\n    this.advertisers = new Resource$Advertisers(this.context);\n    this.combinedAudiences = new Resource$Combinedaudiences(this.context);\n    this.customBiddingAlgorithms = new Resource$Custombiddingalgorithms(this.context);\n    this.customLists = new Resource$Customlists(this.context);\n    this.firstAndThirdPartyAudiences = new Resource$Firstandthirdpartyaudiences(this.context);\n    this.floodlightGroups = new Resource$Floodlightgroups(this.context);\n    this.googleAudiences = new Resource$Googleaudiences(this.context);\n    this.inventorySourceGroups = new Resource$Inventorysourcegroups(this.context);\n    this.inventorySources = new Resource$Inventorysources(this.context);\n    this.media = new Resource$Media(this.context);\n    this.partners = new Resource$Partners(this.context);\n    this.sdfdownloadtasks = new Resource$Sdfdownloadtasks(this.context);\n    this.targetingTypes = new Resource$Targetingtypes(this.context);\n    this.users = new Resource$Users(this.context);\n  };\n\n  displayvideo_v1.Displayvideo = Displayvideo;\n\n  var Resource$Advertisers = /*#__PURE__*/function () {\n    function Resource$Advertisers(context) {\n      _classCallCheck(this, Resource$Advertisers);\n\n      this.context = context;\n      this.assets = new Resource$Advertisers$Assets(this.context);\n      this.campaigns = new Resource$Advertisers$Campaigns(this.context);\n      this.channels = new Resource$Advertisers$Channels(this.context);\n      this.creatives = new Resource$Advertisers$Creatives(this.context);\n      this.insertionOrders = new Resource$Advertisers$Insertionorders(this.context);\n      this.lineItems = new Resource$Advertisers$Lineitems(this.context);\n      this.locationLists = new Resource$Advertisers$Locationlists(this.context);\n      this.manualTriggers = new Resource$Advertisers$Manualtriggers(this.context);\n      this.negativeKeywordLists = new Resource$Advertisers$Negativekeywordlists(this.context);\n      this.targetingTypes = new Resource$Advertisers$Targetingtypes(this.context);\n    }\n\n    _createClass(Resource$Advertisers, [{\n      key: \"audit\",\n      value: function audit(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://displayvideo.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/advertisers/{+advertiserId}:audit').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['advertiserId'],\n          pathParams: ['advertiserId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"bulkEditAdvertiserAssignedTargetingOptions\",\n      value: function bulkEditAdvertiserAssignedTargetingOptions(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://displayvideo.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/advertisers/{+advertiserId}:bulkEditAdvertiserAssignedTargetingOptions').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['advertiserId'],\n          pathParams: ['advertiserId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"bulkListAdvertiserAssignedTargetingOptions\",\n      value: function bulkListAdvertiserAssignedTargetingOptions(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://displayvideo.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/advertisers/{+advertiserId}:bulkListAdvertiserAssignedTargetingOptions').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['advertiserId'],\n          pathParams: ['advertiserId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"create\",\n      value: function create(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://displayvideo.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/advertisers').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: [],\n          pathParams: [],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"delete\",\n      value: function _delete(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://displayvideo.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/advertisers/{+advertiserId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'DELETE'\n          }, options),\n          params,\n          requiredParams: ['advertiserId'],\n          pathParams: ['advertiserId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://displayvideo.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/advertisers/{+advertiserId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['advertiserId'],\n          pathParams: ['advertiserId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://displayvideo.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/advertisers').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: [],\n          pathParams: [],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"patch\",\n      value: function patch(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://displayvideo.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/advertisers/{+advertiserId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PATCH'\n          }, options),\n          params,\n          requiredParams: ['advertiserId'],\n          pathParams: ['advertiserId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Advertisers;\n  }();\n\n  displayvideo_v1.Resource$Advertisers = Resource$Advertisers;\n\n  var Resource$Advertisers$Assets = /*#__PURE__*/function () {\n    function Resource$Advertisers$Assets(context) {\n      _classCallCheck(this, Resource$Advertisers$Assets);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Advertisers$Assets, [{\n      key: \"upload\",\n      value: function upload(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://displayvideo.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/advertisers/{+advertiserId}/assets').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          mediaUrl: (rootUrl + '/upload/v1/advertisers/{+advertiserId}/assets').replace(/([^:]\\/)\\/+/g, '$1'),\n          requiredParams: ['advertiserId'],\n          pathParams: ['advertiserId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Advertisers$Assets;\n  }();\n\n  displayvideo_v1.Resource$Advertisers$Assets = Resource$Advertisers$Assets;\n\n  var Resource$Advertisers$Campaigns = /*#__PURE__*/function () {\n    function Resource$Advertisers$Campaigns(context) {\n      _classCallCheck(this, Resource$Advertisers$Campaigns);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Advertisers$Campaigns, [{\n      key: \"create\",\n      value: function create(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://displayvideo.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/advertisers/{+advertiserId}/campaigns').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['advertiserId'],\n          pathParams: ['advertiserId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"delete\",\n      value: function _delete(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://displayvideo.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/advertisers/{+advertiserId}/campaigns/{+campaignId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'DELETE'\n          }, options),\n          params,\n          requiredParams: ['advertiserId', 'campaignId'],\n          pathParams: ['advertiserId', 'campaignId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://displayvideo.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/advertisers/{+advertiserId}/campaigns/{+campaignId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['advertiserId', 'campaignId'],\n          pathParams: ['advertiserId', 'campaignId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://displayvideo.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/advertisers/{+advertiserId}/campaigns').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['advertiserId'],\n          pathParams: ['advertiserId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"patch\",\n      value: function patch(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://displayvideo.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/advertisers/{+advertiserId}/campaigns/{+campaignId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PATCH'\n          }, options),\n          params,\n          requiredParams: ['advertiserId', 'campaignId'],\n          pathParams: ['advertiserId', 'campaignId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Advertisers$Campaigns;\n  }();\n\n  displayvideo_v1.Resource$Advertisers$Campaigns = Resource$Advertisers$Campaigns;\n\n  var Resource$Advertisers$Channels = /*#__PURE__*/function () {\n    function Resource$Advertisers$Channels(context) {\n      _classCallCheck(this, Resource$Advertisers$Channels);\n\n      this.context = context;\n      this.sites = new Resource$Advertisers$Channels$Sites(this.context);\n    }\n\n    _createClass(Resource$Advertisers$Channels, [{\n      key: \"create\",\n      value: function create(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://displayvideo.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/advertisers/{+advertiserId}/channels').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['advertiserId'],\n          pathParams: ['advertiserId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://displayvideo.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/advertisers/{+advertiserId}/channels/{+channelId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['advertiserId', 'channelId'],\n          pathParams: ['advertiserId', 'channelId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://displayvideo.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/advertisers/{+advertiserId}/channels').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['advertiserId'],\n          pathParams: ['advertiserId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"patch\",\n      value: function patch(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://displayvideo.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/advertisers/{+advertiserId}/channels/{channelId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PATCH'\n          }, options),\n          params,\n          requiredParams: ['advertiserId', 'channelId'],\n          pathParams: ['advertiserId', 'channelId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Advertisers$Channels;\n  }();\n\n  displayvideo_v1.Resource$Advertisers$Channels = Resource$Advertisers$Channels;\n\n  var Resource$Advertisers$Channels$Sites = /*#__PURE__*/function () {\n    function Resource$Advertisers$Channels$Sites(context) {\n      _classCallCheck(this, Resource$Advertisers$Channels$Sites);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Advertisers$Channels$Sites, [{\n      key: \"bulkEdit\",\n      value: function bulkEdit(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://displayvideo.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/advertisers/{advertiserId}/channels/{+channelId}/sites:bulkEdit').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['advertiserId', 'channelId'],\n          pathParams: ['advertiserId', 'channelId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"create\",\n      value: function create(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://displayvideo.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/advertisers/{advertiserId}/channels/{+channelId}/sites').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['advertiserId', 'channelId'],\n          pathParams: ['advertiserId', 'channelId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"delete\",\n      value: function _delete(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://displayvideo.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/advertisers/{advertiserId}/channels/{+channelId}/sites/{+urlOrAppId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'DELETE'\n          }, options),\n          params,\n          requiredParams: ['advertiserId', 'channelId', 'urlOrAppId'],\n          pathParams: ['advertiserId', 'channelId', 'urlOrAppId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://displayvideo.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/advertisers/{+advertiserId}/channels/{+channelId}/sites').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['advertiserId', 'channelId'],\n          pathParams: ['advertiserId', 'channelId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Advertisers$Channels$Sites;\n  }();\n\n  displayvideo_v1.Resource$Advertisers$Channels$Sites = Resource$Advertisers$Channels$Sites;\n\n  var Resource$Advertisers$Creatives = /*#__PURE__*/function () {\n    function Resource$Advertisers$Creatives(context) {\n      _classCallCheck(this, Resource$Advertisers$Creatives);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Advertisers$Creatives, [{\n      key: \"create\",\n      value: function create(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://displayvideo.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/advertisers/{+advertiserId}/creatives').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['advertiserId'],\n          pathParams: ['advertiserId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"delete\",\n      value: function _delete(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://displayvideo.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/advertisers/{+advertiserId}/creatives/{+creativeId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'DELETE'\n          }, options),\n          params,\n          requiredParams: ['advertiserId', 'creativeId'],\n          pathParams: ['advertiserId', 'creativeId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://displayvideo.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/advertisers/{+advertiserId}/creatives/{+creativeId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['advertiserId', 'creativeId'],\n          pathParams: ['advertiserId', 'creativeId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://displayvideo.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/advertisers/{+advertiserId}/creatives').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['advertiserId'],\n          pathParams: ['advertiserId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"patch\",\n      value: function patch(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://displayvideo.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/advertisers/{+advertiserId}/creatives/{+creativeId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PATCH'\n          }, options),\n          params,\n          requiredParams: ['advertiserId', 'creativeId'],\n          pathParams: ['advertiserId', 'creativeId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Advertisers$Creatives;\n  }();\n\n  displayvideo_v1.Resource$Advertisers$Creatives = Resource$Advertisers$Creatives;\n\n  var Resource$Advertisers$Insertionorders = /*#__PURE__*/function () {\n    function Resource$Advertisers$Insertionorders(context) {\n      _classCallCheck(this, Resource$Advertisers$Insertionorders);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Advertisers$Insertionorders, [{\n      key: \"create\",\n      value: function create(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://displayvideo.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/advertisers/{+advertiserId}/insertionOrders').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['advertiserId'],\n          pathParams: ['advertiserId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"delete\",\n      value: function _delete(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://displayvideo.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/advertisers/{+advertiserId}/insertionOrders/{+insertionOrderId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'DELETE'\n          }, options),\n          params,\n          requiredParams: ['advertiserId', 'insertionOrderId'],\n          pathParams: ['advertiserId', 'insertionOrderId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://displayvideo.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/advertisers/{+advertiserId}/insertionOrders/{+insertionOrderId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['advertiserId', 'insertionOrderId'],\n          pathParams: ['advertiserId', 'insertionOrderId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://displayvideo.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/advertisers/{+advertiserId}/insertionOrders').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['advertiserId'],\n          pathParams: ['advertiserId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"patch\",\n      value: function patch(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://displayvideo.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/advertisers/{+advertiserId}/insertionOrders/{+insertionOrderId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PATCH'\n          }, options),\n          params,\n          requiredParams: ['advertiserId', 'insertionOrderId'],\n          pathParams: ['advertiserId', 'insertionOrderId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Advertisers$Insertionorders;\n  }();\n\n  displayvideo_v1.Resource$Advertisers$Insertionorders = Resource$Advertisers$Insertionorders;\n\n  var Resource$Advertisers$Lineitems = /*#__PURE__*/function () {\n    function Resource$Advertisers$Lineitems(context) {\n      _classCallCheck(this, Resource$Advertisers$Lineitems);\n\n      this.context = context;\n      this.targetingTypes = new Resource$Advertisers$Lineitems$Targetingtypes(this.context);\n    }\n\n    _createClass(Resource$Advertisers$Lineitems, [{\n      key: \"bulkEditLineItemAssignedTargetingOptions\",\n      value: function bulkEditLineItemAssignedTargetingOptions(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://displayvideo.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/advertisers/{+advertiserId}/lineItems/{+lineItemId}:bulkEditLineItemAssignedTargetingOptions').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['advertiserId', 'lineItemId'],\n          pathParams: ['advertiserId', 'lineItemId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"bulkListLineItemAssignedTargetingOptions\",\n      value: function bulkListLineItemAssignedTargetingOptions(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://displayvideo.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/advertisers/{+advertiserId}/lineItems/{+lineItemId}:bulkListLineItemAssignedTargetingOptions').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['advertiserId', 'lineItemId'],\n          pathParams: ['advertiserId', 'lineItemId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"create\",\n      value: function create(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://displayvideo.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/advertisers/{+advertiserId}/lineItems').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['advertiserId'],\n          pathParams: ['advertiserId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"delete\",\n      value: function _delete(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://displayvideo.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/advertisers/{+advertiserId}/lineItems/{+lineItemId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'DELETE'\n          }, options),\n          params,\n          requiredParams: ['advertiserId', 'lineItemId'],\n          pathParams: ['advertiserId', 'lineItemId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://displayvideo.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/advertisers/{+advertiserId}/lineItems/{+lineItemId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['advertiserId', 'lineItemId'],\n          pathParams: ['advertiserId', 'lineItemId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://displayvideo.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/advertisers/{+advertiserId}/lineItems').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['advertiserId'],\n          pathParams: ['advertiserId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"patch\",\n      value: function patch(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://displayvideo.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/advertisers/{+advertiserId}/lineItems/{+lineItemId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PATCH'\n          }, options),\n          params,\n          requiredParams: ['advertiserId', 'lineItemId'],\n          pathParams: ['advertiserId', 'lineItemId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Advertisers$Lineitems;\n  }();\n\n  displayvideo_v1.Resource$Advertisers$Lineitems = Resource$Advertisers$Lineitems;\n\n  var Resource$Advertisers$Lineitems$Targetingtypes = function Resource$Advertisers$Lineitems$Targetingtypes(context) {\n    _classCallCheck(this, Resource$Advertisers$Lineitems$Targetingtypes);\n\n    this.context = context;\n    this.assignedTargetingOptions = new Resource$Advertisers$Lineitems$Targetingtypes$Assignedtargetingoptions(this.context);\n  };\n\n  displayvideo_v1.Resource$Advertisers$Lineitems$Targetingtypes = Resource$Advertisers$Lineitems$Targetingtypes;\n\n  var Resource$Advertisers$Lineitems$Targetingtypes$Assignedtargetingoptions = /*#__PURE__*/function () {\n    function Resource$Advertisers$Lineitems$Targetingtypes$Assignedtargetingoptions(context) {\n      _classCallCheck(this, Resource$Advertisers$Lineitems$Targetingtypes$Assignedtargetingoptions);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Advertisers$Lineitems$Targetingtypes$Assignedtargetingoptions, [{\n      key: \"create\",\n      value: function create(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://displayvideo.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/advertisers/{+advertiserId}/lineItems/{+lineItemId}/targetingTypes/{+targetingType}/assignedTargetingOptions').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['advertiserId', 'lineItemId', 'targetingType'],\n          pathParams: ['advertiserId', 'lineItemId', 'targetingType'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"delete\",\n      value: function _delete(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://displayvideo.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/advertisers/{+advertiserId}/lineItems/{+lineItemId}/targetingTypes/{+targetingType}/assignedTargetingOptions/{+assignedTargetingOptionId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'DELETE'\n          }, options),\n          params,\n          requiredParams: ['advertiserId', 'lineItemId', 'targetingType', 'assignedTargetingOptionId'],\n          pathParams: ['advertiserId', 'assignedTargetingOptionId', 'lineItemId', 'targetingType'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://displayvideo.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/advertisers/{+advertiserId}/lineItems/{+lineItemId}/targetingTypes/{+targetingType}/assignedTargetingOptions/{+assignedTargetingOptionId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['advertiserId', 'lineItemId', 'targetingType', 'assignedTargetingOptionId'],\n          pathParams: ['advertiserId', 'assignedTargetingOptionId', 'lineItemId', 'targetingType'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://displayvideo.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/advertisers/{+advertiserId}/lineItems/{+lineItemId}/targetingTypes/{+targetingType}/assignedTargetingOptions').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['advertiserId', 'lineItemId', 'targetingType'],\n          pathParams: ['advertiserId', 'lineItemId', 'targetingType'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Advertisers$Lineitems$Targetingtypes$Assignedtargetingoptions;\n  }();\n\n  displayvideo_v1.Resource$Advertisers$Lineitems$Targetingtypes$Assignedtargetingoptions = Resource$Advertisers$Lineitems$Targetingtypes$Assignedtargetingoptions;\n\n  var Resource$Advertisers$Locationlists = /*#__PURE__*/function () {\n    function Resource$Advertisers$Locationlists(context) {\n      _classCallCheck(this, Resource$Advertisers$Locationlists);\n\n      this.context = context;\n      this.assignedLocations = new Resource$Advertisers$Locationlists$Assignedlocations(this.context);\n    }\n\n    _createClass(Resource$Advertisers$Locationlists, [{\n      key: \"create\",\n      value: function create(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://displayvideo.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/advertisers/{+advertiserId}/locationLists').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['advertiserId'],\n          pathParams: ['advertiserId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://displayvideo.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/advertisers/{+advertiserId}/locationLists/{+locationListId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['advertiserId', 'locationListId'],\n          pathParams: ['advertiserId', 'locationListId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://displayvideo.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/advertisers/{+advertiserId}/locationLists').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['advertiserId'],\n          pathParams: ['advertiserId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"patch\",\n      value: function patch(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://displayvideo.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/advertisers/{+advertiserId}/locationLists/{locationListId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PATCH'\n          }, options),\n          params,\n          requiredParams: ['advertiserId', 'locationListId'],\n          pathParams: ['advertiserId', 'locationListId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Advertisers$Locationlists;\n  }();\n\n  displayvideo_v1.Resource$Advertisers$Locationlists = Resource$Advertisers$Locationlists;\n\n  var Resource$Advertisers$Locationlists$Assignedlocations = /*#__PURE__*/function () {\n    function Resource$Advertisers$Locationlists$Assignedlocations(context) {\n      _classCallCheck(this, Resource$Advertisers$Locationlists$Assignedlocations);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Advertisers$Locationlists$Assignedlocations, [{\n      key: \"bulkEdit\",\n      value: function bulkEdit(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://displayvideo.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/advertisers/{advertiserId}/locationLists/{+locationListId}/assignedLocations:bulkEdit').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['advertiserId', 'locationListId'],\n          pathParams: ['advertiserId', 'locationListId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"create\",\n      value: function create(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://displayvideo.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/advertisers/{advertiserId}/locationLists/{locationListId}/assignedLocations').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['advertiserId', 'locationListId'],\n          pathParams: ['advertiserId', 'locationListId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"delete\",\n      value: function _delete(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://displayvideo.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/advertisers/{advertiserId}/locationLists/{locationListId}/assignedLocations/{+assignedLocationId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'DELETE'\n          }, options),\n          params,\n          requiredParams: ['advertiserId', 'locationListId', 'assignedLocationId'],\n          pathParams: ['advertiserId', 'assignedLocationId', 'locationListId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://displayvideo.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/advertisers/{advertiserId}/locationLists/{locationListId}/assignedLocations').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['advertiserId', 'locationListId'],\n          pathParams: ['advertiserId', 'locationListId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Advertisers$Locationlists$Assignedlocations;\n  }();\n\n  displayvideo_v1.Resource$Advertisers$Locationlists$Assignedlocations = Resource$Advertisers$Locationlists$Assignedlocations;\n\n  var Resource$Advertisers$Manualtriggers = /*#__PURE__*/function () {\n    function Resource$Advertisers$Manualtriggers(context) {\n      _classCallCheck(this, Resource$Advertisers$Manualtriggers);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Advertisers$Manualtriggers, [{\n      key: \"activate\",\n      value: function activate(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://displayvideo.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/advertisers/{+advertiserId}/manualTriggers/{+triggerId}:activate').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['advertiserId', 'triggerId'],\n          pathParams: ['advertiserId', 'triggerId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"create\",\n      value: function create(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://displayvideo.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/advertisers/{+advertiserId}/manualTriggers').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['advertiserId'],\n          pathParams: ['advertiserId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"deactivate\",\n      value: function deactivate(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://displayvideo.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/advertisers/{+advertiserId}/manualTriggers/{+triggerId}:deactivate').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['advertiserId', 'triggerId'],\n          pathParams: ['advertiserId', 'triggerId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://displayvideo.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/advertisers/{+advertiserId}/manualTriggers/{+triggerId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['advertiserId', 'triggerId'],\n          pathParams: ['advertiserId', 'triggerId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://displayvideo.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/advertisers/{+advertiserId}/manualTriggers').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['advertiserId'],\n          pathParams: ['advertiserId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"patch\",\n      value: function patch(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://displayvideo.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/advertisers/{+advertiserId}/manualTriggers/{+triggerId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PATCH'\n          }, options),\n          params,\n          requiredParams: ['advertiserId', 'triggerId'],\n          pathParams: ['advertiserId', 'triggerId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Advertisers$Manualtriggers;\n  }();\n\n  displayvideo_v1.Resource$Advertisers$Manualtriggers = Resource$Advertisers$Manualtriggers;\n\n  var Resource$Advertisers$Negativekeywordlists = /*#__PURE__*/function () {\n    function Resource$Advertisers$Negativekeywordlists(context) {\n      _classCallCheck(this, Resource$Advertisers$Negativekeywordlists);\n\n      this.context = context;\n      this.negativeKeywords = new Resource$Advertisers$Negativekeywordlists$Negativekeywords(this.context);\n    }\n\n    _createClass(Resource$Advertisers$Negativekeywordlists, [{\n      key: \"create\",\n      value: function create(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://displayvideo.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/advertisers/{+advertiserId}/negativeKeywordLists').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['advertiserId'],\n          pathParams: ['advertiserId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"delete\",\n      value: function _delete(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://displayvideo.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/advertisers/{+advertiserId}/negativeKeywordLists/{+negativeKeywordListId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'DELETE'\n          }, options),\n          params,\n          requiredParams: ['advertiserId', 'negativeKeywordListId'],\n          pathParams: ['advertiserId', 'negativeKeywordListId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://displayvideo.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/advertisers/{+advertiserId}/negativeKeywordLists/{+negativeKeywordListId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['advertiserId', 'negativeKeywordListId'],\n          pathParams: ['advertiserId', 'negativeKeywordListId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://displayvideo.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/advertisers/{+advertiserId}/negativeKeywordLists').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['advertiserId'],\n          pathParams: ['advertiserId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"patch\",\n      value: function patch(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://displayvideo.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/advertisers/{+advertiserId}/negativeKeywordLists/{negativeKeywordListId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PATCH'\n          }, options),\n          params,\n          requiredParams: ['advertiserId', 'negativeKeywordListId'],\n          pathParams: ['advertiserId', 'negativeKeywordListId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Advertisers$Negativekeywordlists;\n  }();\n\n  displayvideo_v1.Resource$Advertisers$Negativekeywordlists = Resource$Advertisers$Negativekeywordlists;\n\n  var Resource$Advertisers$Negativekeywordlists$Negativekeywords = /*#__PURE__*/function () {\n    function Resource$Advertisers$Negativekeywordlists$Negativekeywords(context) {\n      _classCallCheck(this, Resource$Advertisers$Negativekeywordlists$Negativekeywords);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Advertisers$Negativekeywordlists$Negativekeywords, [{\n      key: \"bulkEdit\",\n      value: function bulkEdit(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://displayvideo.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/advertisers/{advertiserId}/negativeKeywordLists/{+negativeKeywordListId}/negativeKeywords:bulkEdit').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['advertiserId', 'negativeKeywordListId'],\n          pathParams: ['advertiserId', 'negativeKeywordListId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"create\",\n      value: function create(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://displayvideo.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/advertisers/{advertiserId}/negativeKeywordLists/{+negativeKeywordListId}/negativeKeywords').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['advertiserId', 'negativeKeywordListId'],\n          pathParams: ['advertiserId', 'negativeKeywordListId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"delete\",\n      value: function _delete(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://displayvideo.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/advertisers/{advertiserId}/negativeKeywordLists/{+negativeKeywordListId}/negativeKeywords/{+keywordValue}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'DELETE'\n          }, options),\n          params,\n          requiredParams: ['advertiserId', 'negativeKeywordListId', 'keywordValue'],\n          pathParams: ['advertiserId', 'keywordValue', 'negativeKeywordListId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://displayvideo.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/advertisers/{+advertiserId}/negativeKeywordLists/{+negativeKeywordListId}/negativeKeywords').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['advertiserId', 'negativeKeywordListId'],\n          pathParams: ['advertiserId', 'negativeKeywordListId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Advertisers$Negativekeywordlists$Negativekeywords;\n  }();\n\n  displayvideo_v1.Resource$Advertisers$Negativekeywordlists$Negativekeywords = Resource$Advertisers$Negativekeywordlists$Negativekeywords;\n\n  var Resource$Advertisers$Targetingtypes = function Resource$Advertisers$Targetingtypes(context) {\n    _classCallCheck(this, Resource$Advertisers$Targetingtypes);\n\n    this.context = context;\n    this.assignedTargetingOptions = new Resource$Advertisers$Targetingtypes$Assignedtargetingoptions(this.context);\n  };\n\n  displayvideo_v1.Resource$Advertisers$Targetingtypes = Resource$Advertisers$Targetingtypes;\n\n  var Resource$Advertisers$Targetingtypes$Assignedtargetingoptions = /*#__PURE__*/function () {\n    function Resource$Advertisers$Targetingtypes$Assignedtargetingoptions(context) {\n      _classCallCheck(this, Resource$Advertisers$Targetingtypes$Assignedtargetingoptions);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Advertisers$Targetingtypes$Assignedtargetingoptions, [{\n      key: \"create\",\n      value: function create(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://displayvideo.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/advertisers/{+advertiserId}/targetingTypes/{+targetingType}/assignedTargetingOptions').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['advertiserId', 'targetingType'],\n          pathParams: ['advertiserId', 'targetingType'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"delete\",\n      value: function _delete(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://displayvideo.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/advertisers/{+advertiserId}/targetingTypes/{+targetingType}/assignedTargetingOptions/{+assignedTargetingOptionId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'DELETE'\n          }, options),\n          params,\n          requiredParams: ['advertiserId', 'targetingType', 'assignedTargetingOptionId'],\n          pathParams: ['advertiserId', 'assignedTargetingOptionId', 'targetingType'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://displayvideo.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/advertisers/{+advertiserId}/targetingTypes/{+targetingType}/assignedTargetingOptions/{+assignedTargetingOptionId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['advertiserId', 'targetingType', 'assignedTargetingOptionId'],\n          pathParams: ['advertiserId', 'assignedTargetingOptionId', 'targetingType'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://displayvideo.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/advertisers/{+advertiserId}/targetingTypes/{+targetingType}/assignedTargetingOptions').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['advertiserId', 'targetingType'],\n          pathParams: ['advertiserId', 'targetingType'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Advertisers$Targetingtypes$Assignedtargetingoptions;\n  }();\n\n  displayvideo_v1.Resource$Advertisers$Targetingtypes$Assignedtargetingoptions = Resource$Advertisers$Targetingtypes$Assignedtargetingoptions;\n\n  var Resource$Combinedaudiences = /*#__PURE__*/function () {\n    function Resource$Combinedaudiences(context) {\n      _classCallCheck(this, Resource$Combinedaudiences);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Combinedaudiences, [{\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://displayvideo.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/combinedAudiences/{+combinedAudienceId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['combinedAudienceId'],\n          pathParams: ['combinedAudienceId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://displayvideo.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/combinedAudiences').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: [],\n          pathParams: [],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Combinedaudiences;\n  }();\n\n  displayvideo_v1.Resource$Combinedaudiences = Resource$Combinedaudiences;\n\n  var Resource$Custombiddingalgorithms = /*#__PURE__*/function () {\n    function Resource$Custombiddingalgorithms(context) {\n      _classCallCheck(this, Resource$Custombiddingalgorithms);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Custombiddingalgorithms, [{\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://displayvideo.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/customBiddingAlgorithms/{+customBiddingAlgorithmId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['customBiddingAlgorithmId'],\n          pathParams: ['customBiddingAlgorithmId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://displayvideo.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/customBiddingAlgorithms').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: [],\n          pathParams: [],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Custombiddingalgorithms;\n  }();\n\n  displayvideo_v1.Resource$Custombiddingalgorithms = Resource$Custombiddingalgorithms;\n\n  var Resource$Customlists = /*#__PURE__*/function () {\n    function Resource$Customlists(context) {\n      _classCallCheck(this, Resource$Customlists);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Customlists, [{\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://displayvideo.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/customLists/{+customListId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['customListId'],\n          pathParams: ['customListId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://displayvideo.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/customLists').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: [],\n          pathParams: [],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Customlists;\n  }();\n\n  displayvideo_v1.Resource$Customlists = Resource$Customlists;\n\n  var Resource$Firstandthirdpartyaudiences = /*#__PURE__*/function () {\n    function Resource$Firstandthirdpartyaudiences(context) {\n      _classCallCheck(this, Resource$Firstandthirdpartyaudiences);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Firstandthirdpartyaudiences, [{\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://displayvideo.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/firstAndThirdPartyAudiences/{+firstAndThirdPartyAudienceId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['firstAndThirdPartyAudienceId'],\n          pathParams: ['firstAndThirdPartyAudienceId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://displayvideo.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/firstAndThirdPartyAudiences').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: [],\n          pathParams: [],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Firstandthirdpartyaudiences;\n  }();\n\n  displayvideo_v1.Resource$Firstandthirdpartyaudiences = Resource$Firstandthirdpartyaudiences;\n\n  var Resource$Floodlightgroups = /*#__PURE__*/function () {\n    function Resource$Floodlightgroups(context) {\n      _classCallCheck(this, Resource$Floodlightgroups);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Floodlightgroups, [{\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://displayvideo.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/floodlightGroups/{+floodlightGroupId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['floodlightGroupId'],\n          pathParams: ['floodlightGroupId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"patch\",\n      value: function patch(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://displayvideo.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/floodlightGroups/{floodlightGroupId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PATCH'\n          }, options),\n          params,\n          requiredParams: ['floodlightGroupId'],\n          pathParams: ['floodlightGroupId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Floodlightgroups;\n  }();\n\n  displayvideo_v1.Resource$Floodlightgroups = Resource$Floodlightgroups;\n\n  var Resource$Googleaudiences = /*#__PURE__*/function () {\n    function Resource$Googleaudiences(context) {\n      _classCallCheck(this, Resource$Googleaudiences);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Googleaudiences, [{\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://displayvideo.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/googleAudiences/{+googleAudienceId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['googleAudienceId'],\n          pathParams: ['googleAudienceId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://displayvideo.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/googleAudiences').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: [],\n          pathParams: [],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Googleaudiences;\n  }();\n\n  displayvideo_v1.Resource$Googleaudiences = Resource$Googleaudiences;\n\n  var Resource$Inventorysourcegroups = /*#__PURE__*/function () {\n    function Resource$Inventorysourcegroups(context) {\n      _classCallCheck(this, Resource$Inventorysourcegroups);\n\n      this.context = context;\n      this.assignedInventorySources = new Resource$Inventorysourcegroups$Assignedinventorysources(this.context);\n    }\n\n    _createClass(Resource$Inventorysourcegroups, [{\n      key: \"create\",\n      value: function create(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://displayvideo.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/inventorySourceGroups').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: [],\n          pathParams: [],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"delete\",\n      value: function _delete(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://displayvideo.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/inventorySourceGroups/{+inventorySourceGroupId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'DELETE'\n          }, options),\n          params,\n          requiredParams: ['inventorySourceGroupId'],\n          pathParams: ['inventorySourceGroupId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://displayvideo.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/inventorySourceGroups/{+inventorySourceGroupId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['inventorySourceGroupId'],\n          pathParams: ['inventorySourceGroupId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://displayvideo.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/inventorySourceGroups').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: [],\n          pathParams: [],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"patch\",\n      value: function patch(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://displayvideo.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/inventorySourceGroups/{inventorySourceGroupId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PATCH'\n          }, options),\n          params,\n          requiredParams: ['inventorySourceGroupId'],\n          pathParams: ['inventorySourceGroupId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Inventorysourcegroups;\n  }();\n\n  displayvideo_v1.Resource$Inventorysourcegroups = Resource$Inventorysourcegroups;\n\n  var Resource$Inventorysourcegroups$Assignedinventorysources = /*#__PURE__*/function () {\n    function Resource$Inventorysourcegroups$Assignedinventorysources(context) {\n      _classCallCheck(this, Resource$Inventorysourcegroups$Assignedinventorysources);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Inventorysourcegroups$Assignedinventorysources, [{\n      key: \"bulkEdit\",\n      value: function bulkEdit(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://displayvideo.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/inventorySourceGroups/{+inventorySourceGroupId}/assignedInventorySources:bulkEdit').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['inventorySourceGroupId'],\n          pathParams: ['inventorySourceGroupId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"create\",\n      value: function create(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://displayvideo.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/inventorySourceGroups/{+inventorySourceGroupId}/assignedInventorySources').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['inventorySourceGroupId'],\n          pathParams: ['inventorySourceGroupId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"delete\",\n      value: function _delete(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://displayvideo.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/inventorySourceGroups/{+inventorySourceGroupId}/assignedInventorySources/{+assignedInventorySourceId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'DELETE'\n          }, options),\n          params,\n          requiredParams: ['inventorySourceGroupId', 'assignedInventorySourceId'],\n          pathParams: ['assignedInventorySourceId', 'inventorySourceGroupId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://displayvideo.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/inventorySourceGroups/{+inventorySourceGroupId}/assignedInventorySources').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['inventorySourceGroupId'],\n          pathParams: ['inventorySourceGroupId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Inventorysourcegroups$Assignedinventorysources;\n  }();\n\n  displayvideo_v1.Resource$Inventorysourcegroups$Assignedinventorysources = Resource$Inventorysourcegroups$Assignedinventorysources;\n\n  var Resource$Inventorysources = /*#__PURE__*/function () {\n    function Resource$Inventorysources(context) {\n      _classCallCheck(this, Resource$Inventorysources);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Inventorysources, [{\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://displayvideo.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/inventorySources/{+inventorySourceId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['inventorySourceId'],\n          pathParams: ['inventorySourceId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://displayvideo.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/inventorySources').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: [],\n          pathParams: [],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Inventorysources;\n  }();\n\n  displayvideo_v1.Resource$Inventorysources = Resource$Inventorysources;\n\n  var Resource$Media = /*#__PURE__*/function () {\n    function Resource$Media(context) {\n      _classCallCheck(this, Resource$Media);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Media, [{\n      key: \"download\",\n      value: function download(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://displayvideo.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/download/{+resourceName}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['resourceName'],\n          pathParams: ['resourceName'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Media;\n  }();\n\n  displayvideo_v1.Resource$Media = Resource$Media;\n\n  var Resource$Partners = /*#__PURE__*/function () {\n    function Resource$Partners(context) {\n      _classCallCheck(this, Resource$Partners);\n\n      this.context = context;\n      this.channels = new Resource$Partners$Channels(this.context);\n      this.targetingTypes = new Resource$Partners$Targetingtypes(this.context);\n    }\n\n    _createClass(Resource$Partners, [{\n      key: \"bulkEditPartnerAssignedTargetingOptions\",\n      value: function bulkEditPartnerAssignedTargetingOptions(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://displayvideo.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/partners/{+partnerId}:bulkEditPartnerAssignedTargetingOptions').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['partnerId'],\n          pathParams: ['partnerId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://displayvideo.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/partners/{+partnerId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['partnerId'],\n          pathParams: ['partnerId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://displayvideo.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/partners').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: [],\n          pathParams: [],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Partners;\n  }();\n\n  displayvideo_v1.Resource$Partners = Resource$Partners;\n\n  var Resource$Partners$Channels = /*#__PURE__*/function () {\n    function Resource$Partners$Channels(context) {\n      _classCallCheck(this, Resource$Partners$Channels);\n\n      this.context = context;\n      this.sites = new Resource$Partners$Channels$Sites(this.context);\n    }\n\n    _createClass(Resource$Partners$Channels, [{\n      key: \"create\",\n      value: function create(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://displayvideo.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/partners/{+partnerId}/channels').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['partnerId'],\n          pathParams: ['partnerId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://displayvideo.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/partners/{+partnerId}/channels/{+channelId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['partnerId', 'channelId'],\n          pathParams: ['channelId', 'partnerId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://displayvideo.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/partners/{+partnerId}/channels').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['partnerId'],\n          pathParams: ['partnerId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"patch\",\n      value: function patch(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://displayvideo.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/partners/{+partnerId}/channels/{channelId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PATCH'\n          }, options),\n          params,\n          requiredParams: ['partnerId', 'channelId'],\n          pathParams: ['channelId', 'partnerId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Partners$Channels;\n  }();\n\n  displayvideo_v1.Resource$Partners$Channels = Resource$Partners$Channels;\n\n  var Resource$Partners$Channels$Sites = /*#__PURE__*/function () {\n    function Resource$Partners$Channels$Sites(context) {\n      _classCallCheck(this, Resource$Partners$Channels$Sites);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Partners$Channels$Sites, [{\n      key: \"bulkEdit\",\n      value: function bulkEdit(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://displayvideo.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/partners/{partnerId}/channels/{+channelId}/sites:bulkEdit').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['partnerId', 'channelId'],\n          pathParams: ['channelId', 'partnerId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"create\",\n      value: function create(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://displayvideo.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/partners/{partnerId}/channels/{+channelId}/sites').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['partnerId', 'channelId'],\n          pathParams: ['channelId', 'partnerId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"delete\",\n      value: function _delete(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://displayvideo.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/partners/{partnerId}/channels/{+channelId}/sites/{+urlOrAppId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'DELETE'\n          }, options),\n          params,\n          requiredParams: ['partnerId', 'channelId', 'urlOrAppId'],\n          pathParams: ['channelId', 'partnerId', 'urlOrAppId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://displayvideo.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/partners/{+partnerId}/channels/{+channelId}/sites').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['partnerId', 'channelId'],\n          pathParams: ['channelId', 'partnerId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Partners$Channels$Sites;\n  }();\n\n  displayvideo_v1.Resource$Partners$Channels$Sites = Resource$Partners$Channels$Sites;\n\n  var Resource$Partners$Targetingtypes = function Resource$Partners$Targetingtypes(context) {\n    _classCallCheck(this, Resource$Partners$Targetingtypes);\n\n    this.context = context;\n    this.assignedTargetingOptions = new Resource$Partners$Targetingtypes$Assignedtargetingoptions(this.context);\n  };\n\n  displayvideo_v1.Resource$Partners$Targetingtypes = Resource$Partners$Targetingtypes;\n\n  var Resource$Partners$Targetingtypes$Assignedtargetingoptions = /*#__PURE__*/function () {\n    function Resource$Partners$Targetingtypes$Assignedtargetingoptions(context) {\n      _classCallCheck(this, Resource$Partners$Targetingtypes$Assignedtargetingoptions);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Partners$Targetingtypes$Assignedtargetingoptions, [{\n      key: \"create\",\n      value: function create(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://displayvideo.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/partners/{+partnerId}/targetingTypes/{+targetingType}/assignedTargetingOptions').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['partnerId', 'targetingType'],\n          pathParams: ['partnerId', 'targetingType'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"delete\",\n      value: function _delete(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://displayvideo.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/partners/{+partnerId}/targetingTypes/{+targetingType}/assignedTargetingOptions/{+assignedTargetingOptionId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'DELETE'\n          }, options),\n          params,\n          requiredParams: ['partnerId', 'targetingType', 'assignedTargetingOptionId'],\n          pathParams: ['assignedTargetingOptionId', 'partnerId', 'targetingType'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://displayvideo.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/partners/{+partnerId}/targetingTypes/{+targetingType}/assignedTargetingOptions/{+assignedTargetingOptionId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['partnerId', 'targetingType', 'assignedTargetingOptionId'],\n          pathParams: ['assignedTargetingOptionId', 'partnerId', 'targetingType'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://displayvideo.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/partners/{+partnerId}/targetingTypes/{+targetingType}/assignedTargetingOptions').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['partnerId', 'targetingType'],\n          pathParams: ['partnerId', 'targetingType'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Partners$Targetingtypes$Assignedtargetingoptions;\n  }();\n\n  displayvideo_v1.Resource$Partners$Targetingtypes$Assignedtargetingoptions = Resource$Partners$Targetingtypes$Assignedtargetingoptions;\n\n  var Resource$Sdfdownloadtasks = /*#__PURE__*/function () {\n    function Resource$Sdfdownloadtasks(context) {\n      _classCallCheck(this, Resource$Sdfdownloadtasks);\n\n      this.context = context;\n      this.operations = new Resource$Sdfdownloadtasks$Operations(this.context);\n    }\n\n    _createClass(Resource$Sdfdownloadtasks, [{\n      key: \"create\",\n      value: function create(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://displayvideo.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/sdfdownloadtasks').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: [],\n          pathParams: [],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Sdfdownloadtasks;\n  }();\n\n  displayvideo_v1.Resource$Sdfdownloadtasks = Resource$Sdfdownloadtasks;\n\n  var Resource$Sdfdownloadtasks$Operations = /*#__PURE__*/function () {\n    function Resource$Sdfdownloadtasks$Operations(context) {\n      _classCallCheck(this, Resource$Sdfdownloadtasks$Operations);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Sdfdownloadtasks$Operations, [{\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://displayvideo.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['name'],\n          pathParams: ['name'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Sdfdownloadtasks$Operations;\n  }();\n\n  displayvideo_v1.Resource$Sdfdownloadtasks$Operations = Resource$Sdfdownloadtasks$Operations;\n\n  var Resource$Targetingtypes = function Resource$Targetingtypes(context) {\n    _classCallCheck(this, Resource$Targetingtypes);\n\n    this.context = context;\n    this.targetingOptions = new Resource$Targetingtypes$Targetingoptions(this.context);\n  };\n\n  displayvideo_v1.Resource$Targetingtypes = Resource$Targetingtypes;\n\n  var Resource$Targetingtypes$Targetingoptions = /*#__PURE__*/function () {\n    function Resource$Targetingtypes$Targetingoptions(context) {\n      _classCallCheck(this, Resource$Targetingtypes$Targetingoptions);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Targetingtypes$Targetingoptions, [{\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://displayvideo.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/targetingTypes/{+targetingType}/targetingOptions/{+targetingOptionId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['targetingType', 'targetingOptionId'],\n          pathParams: ['targetingOptionId', 'targetingType'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://displayvideo.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/targetingTypes/{+targetingType}/targetingOptions').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['targetingType'],\n          pathParams: ['targetingType'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Targetingtypes$Targetingoptions;\n  }();\n\n  displayvideo_v1.Resource$Targetingtypes$Targetingoptions = Resource$Targetingtypes$Targetingoptions;\n\n  var Resource$Users = /*#__PURE__*/function () {\n    function Resource$Users(context) {\n      _classCallCheck(this, Resource$Users);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Users, [{\n      key: \"bulkEditAssignedUserRoles\",\n      value: function bulkEditAssignedUserRoles(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://displayvideo.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/users/{+userId}:bulkEditAssignedUserRoles').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: ['userId'],\n          pathParams: ['userId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"create\",\n      value: function create(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://displayvideo.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/users').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params,\n          requiredParams: [],\n          pathParams: [],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"delete\",\n      value: function _delete(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://displayvideo.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/users/{+userId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'DELETE'\n          }, options),\n          params,\n          requiredParams: ['userId'],\n          pathParams: ['userId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://displayvideo.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/users/{+userId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: ['userId'],\n          pathParams: ['userId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://displayvideo.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/users').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params,\n          requiredParams: [],\n          pathParams: [],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"patch\",\n      value: function patch(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://displayvideo.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/users/{+userId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PATCH'\n          }, options),\n          params,\n          requiredParams: ['userId'],\n          pathParams: ['userId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Users;\n  }();\n\n  displayvideo_v1.Resource$Users = Resource$Users;\n})(displayvideo_v1 = exports.displayvideo_v1 || (exports.displayvideo_v1 = {}));","map":{"version":3,"sources":["/Users/amandapoetker-alles/Desktop/campaign-dashboard/node_modules/googleapis/build/src/apis/displayvideo/v1.js"],"names":["Object","defineProperty","exports","value","displayvideo_v1","googleapis_common_1","require","Displayvideo","options","google","context","_options","advertisers","Resource$Advertisers","combinedAudiences","Resource$Combinedaudiences","customBiddingAlgorithms","Resource$Custombiddingalgorithms","customLists","Resource$Customlists","firstAndThirdPartyAudiences","Resource$Firstandthirdpartyaudiences","floodlightGroups","Resource$Floodlightgroups","googleAudiences","Resource$Googleaudiences","inventorySourceGroups","Resource$Inventorysourcegroups","inventorySources","Resource$Inventorysources","media","Resource$Media","partners","Resource$Partners","sdfdownloadtasks","Resource$Sdfdownloadtasks","targetingTypes","Resource$Targetingtypes","users","Resource$Users","assets","Resource$Advertisers$Assets","campaigns","Resource$Advertisers$Campaigns","channels","Resource$Advertisers$Channels","creatives","Resource$Advertisers$Creatives","insertionOrders","Resource$Advertisers$Insertionorders","lineItems","Resource$Advertisers$Lineitems","locationLists","Resource$Advertisers$Locationlists","manualTriggers","Resource$Advertisers$Manualtriggers","negativeKeywordLists","Resource$Advertisers$Negativekeywordlists","Resource$Advertisers$Targetingtypes","paramsOrCallback","optionsOrCallback","callback","params","rootUrl","parameters","assign","url","replace","method","requiredParams","pathParams","createAPIRequest","mediaUrl","sites","Resource$Advertisers$Channels$Sites","Resource$Advertisers$Lineitems$Targetingtypes","assignedTargetingOptions","Resource$Advertisers$Lineitems$Targetingtypes$Assignedtargetingoptions","assignedLocations","Resource$Advertisers$Locationlists$Assignedlocations","negativeKeywords","Resource$Advertisers$Negativekeywordlists$Negativekeywords","Resource$Advertisers$Targetingtypes$Assignedtargetingoptions","assignedInventorySources","Resource$Inventorysourcegroups$Assignedinventorysources","Resource$Partners$Channels","Resource$Partners$Targetingtypes","Resource$Partners$Channels$Sites","Resource$Partners$Targetingtypes$Assignedtargetingoptions","operations","Resource$Sdfdownloadtasks$Operations","targetingOptions","Resource$Targetingtypes$Targetingoptions"],"mappings":"AAAA,a,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,eAAR,GAA0B,KAAK,CAA/B;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA,IAAMC,mBAAmB,GAAGC,OAAO,CAAC,mBAAD,CAAnC;;AACA,IAAIF,eAAJ;;AACA,CAAC,UAAUA,eAAV,EAA2B;AACxB;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAX4B,MAYlBG,YAZkB,GAapB,sBAAYC,OAAZ,EAAqBC,MAArB,EAA6B;AAAA;;AACzB,SAAKC,OAAL,GAAe;AACXC,MAAAA,QAAQ,EAAEH,OAAO,IAAI,EADV;AAEXC,MAAAA;AAFW,KAAf;AAIA,SAAKG,WAAL,GAAmB,IAAIC,oBAAJ,CAAyB,KAAKH,OAA9B,CAAnB;AACA,SAAKI,iBAAL,GAAyB,IAAIC,0BAAJ,CAA+B,KAAKL,OAApC,CAAzB;AACA,SAAKM,uBAAL,GAA+B,IAAIC,gCAAJ,CAAqC,KAAKP,OAA1C,CAA/B;AACA,SAAKQ,WAAL,GAAmB,IAAIC,oBAAJ,CAAyB,KAAKT,OAA9B,CAAnB;AACA,SAAKU,2BAAL,GAAmC,IAAIC,oCAAJ,CAAyC,KAAKX,OAA9C,CAAnC;AACA,SAAKY,gBAAL,GAAwB,IAAIC,yBAAJ,CAA8B,KAAKb,OAAnC,CAAxB;AACA,SAAKc,eAAL,GAAuB,IAAIC,wBAAJ,CAA6B,KAAKf,OAAlC,CAAvB;AACA,SAAKgB,qBAAL,GAA6B,IAAIC,8BAAJ,CAAmC,KAAKjB,OAAxC,CAA7B;AACA,SAAKkB,gBAAL,GAAwB,IAAIC,yBAAJ,CAA8B,KAAKnB,OAAnC,CAAxB;AACA,SAAKoB,KAAL,GAAa,IAAIC,cAAJ,CAAmB,KAAKrB,OAAxB,CAAb;AACA,SAAKsB,QAAL,GAAgB,IAAIC,iBAAJ,CAAsB,KAAKvB,OAA3B,CAAhB;AACA,SAAKwB,gBAAL,GAAwB,IAAIC,yBAAJ,CAA8B,KAAKzB,OAAnC,CAAxB;AACA,SAAK0B,cAAL,GAAsB,IAAIC,uBAAJ,CAA4B,KAAK3B,OAAjC,CAAtB;AACA,SAAK4B,KAAL,GAAa,IAAIC,cAAJ,CAAmB,KAAK7B,OAAxB,CAAb;AACH,GAhCmB;;AAkCxBN,EAAAA,eAAe,CAACG,YAAhB,GAA+BA,YAA/B;;AAlCwB,MAmClBM,oBAnCkB;AAoCpB,kCAAYH,OAAZ,EAAqB;AAAA;;AACjB,WAAKA,OAAL,GAAeA,OAAf;AACA,WAAK8B,MAAL,GAAc,IAAIC,2BAAJ,CAAgC,KAAK/B,OAArC,CAAd;AACA,WAAKgC,SAAL,GAAiB,IAAIC,8BAAJ,CAAmC,KAAKjC,OAAxC,CAAjB;AACA,WAAKkC,QAAL,GAAgB,IAAIC,6BAAJ,CAAkC,KAAKnC,OAAvC,CAAhB;AACA,WAAKoC,SAAL,GAAiB,IAAIC,8BAAJ,CAAmC,KAAKrC,OAAxC,CAAjB;AACA,WAAKsC,eAAL,GAAuB,IAAIC,oCAAJ,CAAyC,KAAKvC,OAA9C,CAAvB;AACA,WAAKwC,SAAL,GAAiB,IAAIC,8BAAJ,CAAmC,KAAKzC,OAAxC,CAAjB;AACA,WAAK0C,aAAL,GAAqB,IAAIC,kCAAJ,CAAuC,KAAK3C,OAA5C,CAArB;AACA,WAAK4C,cAAL,GAAsB,IAAIC,mCAAJ,CAAwC,KAAK7C,OAA7C,CAAtB;AACA,WAAK8C,oBAAL,GAA4B,IAAIC,yCAAJ,CAA8C,KAAK/C,OAAnD,CAA5B;AACA,WAAK0B,cAAL,GAAsB,IAAIsB,mCAAJ,CAAwC,KAAKhD,OAA7C,CAAtB;AACH;;AAhDmB;AAAA;AAAA,4BAiDdiD,gBAjDc,EAiDIC,iBAjDJ,EAiDuBC,QAjDvB,EAiDiC;AACjD,YAAIC,MAAM,GAAIH,gBAAgB,IAC1B,EADJ;AAEA,YAAInD,OAAO,GAAIoD,iBAAiB,IAAI,EAApC;;AACA,YAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;AACxCE,UAAAA,QAAQ,GAAGF,gBAAX;AACAG,UAAAA,MAAM,GAAG,EAAT;AACAtD,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAI,OAAOoD,iBAAP,KAA6B,UAAjC,EAA6C;AACzCC,UAAAA,QAAQ,GAAGD,iBAAX;AACApD,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAMuD,OAAO,GAAGvD,OAAO,CAACuD,OAAR,IAAmB,sCAAnC;AACA,YAAMC,UAAU,GAAG;AACfxD,UAAAA,OAAO,EAAER,MAAM,CAACiE,MAAP,CAAc;AACnBC,YAAAA,GAAG,EAAE,CAACH,OAAO,GAAG,uCAAX,EAAoDI,OAApD,CAA4D,cAA5D,EAA4E,IAA5E,CADc;AAEnBC,YAAAA,MAAM,EAAE;AAFW,WAAd,EAGN5D,OAHM,CADM;AAKfsD,UAAAA,MALe;AAMfO,UAAAA,cAAc,EAAE,CAAC,cAAD,CAND;AAOfC,UAAAA,UAAU,EAAE,CAAC,cAAD,CAPG;AAQf5D,UAAAA,OAAO,EAAE,KAAKA;AARC,SAAnB;;AAUA,YAAImD,QAAJ,EAAc;AACVxD,UAAAA,mBAAmB,CAACkE,gBAApB,CAAqCP,UAArC,EAAiDH,QAAjD;AACH,SAFD,MAGK;AACD,iBAAOxD,mBAAmB,CAACkE,gBAApB,CAAqCP,UAArC,CAAP;AACH;AACJ;AA/EmB;AAAA;AAAA,iEAgFuBL,gBAhFvB,EAgFyCC,iBAhFzC,EAgF4DC,QAhF5D,EAgFsE;AACtF,YAAIC,MAAM,GAAIH,gBAAgB,IAC1B,EADJ;AAEA,YAAInD,OAAO,GAAIoD,iBAAiB,IAAI,EAApC;;AACA,YAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;AACxCE,UAAAA,QAAQ,GAAGF,gBAAX;AACAG,UAAAA,MAAM,GAAG,EAAT;AACAtD,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAI,OAAOoD,iBAAP,KAA6B,UAAjC,EAA6C;AACzCC,UAAAA,QAAQ,GAAGD,iBAAX;AACApD,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAMuD,OAAO,GAAGvD,OAAO,CAACuD,OAAR,IAAmB,sCAAnC;AACA,YAAMC,UAAU,GAAG;AACfxD,UAAAA,OAAO,EAAER,MAAM,CAACiE,MAAP,CAAc;AACnBC,YAAAA,GAAG,EAAE,CAACH,OAAO,GACT,4EADC,EAC6EI,OAD7E,CACqF,cADrF,EACqG,IADrG,CADc;AAGnBC,YAAAA,MAAM,EAAE;AAHW,WAAd,EAIN5D,OAJM,CADM;AAMfsD,UAAAA,MANe;AAOfO,UAAAA,cAAc,EAAE,CAAC,cAAD,CAPD;AAQfC,UAAAA,UAAU,EAAE,CAAC,cAAD,CARG;AASf5D,UAAAA,OAAO,EAAE,KAAKA;AATC,SAAnB;;AAWA,YAAImD,QAAJ,EAAc;AACVxD,UAAAA,mBAAmB,CAACkE,gBAApB,CAAqCP,UAArC,EAAiDH,QAAjD;AACH,SAFD,MAGK;AACD,iBAAOxD,mBAAmB,CAACkE,gBAApB,CAAqCP,UAArC,CAAP;AACH;AACJ;AA/GmB;AAAA;AAAA,iEAgHuBL,gBAhHvB,EAgHyCC,iBAhHzC,EAgH4DC,QAhH5D,EAgHsE;AACtF,YAAIC,MAAM,GAAIH,gBAAgB,IAC1B,EADJ;AAEA,YAAInD,OAAO,GAAIoD,iBAAiB,IAAI,EAApC;;AACA,YAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;AACxCE,UAAAA,QAAQ,GAAGF,gBAAX;AACAG,UAAAA,MAAM,GAAG,EAAT;AACAtD,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAI,OAAOoD,iBAAP,KAA6B,UAAjC,EAA6C;AACzCC,UAAAA,QAAQ,GAAGD,iBAAX;AACApD,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAMuD,OAAO,GAAGvD,OAAO,CAACuD,OAAR,IAAmB,sCAAnC;AACA,YAAMC,UAAU,GAAG;AACfxD,UAAAA,OAAO,EAAER,MAAM,CAACiE,MAAP,CAAc;AACnBC,YAAAA,GAAG,EAAE,CAACH,OAAO,GACT,4EADC,EAC6EI,OAD7E,CACqF,cADrF,EACqG,IADrG,CADc;AAGnBC,YAAAA,MAAM,EAAE;AAHW,WAAd,EAIN5D,OAJM,CADM;AAMfsD,UAAAA,MANe;AAOfO,UAAAA,cAAc,EAAE,CAAC,cAAD,CAPD;AAQfC,UAAAA,UAAU,EAAE,CAAC,cAAD,CARG;AASf5D,UAAAA,OAAO,EAAE,KAAKA;AATC,SAAnB;;AAWA,YAAImD,QAAJ,EAAc;AACVxD,UAAAA,mBAAmB,CAACkE,gBAApB,CAAqCP,UAArC,EAAiDH,QAAjD;AACH,SAFD,MAGK;AACD,iBAAOxD,mBAAmB,CAACkE,gBAApB,CAAqCP,UAArC,CAAP;AACH;AACJ;AA/ImB;AAAA;AAAA,6BAgJbL,gBAhJa,EAgJKC,iBAhJL,EAgJwBC,QAhJxB,EAgJkC;AAClD,YAAIC,MAAM,GAAIH,gBAAgB,IAC1B,EADJ;AAEA,YAAInD,OAAO,GAAIoD,iBAAiB,IAAI,EAApC;;AACA,YAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;AACxCE,UAAAA,QAAQ,GAAGF,gBAAX;AACAG,UAAAA,MAAM,GAAG,EAAT;AACAtD,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAI,OAAOoD,iBAAP,KAA6B,UAAjC,EAA6C;AACzCC,UAAAA,QAAQ,GAAGD,iBAAX;AACApD,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAMuD,OAAO,GAAGvD,OAAO,CAACuD,OAAR,IAAmB,sCAAnC;AACA,YAAMC,UAAU,GAAG;AACfxD,UAAAA,OAAO,EAAER,MAAM,CAACiE,MAAP,CAAc;AACnBC,YAAAA,GAAG,EAAE,CAACH,OAAO,GAAG,iBAAX,EAA8BI,OAA9B,CAAsC,cAAtC,EAAsD,IAAtD,CADc;AAEnBC,YAAAA,MAAM,EAAE;AAFW,WAAd,EAGN5D,OAHM,CADM;AAKfsD,UAAAA,MALe;AAMfO,UAAAA,cAAc,EAAE,EAND;AAOfC,UAAAA,UAAU,EAAE,EAPG;AAQf5D,UAAAA,OAAO,EAAE,KAAKA;AARC,SAAnB;;AAUA,YAAImD,QAAJ,EAAc;AACVxD,UAAAA,mBAAmB,CAACkE,gBAApB,CAAqCP,UAArC,EAAiDH,QAAjD;AACH,SAFD,MAGK;AACD,iBAAOxD,mBAAmB,CAACkE,gBAApB,CAAqCP,UAArC,CAAP;AACH;AACJ;AA9KmB;AAAA;AAAA,8BA+KbL,gBA/Ka,EA+KKC,iBA/KL,EA+KwBC,QA/KxB,EA+KkC;AAClD,YAAIC,MAAM,GAAIH,gBAAgB,IAC1B,EADJ;AAEA,YAAInD,OAAO,GAAIoD,iBAAiB,IAAI,EAApC;;AACA,YAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;AACxCE,UAAAA,QAAQ,GAAGF,gBAAX;AACAG,UAAAA,MAAM,GAAG,EAAT;AACAtD,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAI,OAAOoD,iBAAP,KAA6B,UAAjC,EAA6C;AACzCC,UAAAA,QAAQ,GAAGD,iBAAX;AACApD,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAMuD,OAAO,GAAGvD,OAAO,CAACuD,OAAR,IAAmB,sCAAnC;AACA,YAAMC,UAAU,GAAG;AACfxD,UAAAA,OAAO,EAAER,MAAM,CAACiE,MAAP,CAAc;AACnBC,YAAAA,GAAG,EAAE,CAACH,OAAO,GAAG,iCAAX,EAA8CI,OAA9C,CAAsD,cAAtD,EAAsE,IAAtE,CADc;AAEnBC,YAAAA,MAAM,EAAE;AAFW,WAAd,EAGN5D,OAHM,CADM;AAKfsD,UAAAA,MALe;AAMfO,UAAAA,cAAc,EAAE,CAAC,cAAD,CAND;AAOfC,UAAAA,UAAU,EAAE,CAAC,cAAD,CAPG;AAQf5D,UAAAA,OAAO,EAAE,KAAKA;AARC,SAAnB;;AAUA,YAAImD,QAAJ,EAAc;AACVxD,UAAAA,mBAAmB,CAACkE,gBAApB,CAAqCP,UAArC,EAAiDH,QAAjD;AACH,SAFD,MAGK;AACD,iBAAOxD,mBAAmB,CAACkE,gBAApB,CAAqCP,UAArC,CAAP;AACH;AACJ;AA7MmB;AAAA;AAAA,0BA8MhBL,gBA9MgB,EA8MEC,iBA9MF,EA8MqBC,QA9MrB,EA8M+B;AAC/C,YAAIC,MAAM,GAAIH,gBAAgB,IAAI,EAAlC;AACA,YAAInD,OAAO,GAAIoD,iBAAiB,IAAI,EAApC;;AACA,YAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;AACxCE,UAAAA,QAAQ,GAAGF,gBAAX;AACAG,UAAAA,MAAM,GAAG,EAAT;AACAtD,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAI,OAAOoD,iBAAP,KAA6B,UAAjC,EAA6C;AACzCC,UAAAA,QAAQ,GAAGD,iBAAX;AACApD,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAMuD,OAAO,GAAGvD,OAAO,CAACuD,OAAR,IAAmB,sCAAnC;AACA,YAAMC,UAAU,GAAG;AACfxD,UAAAA,OAAO,EAAER,MAAM,CAACiE,MAAP,CAAc;AACnBC,YAAAA,GAAG,EAAE,CAACH,OAAO,GAAG,iCAAX,EAA8CI,OAA9C,CAAsD,cAAtD,EAAsE,IAAtE,CADc;AAEnBC,YAAAA,MAAM,EAAE;AAFW,WAAd,EAGN5D,OAHM,CADM;AAKfsD,UAAAA,MALe;AAMfO,UAAAA,cAAc,EAAE,CAAC,cAAD,CAND;AAOfC,UAAAA,UAAU,EAAE,CAAC,cAAD,CAPG;AAQf5D,UAAAA,OAAO,EAAE,KAAKA;AARC,SAAnB;;AAUA,YAAImD,QAAJ,EAAc;AACVxD,UAAAA,mBAAmB,CAACkE,gBAApB,CAAqCP,UAArC,EAAiDH,QAAjD;AACH,SAFD,MAGK;AACD,iBAAOxD,mBAAmB,CAACkE,gBAApB,CAAqCP,UAArC,CAAP;AACH;AACJ;AA3OmB;AAAA;AAAA,2BA4OfL,gBA5Oe,EA4OGC,iBA5OH,EA4OsBC,QA5OtB,EA4OgC;AAChD,YAAIC,MAAM,GAAIH,gBAAgB,IAAI,EAAlC;AACA,YAAInD,OAAO,GAAIoD,iBAAiB,IAAI,EAApC;;AACA,YAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;AACxCE,UAAAA,QAAQ,GAAGF,gBAAX;AACAG,UAAAA,MAAM,GAAG,EAAT;AACAtD,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAI,OAAOoD,iBAAP,KAA6B,UAAjC,EAA6C;AACzCC,UAAAA,QAAQ,GAAGD,iBAAX;AACApD,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAMuD,OAAO,GAAGvD,OAAO,CAACuD,OAAR,IAAmB,sCAAnC;AACA,YAAMC,UAAU,GAAG;AACfxD,UAAAA,OAAO,EAAER,MAAM,CAACiE,MAAP,CAAc;AACnBC,YAAAA,GAAG,EAAE,CAACH,OAAO,GAAG,iBAAX,EAA8BI,OAA9B,CAAsC,cAAtC,EAAsD,IAAtD,CADc;AAEnBC,YAAAA,MAAM,EAAE;AAFW,WAAd,EAGN5D,OAHM,CADM;AAKfsD,UAAAA,MALe;AAMfO,UAAAA,cAAc,EAAE,EAND;AAOfC,UAAAA,UAAU,EAAE,EAPG;AAQf5D,UAAAA,OAAO,EAAE,KAAKA;AARC,SAAnB;;AAUA,YAAImD,QAAJ,EAAc;AACVxD,UAAAA,mBAAmB,CAACkE,gBAApB,CAAqCP,UAArC,EAAiDH,QAAjD;AACH,SAFD,MAGK;AACD,iBAAOxD,mBAAmB,CAACkE,gBAApB,CAAqCP,UAArC,CAAP;AACH;AACJ;AAzQmB;AAAA;AAAA,4BA0QdL,gBA1Qc,EA0QIC,iBA1QJ,EA0QuBC,QA1QvB,EA0QiC;AACjD,YAAIC,MAAM,GAAIH,gBAAgB,IAC1B,EADJ;AAEA,YAAInD,OAAO,GAAIoD,iBAAiB,IAAI,EAApC;;AACA,YAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;AACxCE,UAAAA,QAAQ,GAAGF,gBAAX;AACAG,UAAAA,MAAM,GAAG,EAAT;AACAtD,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAI,OAAOoD,iBAAP,KAA6B,UAAjC,EAA6C;AACzCC,UAAAA,QAAQ,GAAGD,iBAAX;AACApD,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAMuD,OAAO,GAAGvD,OAAO,CAACuD,OAAR,IAAmB,sCAAnC;AACA,YAAMC,UAAU,GAAG;AACfxD,UAAAA,OAAO,EAAER,MAAM,CAACiE,MAAP,CAAc;AACnBC,YAAAA,GAAG,EAAE,CAACH,OAAO,GAAG,iCAAX,EAA8CI,OAA9C,CAAsD,cAAtD,EAAsE,IAAtE,CADc;AAEnBC,YAAAA,MAAM,EAAE;AAFW,WAAd,EAGN5D,OAHM,CADM;AAKfsD,UAAAA,MALe;AAMfO,UAAAA,cAAc,EAAE,CAAC,cAAD,CAND;AAOfC,UAAAA,UAAU,EAAE,CAAC,cAAD,CAPG;AAQf5D,UAAAA,OAAO,EAAE,KAAKA;AARC,SAAnB;;AAUA,YAAImD,QAAJ,EAAc;AACVxD,UAAAA,mBAAmB,CAACkE,gBAApB,CAAqCP,UAArC,EAAiDH,QAAjD;AACH,SAFD,MAGK;AACD,iBAAOxD,mBAAmB,CAACkE,gBAApB,CAAqCP,UAArC,CAAP;AACH;AACJ;AAxSmB;;AAAA;AAAA;;AA0SxB5D,EAAAA,eAAe,CAACS,oBAAhB,GAAuCA,oBAAvC;;AA1SwB,MA2SlB4B,2BA3SkB;AA4SpB,yCAAY/B,OAAZ,EAAqB;AAAA;;AACjB,WAAKA,OAAL,GAAeA,OAAf;AACH;;AA9SmB;AAAA;AAAA,6BA+SbiD,gBA/Sa,EA+SKC,iBA/SL,EA+SwBC,QA/SxB,EA+SkC;AAClD,YAAIC,MAAM,GAAIH,gBAAgB,IAC1B,EADJ;AAEA,YAAInD,OAAO,GAAIoD,iBAAiB,IAAI,EAApC;;AACA,YAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;AACxCE,UAAAA,QAAQ,GAAGF,gBAAX;AACAG,UAAAA,MAAM,GAAG,EAAT;AACAtD,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAI,OAAOoD,iBAAP,KAA6B,UAAjC,EAA6C;AACzCC,UAAAA,QAAQ,GAAGD,iBAAX;AACApD,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAMuD,OAAO,GAAGvD,OAAO,CAACuD,OAAR,IAAmB,sCAAnC;AACA,YAAMC,UAAU,GAAG;AACfxD,UAAAA,OAAO,EAAER,MAAM,CAACiE,MAAP,CAAc;AACnBC,YAAAA,GAAG,EAAE,CAACH,OAAO,GAAG,wCAAX,EAAqDI,OAArD,CAA6D,cAA7D,EAA6E,IAA7E,CADc;AAEnBC,YAAAA,MAAM,EAAE;AAFW,WAAd,EAGN5D,OAHM,CADM;AAKfsD,UAAAA,MALe;AAMfU,UAAAA,QAAQ,EAAE,CAACT,OAAO,GAAG,+CAAX,EAA4DI,OAA5D,CAAoE,cAApE,EAAoF,IAApF,CANK;AAOfE,UAAAA,cAAc,EAAE,CAAC,cAAD,CAPD;AAQfC,UAAAA,UAAU,EAAE,CAAC,cAAD,CARG;AASf5D,UAAAA,OAAO,EAAE,KAAKA;AATC,SAAnB;;AAWA,YAAImD,QAAJ,EAAc;AACVxD,UAAAA,mBAAmB,CAACkE,gBAApB,CAAqCP,UAArC,EAAiDH,QAAjD;AACH,SAFD,MAGK;AACD,iBAAOxD,mBAAmB,CAACkE,gBAApB,CAAqCP,UAArC,CAAP;AACH;AACJ;AA9UmB;;AAAA;AAAA;;AAgVxB5D,EAAAA,eAAe,CAACqC,2BAAhB,GAA8CA,2BAA9C;;AAhVwB,MAiVlBE,8BAjVkB;AAkVpB,4CAAYjC,OAAZ,EAAqB;AAAA;;AACjB,WAAKA,OAAL,GAAeA,OAAf;AACH;;AApVmB;AAAA;AAAA,6BAqVbiD,gBArVa,EAqVKC,iBArVL,EAqVwBC,QArVxB,EAqVkC;AAClD,YAAIC,MAAM,GAAIH,gBAAgB,IAC1B,EADJ;AAEA,YAAInD,OAAO,GAAIoD,iBAAiB,IAAI,EAApC;;AACA,YAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;AACxCE,UAAAA,QAAQ,GAAGF,gBAAX;AACAG,UAAAA,MAAM,GAAG,EAAT;AACAtD,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAI,OAAOoD,iBAAP,KAA6B,UAAjC,EAA6C;AACzCC,UAAAA,QAAQ,GAAGD,iBAAX;AACApD,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAMuD,OAAO,GAAGvD,OAAO,CAACuD,OAAR,IAAmB,sCAAnC;AACA,YAAMC,UAAU,GAAG;AACfxD,UAAAA,OAAO,EAAER,MAAM,CAACiE,MAAP,CAAc;AACnBC,YAAAA,GAAG,EAAE,CAACH,OAAO,GAAG,2CAAX,EAAwDI,OAAxD,CAAgE,cAAhE,EAAgF,IAAhF,CADc;AAEnBC,YAAAA,MAAM,EAAE;AAFW,WAAd,EAGN5D,OAHM,CADM;AAKfsD,UAAAA,MALe;AAMfO,UAAAA,cAAc,EAAE,CAAC,cAAD,CAND;AAOfC,UAAAA,UAAU,EAAE,CAAC,cAAD,CAPG;AAQf5D,UAAAA,OAAO,EAAE,KAAKA;AARC,SAAnB;;AAUA,YAAImD,QAAJ,EAAc;AACVxD,UAAAA,mBAAmB,CAACkE,gBAApB,CAAqCP,UAArC,EAAiDH,QAAjD;AACH,SAFD,MAGK;AACD,iBAAOxD,mBAAmB,CAACkE,gBAApB,CAAqCP,UAArC,CAAP;AACH;AACJ;AAnXmB;AAAA;AAAA,8BAoXbL,gBApXa,EAoXKC,iBApXL,EAoXwBC,QApXxB,EAoXkC;AAClD,YAAIC,MAAM,GAAIH,gBAAgB,IAC1B,EADJ;AAEA,YAAInD,OAAO,GAAIoD,iBAAiB,IAAI,EAApC;;AACA,YAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;AACxCE,UAAAA,QAAQ,GAAGF,gBAAX;AACAG,UAAAA,MAAM,GAAG,EAAT;AACAtD,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAI,OAAOoD,iBAAP,KAA6B,UAAjC,EAA6C;AACzCC,UAAAA,QAAQ,GAAGD,iBAAX;AACApD,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAMuD,OAAO,GAAGvD,OAAO,CAACuD,OAAR,IAAmB,sCAAnC;AACA,YAAMC,UAAU,GAAG;AACfxD,UAAAA,OAAO,EAAER,MAAM,CAACiE,MAAP,CAAc;AACnBC,YAAAA,GAAG,EAAE,CAACH,OAAO,GACT,yDADC,EAC0DI,OAD1D,CACkE,cADlE,EACkF,IADlF,CADc;AAGnBC,YAAAA,MAAM,EAAE;AAHW,WAAd,EAIN5D,OAJM,CADM;AAMfsD,UAAAA,MANe;AAOfO,UAAAA,cAAc,EAAE,CAAC,cAAD,EAAiB,YAAjB,CAPD;AAQfC,UAAAA,UAAU,EAAE,CAAC,cAAD,EAAiB,YAAjB,CARG;AASf5D,UAAAA,OAAO,EAAE,KAAKA;AATC,SAAnB;;AAWA,YAAImD,QAAJ,EAAc;AACVxD,UAAAA,mBAAmB,CAACkE,gBAApB,CAAqCP,UAArC,EAAiDH,QAAjD;AACH,SAFD,MAGK;AACD,iBAAOxD,mBAAmB,CAACkE,gBAApB,CAAqCP,UAArC,CAAP;AACH;AACJ;AAnZmB;AAAA;AAAA,0BAoZhBL,gBApZgB,EAoZEC,iBApZF,EAoZqBC,QApZrB,EAoZ+B;AAC/C,YAAIC,MAAM,GAAIH,gBAAgB,IAC1B,EADJ;AAEA,YAAInD,OAAO,GAAIoD,iBAAiB,IAAI,EAApC;;AACA,YAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;AACxCE,UAAAA,QAAQ,GAAGF,gBAAX;AACAG,UAAAA,MAAM,GAAG,EAAT;AACAtD,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAI,OAAOoD,iBAAP,KAA6B,UAAjC,EAA6C;AACzCC,UAAAA,QAAQ,GAAGD,iBAAX;AACApD,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAMuD,OAAO,GAAGvD,OAAO,CAACuD,OAAR,IAAmB,sCAAnC;AACA,YAAMC,UAAU,GAAG;AACfxD,UAAAA,OAAO,EAAER,MAAM,CAACiE,MAAP,CAAc;AACnBC,YAAAA,GAAG,EAAE,CAACH,OAAO,GACT,yDADC,EAC0DI,OAD1D,CACkE,cADlE,EACkF,IADlF,CADc;AAGnBC,YAAAA,MAAM,EAAE;AAHW,WAAd,EAIN5D,OAJM,CADM;AAMfsD,UAAAA,MANe;AAOfO,UAAAA,cAAc,EAAE,CAAC,cAAD,EAAiB,YAAjB,CAPD;AAQfC,UAAAA,UAAU,EAAE,CAAC,cAAD,EAAiB,YAAjB,CARG;AASf5D,UAAAA,OAAO,EAAE,KAAKA;AATC,SAAnB;;AAWA,YAAImD,QAAJ,EAAc;AACVxD,UAAAA,mBAAmB,CAACkE,gBAApB,CAAqCP,UAArC,EAAiDH,QAAjD;AACH,SAFD,MAGK;AACD,iBAAOxD,mBAAmB,CAACkE,gBAApB,CAAqCP,UAArC,CAAP;AACH;AACJ;AAnbmB;AAAA;AAAA,2BAobfL,gBApbe,EAobGC,iBApbH,EAobsBC,QApbtB,EAobgC;AAChD,YAAIC,MAAM,GAAIH,gBAAgB,IAC1B,EADJ;AAEA,YAAInD,OAAO,GAAIoD,iBAAiB,IAAI,EAApC;;AACA,YAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;AACxCE,UAAAA,QAAQ,GAAGF,gBAAX;AACAG,UAAAA,MAAM,GAAG,EAAT;AACAtD,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAI,OAAOoD,iBAAP,KAA6B,UAAjC,EAA6C;AACzCC,UAAAA,QAAQ,GAAGD,iBAAX;AACApD,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAMuD,OAAO,GAAGvD,OAAO,CAACuD,OAAR,IAAmB,sCAAnC;AACA,YAAMC,UAAU,GAAG;AACfxD,UAAAA,OAAO,EAAER,MAAM,CAACiE,MAAP,CAAc;AACnBC,YAAAA,GAAG,EAAE,CAACH,OAAO,GAAG,2CAAX,EAAwDI,OAAxD,CAAgE,cAAhE,EAAgF,IAAhF,CADc;AAEnBC,YAAAA,MAAM,EAAE;AAFW,WAAd,EAGN5D,OAHM,CADM;AAKfsD,UAAAA,MALe;AAMfO,UAAAA,cAAc,EAAE,CAAC,cAAD,CAND;AAOfC,UAAAA,UAAU,EAAE,CAAC,cAAD,CAPG;AAQf5D,UAAAA,OAAO,EAAE,KAAKA;AARC,SAAnB;;AAUA,YAAImD,QAAJ,EAAc;AACVxD,UAAAA,mBAAmB,CAACkE,gBAApB,CAAqCP,UAArC,EAAiDH,QAAjD;AACH,SAFD,MAGK;AACD,iBAAOxD,mBAAmB,CAACkE,gBAApB,CAAqCP,UAArC,CAAP;AACH;AACJ;AAldmB;AAAA;AAAA,4BAmddL,gBAndc,EAmdIC,iBAndJ,EAmduBC,QAndvB,EAmdiC;AACjD,YAAIC,MAAM,GAAIH,gBAAgB,IAC1B,EADJ;AAEA,YAAInD,OAAO,GAAIoD,iBAAiB,IAAI,EAApC;;AACA,YAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;AACxCE,UAAAA,QAAQ,GAAGF,gBAAX;AACAG,UAAAA,MAAM,GAAG,EAAT;AACAtD,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAI,OAAOoD,iBAAP,KAA6B,UAAjC,EAA6C;AACzCC,UAAAA,QAAQ,GAAGD,iBAAX;AACApD,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAMuD,OAAO,GAAGvD,OAAO,CAACuD,OAAR,IAAmB,sCAAnC;AACA,YAAMC,UAAU,GAAG;AACfxD,UAAAA,OAAO,EAAER,MAAM,CAACiE,MAAP,CAAc;AACnBC,YAAAA,GAAG,EAAE,CAACH,OAAO,GACT,yDADC,EAC0DI,OAD1D,CACkE,cADlE,EACkF,IADlF,CADc;AAGnBC,YAAAA,MAAM,EAAE;AAHW,WAAd,EAIN5D,OAJM,CADM;AAMfsD,UAAAA,MANe;AAOfO,UAAAA,cAAc,EAAE,CAAC,cAAD,EAAiB,YAAjB,CAPD;AAQfC,UAAAA,UAAU,EAAE,CAAC,cAAD,EAAiB,YAAjB,CARG;AASf5D,UAAAA,OAAO,EAAE,KAAKA;AATC,SAAnB;;AAWA,YAAImD,QAAJ,EAAc;AACVxD,UAAAA,mBAAmB,CAACkE,gBAApB,CAAqCP,UAArC,EAAiDH,QAAjD;AACH,SAFD,MAGK;AACD,iBAAOxD,mBAAmB,CAACkE,gBAApB,CAAqCP,UAArC,CAAP;AACH;AACJ;AAlfmB;;AAAA;AAAA;;AAofxB5D,EAAAA,eAAe,CAACuC,8BAAhB,GAAiDA,8BAAjD;;AApfwB,MAqflBE,6BArfkB;AAsfpB,2CAAYnC,OAAZ,EAAqB;AAAA;;AACjB,WAAKA,OAAL,GAAeA,OAAf;AACA,WAAK+D,KAAL,GAAa,IAAIC,mCAAJ,CAAwC,KAAKhE,OAA7C,CAAb;AACH;;AAzfmB;AAAA;AAAA,6BA0fbiD,gBA1fa,EA0fKC,iBA1fL,EA0fwBC,QA1fxB,EA0fkC;AAClD,YAAIC,MAAM,GAAIH,gBAAgB,IAC1B,EADJ;AAEA,YAAInD,OAAO,GAAIoD,iBAAiB,IAAI,EAApC;;AACA,YAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;AACxCE,UAAAA,QAAQ,GAAGF,gBAAX;AACAG,UAAAA,MAAM,GAAG,EAAT;AACAtD,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAI,OAAOoD,iBAAP,KAA6B,UAAjC,EAA6C;AACzCC,UAAAA,QAAQ,GAAGD,iBAAX;AACApD,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAMuD,OAAO,GAAGvD,OAAO,CAACuD,OAAR,IAAmB,sCAAnC;AACA,YAAMC,UAAU,GAAG;AACfxD,UAAAA,OAAO,EAAER,MAAM,CAACiE,MAAP,CAAc;AACnBC,YAAAA,GAAG,EAAE,CAACH,OAAO,GAAG,0CAAX,EAAuDI,OAAvD,CAA+D,cAA/D,EAA+E,IAA/E,CADc;AAEnBC,YAAAA,MAAM,EAAE;AAFW,WAAd,EAGN5D,OAHM,CADM;AAKfsD,UAAAA,MALe;AAMfO,UAAAA,cAAc,EAAE,CAAC,cAAD,CAND;AAOfC,UAAAA,UAAU,EAAE,CAAC,cAAD,CAPG;AAQf5D,UAAAA,OAAO,EAAE,KAAKA;AARC,SAAnB;;AAUA,YAAImD,QAAJ,EAAc;AACVxD,UAAAA,mBAAmB,CAACkE,gBAApB,CAAqCP,UAArC,EAAiDH,QAAjD;AACH,SAFD,MAGK;AACD,iBAAOxD,mBAAmB,CAACkE,gBAApB,CAAqCP,UAArC,CAAP;AACH;AACJ;AAxhBmB;AAAA;AAAA,0BAyhBhBL,gBAzhBgB,EAyhBEC,iBAzhBF,EAyhBqBC,QAzhBrB,EAyhB+B;AAC/C,YAAIC,MAAM,GAAIH,gBAAgB,IAC1B,EADJ;AAEA,YAAInD,OAAO,GAAIoD,iBAAiB,IAAI,EAApC;;AACA,YAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;AACxCE,UAAAA,QAAQ,GAAGF,gBAAX;AACAG,UAAAA,MAAM,GAAG,EAAT;AACAtD,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAI,OAAOoD,iBAAP,KAA6B,UAAjC,EAA6C;AACzCC,UAAAA,QAAQ,GAAGD,iBAAX;AACApD,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAMuD,OAAO,GAAGvD,OAAO,CAACuD,OAAR,IAAmB,sCAAnC;AACA,YAAMC,UAAU,GAAG;AACfxD,UAAAA,OAAO,EAAER,MAAM,CAACiE,MAAP,CAAc;AACnBC,YAAAA,GAAG,EAAE,CAACH,OAAO,GAAG,uDAAX,EAAoEI,OAApE,CAA4E,cAA5E,EAA4F,IAA5F,CADc;AAEnBC,YAAAA,MAAM,EAAE;AAFW,WAAd,EAGN5D,OAHM,CADM;AAKfsD,UAAAA,MALe;AAMfO,UAAAA,cAAc,EAAE,CAAC,cAAD,EAAiB,WAAjB,CAND;AAOfC,UAAAA,UAAU,EAAE,CAAC,cAAD,EAAiB,WAAjB,CAPG;AAQf5D,UAAAA,OAAO,EAAE,KAAKA;AARC,SAAnB;;AAUA,YAAImD,QAAJ,EAAc;AACVxD,UAAAA,mBAAmB,CAACkE,gBAApB,CAAqCP,UAArC,EAAiDH,QAAjD;AACH,SAFD,MAGK;AACD,iBAAOxD,mBAAmB,CAACkE,gBAApB,CAAqCP,UAArC,CAAP;AACH;AACJ;AAvjBmB;AAAA;AAAA,2BAwjBfL,gBAxjBe,EAwjBGC,iBAxjBH,EAwjBsBC,QAxjBtB,EAwjBgC;AAChD,YAAIC,MAAM,GAAIH,gBAAgB,IAC1B,EADJ;AAEA,YAAInD,OAAO,GAAIoD,iBAAiB,IAAI,EAApC;;AACA,YAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;AACxCE,UAAAA,QAAQ,GAAGF,gBAAX;AACAG,UAAAA,MAAM,GAAG,EAAT;AACAtD,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAI,OAAOoD,iBAAP,KAA6B,UAAjC,EAA6C;AACzCC,UAAAA,QAAQ,GAAGD,iBAAX;AACApD,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAMuD,OAAO,GAAGvD,OAAO,CAACuD,OAAR,IAAmB,sCAAnC;AACA,YAAMC,UAAU,GAAG;AACfxD,UAAAA,OAAO,EAAER,MAAM,CAACiE,MAAP,CAAc;AACnBC,YAAAA,GAAG,EAAE,CAACH,OAAO,GAAG,0CAAX,EAAuDI,OAAvD,CAA+D,cAA/D,EAA+E,IAA/E,CADc;AAEnBC,YAAAA,MAAM,EAAE;AAFW,WAAd,EAGN5D,OAHM,CADM;AAKfsD,UAAAA,MALe;AAMfO,UAAAA,cAAc,EAAE,CAAC,cAAD,CAND;AAOfC,UAAAA,UAAU,EAAE,CAAC,cAAD,CAPG;AAQf5D,UAAAA,OAAO,EAAE,KAAKA;AARC,SAAnB;;AAUA,YAAImD,QAAJ,EAAc;AACVxD,UAAAA,mBAAmB,CAACkE,gBAApB,CAAqCP,UAArC,EAAiDH,QAAjD;AACH,SAFD,MAGK;AACD,iBAAOxD,mBAAmB,CAACkE,gBAApB,CAAqCP,UAArC,CAAP;AACH;AACJ;AAtlBmB;AAAA;AAAA,4BAulBdL,gBAvlBc,EAulBIC,iBAvlBJ,EAulBuBC,QAvlBvB,EAulBiC;AACjD,YAAIC,MAAM,GAAIH,gBAAgB,IAC1B,EADJ;AAEA,YAAInD,OAAO,GAAIoD,iBAAiB,IAAI,EAApC;;AACA,YAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;AACxCE,UAAAA,QAAQ,GAAGF,gBAAX;AACAG,UAAAA,MAAM,GAAG,EAAT;AACAtD,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAI,OAAOoD,iBAAP,KAA6B,UAAjC,EAA6C;AACzCC,UAAAA,QAAQ,GAAGD,iBAAX;AACApD,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAMuD,OAAO,GAAGvD,OAAO,CAACuD,OAAR,IAAmB,sCAAnC;AACA,YAAMC,UAAU,GAAG;AACfxD,UAAAA,OAAO,EAAER,MAAM,CAACiE,MAAP,CAAc;AACnBC,YAAAA,GAAG,EAAE,CAACH,OAAO,GAAG,sDAAX,EAAmEI,OAAnE,CAA2E,cAA3E,EAA2F,IAA3F,CADc;AAEnBC,YAAAA,MAAM,EAAE;AAFW,WAAd,EAGN5D,OAHM,CADM;AAKfsD,UAAAA,MALe;AAMfO,UAAAA,cAAc,EAAE,CAAC,cAAD,EAAiB,WAAjB,CAND;AAOfC,UAAAA,UAAU,EAAE,CAAC,cAAD,EAAiB,WAAjB,CAPG;AAQf5D,UAAAA,OAAO,EAAE,KAAKA;AARC,SAAnB;;AAUA,YAAImD,QAAJ,EAAc;AACVxD,UAAAA,mBAAmB,CAACkE,gBAApB,CAAqCP,UAArC,EAAiDH,QAAjD;AACH,SAFD,MAGK;AACD,iBAAOxD,mBAAmB,CAACkE,gBAApB,CAAqCP,UAArC,CAAP;AACH;AACJ;AArnBmB;;AAAA;AAAA;;AAunBxB5D,EAAAA,eAAe,CAACyC,6BAAhB,GAAgDA,6BAAhD;;AAvnBwB,MAwnBlB6B,mCAxnBkB;AAynBpB,iDAAYhE,OAAZ,EAAqB;AAAA;;AACjB,WAAKA,OAAL,GAAeA,OAAf;AACH;;AA3nBmB;AAAA;AAAA,+BA4nBXiD,gBA5nBW,EA4nBOC,iBA5nBP,EA4nB0BC,QA5nB1B,EA4nBoC;AACpD,YAAIC,MAAM,GAAIH,gBAAgB,IAC1B,EADJ;AAEA,YAAInD,OAAO,GAAIoD,iBAAiB,IAAI,EAApC;;AACA,YAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;AACxCE,UAAAA,QAAQ,GAAGF,gBAAX;AACAG,UAAAA,MAAM,GAAG,EAAT;AACAtD,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAI,OAAOoD,iBAAP,KAA6B,UAAjC,EAA6C;AACzCC,UAAAA,QAAQ,GAAGD,iBAAX;AACApD,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAMuD,OAAO,GAAGvD,OAAO,CAACuD,OAAR,IAAmB,sCAAnC;AACA,YAAMC,UAAU,GAAG;AACfxD,UAAAA,OAAO,EAAER,MAAM,CAACiE,MAAP,CAAc;AACnBC,YAAAA,GAAG,EAAE,CAACH,OAAO,GACT,qEADC,EACsEI,OADtE,CAC8E,cAD9E,EAC8F,IAD9F,CADc;AAGnBC,YAAAA,MAAM,EAAE;AAHW,WAAd,EAIN5D,OAJM,CADM;AAMfsD,UAAAA,MANe;AAOfO,UAAAA,cAAc,EAAE,CAAC,cAAD,EAAiB,WAAjB,CAPD;AAQfC,UAAAA,UAAU,EAAE,CAAC,cAAD,EAAiB,WAAjB,CARG;AASf5D,UAAAA,OAAO,EAAE,KAAKA;AATC,SAAnB;;AAWA,YAAImD,QAAJ,EAAc;AACVxD,UAAAA,mBAAmB,CAACkE,gBAApB,CAAqCP,UAArC,EAAiDH,QAAjD;AACH,SAFD,MAGK;AACD,iBAAOxD,mBAAmB,CAACkE,gBAApB,CAAqCP,UAArC,CAAP;AACH;AACJ;AA3pBmB;AAAA;AAAA,6BA4pBbL,gBA5pBa,EA4pBKC,iBA5pBL,EA4pBwBC,QA5pBxB,EA4pBkC;AAClD,YAAIC,MAAM,GAAIH,gBAAgB,IAC1B,EADJ;AAEA,YAAInD,OAAO,GAAIoD,iBAAiB,IAAI,EAApC;;AACA,YAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;AACxCE,UAAAA,QAAQ,GAAGF,gBAAX;AACAG,UAAAA,MAAM,GAAG,EAAT;AACAtD,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAI,OAAOoD,iBAAP,KAA6B,UAAjC,EAA6C;AACzCC,UAAAA,QAAQ,GAAGD,iBAAX;AACApD,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAMuD,OAAO,GAAGvD,OAAO,CAACuD,OAAR,IAAmB,sCAAnC;AACA,YAAMC,UAAU,GAAG;AACfxD,UAAAA,OAAO,EAAER,MAAM,CAACiE,MAAP,CAAc;AACnBC,YAAAA,GAAG,EAAE,CAACH,OAAO,GACT,4DADC,EAC6DI,OAD7D,CACqE,cADrE,EACqF,IADrF,CADc;AAGnBC,YAAAA,MAAM,EAAE;AAHW,WAAd,EAIN5D,OAJM,CADM;AAMfsD,UAAAA,MANe;AAOfO,UAAAA,cAAc,EAAE,CAAC,cAAD,EAAiB,WAAjB,CAPD;AAQfC,UAAAA,UAAU,EAAE,CAAC,cAAD,EAAiB,WAAjB,CARG;AASf5D,UAAAA,OAAO,EAAE,KAAKA;AATC,SAAnB;;AAWA,YAAImD,QAAJ,EAAc;AACVxD,UAAAA,mBAAmB,CAACkE,gBAApB,CAAqCP,UAArC,EAAiDH,QAAjD;AACH,SAFD,MAGK;AACD,iBAAOxD,mBAAmB,CAACkE,gBAApB,CAAqCP,UAArC,CAAP;AACH;AACJ;AA3rBmB;AAAA;AAAA,8BA4rBbL,gBA5rBa,EA4rBKC,iBA5rBL,EA4rBwBC,QA5rBxB,EA4rBkC;AAClD,YAAIC,MAAM,GAAIH,gBAAgB,IAC1B,EADJ;AAEA,YAAInD,OAAO,GAAIoD,iBAAiB,IAAI,EAApC;;AACA,YAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;AACxCE,UAAAA,QAAQ,GAAGF,gBAAX;AACAG,UAAAA,MAAM,GAAG,EAAT;AACAtD,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAI,OAAOoD,iBAAP,KAA6B,UAAjC,EAA6C;AACzCC,UAAAA,QAAQ,GAAGD,iBAAX;AACApD,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAMuD,OAAO,GAAGvD,OAAO,CAACuD,OAAR,IAAmB,sCAAnC;AACA,YAAMC,UAAU,GAAG;AACfxD,UAAAA,OAAO,EAAER,MAAM,CAACiE,MAAP,CAAc;AACnBC,YAAAA,GAAG,EAAE,CAACH,OAAO,GACT,0EADC,EAC2EI,OAD3E,CACmF,cADnF,EACmG,IADnG,CADc;AAGnBC,YAAAA,MAAM,EAAE;AAHW,WAAd,EAIN5D,OAJM,CADM;AAMfsD,UAAAA,MANe;AAOfO,UAAAA,cAAc,EAAE,CAAC,cAAD,EAAiB,WAAjB,EAA8B,YAA9B,CAPD;AAQfC,UAAAA,UAAU,EAAE,CAAC,cAAD,EAAiB,WAAjB,EAA8B,YAA9B,CARG;AASf5D,UAAAA,OAAO,EAAE,KAAKA;AATC,SAAnB;;AAWA,YAAImD,QAAJ,EAAc;AACVxD,UAAAA,mBAAmB,CAACkE,gBAApB,CAAqCP,UAArC,EAAiDH,QAAjD;AACH,SAFD,MAGK;AACD,iBAAOxD,mBAAmB,CAACkE,gBAApB,CAAqCP,UAArC,CAAP;AACH;AACJ;AA3tBmB;AAAA;AAAA,2BA4tBfL,gBA5tBe,EA4tBGC,iBA5tBH,EA4tBsBC,QA5tBtB,EA4tBgC;AAChD,YAAIC,MAAM,GAAIH,gBAAgB,IAC1B,EADJ;AAEA,YAAInD,OAAO,GAAIoD,iBAAiB,IAAI,EAApC;;AACA,YAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;AACxCE,UAAAA,QAAQ,GAAGF,gBAAX;AACAG,UAAAA,MAAM,GAAG,EAAT;AACAtD,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAI,OAAOoD,iBAAP,KAA6B,UAAjC,EAA6C;AACzCC,UAAAA,QAAQ,GAAGD,iBAAX;AACApD,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAMuD,OAAO,GAAGvD,OAAO,CAACuD,OAAR,IAAmB,sCAAnC;AACA,YAAMC,UAAU,GAAG;AACfxD,UAAAA,OAAO,EAAER,MAAM,CAACiE,MAAP,CAAc;AACnBC,YAAAA,GAAG,EAAE,CAACH,OAAO,GACT,6DADC,EAC8DI,OAD9D,CACsE,cADtE,EACsF,IADtF,CADc;AAGnBC,YAAAA,MAAM,EAAE;AAHW,WAAd,EAIN5D,OAJM,CADM;AAMfsD,UAAAA,MANe;AAOfO,UAAAA,cAAc,EAAE,CAAC,cAAD,EAAiB,WAAjB,CAPD;AAQfC,UAAAA,UAAU,EAAE,CAAC,cAAD,EAAiB,WAAjB,CARG;AASf5D,UAAAA,OAAO,EAAE,KAAKA;AATC,SAAnB;;AAWA,YAAImD,QAAJ,EAAc;AACVxD,UAAAA,mBAAmB,CAACkE,gBAApB,CAAqCP,UAArC,EAAiDH,QAAjD;AACH,SAFD,MAGK;AACD,iBAAOxD,mBAAmB,CAACkE,gBAApB,CAAqCP,UAArC,CAAP;AACH;AACJ;AA3vBmB;;AAAA;AAAA;;AA6vBxB5D,EAAAA,eAAe,CAACsE,mCAAhB,GAAsDA,mCAAtD;;AA7vBwB,MA8vBlB3B,8BA9vBkB;AA+vBpB,4CAAYrC,OAAZ,EAAqB;AAAA;;AACjB,WAAKA,OAAL,GAAeA,OAAf;AACH;;AAjwBmB;AAAA;AAAA,6BAkwBbiD,gBAlwBa,EAkwBKC,iBAlwBL,EAkwBwBC,QAlwBxB,EAkwBkC;AAClD,YAAIC,MAAM,GAAIH,gBAAgB,IAC1B,EADJ;AAEA,YAAInD,OAAO,GAAIoD,iBAAiB,IAAI,EAApC;;AACA,YAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;AACxCE,UAAAA,QAAQ,GAAGF,gBAAX;AACAG,UAAAA,MAAM,GAAG,EAAT;AACAtD,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAI,OAAOoD,iBAAP,KAA6B,UAAjC,EAA6C;AACzCC,UAAAA,QAAQ,GAAGD,iBAAX;AACApD,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAMuD,OAAO,GAAGvD,OAAO,CAACuD,OAAR,IAAmB,sCAAnC;AACA,YAAMC,UAAU,GAAG;AACfxD,UAAAA,OAAO,EAAER,MAAM,CAACiE,MAAP,CAAc;AACnBC,YAAAA,GAAG,EAAE,CAACH,OAAO,GAAG,2CAAX,EAAwDI,OAAxD,CAAgE,cAAhE,EAAgF,IAAhF,CADc;AAEnBC,YAAAA,MAAM,EAAE;AAFW,WAAd,EAGN5D,OAHM,CADM;AAKfsD,UAAAA,MALe;AAMfO,UAAAA,cAAc,EAAE,CAAC,cAAD,CAND;AAOfC,UAAAA,UAAU,EAAE,CAAC,cAAD,CAPG;AAQf5D,UAAAA,OAAO,EAAE,KAAKA;AARC,SAAnB;;AAUA,YAAImD,QAAJ,EAAc;AACVxD,UAAAA,mBAAmB,CAACkE,gBAApB,CAAqCP,UAArC,EAAiDH,QAAjD;AACH,SAFD,MAGK;AACD,iBAAOxD,mBAAmB,CAACkE,gBAApB,CAAqCP,UAArC,CAAP;AACH;AACJ;AAhyBmB;AAAA;AAAA,8BAiyBbL,gBAjyBa,EAiyBKC,iBAjyBL,EAiyBwBC,QAjyBxB,EAiyBkC;AAClD,YAAIC,MAAM,GAAIH,gBAAgB,IAC1B,EADJ;AAEA,YAAInD,OAAO,GAAIoD,iBAAiB,IAAI,EAApC;;AACA,YAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;AACxCE,UAAAA,QAAQ,GAAGF,gBAAX;AACAG,UAAAA,MAAM,GAAG,EAAT;AACAtD,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAI,OAAOoD,iBAAP,KAA6B,UAAjC,EAA6C;AACzCC,UAAAA,QAAQ,GAAGD,iBAAX;AACApD,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAMuD,OAAO,GAAGvD,OAAO,CAACuD,OAAR,IAAmB,sCAAnC;AACA,YAAMC,UAAU,GAAG;AACfxD,UAAAA,OAAO,EAAER,MAAM,CAACiE,MAAP,CAAc;AACnBC,YAAAA,GAAG,EAAE,CAACH,OAAO,GACT,yDADC,EAC0DI,OAD1D,CACkE,cADlE,EACkF,IADlF,CADc;AAGnBC,YAAAA,MAAM,EAAE;AAHW,WAAd,EAIN5D,OAJM,CADM;AAMfsD,UAAAA,MANe;AAOfO,UAAAA,cAAc,EAAE,CAAC,cAAD,EAAiB,YAAjB,CAPD;AAQfC,UAAAA,UAAU,EAAE,CAAC,cAAD,EAAiB,YAAjB,CARG;AASf5D,UAAAA,OAAO,EAAE,KAAKA;AATC,SAAnB;;AAWA,YAAImD,QAAJ,EAAc;AACVxD,UAAAA,mBAAmB,CAACkE,gBAApB,CAAqCP,UAArC,EAAiDH,QAAjD;AACH,SAFD,MAGK;AACD,iBAAOxD,mBAAmB,CAACkE,gBAApB,CAAqCP,UAArC,CAAP;AACH;AACJ;AAh0BmB;AAAA;AAAA,0BAi0BhBL,gBAj0BgB,EAi0BEC,iBAj0BF,EAi0BqBC,QAj0BrB,EAi0B+B;AAC/C,YAAIC,MAAM,GAAIH,gBAAgB,IAC1B,EADJ;AAEA,YAAInD,OAAO,GAAIoD,iBAAiB,IAAI,EAApC;;AACA,YAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;AACxCE,UAAAA,QAAQ,GAAGF,gBAAX;AACAG,UAAAA,MAAM,GAAG,EAAT;AACAtD,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAI,OAAOoD,iBAAP,KAA6B,UAAjC,EAA6C;AACzCC,UAAAA,QAAQ,GAAGD,iBAAX;AACApD,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAMuD,OAAO,GAAGvD,OAAO,CAACuD,OAAR,IAAmB,sCAAnC;AACA,YAAMC,UAAU,GAAG;AACfxD,UAAAA,OAAO,EAAER,MAAM,CAACiE,MAAP,CAAc;AACnBC,YAAAA,GAAG,EAAE,CAACH,OAAO,GACT,yDADC,EAC0DI,OAD1D,CACkE,cADlE,EACkF,IADlF,CADc;AAGnBC,YAAAA,MAAM,EAAE;AAHW,WAAd,EAIN5D,OAJM,CADM;AAMfsD,UAAAA,MANe;AAOfO,UAAAA,cAAc,EAAE,CAAC,cAAD,EAAiB,YAAjB,CAPD;AAQfC,UAAAA,UAAU,EAAE,CAAC,cAAD,EAAiB,YAAjB,CARG;AASf5D,UAAAA,OAAO,EAAE,KAAKA;AATC,SAAnB;;AAWA,YAAImD,QAAJ,EAAc;AACVxD,UAAAA,mBAAmB,CAACkE,gBAApB,CAAqCP,UAArC,EAAiDH,QAAjD;AACH,SAFD,MAGK;AACD,iBAAOxD,mBAAmB,CAACkE,gBAApB,CAAqCP,UAArC,CAAP;AACH;AACJ;AAh2BmB;AAAA;AAAA,2BAi2BfL,gBAj2Be,EAi2BGC,iBAj2BH,EAi2BsBC,QAj2BtB,EAi2BgC;AAChD,YAAIC,MAAM,GAAIH,gBAAgB,IAC1B,EADJ;AAEA,YAAInD,OAAO,GAAIoD,iBAAiB,IAAI,EAApC;;AACA,YAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;AACxCE,UAAAA,QAAQ,GAAGF,gBAAX;AACAG,UAAAA,MAAM,GAAG,EAAT;AACAtD,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAI,OAAOoD,iBAAP,KAA6B,UAAjC,EAA6C;AACzCC,UAAAA,QAAQ,GAAGD,iBAAX;AACApD,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAMuD,OAAO,GAAGvD,OAAO,CAACuD,OAAR,IAAmB,sCAAnC;AACA,YAAMC,UAAU,GAAG;AACfxD,UAAAA,OAAO,EAAER,MAAM,CAACiE,MAAP,CAAc;AACnBC,YAAAA,GAAG,EAAE,CAACH,OAAO,GAAG,2CAAX,EAAwDI,OAAxD,CAAgE,cAAhE,EAAgF,IAAhF,CADc;AAEnBC,YAAAA,MAAM,EAAE;AAFW,WAAd,EAGN5D,OAHM,CADM;AAKfsD,UAAAA,MALe;AAMfO,UAAAA,cAAc,EAAE,CAAC,cAAD,CAND;AAOfC,UAAAA,UAAU,EAAE,CAAC,cAAD,CAPG;AAQf5D,UAAAA,OAAO,EAAE,KAAKA;AARC,SAAnB;;AAUA,YAAImD,QAAJ,EAAc;AACVxD,UAAAA,mBAAmB,CAACkE,gBAApB,CAAqCP,UAArC,EAAiDH,QAAjD;AACH,SAFD,MAGK;AACD,iBAAOxD,mBAAmB,CAACkE,gBAApB,CAAqCP,UAArC,CAAP;AACH;AACJ;AA/3BmB;AAAA;AAAA,4BAg4BdL,gBAh4Bc,EAg4BIC,iBAh4BJ,EAg4BuBC,QAh4BvB,EAg4BiC;AACjD,YAAIC,MAAM,GAAIH,gBAAgB,IAC1B,EADJ;AAEA,YAAInD,OAAO,GAAIoD,iBAAiB,IAAI,EAApC;;AACA,YAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;AACxCE,UAAAA,QAAQ,GAAGF,gBAAX;AACAG,UAAAA,MAAM,GAAG,EAAT;AACAtD,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAI,OAAOoD,iBAAP,KAA6B,UAAjC,EAA6C;AACzCC,UAAAA,QAAQ,GAAGD,iBAAX;AACApD,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAMuD,OAAO,GAAGvD,OAAO,CAACuD,OAAR,IAAmB,sCAAnC;AACA,YAAMC,UAAU,GAAG;AACfxD,UAAAA,OAAO,EAAER,MAAM,CAACiE,MAAP,CAAc;AACnBC,YAAAA,GAAG,EAAE,CAACH,OAAO,GACT,yDADC,EAC0DI,OAD1D,CACkE,cADlE,EACkF,IADlF,CADc;AAGnBC,YAAAA,MAAM,EAAE;AAHW,WAAd,EAIN5D,OAJM,CADM;AAMfsD,UAAAA,MANe;AAOfO,UAAAA,cAAc,EAAE,CAAC,cAAD,EAAiB,YAAjB,CAPD;AAQfC,UAAAA,UAAU,EAAE,CAAC,cAAD,EAAiB,YAAjB,CARG;AASf5D,UAAAA,OAAO,EAAE,KAAKA;AATC,SAAnB;;AAWA,YAAImD,QAAJ,EAAc;AACVxD,UAAAA,mBAAmB,CAACkE,gBAApB,CAAqCP,UAArC,EAAiDH,QAAjD;AACH,SAFD,MAGK;AACD,iBAAOxD,mBAAmB,CAACkE,gBAApB,CAAqCP,UAArC,CAAP;AACH;AACJ;AA/5BmB;;AAAA;AAAA;;AAi6BxB5D,EAAAA,eAAe,CAAC2C,8BAAhB,GAAiDA,8BAAjD;;AAj6BwB,MAk6BlBE,oCAl6BkB;AAm6BpB,kDAAYvC,OAAZ,EAAqB;AAAA;;AACjB,WAAKA,OAAL,GAAeA,OAAf;AACH;;AAr6BmB;AAAA;AAAA,6BAs6BbiD,gBAt6Ba,EAs6BKC,iBAt6BL,EAs6BwBC,QAt6BxB,EAs6BkC;AAClD,YAAIC,MAAM,GAAIH,gBAAgB,IAC1B,EADJ;AAEA,YAAInD,OAAO,GAAIoD,iBAAiB,IAAI,EAApC;;AACA,YAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;AACxCE,UAAAA,QAAQ,GAAGF,gBAAX;AACAG,UAAAA,MAAM,GAAG,EAAT;AACAtD,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAI,OAAOoD,iBAAP,KAA6B,UAAjC,EAA6C;AACzCC,UAAAA,QAAQ,GAAGD,iBAAX;AACApD,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAMuD,OAAO,GAAGvD,OAAO,CAACuD,OAAR,IAAmB,sCAAnC;AACA,YAAMC,UAAU,GAAG;AACfxD,UAAAA,OAAO,EAAER,MAAM,CAACiE,MAAP,CAAc;AACnBC,YAAAA,GAAG,EAAE,CAACH,OAAO,GAAG,iDAAX,EAA8DI,OAA9D,CAAsE,cAAtE,EAAsF,IAAtF,CADc;AAEnBC,YAAAA,MAAM,EAAE;AAFW,WAAd,EAGN5D,OAHM,CADM;AAKfsD,UAAAA,MALe;AAMfO,UAAAA,cAAc,EAAE,CAAC,cAAD,CAND;AAOfC,UAAAA,UAAU,EAAE,CAAC,cAAD,CAPG;AAQf5D,UAAAA,OAAO,EAAE,KAAKA;AARC,SAAnB;;AAUA,YAAImD,QAAJ,EAAc;AACVxD,UAAAA,mBAAmB,CAACkE,gBAApB,CAAqCP,UAArC,EAAiDH,QAAjD;AACH,SAFD,MAGK;AACD,iBAAOxD,mBAAmB,CAACkE,gBAApB,CAAqCP,UAArC,CAAP;AACH;AACJ;AAp8BmB;AAAA;AAAA,8BAq8BbL,gBAr8Ba,EAq8BKC,iBAr8BL,EAq8BwBC,QAr8BxB,EAq8BkC;AAClD,YAAIC,MAAM,GAAIH,gBAAgB,IAC1B,EADJ;AAEA,YAAInD,OAAO,GAAIoD,iBAAiB,IAAI,EAApC;;AACA,YAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;AACxCE,UAAAA,QAAQ,GAAGF,gBAAX;AACAG,UAAAA,MAAM,GAAG,EAAT;AACAtD,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAI,OAAOoD,iBAAP,KAA6B,UAAjC,EAA6C;AACzCC,UAAAA,QAAQ,GAAGD,iBAAX;AACApD,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAMuD,OAAO,GAAGvD,OAAO,CAACuD,OAAR,IAAmB,sCAAnC;AACA,YAAMC,UAAU,GAAG;AACfxD,UAAAA,OAAO,EAAER,MAAM,CAACiE,MAAP,CAAc;AACnBC,YAAAA,GAAG,EAAE,CAACH,OAAO,GACT,qEADC,EACsEI,OADtE,CAC8E,cAD9E,EAC8F,IAD9F,CADc;AAGnBC,YAAAA,MAAM,EAAE;AAHW,WAAd,EAIN5D,OAJM,CADM;AAMfsD,UAAAA,MANe;AAOfO,UAAAA,cAAc,EAAE,CAAC,cAAD,EAAiB,kBAAjB,CAPD;AAQfC,UAAAA,UAAU,EAAE,CAAC,cAAD,EAAiB,kBAAjB,CARG;AASf5D,UAAAA,OAAO,EAAE,KAAKA;AATC,SAAnB;;AAWA,YAAImD,QAAJ,EAAc;AACVxD,UAAAA,mBAAmB,CAACkE,gBAApB,CAAqCP,UAArC,EAAiDH,QAAjD;AACH,SAFD,MAGK;AACD,iBAAOxD,mBAAmB,CAACkE,gBAApB,CAAqCP,UAArC,CAAP;AACH;AACJ;AAp+BmB;AAAA;AAAA,0BAq+BhBL,gBAr+BgB,EAq+BEC,iBAr+BF,EAq+BqBC,QAr+BrB,EAq+B+B;AAC/C,YAAIC,MAAM,GAAIH,gBAAgB,IAC1B,EADJ;AAEA,YAAInD,OAAO,GAAIoD,iBAAiB,IAAI,EAApC;;AACA,YAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;AACxCE,UAAAA,QAAQ,GAAGF,gBAAX;AACAG,UAAAA,MAAM,GAAG,EAAT;AACAtD,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAI,OAAOoD,iBAAP,KAA6B,UAAjC,EAA6C;AACzCC,UAAAA,QAAQ,GAAGD,iBAAX;AACApD,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAMuD,OAAO,GAAGvD,OAAO,CAACuD,OAAR,IAAmB,sCAAnC;AACA,YAAMC,UAAU,GAAG;AACfxD,UAAAA,OAAO,EAAER,MAAM,CAACiE,MAAP,CAAc;AACnBC,YAAAA,GAAG,EAAE,CAACH,OAAO,GACT,qEADC,EACsEI,OADtE,CAC8E,cAD9E,EAC8F,IAD9F,CADc;AAGnBC,YAAAA,MAAM,EAAE;AAHW,WAAd,EAIN5D,OAJM,CADM;AAMfsD,UAAAA,MANe;AAOfO,UAAAA,cAAc,EAAE,CAAC,cAAD,EAAiB,kBAAjB,CAPD;AAQfC,UAAAA,UAAU,EAAE,CAAC,cAAD,EAAiB,kBAAjB,CARG;AASf5D,UAAAA,OAAO,EAAE,KAAKA;AATC,SAAnB;;AAWA,YAAImD,QAAJ,EAAc;AACVxD,UAAAA,mBAAmB,CAACkE,gBAApB,CAAqCP,UAArC,EAAiDH,QAAjD;AACH,SAFD,MAGK;AACD,iBAAOxD,mBAAmB,CAACkE,gBAApB,CAAqCP,UAArC,CAAP;AACH;AACJ;AApgCmB;AAAA;AAAA,2BAqgCfL,gBArgCe,EAqgCGC,iBArgCH,EAqgCsBC,QArgCtB,EAqgCgC;AAChD,YAAIC,MAAM,GAAIH,gBAAgB,IAC1B,EADJ;AAEA,YAAInD,OAAO,GAAIoD,iBAAiB,IAAI,EAApC;;AACA,YAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;AACxCE,UAAAA,QAAQ,GAAGF,gBAAX;AACAG,UAAAA,MAAM,GAAG,EAAT;AACAtD,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAI,OAAOoD,iBAAP,KAA6B,UAAjC,EAA6C;AACzCC,UAAAA,QAAQ,GAAGD,iBAAX;AACApD,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAMuD,OAAO,GAAGvD,OAAO,CAACuD,OAAR,IAAmB,sCAAnC;AACA,YAAMC,UAAU,GAAG;AACfxD,UAAAA,OAAO,EAAER,MAAM,CAACiE,MAAP,CAAc;AACnBC,YAAAA,GAAG,EAAE,CAACH,OAAO,GAAG,iDAAX,EAA8DI,OAA9D,CAAsE,cAAtE,EAAsF,IAAtF,CADc;AAEnBC,YAAAA,MAAM,EAAE;AAFW,WAAd,EAGN5D,OAHM,CADM;AAKfsD,UAAAA,MALe;AAMfO,UAAAA,cAAc,EAAE,CAAC,cAAD,CAND;AAOfC,UAAAA,UAAU,EAAE,CAAC,cAAD,CAPG;AAQf5D,UAAAA,OAAO,EAAE,KAAKA;AARC,SAAnB;;AAUA,YAAImD,QAAJ,EAAc;AACVxD,UAAAA,mBAAmB,CAACkE,gBAApB,CAAqCP,UAArC,EAAiDH,QAAjD;AACH,SAFD,MAGK;AACD,iBAAOxD,mBAAmB,CAACkE,gBAApB,CAAqCP,UAArC,CAAP;AACH;AACJ;AAniCmB;AAAA;AAAA,4BAoiCdL,gBApiCc,EAoiCIC,iBApiCJ,EAoiCuBC,QApiCvB,EAoiCiC;AACjD,YAAIC,MAAM,GAAIH,gBAAgB,IAC1B,EADJ;AAEA,YAAInD,OAAO,GAAIoD,iBAAiB,IAAI,EAApC;;AACA,YAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;AACxCE,UAAAA,QAAQ,GAAGF,gBAAX;AACAG,UAAAA,MAAM,GAAG,EAAT;AACAtD,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAI,OAAOoD,iBAAP,KAA6B,UAAjC,EAA6C;AACzCC,UAAAA,QAAQ,GAAGD,iBAAX;AACApD,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAMuD,OAAO,GAAGvD,OAAO,CAACuD,OAAR,IAAmB,sCAAnC;AACA,YAAMC,UAAU,GAAG;AACfxD,UAAAA,OAAO,EAAER,MAAM,CAACiE,MAAP,CAAc;AACnBC,YAAAA,GAAG,EAAE,CAACH,OAAO,GACT,qEADC,EACsEI,OADtE,CAC8E,cAD9E,EAC8F,IAD9F,CADc;AAGnBC,YAAAA,MAAM,EAAE;AAHW,WAAd,EAIN5D,OAJM,CADM;AAMfsD,UAAAA,MANe;AAOfO,UAAAA,cAAc,EAAE,CAAC,cAAD,EAAiB,kBAAjB,CAPD;AAQfC,UAAAA,UAAU,EAAE,CAAC,cAAD,EAAiB,kBAAjB,CARG;AASf5D,UAAAA,OAAO,EAAE,KAAKA;AATC,SAAnB;;AAWA,YAAImD,QAAJ,EAAc;AACVxD,UAAAA,mBAAmB,CAACkE,gBAApB,CAAqCP,UAArC,EAAiDH,QAAjD;AACH,SAFD,MAGK;AACD,iBAAOxD,mBAAmB,CAACkE,gBAApB,CAAqCP,UAArC,CAAP;AACH;AACJ;AAnkCmB;;AAAA;AAAA;;AAqkCxB5D,EAAAA,eAAe,CAAC6C,oCAAhB,GAAuDA,oCAAvD;;AArkCwB,MAskClBE,8BAtkCkB;AAukCpB,4CAAYzC,OAAZ,EAAqB;AAAA;;AACjB,WAAKA,OAAL,GAAeA,OAAf;AACA,WAAK0B,cAAL,GAAsB,IAAIuC,6CAAJ,CAAkD,KAAKjE,OAAvD,CAAtB;AACH;;AA1kCmB;AAAA;AAAA,+DA2kCqBiD,gBA3kCrB,EA2kCuCC,iBA3kCvC,EA2kC0DC,QA3kC1D,EA2kCoE;AACpF,YAAIC,MAAM,GAAIH,gBAAgB,IAC1B,EADJ;AAEA,YAAInD,OAAO,GAAIoD,iBAAiB,IAAI,EAApC;;AACA,YAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;AACxCE,UAAAA,QAAQ,GAAGF,gBAAX;AACAG,UAAAA,MAAM,GAAG,EAAT;AACAtD,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAI,OAAOoD,iBAAP,KAA6B,UAAjC,EAA6C;AACzCC,UAAAA,QAAQ,GAAGD,iBAAX;AACApD,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAMuD,OAAO,GAAGvD,OAAO,CAACuD,OAAR,IAAmB,sCAAnC;AACA,YAAMC,UAAU,GAAG;AACfxD,UAAAA,OAAO,EAAER,MAAM,CAACiE,MAAP,CAAc;AACnBC,YAAAA,GAAG,EAAE,CAACH,OAAO,GACT,kGADC,EACmGI,OADnG,CAC2G,cAD3G,EAC2H,IAD3H,CADc;AAGnBC,YAAAA,MAAM,EAAE;AAHW,WAAd,EAIN5D,OAJM,CADM;AAMfsD,UAAAA,MANe;AAOfO,UAAAA,cAAc,EAAE,CAAC,cAAD,EAAiB,YAAjB,CAPD;AAQfC,UAAAA,UAAU,EAAE,CAAC,cAAD,EAAiB,YAAjB,CARG;AASf5D,UAAAA,OAAO,EAAE,KAAKA;AATC,SAAnB;;AAWA,YAAImD,QAAJ,EAAc;AACVxD,UAAAA,mBAAmB,CAACkE,gBAApB,CAAqCP,UAArC,EAAiDH,QAAjD;AACH,SAFD,MAGK;AACD,iBAAOxD,mBAAmB,CAACkE,gBAApB,CAAqCP,UAArC,CAAP;AACH;AACJ;AA1mCmB;AAAA;AAAA,+DA2mCqBL,gBA3mCrB,EA2mCuCC,iBA3mCvC,EA2mC0DC,QA3mC1D,EA2mCoE;AACpF,YAAIC,MAAM,GAAIH,gBAAgB,IAC1B,EADJ;AAEA,YAAInD,OAAO,GAAIoD,iBAAiB,IAAI,EAApC;;AACA,YAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;AACxCE,UAAAA,QAAQ,GAAGF,gBAAX;AACAG,UAAAA,MAAM,GAAG,EAAT;AACAtD,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAI,OAAOoD,iBAAP,KAA6B,UAAjC,EAA6C;AACzCC,UAAAA,QAAQ,GAAGD,iBAAX;AACApD,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAMuD,OAAO,GAAGvD,OAAO,CAACuD,OAAR,IAAmB,sCAAnC;AACA,YAAMC,UAAU,GAAG;AACfxD,UAAAA,OAAO,EAAER,MAAM,CAACiE,MAAP,CAAc;AACnBC,YAAAA,GAAG,EAAE,CAACH,OAAO,GACT,kGADC,EACmGI,OADnG,CAC2G,cAD3G,EAC2H,IAD3H,CADc;AAGnBC,YAAAA,MAAM,EAAE;AAHW,WAAd,EAIN5D,OAJM,CADM;AAMfsD,UAAAA,MANe;AAOfO,UAAAA,cAAc,EAAE,CAAC,cAAD,EAAiB,YAAjB,CAPD;AAQfC,UAAAA,UAAU,EAAE,CAAC,cAAD,EAAiB,YAAjB,CARG;AASf5D,UAAAA,OAAO,EAAE,KAAKA;AATC,SAAnB;;AAWA,YAAImD,QAAJ,EAAc;AACVxD,UAAAA,mBAAmB,CAACkE,gBAApB,CAAqCP,UAArC,EAAiDH,QAAjD;AACH,SAFD,MAGK;AACD,iBAAOxD,mBAAmB,CAACkE,gBAApB,CAAqCP,UAArC,CAAP;AACH;AACJ;AA1oCmB;AAAA;AAAA,6BA2oCbL,gBA3oCa,EA2oCKC,iBA3oCL,EA2oCwBC,QA3oCxB,EA2oCkC;AAClD,YAAIC,MAAM,GAAIH,gBAAgB,IAC1B,EADJ;AAEA,YAAInD,OAAO,GAAIoD,iBAAiB,IAAI,EAApC;;AACA,YAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;AACxCE,UAAAA,QAAQ,GAAGF,gBAAX;AACAG,UAAAA,MAAM,GAAG,EAAT;AACAtD,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAI,OAAOoD,iBAAP,KAA6B,UAAjC,EAA6C;AACzCC,UAAAA,QAAQ,GAAGD,iBAAX;AACApD,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAMuD,OAAO,GAAGvD,OAAO,CAACuD,OAAR,IAAmB,sCAAnC;AACA,YAAMC,UAAU,GAAG;AACfxD,UAAAA,OAAO,EAAER,MAAM,CAACiE,MAAP,CAAc;AACnBC,YAAAA,GAAG,EAAE,CAACH,OAAO,GAAG,2CAAX,EAAwDI,OAAxD,CAAgE,cAAhE,EAAgF,IAAhF,CADc;AAEnBC,YAAAA,MAAM,EAAE;AAFW,WAAd,EAGN5D,OAHM,CADM;AAKfsD,UAAAA,MALe;AAMfO,UAAAA,cAAc,EAAE,CAAC,cAAD,CAND;AAOfC,UAAAA,UAAU,EAAE,CAAC,cAAD,CAPG;AAQf5D,UAAAA,OAAO,EAAE,KAAKA;AARC,SAAnB;;AAUA,YAAImD,QAAJ,EAAc;AACVxD,UAAAA,mBAAmB,CAACkE,gBAApB,CAAqCP,UAArC,EAAiDH,QAAjD;AACH,SAFD,MAGK;AACD,iBAAOxD,mBAAmB,CAACkE,gBAApB,CAAqCP,UAArC,CAAP;AACH;AACJ;AAzqCmB;AAAA;AAAA,8BA0qCbL,gBA1qCa,EA0qCKC,iBA1qCL,EA0qCwBC,QA1qCxB,EA0qCkC;AAClD,YAAIC,MAAM,GAAIH,gBAAgB,IAC1B,EADJ;AAEA,YAAInD,OAAO,GAAIoD,iBAAiB,IAAI,EAApC;;AACA,YAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;AACxCE,UAAAA,QAAQ,GAAGF,gBAAX;AACAG,UAAAA,MAAM,GAAG,EAAT;AACAtD,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAI,OAAOoD,iBAAP,KAA6B,UAAjC,EAA6C;AACzCC,UAAAA,QAAQ,GAAGD,iBAAX;AACApD,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAMuD,OAAO,GAAGvD,OAAO,CAACuD,OAAR,IAAmB,sCAAnC;AACA,YAAMC,UAAU,GAAG;AACfxD,UAAAA,OAAO,EAAER,MAAM,CAACiE,MAAP,CAAc;AACnBC,YAAAA,GAAG,EAAE,CAACH,OAAO,GACT,yDADC,EAC0DI,OAD1D,CACkE,cADlE,EACkF,IADlF,CADc;AAGnBC,YAAAA,MAAM,EAAE;AAHW,WAAd,EAIN5D,OAJM,CADM;AAMfsD,UAAAA,MANe;AAOfO,UAAAA,cAAc,EAAE,CAAC,cAAD,EAAiB,YAAjB,CAPD;AAQfC,UAAAA,UAAU,EAAE,CAAC,cAAD,EAAiB,YAAjB,CARG;AASf5D,UAAAA,OAAO,EAAE,KAAKA;AATC,SAAnB;;AAWA,YAAImD,QAAJ,EAAc;AACVxD,UAAAA,mBAAmB,CAACkE,gBAApB,CAAqCP,UAArC,EAAiDH,QAAjD;AACH,SAFD,MAGK;AACD,iBAAOxD,mBAAmB,CAACkE,gBAApB,CAAqCP,UAArC,CAAP;AACH;AACJ;AAzsCmB;AAAA;AAAA,0BA0sChBL,gBA1sCgB,EA0sCEC,iBA1sCF,EA0sCqBC,QA1sCrB,EA0sC+B;AAC/C,YAAIC,MAAM,GAAIH,gBAAgB,IAC1B,EADJ;AAEA,YAAInD,OAAO,GAAIoD,iBAAiB,IAAI,EAApC;;AACA,YAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;AACxCE,UAAAA,QAAQ,GAAGF,gBAAX;AACAG,UAAAA,MAAM,GAAG,EAAT;AACAtD,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAI,OAAOoD,iBAAP,KAA6B,UAAjC,EAA6C;AACzCC,UAAAA,QAAQ,GAAGD,iBAAX;AACApD,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAMuD,OAAO,GAAGvD,OAAO,CAACuD,OAAR,IAAmB,sCAAnC;AACA,YAAMC,UAAU,GAAG;AACfxD,UAAAA,OAAO,EAAER,MAAM,CAACiE,MAAP,CAAc;AACnBC,YAAAA,GAAG,EAAE,CAACH,OAAO,GACT,yDADC,EAC0DI,OAD1D,CACkE,cADlE,EACkF,IADlF,CADc;AAGnBC,YAAAA,MAAM,EAAE;AAHW,WAAd,EAIN5D,OAJM,CADM;AAMfsD,UAAAA,MANe;AAOfO,UAAAA,cAAc,EAAE,CAAC,cAAD,EAAiB,YAAjB,CAPD;AAQfC,UAAAA,UAAU,EAAE,CAAC,cAAD,EAAiB,YAAjB,CARG;AASf5D,UAAAA,OAAO,EAAE,KAAKA;AATC,SAAnB;;AAWA,YAAImD,QAAJ,EAAc;AACVxD,UAAAA,mBAAmB,CAACkE,gBAApB,CAAqCP,UAArC,EAAiDH,QAAjD;AACH,SAFD,MAGK;AACD,iBAAOxD,mBAAmB,CAACkE,gBAApB,CAAqCP,UAArC,CAAP;AACH;AACJ;AAzuCmB;AAAA;AAAA,2BA0uCfL,gBA1uCe,EA0uCGC,iBA1uCH,EA0uCsBC,QA1uCtB,EA0uCgC;AAChD,YAAIC,MAAM,GAAIH,gBAAgB,IAC1B,EADJ;AAEA,YAAInD,OAAO,GAAIoD,iBAAiB,IAAI,EAApC;;AACA,YAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;AACxCE,UAAAA,QAAQ,GAAGF,gBAAX;AACAG,UAAAA,MAAM,GAAG,EAAT;AACAtD,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAI,OAAOoD,iBAAP,KAA6B,UAAjC,EAA6C;AACzCC,UAAAA,QAAQ,GAAGD,iBAAX;AACApD,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAMuD,OAAO,GAAGvD,OAAO,CAACuD,OAAR,IAAmB,sCAAnC;AACA,YAAMC,UAAU,GAAG;AACfxD,UAAAA,OAAO,EAAER,MAAM,CAACiE,MAAP,CAAc;AACnBC,YAAAA,GAAG,EAAE,CAACH,OAAO,GAAG,2CAAX,EAAwDI,OAAxD,CAAgE,cAAhE,EAAgF,IAAhF,CADc;AAEnBC,YAAAA,MAAM,EAAE;AAFW,WAAd,EAGN5D,OAHM,CADM;AAKfsD,UAAAA,MALe;AAMfO,UAAAA,cAAc,EAAE,CAAC,cAAD,CAND;AAOfC,UAAAA,UAAU,EAAE,CAAC,cAAD,CAPG;AAQf5D,UAAAA,OAAO,EAAE,KAAKA;AARC,SAAnB;;AAUA,YAAImD,QAAJ,EAAc;AACVxD,UAAAA,mBAAmB,CAACkE,gBAApB,CAAqCP,UAArC,EAAiDH,QAAjD;AACH,SAFD,MAGK;AACD,iBAAOxD,mBAAmB,CAACkE,gBAApB,CAAqCP,UAArC,CAAP;AACH;AACJ;AAxwCmB;AAAA;AAAA,4BAywCdL,gBAzwCc,EAywCIC,iBAzwCJ,EAywCuBC,QAzwCvB,EAywCiC;AACjD,YAAIC,MAAM,GAAIH,gBAAgB,IAC1B,EADJ;AAEA,YAAInD,OAAO,GAAIoD,iBAAiB,IAAI,EAApC;;AACA,YAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;AACxCE,UAAAA,QAAQ,GAAGF,gBAAX;AACAG,UAAAA,MAAM,GAAG,EAAT;AACAtD,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAI,OAAOoD,iBAAP,KAA6B,UAAjC,EAA6C;AACzCC,UAAAA,QAAQ,GAAGD,iBAAX;AACApD,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAMuD,OAAO,GAAGvD,OAAO,CAACuD,OAAR,IAAmB,sCAAnC;AACA,YAAMC,UAAU,GAAG;AACfxD,UAAAA,OAAO,EAAER,MAAM,CAACiE,MAAP,CAAc;AACnBC,YAAAA,GAAG,EAAE,CAACH,OAAO,GACT,yDADC,EAC0DI,OAD1D,CACkE,cADlE,EACkF,IADlF,CADc;AAGnBC,YAAAA,MAAM,EAAE;AAHW,WAAd,EAIN5D,OAJM,CADM;AAMfsD,UAAAA,MANe;AAOfO,UAAAA,cAAc,EAAE,CAAC,cAAD,EAAiB,YAAjB,CAPD;AAQfC,UAAAA,UAAU,EAAE,CAAC,cAAD,EAAiB,YAAjB,CARG;AASf5D,UAAAA,OAAO,EAAE,KAAKA;AATC,SAAnB;;AAWA,YAAImD,QAAJ,EAAc;AACVxD,UAAAA,mBAAmB,CAACkE,gBAApB,CAAqCP,UAArC,EAAiDH,QAAjD;AACH,SAFD,MAGK;AACD,iBAAOxD,mBAAmB,CAACkE,gBAApB,CAAqCP,UAArC,CAAP;AACH;AACJ;AAxyCmB;;AAAA;AAAA;;AA0yCxB5D,EAAAA,eAAe,CAAC+C,8BAAhB,GAAiDA,8BAAjD;;AA1yCwB,MA2yClBwB,6CA3yCkB,GA4yCpB,uDAAYjE,OAAZ,EAAqB;AAAA;;AACjB,SAAKA,OAAL,GAAeA,OAAf;AACA,SAAKkE,wBAAL,GAAgC,IAAIC,sEAAJ,CAA2E,KAAKnE,OAAhF,CAAhC;AACH,GA/yCmB;;AAizCxBN,EAAAA,eAAe,CAACuE,6CAAhB,GAAgEA,6CAAhE;;AAjzCwB,MAkzClBE,sEAlzCkB;AAmzCpB,oFAAYnE,OAAZ,EAAqB;AAAA;;AACjB,WAAKA,OAAL,GAAeA,OAAf;AACH;;AArzCmB;AAAA;AAAA,6BAszCbiD,gBAtzCa,EAszCKC,iBAtzCL,EAszCwBC,QAtzCxB,EAszCkC;AAClD,YAAIC,MAAM,GAAIH,gBAAgB,IAC1B,EADJ;AAEA,YAAInD,OAAO,GAAIoD,iBAAiB,IAAI,EAApC;;AACA,YAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;AACxCE,UAAAA,QAAQ,GAAGF,gBAAX;AACAG,UAAAA,MAAM,GAAG,EAAT;AACAtD,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAI,OAAOoD,iBAAP,KAA6B,UAAjC,EAA6C;AACzCC,UAAAA,QAAQ,GAAGD,iBAAX;AACApD,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAMuD,OAAO,GAAGvD,OAAO,CAACuD,OAAR,IAAmB,sCAAnC;AACA,YAAMC,UAAU,GAAG;AACfxD,UAAAA,OAAO,EAAER,MAAM,CAACiE,MAAP,CAAc;AACnBC,YAAAA,GAAG,EAAE,CAACH,OAAO,GACT,kHADC,EACmHI,OADnH,CAC2H,cAD3H,EAC2I,IAD3I,CADc;AAGnBC,YAAAA,MAAM,EAAE;AAHW,WAAd,EAIN5D,OAJM,CADM;AAMfsD,UAAAA,MANe;AAOfO,UAAAA,cAAc,EAAE,CAAC,cAAD,EAAiB,YAAjB,EAA+B,eAA/B,CAPD;AAQfC,UAAAA,UAAU,EAAE,CAAC,cAAD,EAAiB,YAAjB,EAA+B,eAA/B,CARG;AASf5D,UAAAA,OAAO,EAAE,KAAKA;AATC,SAAnB;;AAWA,YAAImD,QAAJ,EAAc;AACVxD,UAAAA,mBAAmB,CAACkE,gBAApB,CAAqCP,UAArC,EAAiDH,QAAjD;AACH,SAFD,MAGK;AACD,iBAAOxD,mBAAmB,CAACkE,gBAApB,CAAqCP,UAArC,CAAP;AACH;AACJ;AAr1CmB;AAAA;AAAA,8BAs1CbL,gBAt1Ca,EAs1CKC,iBAt1CL,EAs1CwBC,QAt1CxB,EAs1CkC;AAClD,YAAIC,MAAM,GAAIH,gBAAgB,IAC1B,EADJ;AAEA,YAAInD,OAAO,GAAIoD,iBAAiB,IAAI,EAApC;;AACA,YAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;AACxCE,UAAAA,QAAQ,GAAGF,gBAAX;AACAG,UAAAA,MAAM,GAAG,EAAT;AACAtD,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAI,OAAOoD,iBAAP,KAA6B,UAAjC,EAA6C;AACzCC,UAAAA,QAAQ,GAAGD,iBAAX;AACApD,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAMuD,OAAO,GAAGvD,OAAO,CAACuD,OAAR,IAAmB,sCAAnC;AACA,YAAMC,UAAU,GAAG;AACfxD,UAAAA,OAAO,EAAER,MAAM,CAACiE,MAAP,CAAc;AACnBC,YAAAA,GAAG,EAAE,CAACH,OAAO,GACT,+IADC,EACgJI,OADhJ,CACwJ,cADxJ,EACwK,IADxK,CADc;AAGnBC,YAAAA,MAAM,EAAE;AAHW,WAAd,EAIN5D,OAJM,CADM;AAMfsD,UAAAA,MANe;AAOfO,UAAAA,cAAc,EAAE,CACZ,cADY,EAEZ,YAFY,EAGZ,eAHY,EAIZ,2BAJY,CAPD;AAafC,UAAAA,UAAU,EAAE,CACR,cADQ,EAER,2BAFQ,EAGR,YAHQ,EAIR,eAJQ,CAbG;AAmBf5D,UAAAA,OAAO,EAAE,KAAKA;AAnBC,SAAnB;;AAqBA,YAAImD,QAAJ,EAAc;AACVxD,UAAAA,mBAAmB,CAACkE,gBAApB,CAAqCP,UAArC,EAAiDH,QAAjD;AACH,SAFD,MAGK;AACD,iBAAOxD,mBAAmB,CAACkE,gBAApB,CAAqCP,UAArC,CAAP;AACH;AACJ;AA/3CmB;AAAA;AAAA,0BAg4ChBL,gBAh4CgB,EAg4CEC,iBAh4CF,EAg4CqBC,QAh4CrB,EAg4C+B;AAC/C,YAAIC,MAAM,GAAIH,gBAAgB,IAC1B,EADJ;AAEA,YAAInD,OAAO,GAAIoD,iBAAiB,IAAI,EAApC;;AACA,YAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;AACxCE,UAAAA,QAAQ,GAAGF,gBAAX;AACAG,UAAAA,MAAM,GAAG,EAAT;AACAtD,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAI,OAAOoD,iBAAP,KAA6B,UAAjC,EAA6C;AACzCC,UAAAA,QAAQ,GAAGD,iBAAX;AACApD,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAMuD,OAAO,GAAGvD,OAAO,CAACuD,OAAR,IAAmB,sCAAnC;AACA,YAAMC,UAAU,GAAG;AACfxD,UAAAA,OAAO,EAAER,MAAM,CAACiE,MAAP,CAAc;AACnBC,YAAAA,GAAG,EAAE,CAACH,OAAO,GACT,+IADC,EACgJI,OADhJ,CACwJ,cADxJ,EACwK,IADxK,CADc;AAGnBC,YAAAA,MAAM,EAAE;AAHW,WAAd,EAIN5D,OAJM,CADM;AAMfsD,UAAAA,MANe;AAOfO,UAAAA,cAAc,EAAE,CACZ,cADY,EAEZ,YAFY,EAGZ,eAHY,EAIZ,2BAJY,CAPD;AAafC,UAAAA,UAAU,EAAE,CACR,cADQ,EAER,2BAFQ,EAGR,YAHQ,EAIR,eAJQ,CAbG;AAmBf5D,UAAAA,OAAO,EAAE,KAAKA;AAnBC,SAAnB;;AAqBA,YAAImD,QAAJ,EAAc;AACVxD,UAAAA,mBAAmB,CAACkE,gBAApB,CAAqCP,UAArC,EAAiDH,QAAjD;AACH,SAFD,MAGK;AACD,iBAAOxD,mBAAmB,CAACkE,gBAApB,CAAqCP,UAArC,CAAP;AACH;AACJ;AAz6CmB;AAAA;AAAA,2BA06CfL,gBA16Ce,EA06CGC,iBA16CH,EA06CsBC,QA16CtB,EA06CgC;AAChD,YAAIC,MAAM,GAAIH,gBAAgB,IAC1B,EADJ;AAEA,YAAInD,OAAO,GAAIoD,iBAAiB,IAAI,EAApC;;AACA,YAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;AACxCE,UAAAA,QAAQ,GAAGF,gBAAX;AACAG,UAAAA,MAAM,GAAG,EAAT;AACAtD,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAI,OAAOoD,iBAAP,KAA6B,UAAjC,EAA6C;AACzCC,UAAAA,QAAQ,GAAGD,iBAAX;AACApD,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAMuD,OAAO,GAAGvD,OAAO,CAACuD,OAAR,IAAmB,sCAAnC;AACA,YAAMC,UAAU,GAAG;AACfxD,UAAAA,OAAO,EAAER,MAAM,CAACiE,MAAP,CAAc;AACnBC,YAAAA,GAAG,EAAE,CAACH,OAAO,GACT,kHADC,EACmHI,OADnH,CAC2H,cAD3H,EAC2I,IAD3I,CADc;AAGnBC,YAAAA,MAAM,EAAE;AAHW,WAAd,EAIN5D,OAJM,CADM;AAMfsD,UAAAA,MANe;AAOfO,UAAAA,cAAc,EAAE,CAAC,cAAD,EAAiB,YAAjB,EAA+B,eAA/B,CAPD;AAQfC,UAAAA,UAAU,EAAE,CAAC,cAAD,EAAiB,YAAjB,EAA+B,eAA/B,CARG;AASf5D,UAAAA,OAAO,EAAE,KAAKA;AATC,SAAnB;;AAWA,YAAImD,QAAJ,EAAc;AACVxD,UAAAA,mBAAmB,CAACkE,gBAApB,CAAqCP,UAArC,EAAiDH,QAAjD;AACH,SAFD,MAGK;AACD,iBAAOxD,mBAAmB,CAACkE,gBAApB,CAAqCP,UAArC,CAAP;AACH;AACJ;AAz8CmB;;AAAA;AAAA;;AA28CxB5D,EAAAA,eAAe,CAACyE,sEAAhB,GAAyFA,sEAAzF;;AA38CwB,MA48ClBxB,kCA58CkB;AA68CpB,gDAAY3C,OAAZ,EAAqB;AAAA;;AACjB,WAAKA,OAAL,GAAeA,OAAf;AACA,WAAKoE,iBAAL,GAAyB,IAAIC,oDAAJ,CAAyD,KAAKrE,OAA9D,CAAzB;AACH;;AAh9CmB;AAAA;AAAA,6BAi9CbiD,gBAj9Ca,EAi9CKC,iBAj9CL,EAi9CwBC,QAj9CxB,EAi9CkC;AAClD,YAAIC,MAAM,GAAIH,gBAAgB,IAC1B,EADJ;AAEA,YAAInD,OAAO,GAAIoD,iBAAiB,IAAI,EAApC;;AACA,YAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;AACxCE,UAAAA,QAAQ,GAAGF,gBAAX;AACAG,UAAAA,MAAM,GAAG,EAAT;AACAtD,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAI,OAAOoD,iBAAP,KAA6B,UAAjC,EAA6C;AACzCC,UAAAA,QAAQ,GAAGD,iBAAX;AACApD,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAMuD,OAAO,GAAGvD,OAAO,CAACuD,OAAR,IAAmB,sCAAnC;AACA,YAAMC,UAAU,GAAG;AACfxD,UAAAA,OAAO,EAAER,MAAM,CAACiE,MAAP,CAAc;AACnBC,YAAAA,GAAG,EAAE,CAACH,OAAO,GAAG,+CAAX,EAA4DI,OAA5D,CAAoE,cAApE,EAAoF,IAApF,CADc;AAEnBC,YAAAA,MAAM,EAAE;AAFW,WAAd,EAGN5D,OAHM,CADM;AAKfsD,UAAAA,MALe;AAMfO,UAAAA,cAAc,EAAE,CAAC,cAAD,CAND;AAOfC,UAAAA,UAAU,EAAE,CAAC,cAAD,CAPG;AAQf5D,UAAAA,OAAO,EAAE,KAAKA;AARC,SAAnB;;AAUA,YAAImD,QAAJ,EAAc;AACVxD,UAAAA,mBAAmB,CAACkE,gBAApB,CAAqCP,UAArC,EAAiDH,QAAjD;AACH,SAFD,MAGK;AACD,iBAAOxD,mBAAmB,CAACkE,gBAApB,CAAqCP,UAArC,CAAP;AACH;AACJ;AA/+CmB;AAAA;AAAA,0BAg/ChBL,gBAh/CgB,EAg/CEC,iBAh/CF,EAg/CqBC,QAh/CrB,EAg/C+B;AAC/C,YAAIC,MAAM,GAAIH,gBAAgB,IAC1B,EADJ;AAEA,YAAInD,OAAO,GAAIoD,iBAAiB,IAAI,EAApC;;AACA,YAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;AACxCE,UAAAA,QAAQ,GAAGF,gBAAX;AACAG,UAAAA,MAAM,GAAG,EAAT;AACAtD,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAI,OAAOoD,iBAAP,KAA6B,UAAjC,EAA6C;AACzCC,UAAAA,QAAQ,GAAGD,iBAAX;AACApD,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAMuD,OAAO,GAAGvD,OAAO,CAACuD,OAAR,IAAmB,sCAAnC;AACA,YAAMC,UAAU,GAAG;AACfxD,UAAAA,OAAO,EAAER,MAAM,CAACiE,MAAP,CAAc;AACnBC,YAAAA,GAAG,EAAE,CAACH,OAAO,GACT,iEADC,EACkEI,OADlE,CAC0E,cAD1E,EAC0F,IAD1F,CADc;AAGnBC,YAAAA,MAAM,EAAE;AAHW,WAAd,EAIN5D,OAJM,CADM;AAMfsD,UAAAA,MANe;AAOfO,UAAAA,cAAc,EAAE,CAAC,cAAD,EAAiB,gBAAjB,CAPD;AAQfC,UAAAA,UAAU,EAAE,CAAC,cAAD,EAAiB,gBAAjB,CARG;AASf5D,UAAAA,OAAO,EAAE,KAAKA;AATC,SAAnB;;AAWA,YAAImD,QAAJ,EAAc;AACVxD,UAAAA,mBAAmB,CAACkE,gBAApB,CAAqCP,UAArC,EAAiDH,QAAjD;AACH,SAFD,MAGK;AACD,iBAAOxD,mBAAmB,CAACkE,gBAApB,CAAqCP,UAArC,CAAP;AACH;AACJ;AA/gDmB;AAAA;AAAA,2BAghDfL,gBAhhDe,EAghDGC,iBAhhDH,EAghDsBC,QAhhDtB,EAghDgC;AAChD,YAAIC,MAAM,GAAIH,gBAAgB,IAC1B,EADJ;AAEA,YAAInD,OAAO,GAAIoD,iBAAiB,IAAI,EAApC;;AACA,YAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;AACxCE,UAAAA,QAAQ,GAAGF,gBAAX;AACAG,UAAAA,MAAM,GAAG,EAAT;AACAtD,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAI,OAAOoD,iBAAP,KAA6B,UAAjC,EAA6C;AACzCC,UAAAA,QAAQ,GAAGD,iBAAX;AACApD,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAMuD,OAAO,GAAGvD,OAAO,CAACuD,OAAR,IAAmB,sCAAnC;AACA,YAAMC,UAAU,GAAG;AACfxD,UAAAA,OAAO,EAAER,MAAM,CAACiE,MAAP,CAAc;AACnBC,YAAAA,GAAG,EAAE,CAACH,OAAO,GAAG,+CAAX,EAA4DI,OAA5D,CAAoE,cAApE,EAAoF,IAApF,CADc;AAEnBC,YAAAA,MAAM,EAAE;AAFW,WAAd,EAGN5D,OAHM,CADM;AAKfsD,UAAAA,MALe;AAMfO,UAAAA,cAAc,EAAE,CAAC,cAAD,CAND;AAOfC,UAAAA,UAAU,EAAE,CAAC,cAAD,CAPG;AAQf5D,UAAAA,OAAO,EAAE,KAAKA;AARC,SAAnB;;AAUA,YAAImD,QAAJ,EAAc;AACVxD,UAAAA,mBAAmB,CAACkE,gBAApB,CAAqCP,UAArC,EAAiDH,QAAjD;AACH,SAFD,MAGK;AACD,iBAAOxD,mBAAmB,CAACkE,gBAApB,CAAqCP,UAArC,CAAP;AACH;AACJ;AA9iDmB;AAAA;AAAA,4BA+iDdL,gBA/iDc,EA+iDIC,iBA/iDJ,EA+iDuBC,QA/iDvB,EA+iDiC;AACjD,YAAIC,MAAM,GAAIH,gBAAgB,IAC1B,EADJ;AAEA,YAAInD,OAAO,GAAIoD,iBAAiB,IAAI,EAApC;;AACA,YAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;AACxCE,UAAAA,QAAQ,GAAGF,gBAAX;AACAG,UAAAA,MAAM,GAAG,EAAT;AACAtD,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAI,OAAOoD,iBAAP,KAA6B,UAAjC,EAA6C;AACzCC,UAAAA,QAAQ,GAAGD,iBAAX;AACApD,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAMuD,OAAO,GAAGvD,OAAO,CAACuD,OAAR,IAAmB,sCAAnC;AACA,YAAMC,UAAU,GAAG;AACfxD,UAAAA,OAAO,EAAER,MAAM,CAACiE,MAAP,CAAc;AACnBC,YAAAA,GAAG,EAAE,CAACH,OAAO,GACT,gEADC,EACiEI,OADjE,CACyE,cADzE,EACyF,IADzF,CADc;AAGnBC,YAAAA,MAAM,EAAE;AAHW,WAAd,EAIN5D,OAJM,CADM;AAMfsD,UAAAA,MANe;AAOfO,UAAAA,cAAc,EAAE,CAAC,cAAD,EAAiB,gBAAjB,CAPD;AAQfC,UAAAA,UAAU,EAAE,CAAC,cAAD,EAAiB,gBAAjB,CARG;AASf5D,UAAAA,OAAO,EAAE,KAAKA;AATC,SAAnB;;AAWA,YAAImD,QAAJ,EAAc;AACVxD,UAAAA,mBAAmB,CAACkE,gBAApB,CAAqCP,UAArC,EAAiDH,QAAjD;AACH,SAFD,MAGK;AACD,iBAAOxD,mBAAmB,CAACkE,gBAApB,CAAqCP,UAArC,CAAP;AACH;AACJ;AA9kDmB;;AAAA;AAAA;;AAglDxB5D,EAAAA,eAAe,CAACiD,kCAAhB,GAAqDA,kCAArD;;AAhlDwB,MAilDlB0B,oDAjlDkB;AAklDpB,kEAAYrE,OAAZ,EAAqB;AAAA;;AACjB,WAAKA,OAAL,GAAeA,OAAf;AACH;;AAplDmB;AAAA;AAAA,+BAqlDXiD,gBArlDW,EAqlDOC,iBArlDP,EAqlD0BC,QArlD1B,EAqlDoC;AACpD,YAAIC,MAAM,GAAIH,gBAAgB,IAC1B,EADJ;AAEA,YAAInD,OAAO,GAAIoD,iBAAiB,IAAI,EAApC;;AACA,YAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;AACxCE,UAAAA,QAAQ,GAAGF,gBAAX;AACAG,UAAAA,MAAM,GAAG,EAAT;AACAtD,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAI,OAAOoD,iBAAP,KAA6B,UAAjC,EAA6C;AACzCC,UAAAA,QAAQ,GAAGD,iBAAX;AACApD,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAMuD,OAAO,GAAGvD,OAAO,CAACuD,OAAR,IAAmB,sCAAnC;AACA,YAAMC,UAAU,GAAG;AACfxD,UAAAA,OAAO,EAAER,MAAM,CAACiE,MAAP,CAAc;AACnBC,YAAAA,GAAG,EAAE,CAACH,OAAO,GACT,2FADC,EAC4FI,OAD5F,CACoG,cADpG,EACoH,IADpH,CADc;AAGnBC,YAAAA,MAAM,EAAE;AAHW,WAAd,EAIN5D,OAJM,CADM;AAMfsD,UAAAA,MANe;AAOfO,UAAAA,cAAc,EAAE,CAAC,cAAD,EAAiB,gBAAjB,CAPD;AAQfC,UAAAA,UAAU,EAAE,CAAC,cAAD,EAAiB,gBAAjB,CARG;AASf5D,UAAAA,OAAO,EAAE,KAAKA;AATC,SAAnB;;AAWA,YAAImD,QAAJ,EAAc;AACVxD,UAAAA,mBAAmB,CAACkE,gBAApB,CAAqCP,UAArC,EAAiDH,QAAjD;AACH,SAFD,MAGK;AACD,iBAAOxD,mBAAmB,CAACkE,gBAApB,CAAqCP,UAArC,CAAP;AACH;AACJ;AApnDmB;AAAA;AAAA,6BAqnDbL,gBArnDa,EAqnDKC,iBArnDL,EAqnDwBC,QArnDxB,EAqnDkC;AAClD,YAAIC,MAAM,GAAIH,gBAAgB,IAC1B,EADJ;AAEA,YAAInD,OAAO,GAAIoD,iBAAiB,IAAI,EAApC;;AACA,YAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;AACxCE,UAAAA,QAAQ,GAAGF,gBAAX;AACAG,UAAAA,MAAM,GAAG,EAAT;AACAtD,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAI,OAAOoD,iBAAP,KAA6B,UAAjC,EAA6C;AACzCC,UAAAA,QAAQ,GAAGD,iBAAX;AACApD,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAMuD,OAAO,GAAGvD,OAAO,CAACuD,OAAR,IAAmB,sCAAnC;AACA,YAAMC,UAAU,GAAG;AACfxD,UAAAA,OAAO,EAAER,MAAM,CAACiE,MAAP,CAAc;AACnBC,YAAAA,GAAG,EAAE,CAACH,OAAO,GACT,iFADC,EACkFI,OADlF,CAC0F,cAD1F,EAC0G,IAD1G,CADc;AAGnBC,YAAAA,MAAM,EAAE;AAHW,WAAd,EAIN5D,OAJM,CADM;AAMfsD,UAAAA,MANe;AAOfO,UAAAA,cAAc,EAAE,CAAC,cAAD,EAAiB,gBAAjB,CAPD;AAQfC,UAAAA,UAAU,EAAE,CAAC,cAAD,EAAiB,gBAAjB,CARG;AASf5D,UAAAA,OAAO,EAAE,KAAKA;AATC,SAAnB;;AAWA,YAAImD,QAAJ,EAAc;AACVxD,UAAAA,mBAAmB,CAACkE,gBAApB,CAAqCP,UAArC,EAAiDH,QAAjD;AACH,SAFD,MAGK;AACD,iBAAOxD,mBAAmB,CAACkE,gBAApB,CAAqCP,UAArC,CAAP;AACH;AACJ;AAppDmB;AAAA;AAAA,8BAqpDbL,gBArpDa,EAqpDKC,iBArpDL,EAqpDwBC,QArpDxB,EAqpDkC;AAClD,YAAIC,MAAM,GAAIH,gBAAgB,IAC1B,EADJ;AAEA,YAAInD,OAAO,GAAIoD,iBAAiB,IAAI,EAApC;;AACA,YAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;AACxCE,UAAAA,QAAQ,GAAGF,gBAAX;AACAG,UAAAA,MAAM,GAAG,EAAT;AACAtD,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAI,OAAOoD,iBAAP,KAA6B,UAAjC,EAA6C;AACzCC,UAAAA,QAAQ,GAAGD,iBAAX;AACApD,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAMuD,OAAO,GAAGvD,OAAO,CAACuD,OAAR,IAAmB,sCAAnC;AACA,YAAMC,UAAU,GAAG;AACfxD,UAAAA,OAAO,EAAER,MAAM,CAACiE,MAAP,CAAc;AACnBC,YAAAA,GAAG,EAAE,CAACH,OAAO,GACT,uGADC,EACwGI,OADxG,CACgH,cADhH,EACgI,IADhI,CADc;AAGnBC,YAAAA,MAAM,EAAE;AAHW,WAAd,EAIN5D,OAJM,CADM;AAMfsD,UAAAA,MANe;AAOfO,UAAAA,cAAc,EAAE,CACZ,cADY,EAEZ,gBAFY,EAGZ,oBAHY,CAPD;AAYfC,UAAAA,UAAU,EAAE,CAAC,cAAD,EAAiB,oBAAjB,EAAuC,gBAAvC,CAZG;AAaf5D,UAAAA,OAAO,EAAE,KAAKA;AAbC,SAAnB;;AAeA,YAAImD,QAAJ,EAAc;AACVxD,UAAAA,mBAAmB,CAACkE,gBAApB,CAAqCP,UAArC,EAAiDH,QAAjD;AACH,SAFD,MAGK;AACD,iBAAOxD,mBAAmB,CAACkE,gBAApB,CAAqCP,UAArC,CAAP;AACH;AACJ;AAxrDmB;AAAA;AAAA,2BAyrDfL,gBAzrDe,EAyrDGC,iBAzrDH,EAyrDsBC,QAzrDtB,EAyrDgC;AAChD,YAAIC,MAAM,GAAIH,gBAAgB,IAC1B,EADJ;AAEA,YAAInD,OAAO,GAAIoD,iBAAiB,IAAI,EAApC;;AACA,YAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;AACxCE,UAAAA,QAAQ,GAAGF,gBAAX;AACAG,UAAAA,MAAM,GAAG,EAAT;AACAtD,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAI,OAAOoD,iBAAP,KAA6B,UAAjC,EAA6C;AACzCC,UAAAA,QAAQ,GAAGD,iBAAX;AACApD,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAMuD,OAAO,GAAGvD,OAAO,CAACuD,OAAR,IAAmB,sCAAnC;AACA,YAAMC,UAAU,GAAG;AACfxD,UAAAA,OAAO,EAAER,MAAM,CAACiE,MAAP,CAAc;AACnBC,YAAAA,GAAG,EAAE,CAACH,OAAO,GACT,iFADC,EACkFI,OADlF,CAC0F,cAD1F,EAC0G,IAD1G,CADc;AAGnBC,YAAAA,MAAM,EAAE;AAHW,WAAd,EAIN5D,OAJM,CADM;AAMfsD,UAAAA,MANe;AAOfO,UAAAA,cAAc,EAAE,CAAC,cAAD,EAAiB,gBAAjB,CAPD;AAQfC,UAAAA,UAAU,EAAE,CAAC,cAAD,EAAiB,gBAAjB,CARG;AASf5D,UAAAA,OAAO,EAAE,KAAKA;AATC,SAAnB;;AAWA,YAAImD,QAAJ,EAAc;AACVxD,UAAAA,mBAAmB,CAACkE,gBAApB,CAAqCP,UAArC,EAAiDH,QAAjD;AACH,SAFD,MAGK;AACD,iBAAOxD,mBAAmB,CAACkE,gBAApB,CAAqCP,UAArC,CAAP;AACH;AACJ;AAxtDmB;;AAAA;AAAA;;AA0tDxB5D,EAAAA,eAAe,CAAC2E,oDAAhB,GAAuEA,oDAAvE;;AA1tDwB,MA2tDlBxB,mCA3tDkB;AA4tDpB,iDAAY7C,OAAZ,EAAqB;AAAA;;AACjB,WAAKA,OAAL,GAAeA,OAAf;AACH;;AA9tDmB;AAAA;AAAA,+BA+tDXiD,gBA/tDW,EA+tDOC,iBA/tDP,EA+tD0BC,QA/tD1B,EA+tDoC;AACpD,YAAIC,MAAM,GAAIH,gBAAgB,IAC1B,EADJ;AAEA,YAAInD,OAAO,GAAIoD,iBAAiB,IAAI,EAApC;;AACA,YAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;AACxCE,UAAAA,QAAQ,GAAGF,gBAAX;AACAG,UAAAA,MAAM,GAAG,EAAT;AACAtD,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAI,OAAOoD,iBAAP,KAA6B,UAAjC,EAA6C;AACzCC,UAAAA,QAAQ,GAAGD,iBAAX;AACApD,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAMuD,OAAO,GAAGvD,OAAO,CAACuD,OAAR,IAAmB,sCAAnC;AACA,YAAMC,UAAU,GAAG;AACfxD,UAAAA,OAAO,EAAER,MAAM,CAACiE,MAAP,CAAc;AACnBC,YAAAA,GAAG,EAAE,CAACH,OAAO,GACT,sEADC,EACuEI,OADvE,CAC+E,cAD/E,EAC+F,IAD/F,CADc;AAGnBC,YAAAA,MAAM,EAAE;AAHW,WAAd,EAIN5D,OAJM,CADM;AAMfsD,UAAAA,MANe;AAOfO,UAAAA,cAAc,EAAE,CAAC,cAAD,EAAiB,WAAjB,CAPD;AAQfC,UAAAA,UAAU,EAAE,CAAC,cAAD,EAAiB,WAAjB,CARG;AASf5D,UAAAA,OAAO,EAAE,KAAKA;AATC,SAAnB;;AAWA,YAAImD,QAAJ,EAAc;AACVxD,UAAAA,mBAAmB,CAACkE,gBAApB,CAAqCP,UAArC,EAAiDH,QAAjD;AACH,SAFD,MAGK;AACD,iBAAOxD,mBAAmB,CAACkE,gBAApB,CAAqCP,UAArC,CAAP;AACH;AACJ;AA9vDmB;AAAA;AAAA,6BA+vDbL,gBA/vDa,EA+vDKC,iBA/vDL,EA+vDwBC,QA/vDxB,EA+vDkC;AAClD,YAAIC,MAAM,GAAIH,gBAAgB,IAC1B,EADJ;AAEA,YAAInD,OAAO,GAAIoD,iBAAiB,IAAI,EAApC;;AACA,YAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;AACxCE,UAAAA,QAAQ,GAAGF,gBAAX;AACAG,UAAAA,MAAM,GAAG,EAAT;AACAtD,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAI,OAAOoD,iBAAP,KAA6B,UAAjC,EAA6C;AACzCC,UAAAA,QAAQ,GAAGD,iBAAX;AACApD,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAMuD,OAAO,GAAGvD,OAAO,CAACuD,OAAR,IAAmB,sCAAnC;AACA,YAAMC,UAAU,GAAG;AACfxD,UAAAA,OAAO,EAAER,MAAM,CAACiE,MAAP,CAAc;AACnBC,YAAAA,GAAG,EAAE,CAACH,OAAO,GAAG,gDAAX,EAA6DI,OAA7D,CAAqE,cAArE,EAAqF,IAArF,CADc;AAEnBC,YAAAA,MAAM,EAAE;AAFW,WAAd,EAGN5D,OAHM,CADM;AAKfsD,UAAAA,MALe;AAMfO,UAAAA,cAAc,EAAE,CAAC,cAAD,CAND;AAOfC,UAAAA,UAAU,EAAE,CAAC,cAAD,CAPG;AAQf5D,UAAAA,OAAO,EAAE,KAAKA;AARC,SAAnB;;AAUA,YAAImD,QAAJ,EAAc;AACVxD,UAAAA,mBAAmB,CAACkE,gBAApB,CAAqCP,UAArC,EAAiDH,QAAjD;AACH,SAFD,MAGK;AACD,iBAAOxD,mBAAmB,CAACkE,gBAApB,CAAqCP,UAArC,CAAP;AACH;AACJ;AA7xDmB;AAAA;AAAA,iCA8xDTL,gBA9xDS,EA8xDSC,iBA9xDT,EA8xD4BC,QA9xD5B,EA8xDsC;AACtD,YAAIC,MAAM,GAAIH,gBAAgB,IAC1B,EADJ;AAEA,YAAInD,OAAO,GAAIoD,iBAAiB,IAAI,EAApC;;AACA,YAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;AACxCE,UAAAA,QAAQ,GAAGF,gBAAX;AACAG,UAAAA,MAAM,GAAG,EAAT;AACAtD,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAI,OAAOoD,iBAAP,KAA6B,UAAjC,EAA6C;AACzCC,UAAAA,QAAQ,GAAGD,iBAAX;AACApD,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAMuD,OAAO,GAAGvD,OAAO,CAACuD,OAAR,IAAmB,sCAAnC;AACA,YAAMC,UAAU,GAAG;AACfxD,UAAAA,OAAO,EAAER,MAAM,CAACiE,MAAP,CAAc;AACnBC,YAAAA,GAAG,EAAE,CAACH,OAAO,GACT,wEADC,EACyEI,OADzE,CACiF,cADjF,EACiG,IADjG,CADc;AAGnBC,YAAAA,MAAM,EAAE;AAHW,WAAd,EAIN5D,OAJM,CADM;AAMfsD,UAAAA,MANe;AAOfO,UAAAA,cAAc,EAAE,CAAC,cAAD,EAAiB,WAAjB,CAPD;AAQfC,UAAAA,UAAU,EAAE,CAAC,cAAD,EAAiB,WAAjB,CARG;AASf5D,UAAAA,OAAO,EAAE,KAAKA;AATC,SAAnB;;AAWA,YAAImD,QAAJ,EAAc;AACVxD,UAAAA,mBAAmB,CAACkE,gBAApB,CAAqCP,UAArC,EAAiDH,QAAjD;AACH,SAFD,MAGK;AACD,iBAAOxD,mBAAmB,CAACkE,gBAApB,CAAqCP,UAArC,CAAP;AACH;AACJ;AA7zDmB;AAAA;AAAA,0BA8zDhBL,gBA9zDgB,EA8zDEC,iBA9zDF,EA8zDqBC,QA9zDrB,EA8zD+B;AAC/C,YAAIC,MAAM,GAAIH,gBAAgB,IAC1B,EADJ;AAEA,YAAInD,OAAO,GAAIoD,iBAAiB,IAAI,EAApC;;AACA,YAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;AACxCE,UAAAA,QAAQ,GAAGF,gBAAX;AACAG,UAAAA,MAAM,GAAG,EAAT;AACAtD,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAI,OAAOoD,iBAAP,KAA6B,UAAjC,EAA6C;AACzCC,UAAAA,QAAQ,GAAGD,iBAAX;AACApD,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAMuD,OAAO,GAAGvD,OAAO,CAACuD,OAAR,IAAmB,sCAAnC;AACA,YAAMC,UAAU,GAAG;AACfxD,UAAAA,OAAO,EAAER,MAAM,CAACiE,MAAP,CAAc;AACnBC,YAAAA,GAAG,EAAE,CAACH,OAAO,GACT,6DADC,EAC8DI,OAD9D,CACsE,cADtE,EACsF,IADtF,CADc;AAGnBC,YAAAA,MAAM,EAAE;AAHW,WAAd,EAIN5D,OAJM,CADM;AAMfsD,UAAAA,MANe;AAOfO,UAAAA,cAAc,EAAE,CAAC,cAAD,EAAiB,WAAjB,CAPD;AAQfC,UAAAA,UAAU,EAAE,CAAC,cAAD,EAAiB,WAAjB,CARG;AASf5D,UAAAA,OAAO,EAAE,KAAKA;AATC,SAAnB;;AAWA,YAAImD,QAAJ,EAAc;AACVxD,UAAAA,mBAAmB,CAACkE,gBAApB,CAAqCP,UAArC,EAAiDH,QAAjD;AACH,SAFD,MAGK;AACD,iBAAOxD,mBAAmB,CAACkE,gBAApB,CAAqCP,UAArC,CAAP;AACH;AACJ;AA71DmB;AAAA;AAAA,2BA81DfL,gBA91De,EA81DGC,iBA91DH,EA81DsBC,QA91DtB,EA81DgC;AAChD,YAAIC,MAAM,GAAIH,gBAAgB,IAC1B,EADJ;AAEA,YAAInD,OAAO,GAAIoD,iBAAiB,IAAI,EAApC;;AACA,YAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;AACxCE,UAAAA,QAAQ,GAAGF,gBAAX;AACAG,UAAAA,MAAM,GAAG,EAAT;AACAtD,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAI,OAAOoD,iBAAP,KAA6B,UAAjC,EAA6C;AACzCC,UAAAA,QAAQ,GAAGD,iBAAX;AACApD,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAMuD,OAAO,GAAGvD,OAAO,CAACuD,OAAR,IAAmB,sCAAnC;AACA,YAAMC,UAAU,GAAG;AACfxD,UAAAA,OAAO,EAAER,MAAM,CAACiE,MAAP,CAAc;AACnBC,YAAAA,GAAG,EAAE,CAACH,OAAO,GAAG,gDAAX,EAA6DI,OAA7D,CAAqE,cAArE,EAAqF,IAArF,CADc;AAEnBC,YAAAA,MAAM,EAAE;AAFW,WAAd,EAGN5D,OAHM,CADM;AAKfsD,UAAAA,MALe;AAMfO,UAAAA,cAAc,EAAE,CAAC,cAAD,CAND;AAOfC,UAAAA,UAAU,EAAE,CAAC,cAAD,CAPG;AAQf5D,UAAAA,OAAO,EAAE,KAAKA;AARC,SAAnB;;AAUA,YAAImD,QAAJ,EAAc;AACVxD,UAAAA,mBAAmB,CAACkE,gBAApB,CAAqCP,UAArC,EAAiDH,QAAjD;AACH,SAFD,MAGK;AACD,iBAAOxD,mBAAmB,CAACkE,gBAApB,CAAqCP,UAArC,CAAP;AACH;AACJ;AA53DmB;AAAA;AAAA,4BA63DdL,gBA73Dc,EA63DIC,iBA73DJ,EA63DuBC,QA73DvB,EA63DiC;AACjD,YAAIC,MAAM,GAAIH,gBAAgB,IAC1B,EADJ;AAEA,YAAInD,OAAO,GAAIoD,iBAAiB,IAAI,EAApC;;AACA,YAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;AACxCE,UAAAA,QAAQ,GAAGF,gBAAX;AACAG,UAAAA,MAAM,GAAG,EAAT;AACAtD,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAI,OAAOoD,iBAAP,KAA6B,UAAjC,EAA6C;AACzCC,UAAAA,QAAQ,GAAGD,iBAAX;AACApD,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAMuD,OAAO,GAAGvD,OAAO,CAACuD,OAAR,IAAmB,sCAAnC;AACA,YAAMC,UAAU,GAAG;AACfxD,UAAAA,OAAO,EAAER,MAAM,CAACiE,MAAP,CAAc;AACnBC,YAAAA,GAAG,EAAE,CAACH,OAAO,GACT,6DADC,EAC8DI,OAD9D,CACsE,cADtE,EACsF,IADtF,CADc;AAGnBC,YAAAA,MAAM,EAAE;AAHW,WAAd,EAIN5D,OAJM,CADM;AAMfsD,UAAAA,MANe;AAOfO,UAAAA,cAAc,EAAE,CAAC,cAAD,EAAiB,WAAjB,CAPD;AAQfC,UAAAA,UAAU,EAAE,CAAC,cAAD,EAAiB,WAAjB,CARG;AASf5D,UAAAA,OAAO,EAAE,KAAKA;AATC,SAAnB;;AAWA,YAAImD,QAAJ,EAAc;AACVxD,UAAAA,mBAAmB,CAACkE,gBAApB,CAAqCP,UAArC,EAAiDH,QAAjD;AACH,SAFD,MAGK;AACD,iBAAOxD,mBAAmB,CAACkE,gBAApB,CAAqCP,UAArC,CAAP;AACH;AACJ;AA55DmB;;AAAA;AAAA;;AA85DxB5D,EAAAA,eAAe,CAACmD,mCAAhB,GAAsDA,mCAAtD;;AA95DwB,MA+5DlBE,yCA/5DkB;AAg6DpB,uDAAY/C,OAAZ,EAAqB;AAAA;;AACjB,WAAKA,OAAL,GAAeA,OAAf;AACA,WAAKsE,gBAAL,GAAwB,IAAIC,0DAAJ,CAA+D,KAAKvE,OAApE,CAAxB;AACH;;AAn6DmB;AAAA;AAAA,6BAo6DbiD,gBAp6Da,EAo6DKC,iBAp6DL,EAo6DwBC,QAp6DxB,EAo6DkC;AAClD,YAAIC,MAAM,GAAIH,gBAAgB,IAC1B,EADJ;AAEA,YAAInD,OAAO,GAAIoD,iBAAiB,IAAI,EAApC;;AACA,YAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;AACxCE,UAAAA,QAAQ,GAAGF,gBAAX;AACAG,UAAAA,MAAM,GAAG,EAAT;AACAtD,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAI,OAAOoD,iBAAP,KAA6B,UAAjC,EAA6C;AACzCC,UAAAA,QAAQ,GAAGD,iBAAX;AACApD,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAMuD,OAAO,GAAGvD,OAAO,CAACuD,OAAR,IAAmB,sCAAnC;AACA,YAAMC,UAAU,GAAG;AACfxD,UAAAA,OAAO,EAAER,MAAM,CAACiE,MAAP,CAAc;AACnBC,YAAAA,GAAG,EAAE,CAACH,OAAO,GAAG,sDAAX,EAAmEI,OAAnE,CAA2E,cAA3E,EAA2F,IAA3F,CADc;AAEnBC,YAAAA,MAAM,EAAE;AAFW,WAAd,EAGN5D,OAHM,CADM;AAKfsD,UAAAA,MALe;AAMfO,UAAAA,cAAc,EAAE,CAAC,cAAD,CAND;AAOfC,UAAAA,UAAU,EAAE,CAAC,cAAD,CAPG;AAQf5D,UAAAA,OAAO,EAAE,KAAKA;AARC,SAAnB;;AAUA,YAAImD,QAAJ,EAAc;AACVxD,UAAAA,mBAAmB,CAACkE,gBAApB,CAAqCP,UAArC,EAAiDH,QAAjD;AACH,SAFD,MAGK;AACD,iBAAOxD,mBAAmB,CAACkE,gBAApB,CAAqCP,UAArC,CAAP;AACH;AACJ;AAl8DmB;AAAA;AAAA,8BAm8DbL,gBAn8Da,EAm8DKC,iBAn8DL,EAm8DwBC,QAn8DxB,EAm8DkC;AAClD,YAAIC,MAAM,GAAIH,gBAAgB,IAC1B,EADJ;AAEA,YAAInD,OAAO,GAAIoD,iBAAiB,IAAI,EAApC;;AACA,YAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;AACxCE,UAAAA,QAAQ,GAAGF,gBAAX;AACAG,UAAAA,MAAM,GAAG,EAAT;AACAtD,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAI,OAAOoD,iBAAP,KAA6B,UAAjC,EAA6C;AACzCC,UAAAA,QAAQ,GAAGD,iBAAX;AACApD,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAMuD,OAAO,GAAGvD,OAAO,CAACuD,OAAR,IAAmB,sCAAnC;AACA,YAAMC,UAAU,GAAG;AACfxD,UAAAA,OAAO,EAAER,MAAM,CAACiE,MAAP,CAAc;AACnBC,YAAAA,GAAG,EAAE,CAACH,OAAO,GACT,+EADC,EACgFI,OADhF,CACwF,cADxF,EACwG,IADxG,CADc;AAGnBC,YAAAA,MAAM,EAAE;AAHW,WAAd,EAIN5D,OAJM,CADM;AAMfsD,UAAAA,MANe;AAOfO,UAAAA,cAAc,EAAE,CAAC,cAAD,EAAiB,uBAAjB,CAPD;AAQfC,UAAAA,UAAU,EAAE,CAAC,cAAD,EAAiB,uBAAjB,CARG;AASf5D,UAAAA,OAAO,EAAE,KAAKA;AATC,SAAnB;;AAWA,YAAImD,QAAJ,EAAc;AACVxD,UAAAA,mBAAmB,CAACkE,gBAApB,CAAqCP,UAArC,EAAiDH,QAAjD;AACH,SAFD,MAGK;AACD,iBAAOxD,mBAAmB,CAACkE,gBAApB,CAAqCP,UAArC,CAAP;AACH;AACJ;AAl+DmB;AAAA;AAAA,0BAm+DhBL,gBAn+DgB,EAm+DEC,iBAn+DF,EAm+DqBC,QAn+DrB,EAm+D+B;AAC/C,YAAIC,MAAM,GAAIH,gBAAgB,IAC1B,EADJ;AAEA,YAAInD,OAAO,GAAIoD,iBAAiB,IAAI,EAApC;;AACA,YAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;AACxCE,UAAAA,QAAQ,GAAGF,gBAAX;AACAG,UAAAA,MAAM,GAAG,EAAT;AACAtD,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAI,OAAOoD,iBAAP,KAA6B,UAAjC,EAA6C;AACzCC,UAAAA,QAAQ,GAAGD,iBAAX;AACApD,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAMuD,OAAO,GAAGvD,OAAO,CAACuD,OAAR,IAAmB,sCAAnC;AACA,YAAMC,UAAU,GAAG;AACfxD,UAAAA,OAAO,EAAER,MAAM,CAACiE,MAAP,CAAc;AACnBC,YAAAA,GAAG,EAAE,CAACH,OAAO,GACT,+EADC,EACgFI,OADhF,CACwF,cADxF,EACwG,IADxG,CADc;AAGnBC,YAAAA,MAAM,EAAE;AAHW,WAAd,EAIN5D,OAJM,CADM;AAMfsD,UAAAA,MANe;AAOfO,UAAAA,cAAc,EAAE,CAAC,cAAD,EAAiB,uBAAjB,CAPD;AAQfC,UAAAA,UAAU,EAAE,CAAC,cAAD,EAAiB,uBAAjB,CARG;AASf5D,UAAAA,OAAO,EAAE,KAAKA;AATC,SAAnB;;AAWA,YAAImD,QAAJ,EAAc;AACVxD,UAAAA,mBAAmB,CAACkE,gBAApB,CAAqCP,UAArC,EAAiDH,QAAjD;AACH,SAFD,MAGK;AACD,iBAAOxD,mBAAmB,CAACkE,gBAApB,CAAqCP,UAArC,CAAP;AACH;AACJ;AAlgEmB;AAAA;AAAA,2BAmgEfL,gBAngEe,EAmgEGC,iBAngEH,EAmgEsBC,QAngEtB,EAmgEgC;AAChD,YAAIC,MAAM,GAAIH,gBAAgB,IAC1B,EADJ;AAEA,YAAInD,OAAO,GAAIoD,iBAAiB,IAAI,EAApC;;AACA,YAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;AACxCE,UAAAA,QAAQ,GAAGF,gBAAX;AACAG,UAAAA,MAAM,GAAG,EAAT;AACAtD,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAI,OAAOoD,iBAAP,KAA6B,UAAjC,EAA6C;AACzCC,UAAAA,QAAQ,GAAGD,iBAAX;AACApD,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAMuD,OAAO,GAAGvD,OAAO,CAACuD,OAAR,IAAmB,sCAAnC;AACA,YAAMC,UAAU,GAAG;AACfxD,UAAAA,OAAO,EAAER,MAAM,CAACiE,MAAP,CAAc;AACnBC,YAAAA,GAAG,EAAE,CAACH,OAAO,GAAG,sDAAX,EAAmEI,OAAnE,CAA2E,cAA3E,EAA2F,IAA3F,CADc;AAEnBC,YAAAA,MAAM,EAAE;AAFW,WAAd,EAGN5D,OAHM,CADM;AAKfsD,UAAAA,MALe;AAMfO,UAAAA,cAAc,EAAE,CAAC,cAAD,CAND;AAOfC,UAAAA,UAAU,EAAE,CAAC,cAAD,CAPG;AAQf5D,UAAAA,OAAO,EAAE,KAAKA;AARC,SAAnB;;AAUA,YAAImD,QAAJ,EAAc;AACVxD,UAAAA,mBAAmB,CAACkE,gBAApB,CAAqCP,UAArC,EAAiDH,QAAjD;AACH,SAFD,MAGK;AACD,iBAAOxD,mBAAmB,CAACkE,gBAApB,CAAqCP,UAArC,CAAP;AACH;AACJ;AAjiEmB;AAAA;AAAA,4BAkiEdL,gBAliEc,EAkiEIC,iBAliEJ,EAkiEuBC,QAliEvB,EAkiEiC;AACjD,YAAIC,MAAM,GAAIH,gBAAgB,IAC1B,EADJ;AAEA,YAAInD,OAAO,GAAIoD,iBAAiB,IAAI,EAApC;;AACA,YAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;AACxCE,UAAAA,QAAQ,GAAGF,gBAAX;AACAG,UAAAA,MAAM,GAAG,EAAT;AACAtD,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAI,OAAOoD,iBAAP,KAA6B,UAAjC,EAA6C;AACzCC,UAAAA,QAAQ,GAAGD,iBAAX;AACApD,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAMuD,OAAO,GAAGvD,OAAO,CAACuD,OAAR,IAAmB,sCAAnC;AACA,YAAMC,UAAU,GAAG;AACfxD,UAAAA,OAAO,EAAER,MAAM,CAACiE,MAAP,CAAc;AACnBC,YAAAA,GAAG,EAAE,CAACH,OAAO,GACT,8EADC,EAC+EI,OAD/E,CACuF,cADvF,EACuG,IADvG,CADc;AAGnBC,YAAAA,MAAM,EAAE;AAHW,WAAd,EAIN5D,OAJM,CADM;AAMfsD,UAAAA,MANe;AAOfO,UAAAA,cAAc,EAAE,CAAC,cAAD,EAAiB,uBAAjB,CAPD;AAQfC,UAAAA,UAAU,EAAE,CAAC,cAAD,EAAiB,uBAAjB,CARG;AASf5D,UAAAA,OAAO,EAAE,KAAKA;AATC,SAAnB;;AAWA,YAAImD,QAAJ,EAAc;AACVxD,UAAAA,mBAAmB,CAACkE,gBAApB,CAAqCP,UAArC,EAAiDH,QAAjD;AACH,SAFD,MAGK;AACD,iBAAOxD,mBAAmB,CAACkE,gBAApB,CAAqCP,UAArC,CAAP;AACH;AACJ;AAjkEmB;;AAAA;AAAA;;AAmkExB5D,EAAAA,eAAe,CAACqD,yCAAhB,GAA4DA,yCAA5D;;AAnkEwB,MAokElBwB,0DApkEkB;AAqkEpB,wEAAYvE,OAAZ,EAAqB;AAAA;;AACjB,WAAKA,OAAL,GAAeA,OAAf;AACH;;AAvkEmB;AAAA;AAAA,+BAwkEXiD,gBAxkEW,EAwkEOC,iBAxkEP,EAwkE0BC,QAxkE1B,EAwkEoC;AACpD,YAAIC,MAAM,GAAIH,gBAAgB,IAC1B,EADJ;AAEA,YAAInD,OAAO,GAAIoD,iBAAiB,IAAI,EAApC;;AACA,YAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;AACxCE,UAAAA,QAAQ,GAAGF,gBAAX;AACAG,UAAAA,MAAM,GAAG,EAAT;AACAtD,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAI,OAAOoD,iBAAP,KAA6B,UAAjC,EAA6C;AACzCC,UAAAA,QAAQ,GAAGD,iBAAX;AACApD,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAMuD,OAAO,GAAGvD,OAAO,CAACuD,OAAR,IAAmB,sCAAnC;AACA,YAAMC,UAAU,GAAG;AACfxD,UAAAA,OAAO,EAAER,MAAM,CAACiE,MAAP,CAAc;AACnBC,YAAAA,GAAG,EAAE,CAACH,OAAO,GACT,wGADC,EACyGI,OADzG,CACiH,cADjH,EACiI,IADjI,CADc;AAGnBC,YAAAA,MAAM,EAAE;AAHW,WAAd,EAIN5D,OAJM,CADM;AAMfsD,UAAAA,MANe;AAOfO,UAAAA,cAAc,EAAE,CAAC,cAAD,EAAiB,uBAAjB,CAPD;AAQfC,UAAAA,UAAU,EAAE,CAAC,cAAD,EAAiB,uBAAjB,CARG;AASf5D,UAAAA,OAAO,EAAE,KAAKA;AATC,SAAnB;;AAWA,YAAImD,QAAJ,EAAc;AACVxD,UAAAA,mBAAmB,CAACkE,gBAApB,CAAqCP,UAArC,EAAiDH,QAAjD;AACH,SAFD,MAGK;AACD,iBAAOxD,mBAAmB,CAACkE,gBAApB,CAAqCP,UAArC,CAAP;AACH;AACJ;AAvmEmB;AAAA;AAAA,6BAwmEbL,gBAxmEa,EAwmEKC,iBAxmEL,EAwmEwBC,QAxmExB,EAwmEkC;AAClD,YAAIC,MAAM,GAAIH,gBAAgB,IAC1B,EADJ;AAEA,YAAInD,OAAO,GAAIoD,iBAAiB,IAAI,EAApC;;AACA,YAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;AACxCE,UAAAA,QAAQ,GAAGF,gBAAX;AACAG,UAAAA,MAAM,GAAG,EAAT;AACAtD,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAI,OAAOoD,iBAAP,KAA6B,UAAjC,EAA6C;AACzCC,UAAAA,QAAQ,GAAGD,iBAAX;AACApD,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAMuD,OAAO,GAAGvD,OAAO,CAACuD,OAAR,IAAmB,sCAAnC;AACA,YAAMC,UAAU,GAAG;AACfxD,UAAAA,OAAO,EAAER,MAAM,CAACiE,MAAP,CAAc;AACnBC,YAAAA,GAAG,EAAE,CAACH,OAAO,GACT,+FADC,EACgGI,OADhG,CACwG,cADxG,EACwH,IADxH,CADc;AAGnBC,YAAAA,MAAM,EAAE;AAHW,WAAd,EAIN5D,OAJM,CADM;AAMfsD,UAAAA,MANe;AAOfO,UAAAA,cAAc,EAAE,CAAC,cAAD,EAAiB,uBAAjB,CAPD;AAQfC,UAAAA,UAAU,EAAE,CAAC,cAAD,EAAiB,uBAAjB,CARG;AASf5D,UAAAA,OAAO,EAAE,KAAKA;AATC,SAAnB;;AAWA,YAAImD,QAAJ,EAAc;AACVxD,UAAAA,mBAAmB,CAACkE,gBAApB,CAAqCP,UAArC,EAAiDH,QAAjD;AACH,SAFD,MAGK;AACD,iBAAOxD,mBAAmB,CAACkE,gBAApB,CAAqCP,UAArC,CAAP;AACH;AACJ;AAvoEmB;AAAA;AAAA,8BAwoEbL,gBAxoEa,EAwoEKC,iBAxoEL,EAwoEwBC,QAxoExB,EAwoEkC;AAClD,YAAIC,MAAM,GAAIH,gBAAgB,IAC1B,EADJ;AAEA,YAAInD,OAAO,GAAIoD,iBAAiB,IAAI,EAApC;;AACA,YAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;AACxCE,UAAAA,QAAQ,GAAGF,gBAAX;AACAG,UAAAA,MAAM,GAAG,EAAT;AACAtD,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAI,OAAOoD,iBAAP,KAA6B,UAAjC,EAA6C;AACzCC,UAAAA,QAAQ,GAAGD,iBAAX;AACApD,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAMuD,OAAO,GAAGvD,OAAO,CAACuD,OAAR,IAAmB,sCAAnC;AACA,YAAMC,UAAU,GAAG;AACfxD,UAAAA,OAAO,EAAER,MAAM,CAACiE,MAAP,CAAc;AACnBC,YAAAA,GAAG,EAAE,CAACH,OAAO,GACT,+GADC,EACgHI,OADhH,CACwH,cADxH,EACwI,IADxI,CADc;AAGnBC,YAAAA,MAAM,EAAE;AAHW,WAAd,EAIN5D,OAJM,CADM;AAMfsD,UAAAA,MANe;AAOfO,UAAAA,cAAc,EAAE,CACZ,cADY,EAEZ,uBAFY,EAGZ,cAHY,CAPD;AAYfC,UAAAA,UAAU,EAAE,CAAC,cAAD,EAAiB,cAAjB,EAAiC,uBAAjC,CAZG;AAaf5D,UAAAA,OAAO,EAAE,KAAKA;AAbC,SAAnB;;AAeA,YAAImD,QAAJ,EAAc;AACVxD,UAAAA,mBAAmB,CAACkE,gBAApB,CAAqCP,UAArC,EAAiDH,QAAjD;AACH,SAFD,MAGK;AACD,iBAAOxD,mBAAmB,CAACkE,gBAApB,CAAqCP,UAArC,CAAP;AACH;AACJ;AA3qEmB;AAAA;AAAA,2BA4qEfL,gBA5qEe,EA4qEGC,iBA5qEH,EA4qEsBC,QA5qEtB,EA4qEgC;AAChD,YAAIC,MAAM,GAAIH,gBAAgB,IAC1B,EADJ;AAEA,YAAInD,OAAO,GAAIoD,iBAAiB,IAAI,EAApC;;AACA,YAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;AACxCE,UAAAA,QAAQ,GAAGF,gBAAX;AACAG,UAAAA,MAAM,GAAG,EAAT;AACAtD,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAI,OAAOoD,iBAAP,KAA6B,UAAjC,EAA6C;AACzCC,UAAAA,QAAQ,GAAGD,iBAAX;AACApD,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAMuD,OAAO,GAAGvD,OAAO,CAACuD,OAAR,IAAmB,sCAAnC;AACA,YAAMC,UAAU,GAAG;AACfxD,UAAAA,OAAO,EAAER,MAAM,CAACiE,MAAP,CAAc;AACnBC,YAAAA,GAAG,EAAE,CAACH,OAAO,GACT,gGADC,EACiGI,OADjG,CACyG,cADzG,EACyH,IADzH,CADc;AAGnBC,YAAAA,MAAM,EAAE;AAHW,WAAd,EAIN5D,OAJM,CADM;AAMfsD,UAAAA,MANe;AAOfO,UAAAA,cAAc,EAAE,CAAC,cAAD,EAAiB,uBAAjB,CAPD;AAQfC,UAAAA,UAAU,EAAE,CAAC,cAAD,EAAiB,uBAAjB,CARG;AASf5D,UAAAA,OAAO,EAAE,KAAKA;AATC,SAAnB;;AAWA,YAAImD,QAAJ,EAAc;AACVxD,UAAAA,mBAAmB,CAACkE,gBAApB,CAAqCP,UAArC,EAAiDH,QAAjD;AACH,SAFD,MAGK;AACD,iBAAOxD,mBAAmB,CAACkE,gBAApB,CAAqCP,UAArC,CAAP;AACH;AACJ;AA3sEmB;;AAAA;AAAA;;AA6sExB5D,EAAAA,eAAe,CAAC6E,0DAAhB,GAA6EA,0DAA7E;;AA7sEwB,MA8sElBvB,mCA9sEkB,GA+sEpB,6CAAYhD,OAAZ,EAAqB;AAAA;;AACjB,SAAKA,OAAL,GAAeA,OAAf;AACA,SAAKkE,wBAAL,GAAgC,IAAIM,4DAAJ,CAAiE,KAAKxE,OAAtE,CAAhC;AACH,GAltEmB;;AAotExBN,EAAAA,eAAe,CAACsD,mCAAhB,GAAsDA,mCAAtD;;AAptEwB,MAqtElBwB,4DArtEkB;AAstEpB,0EAAYxE,OAAZ,EAAqB;AAAA;;AACjB,WAAKA,OAAL,GAAeA,OAAf;AACH;;AAxtEmB;AAAA;AAAA,6BAytEbiD,gBAztEa,EAytEKC,iBAztEL,EAytEwBC,QAztExB,EAytEkC;AAClD,YAAIC,MAAM,GAAIH,gBAAgB,IAC1B,EADJ;AAEA,YAAInD,OAAO,GAAIoD,iBAAiB,IAAI,EAApC;;AACA,YAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;AACxCE,UAAAA,QAAQ,GAAGF,gBAAX;AACAG,UAAAA,MAAM,GAAG,EAAT;AACAtD,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAI,OAAOoD,iBAAP,KAA6B,UAAjC,EAA6C;AACzCC,UAAAA,QAAQ,GAAGD,iBAAX;AACApD,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAMuD,OAAO,GAAGvD,OAAO,CAACuD,OAAR,IAAmB,sCAAnC;AACA,YAAMC,UAAU,GAAG;AACfxD,UAAAA,OAAO,EAAER,MAAM,CAACiE,MAAP,CAAc;AACnBC,YAAAA,GAAG,EAAE,CAACH,OAAO,GACT,0FADC,EAC2FI,OAD3F,CACmG,cADnG,EACmH,IADnH,CADc;AAGnBC,YAAAA,MAAM,EAAE;AAHW,WAAd,EAIN5D,OAJM,CADM;AAMfsD,UAAAA,MANe;AAOfO,UAAAA,cAAc,EAAE,CAAC,cAAD,EAAiB,eAAjB,CAPD;AAQfC,UAAAA,UAAU,EAAE,CAAC,cAAD,EAAiB,eAAjB,CARG;AASf5D,UAAAA,OAAO,EAAE,KAAKA;AATC,SAAnB;;AAWA,YAAImD,QAAJ,EAAc;AACVxD,UAAAA,mBAAmB,CAACkE,gBAApB,CAAqCP,UAArC,EAAiDH,QAAjD;AACH,SAFD,MAGK;AACD,iBAAOxD,mBAAmB,CAACkE,gBAApB,CAAqCP,UAArC,CAAP;AACH;AACJ;AAxvEmB;AAAA;AAAA,8BAyvEbL,gBAzvEa,EAyvEKC,iBAzvEL,EAyvEwBC,QAzvExB,EAyvEkC;AAClD,YAAIC,MAAM,GAAIH,gBAAgB,IAC1B,EADJ;AAEA,YAAInD,OAAO,GAAIoD,iBAAiB,IAAI,EAApC;;AACA,YAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;AACxCE,UAAAA,QAAQ,GAAGF,gBAAX;AACAG,UAAAA,MAAM,GAAG,EAAT;AACAtD,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAI,OAAOoD,iBAAP,KAA6B,UAAjC,EAA6C;AACzCC,UAAAA,QAAQ,GAAGD,iBAAX;AACApD,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAMuD,OAAO,GAAGvD,OAAO,CAACuD,OAAR,IAAmB,sCAAnC;AACA,YAAMC,UAAU,GAAG;AACfxD,UAAAA,OAAO,EAAER,MAAM,CAACiE,MAAP,CAAc;AACnBC,YAAAA,GAAG,EAAE,CAACH,OAAO,GACT,uHADC,EACwHI,OADxH,CACgI,cADhI,EACgJ,IADhJ,CADc;AAGnBC,YAAAA,MAAM,EAAE;AAHW,WAAd,EAIN5D,OAJM,CADM;AAMfsD,UAAAA,MANe;AAOfO,UAAAA,cAAc,EAAE,CACZ,cADY,EAEZ,eAFY,EAGZ,2BAHY,CAPD;AAYfC,UAAAA,UAAU,EAAE,CACR,cADQ,EAER,2BAFQ,EAGR,eAHQ,CAZG;AAiBf5D,UAAAA,OAAO,EAAE,KAAKA;AAjBC,SAAnB;;AAmBA,YAAImD,QAAJ,EAAc;AACVxD,UAAAA,mBAAmB,CAACkE,gBAApB,CAAqCP,UAArC,EAAiDH,QAAjD;AACH,SAFD,MAGK;AACD,iBAAOxD,mBAAmB,CAACkE,gBAApB,CAAqCP,UAArC,CAAP;AACH;AACJ;AAhyEmB;AAAA;AAAA,0BAiyEhBL,gBAjyEgB,EAiyEEC,iBAjyEF,EAiyEqBC,QAjyErB,EAiyE+B;AAC/C,YAAIC,MAAM,GAAIH,gBAAgB,IAC1B,EADJ;AAEA,YAAInD,OAAO,GAAIoD,iBAAiB,IAAI,EAApC;;AACA,YAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;AACxCE,UAAAA,QAAQ,GAAGF,gBAAX;AACAG,UAAAA,MAAM,GAAG,EAAT;AACAtD,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAI,OAAOoD,iBAAP,KAA6B,UAAjC,EAA6C;AACzCC,UAAAA,QAAQ,GAAGD,iBAAX;AACApD,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAMuD,OAAO,GAAGvD,OAAO,CAACuD,OAAR,IAAmB,sCAAnC;AACA,YAAMC,UAAU,GAAG;AACfxD,UAAAA,OAAO,EAAER,MAAM,CAACiE,MAAP,CAAc;AACnBC,YAAAA,GAAG,EAAE,CAACH,OAAO,GACT,uHADC,EACwHI,OADxH,CACgI,cADhI,EACgJ,IADhJ,CADc;AAGnBC,YAAAA,MAAM,EAAE;AAHW,WAAd,EAIN5D,OAJM,CADM;AAMfsD,UAAAA,MANe;AAOfO,UAAAA,cAAc,EAAE,CACZ,cADY,EAEZ,eAFY,EAGZ,2BAHY,CAPD;AAYfC,UAAAA,UAAU,EAAE,CACR,cADQ,EAER,2BAFQ,EAGR,eAHQ,CAZG;AAiBf5D,UAAAA,OAAO,EAAE,KAAKA;AAjBC,SAAnB;;AAmBA,YAAImD,QAAJ,EAAc;AACVxD,UAAAA,mBAAmB,CAACkE,gBAApB,CAAqCP,UAArC,EAAiDH,QAAjD;AACH,SAFD,MAGK;AACD,iBAAOxD,mBAAmB,CAACkE,gBAApB,CAAqCP,UAArC,CAAP;AACH;AACJ;AAx0EmB;AAAA;AAAA,2BAy0EfL,gBAz0Ee,EAy0EGC,iBAz0EH,EAy0EsBC,QAz0EtB,EAy0EgC;AAChD,YAAIC,MAAM,GAAIH,gBAAgB,IAC1B,EADJ;AAEA,YAAInD,OAAO,GAAIoD,iBAAiB,IAAI,EAApC;;AACA,YAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;AACxCE,UAAAA,QAAQ,GAAGF,gBAAX;AACAG,UAAAA,MAAM,GAAG,EAAT;AACAtD,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAI,OAAOoD,iBAAP,KAA6B,UAAjC,EAA6C;AACzCC,UAAAA,QAAQ,GAAGD,iBAAX;AACApD,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAMuD,OAAO,GAAGvD,OAAO,CAACuD,OAAR,IAAmB,sCAAnC;AACA,YAAMC,UAAU,GAAG;AACfxD,UAAAA,OAAO,EAAER,MAAM,CAACiE,MAAP,CAAc;AACnBC,YAAAA,GAAG,EAAE,CAACH,OAAO,GACT,0FADC,EAC2FI,OAD3F,CACmG,cADnG,EACmH,IADnH,CADc;AAGnBC,YAAAA,MAAM,EAAE;AAHW,WAAd,EAIN5D,OAJM,CADM;AAMfsD,UAAAA,MANe;AAOfO,UAAAA,cAAc,EAAE,CAAC,cAAD,EAAiB,eAAjB,CAPD;AAQfC,UAAAA,UAAU,EAAE,CAAC,cAAD,EAAiB,eAAjB,CARG;AASf5D,UAAAA,OAAO,EAAE,KAAKA;AATC,SAAnB;;AAWA,YAAImD,QAAJ,EAAc;AACVxD,UAAAA,mBAAmB,CAACkE,gBAApB,CAAqCP,UAArC,EAAiDH,QAAjD;AACH,SAFD,MAGK;AACD,iBAAOxD,mBAAmB,CAACkE,gBAApB,CAAqCP,UAArC,CAAP;AACH;AACJ;AAx2EmB;;AAAA;AAAA;;AA02ExB5D,EAAAA,eAAe,CAAC8E,4DAAhB,GAA+EA,4DAA/E;;AA12EwB,MA22ElBnE,0BA32EkB;AA42EpB,wCAAYL,OAAZ,EAAqB;AAAA;;AACjB,WAAKA,OAAL,GAAeA,OAAf;AACH;;AA92EmB;AAAA;AAAA,0BA+2EhBiD,gBA/2EgB,EA+2EEC,iBA/2EF,EA+2EqBC,QA/2ErB,EA+2E+B;AAC/C,YAAIC,MAAM,GAAIH,gBAAgB,IAC1B,EADJ;AAEA,YAAInD,OAAO,GAAIoD,iBAAiB,IAAI,EAApC;;AACA,YAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;AACxCE,UAAAA,QAAQ,GAAGF,gBAAX;AACAG,UAAAA,MAAM,GAAG,EAAT;AACAtD,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAI,OAAOoD,iBAAP,KAA6B,UAAjC,EAA6C;AACzCC,UAAAA,QAAQ,GAAGD,iBAAX;AACApD,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAMuD,OAAO,GAAGvD,OAAO,CAACuD,OAAR,IAAmB,sCAAnC;AACA,YAAMC,UAAU,GAAG;AACfxD,UAAAA,OAAO,EAAER,MAAM,CAACiE,MAAP,CAAc;AACnBC,YAAAA,GAAG,EAAE,CAACH,OAAO,GAAG,6CAAX,EAA0DI,OAA1D,CAAkE,cAAlE,EAAkF,IAAlF,CADc;AAEnBC,YAAAA,MAAM,EAAE;AAFW,WAAd,EAGN5D,OAHM,CADM;AAKfsD,UAAAA,MALe;AAMfO,UAAAA,cAAc,EAAE,CAAC,oBAAD,CAND;AAOfC,UAAAA,UAAU,EAAE,CAAC,oBAAD,CAPG;AAQf5D,UAAAA,OAAO,EAAE,KAAKA;AARC,SAAnB;;AAUA,YAAImD,QAAJ,EAAc;AACVxD,UAAAA,mBAAmB,CAACkE,gBAApB,CAAqCP,UAArC,EAAiDH,QAAjD;AACH,SAFD,MAGK;AACD,iBAAOxD,mBAAmB,CAACkE,gBAApB,CAAqCP,UAArC,CAAP;AACH;AACJ;AA74EmB;AAAA;AAAA,2BA84EfL,gBA94Ee,EA84EGC,iBA94EH,EA84EsBC,QA94EtB,EA84EgC;AAChD,YAAIC,MAAM,GAAIH,gBAAgB,IAC1B,EADJ;AAEA,YAAInD,OAAO,GAAIoD,iBAAiB,IAAI,EAApC;;AACA,YAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;AACxCE,UAAAA,QAAQ,GAAGF,gBAAX;AACAG,UAAAA,MAAM,GAAG,EAAT;AACAtD,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAI,OAAOoD,iBAAP,KAA6B,UAAjC,EAA6C;AACzCC,UAAAA,QAAQ,GAAGD,iBAAX;AACApD,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAMuD,OAAO,GAAGvD,OAAO,CAACuD,OAAR,IAAmB,sCAAnC;AACA,YAAMC,UAAU,GAAG;AACfxD,UAAAA,OAAO,EAAER,MAAM,CAACiE,MAAP,CAAc;AACnBC,YAAAA,GAAG,EAAE,CAACH,OAAO,GAAG,uBAAX,EAAoCI,OAApC,CAA4C,cAA5C,EAA4D,IAA5D,CADc;AAEnBC,YAAAA,MAAM,EAAE;AAFW,WAAd,EAGN5D,OAHM,CADM;AAKfsD,UAAAA,MALe;AAMfO,UAAAA,cAAc,EAAE,EAND;AAOfC,UAAAA,UAAU,EAAE,EAPG;AAQf5D,UAAAA,OAAO,EAAE,KAAKA;AARC,SAAnB;;AAUA,YAAImD,QAAJ,EAAc;AACVxD,UAAAA,mBAAmB,CAACkE,gBAApB,CAAqCP,UAArC,EAAiDH,QAAjD;AACH,SAFD,MAGK;AACD,iBAAOxD,mBAAmB,CAACkE,gBAApB,CAAqCP,UAArC,CAAP;AACH;AACJ;AA56EmB;;AAAA;AAAA;;AA86ExB5D,EAAAA,eAAe,CAACW,0BAAhB,GAA6CA,0BAA7C;;AA96EwB,MA+6ElBE,gCA/6EkB;AAg7EpB,8CAAYP,OAAZ,EAAqB;AAAA;;AACjB,WAAKA,OAAL,GAAeA,OAAf;AACH;;AAl7EmB;AAAA;AAAA,0BAm7EhBiD,gBAn7EgB,EAm7EEC,iBAn7EF,EAm7EqBC,QAn7ErB,EAm7E+B;AAC/C,YAAIC,MAAM,GAAIH,gBAAgB,IAC1B,EADJ;AAEA,YAAInD,OAAO,GAAIoD,iBAAiB,IAAI,EAApC;;AACA,YAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;AACxCE,UAAAA,QAAQ,GAAGF,gBAAX;AACAG,UAAAA,MAAM,GAAG,EAAT;AACAtD,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAI,OAAOoD,iBAAP,KAA6B,UAAjC,EAA6C;AACzCC,UAAAA,QAAQ,GAAGD,iBAAX;AACApD,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAMuD,OAAO,GAAGvD,OAAO,CAACuD,OAAR,IAAmB,sCAAnC;AACA,YAAMC,UAAU,GAAG;AACfxD,UAAAA,OAAO,EAAER,MAAM,CAACiE,MAAP,CAAc;AACnBC,YAAAA,GAAG,EAAE,CAACH,OAAO,GACT,yDADC,EAC0DI,OAD1D,CACkE,cADlE,EACkF,IADlF,CADc;AAGnBC,YAAAA,MAAM,EAAE;AAHW,WAAd,EAIN5D,OAJM,CADM;AAMfsD,UAAAA,MANe;AAOfO,UAAAA,cAAc,EAAE,CAAC,0BAAD,CAPD;AAQfC,UAAAA,UAAU,EAAE,CAAC,0BAAD,CARG;AASf5D,UAAAA,OAAO,EAAE,KAAKA;AATC,SAAnB;;AAWA,YAAImD,QAAJ,EAAc;AACVxD,UAAAA,mBAAmB,CAACkE,gBAApB,CAAqCP,UAArC,EAAiDH,QAAjD;AACH,SAFD,MAGK;AACD,iBAAOxD,mBAAmB,CAACkE,gBAApB,CAAqCP,UAArC,CAAP;AACH;AACJ;AAl9EmB;AAAA;AAAA,2BAm9EfL,gBAn9Ee,EAm9EGC,iBAn9EH,EAm9EsBC,QAn9EtB,EAm9EgC;AAChD,YAAIC,MAAM,GAAIH,gBAAgB,IAC1B,EADJ;AAEA,YAAInD,OAAO,GAAIoD,iBAAiB,IAAI,EAApC;;AACA,YAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;AACxCE,UAAAA,QAAQ,GAAGF,gBAAX;AACAG,UAAAA,MAAM,GAAG,EAAT;AACAtD,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAI,OAAOoD,iBAAP,KAA6B,UAAjC,EAA6C;AACzCC,UAAAA,QAAQ,GAAGD,iBAAX;AACApD,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAMuD,OAAO,GAAGvD,OAAO,CAACuD,OAAR,IAAmB,sCAAnC;AACA,YAAMC,UAAU,GAAG;AACfxD,UAAAA,OAAO,EAAER,MAAM,CAACiE,MAAP,CAAc;AACnBC,YAAAA,GAAG,EAAE,CAACH,OAAO,GAAG,6BAAX,EAA0CI,OAA1C,CAAkD,cAAlD,EAAkE,IAAlE,CADc;AAEnBC,YAAAA,MAAM,EAAE;AAFW,WAAd,EAGN5D,OAHM,CADM;AAKfsD,UAAAA,MALe;AAMfO,UAAAA,cAAc,EAAE,EAND;AAOfC,UAAAA,UAAU,EAAE,EAPG;AAQf5D,UAAAA,OAAO,EAAE,KAAKA;AARC,SAAnB;;AAUA,YAAImD,QAAJ,EAAc;AACVxD,UAAAA,mBAAmB,CAACkE,gBAApB,CAAqCP,UAArC,EAAiDH,QAAjD;AACH,SAFD,MAGK;AACD,iBAAOxD,mBAAmB,CAACkE,gBAApB,CAAqCP,UAArC,CAAP;AACH;AACJ;AAj/EmB;;AAAA;AAAA;;AAm/ExB5D,EAAAA,eAAe,CAACa,gCAAhB,GAAmDA,gCAAnD;;AAn/EwB,MAo/ElBE,oBAp/EkB;AAq/EpB,kCAAYT,OAAZ,EAAqB;AAAA;;AACjB,WAAKA,OAAL,GAAeA,OAAf;AACH;;AAv/EmB;AAAA;AAAA,0BAw/EhBiD,gBAx/EgB,EAw/EEC,iBAx/EF,EAw/EqBC,QAx/ErB,EAw/E+B;AAC/C,YAAIC,MAAM,GAAIH,gBAAgB,IAAI,EAAlC;AACA,YAAInD,OAAO,GAAIoD,iBAAiB,IAAI,EAApC;;AACA,YAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;AACxCE,UAAAA,QAAQ,GAAGF,gBAAX;AACAG,UAAAA,MAAM,GAAG,EAAT;AACAtD,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAI,OAAOoD,iBAAP,KAA6B,UAAjC,EAA6C;AACzCC,UAAAA,QAAQ,GAAGD,iBAAX;AACApD,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAMuD,OAAO,GAAGvD,OAAO,CAACuD,OAAR,IAAmB,sCAAnC;AACA,YAAMC,UAAU,GAAG;AACfxD,UAAAA,OAAO,EAAER,MAAM,CAACiE,MAAP,CAAc;AACnBC,YAAAA,GAAG,EAAE,CAACH,OAAO,GAAG,iCAAX,EAA8CI,OAA9C,CAAsD,cAAtD,EAAsE,IAAtE,CADc;AAEnBC,YAAAA,MAAM,EAAE;AAFW,WAAd,EAGN5D,OAHM,CADM;AAKfsD,UAAAA,MALe;AAMfO,UAAAA,cAAc,EAAE,CAAC,cAAD,CAND;AAOfC,UAAAA,UAAU,EAAE,CAAC,cAAD,CAPG;AAQf5D,UAAAA,OAAO,EAAE,KAAKA;AARC,SAAnB;;AAUA,YAAImD,QAAJ,EAAc;AACVxD,UAAAA,mBAAmB,CAACkE,gBAApB,CAAqCP,UAArC,EAAiDH,QAAjD;AACH,SAFD,MAGK;AACD,iBAAOxD,mBAAmB,CAACkE,gBAApB,CAAqCP,UAArC,CAAP;AACH;AACJ;AArhFmB;AAAA;AAAA,2BAshFfL,gBAthFe,EAshFGC,iBAthFH,EAshFsBC,QAthFtB,EAshFgC;AAChD,YAAIC,MAAM,GAAIH,gBAAgB,IAAI,EAAlC;AACA,YAAInD,OAAO,GAAIoD,iBAAiB,IAAI,EAApC;;AACA,YAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;AACxCE,UAAAA,QAAQ,GAAGF,gBAAX;AACAG,UAAAA,MAAM,GAAG,EAAT;AACAtD,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAI,OAAOoD,iBAAP,KAA6B,UAAjC,EAA6C;AACzCC,UAAAA,QAAQ,GAAGD,iBAAX;AACApD,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAMuD,OAAO,GAAGvD,OAAO,CAACuD,OAAR,IAAmB,sCAAnC;AACA,YAAMC,UAAU,GAAG;AACfxD,UAAAA,OAAO,EAAER,MAAM,CAACiE,MAAP,CAAc;AACnBC,YAAAA,GAAG,EAAE,CAACH,OAAO,GAAG,iBAAX,EAA8BI,OAA9B,CAAsC,cAAtC,EAAsD,IAAtD,CADc;AAEnBC,YAAAA,MAAM,EAAE;AAFW,WAAd,EAGN5D,OAHM,CADM;AAKfsD,UAAAA,MALe;AAMfO,UAAAA,cAAc,EAAE,EAND;AAOfC,UAAAA,UAAU,EAAE,EAPG;AAQf5D,UAAAA,OAAO,EAAE,KAAKA;AARC,SAAnB;;AAUA,YAAImD,QAAJ,EAAc;AACVxD,UAAAA,mBAAmB,CAACkE,gBAApB,CAAqCP,UAArC,EAAiDH,QAAjD;AACH,SAFD,MAGK;AACD,iBAAOxD,mBAAmB,CAACkE,gBAApB,CAAqCP,UAArC,CAAP;AACH;AACJ;AAnjFmB;;AAAA;AAAA;;AAqjFxB5D,EAAAA,eAAe,CAACe,oBAAhB,GAAuCA,oBAAvC;;AArjFwB,MAsjFlBE,oCAtjFkB;AAujFpB,kDAAYX,OAAZ,EAAqB;AAAA;;AACjB,WAAKA,OAAL,GAAeA,OAAf;AACH;;AAzjFmB;AAAA;AAAA,0BA0jFhBiD,gBA1jFgB,EA0jFEC,iBA1jFF,EA0jFqBC,QA1jFrB,EA0jF+B;AAC/C,YAAIC,MAAM,GAAIH,gBAAgB,IAC1B,EADJ;AAEA,YAAInD,OAAO,GAAIoD,iBAAiB,IAAI,EAApC;;AACA,YAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;AACxCE,UAAAA,QAAQ,GAAGF,gBAAX;AACAG,UAAAA,MAAM,GAAG,EAAT;AACAtD,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAI,OAAOoD,iBAAP,KAA6B,UAAjC,EAA6C;AACzCC,UAAAA,QAAQ,GAAGD,iBAAX;AACApD,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAMuD,OAAO,GAAGvD,OAAO,CAACuD,OAAR,IAAmB,sCAAnC;AACA,YAAMC,UAAU,GAAG;AACfxD,UAAAA,OAAO,EAAER,MAAM,CAACiE,MAAP,CAAc;AACnBC,YAAAA,GAAG,EAAE,CAACH,OAAO,GACT,iEADC,EACkEI,OADlE,CAC0E,cAD1E,EAC0F,IAD1F,CADc;AAGnBC,YAAAA,MAAM,EAAE;AAHW,WAAd,EAIN5D,OAJM,CADM;AAMfsD,UAAAA,MANe;AAOfO,UAAAA,cAAc,EAAE,CAAC,8BAAD,CAPD;AAQfC,UAAAA,UAAU,EAAE,CAAC,8BAAD,CARG;AASf5D,UAAAA,OAAO,EAAE,KAAKA;AATC,SAAnB;;AAWA,YAAImD,QAAJ,EAAc;AACVxD,UAAAA,mBAAmB,CAACkE,gBAApB,CAAqCP,UAArC,EAAiDH,QAAjD;AACH,SAFD,MAGK;AACD,iBAAOxD,mBAAmB,CAACkE,gBAApB,CAAqCP,UAArC,CAAP;AACH;AACJ;AAzlFmB;AAAA;AAAA,2BA0lFfL,gBA1lFe,EA0lFGC,iBA1lFH,EA0lFsBC,QA1lFtB,EA0lFgC;AAChD,YAAIC,MAAM,GAAIH,gBAAgB,IAC1B,EADJ;AAEA,YAAInD,OAAO,GAAIoD,iBAAiB,IAAI,EAApC;;AACA,YAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;AACxCE,UAAAA,QAAQ,GAAGF,gBAAX;AACAG,UAAAA,MAAM,GAAG,EAAT;AACAtD,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAI,OAAOoD,iBAAP,KAA6B,UAAjC,EAA6C;AACzCC,UAAAA,QAAQ,GAAGD,iBAAX;AACApD,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAMuD,OAAO,GAAGvD,OAAO,CAACuD,OAAR,IAAmB,sCAAnC;AACA,YAAMC,UAAU,GAAG;AACfxD,UAAAA,OAAO,EAAER,MAAM,CAACiE,MAAP,CAAc;AACnBC,YAAAA,GAAG,EAAE,CAACH,OAAO,GAAG,iCAAX,EAA8CI,OAA9C,CAAsD,cAAtD,EAAsE,IAAtE,CADc;AAEnBC,YAAAA,MAAM,EAAE;AAFW,WAAd,EAGN5D,OAHM,CADM;AAKfsD,UAAAA,MALe;AAMfO,UAAAA,cAAc,EAAE,EAND;AAOfC,UAAAA,UAAU,EAAE,EAPG;AAQf5D,UAAAA,OAAO,EAAE,KAAKA;AARC,SAAnB;;AAUA,YAAImD,QAAJ,EAAc;AACVxD,UAAAA,mBAAmB,CAACkE,gBAApB,CAAqCP,UAArC,EAAiDH,QAAjD;AACH,SAFD,MAGK;AACD,iBAAOxD,mBAAmB,CAACkE,gBAApB,CAAqCP,UAArC,CAAP;AACH;AACJ;AAxnFmB;;AAAA;AAAA;;AA0nFxB5D,EAAAA,eAAe,CAACiB,oCAAhB,GAAuDA,oCAAvD;;AA1nFwB,MA2nFlBE,yBA3nFkB;AA4nFpB,uCAAYb,OAAZ,EAAqB;AAAA;;AACjB,WAAKA,OAAL,GAAeA,OAAf;AACH;;AA9nFmB;AAAA;AAAA,0BA+nFhBiD,gBA/nFgB,EA+nFEC,iBA/nFF,EA+nFqBC,QA/nFrB,EA+nF+B;AAC/C,YAAIC,MAAM,GAAIH,gBAAgB,IAC1B,EADJ;AAEA,YAAInD,OAAO,GAAIoD,iBAAiB,IAAI,EAApC;;AACA,YAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;AACxCE,UAAAA,QAAQ,GAAGF,gBAAX;AACAG,UAAAA,MAAM,GAAG,EAAT;AACAtD,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAI,OAAOoD,iBAAP,KAA6B,UAAjC,EAA6C;AACzCC,UAAAA,QAAQ,GAAGD,iBAAX;AACApD,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAMuD,OAAO,GAAGvD,OAAO,CAACuD,OAAR,IAAmB,sCAAnC;AACA,YAAMC,UAAU,GAAG;AACfxD,UAAAA,OAAO,EAAER,MAAM,CAACiE,MAAP,CAAc;AACnBC,YAAAA,GAAG,EAAE,CAACH,OAAO,GAAG,2CAAX,EAAwDI,OAAxD,CAAgE,cAAhE,EAAgF,IAAhF,CADc;AAEnBC,YAAAA,MAAM,EAAE;AAFW,WAAd,EAGN5D,OAHM,CADM;AAKfsD,UAAAA,MALe;AAMfO,UAAAA,cAAc,EAAE,CAAC,mBAAD,CAND;AAOfC,UAAAA,UAAU,EAAE,CAAC,mBAAD,CAPG;AAQf5D,UAAAA,OAAO,EAAE,KAAKA;AARC,SAAnB;;AAUA,YAAImD,QAAJ,EAAc;AACVxD,UAAAA,mBAAmB,CAACkE,gBAApB,CAAqCP,UAArC,EAAiDH,QAAjD;AACH,SAFD,MAGK;AACD,iBAAOxD,mBAAmB,CAACkE,gBAApB,CAAqCP,UAArC,CAAP;AACH;AACJ;AA7pFmB;AAAA;AAAA,4BA8pFdL,gBA9pFc,EA8pFIC,iBA9pFJ,EA8pFuBC,QA9pFvB,EA8pFiC;AACjD,YAAIC,MAAM,GAAIH,gBAAgB,IAC1B,EADJ;AAEA,YAAInD,OAAO,GAAIoD,iBAAiB,IAAI,EAApC;;AACA,YAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;AACxCE,UAAAA,QAAQ,GAAGF,gBAAX;AACAG,UAAAA,MAAM,GAAG,EAAT;AACAtD,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAI,OAAOoD,iBAAP,KAA6B,UAAjC,EAA6C;AACzCC,UAAAA,QAAQ,GAAGD,iBAAX;AACApD,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAMuD,OAAO,GAAGvD,OAAO,CAACuD,OAAR,IAAmB,sCAAnC;AACA,YAAMC,UAAU,GAAG;AACfxD,UAAAA,OAAO,EAAER,MAAM,CAACiE,MAAP,CAAc;AACnBC,YAAAA,GAAG,EAAE,CAACH,OAAO,GAAG,0CAAX,EAAuDI,OAAvD,CAA+D,cAA/D,EAA+E,IAA/E,CADc;AAEnBC,YAAAA,MAAM,EAAE;AAFW,WAAd,EAGN5D,OAHM,CADM;AAKfsD,UAAAA,MALe;AAMfO,UAAAA,cAAc,EAAE,CAAC,mBAAD,CAND;AAOfC,UAAAA,UAAU,EAAE,CAAC,mBAAD,CAPG;AAQf5D,UAAAA,OAAO,EAAE,KAAKA;AARC,SAAnB;;AAUA,YAAImD,QAAJ,EAAc;AACVxD,UAAAA,mBAAmB,CAACkE,gBAApB,CAAqCP,UAArC,EAAiDH,QAAjD;AACH,SAFD,MAGK;AACD,iBAAOxD,mBAAmB,CAACkE,gBAApB,CAAqCP,UAArC,CAAP;AACH;AACJ;AA5rFmB;;AAAA;AAAA;;AA8rFxB5D,EAAAA,eAAe,CAACmB,yBAAhB,GAA4CA,yBAA5C;;AA9rFwB,MA+rFlBE,wBA/rFkB;AAgsFpB,sCAAYf,OAAZ,EAAqB;AAAA;;AACjB,WAAKA,OAAL,GAAeA,OAAf;AACH;;AAlsFmB;AAAA;AAAA,0BAmsFhBiD,gBAnsFgB,EAmsFEC,iBAnsFF,EAmsFqBC,QAnsFrB,EAmsF+B;AAC/C,YAAIC,MAAM,GAAIH,gBAAgB,IAC1B,EADJ;AAEA,YAAInD,OAAO,GAAIoD,iBAAiB,IAAI,EAApC;;AACA,YAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;AACxCE,UAAAA,QAAQ,GAAGF,gBAAX;AACAG,UAAAA,MAAM,GAAG,EAAT;AACAtD,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAI,OAAOoD,iBAAP,KAA6B,UAAjC,EAA6C;AACzCC,UAAAA,QAAQ,GAAGD,iBAAX;AACApD,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAMuD,OAAO,GAAGvD,OAAO,CAACuD,OAAR,IAAmB,sCAAnC;AACA,YAAMC,UAAU,GAAG;AACfxD,UAAAA,OAAO,EAAER,MAAM,CAACiE,MAAP,CAAc;AACnBC,YAAAA,GAAG,EAAE,CAACH,OAAO,GAAG,yCAAX,EAAsDI,OAAtD,CAA8D,cAA9D,EAA8E,IAA9E,CADc;AAEnBC,YAAAA,MAAM,EAAE;AAFW,WAAd,EAGN5D,OAHM,CADM;AAKfsD,UAAAA,MALe;AAMfO,UAAAA,cAAc,EAAE,CAAC,kBAAD,CAND;AAOfC,UAAAA,UAAU,EAAE,CAAC,kBAAD,CAPG;AAQf5D,UAAAA,OAAO,EAAE,KAAKA;AARC,SAAnB;;AAUA,YAAImD,QAAJ,EAAc;AACVxD,UAAAA,mBAAmB,CAACkE,gBAApB,CAAqCP,UAArC,EAAiDH,QAAjD;AACH,SAFD,MAGK;AACD,iBAAOxD,mBAAmB,CAACkE,gBAApB,CAAqCP,UAArC,CAAP;AACH;AACJ;AAjuFmB;AAAA;AAAA,2BAkuFfL,gBAluFe,EAkuFGC,iBAluFH,EAkuFsBC,QAluFtB,EAkuFgC;AAChD,YAAIC,MAAM,GAAIH,gBAAgB,IAC1B,EADJ;AAEA,YAAInD,OAAO,GAAIoD,iBAAiB,IAAI,EAApC;;AACA,YAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;AACxCE,UAAAA,QAAQ,GAAGF,gBAAX;AACAG,UAAAA,MAAM,GAAG,EAAT;AACAtD,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAI,OAAOoD,iBAAP,KAA6B,UAAjC,EAA6C;AACzCC,UAAAA,QAAQ,GAAGD,iBAAX;AACApD,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAMuD,OAAO,GAAGvD,OAAO,CAACuD,OAAR,IAAmB,sCAAnC;AACA,YAAMC,UAAU,GAAG;AACfxD,UAAAA,OAAO,EAAER,MAAM,CAACiE,MAAP,CAAc;AACnBC,YAAAA,GAAG,EAAE,CAACH,OAAO,GAAG,qBAAX,EAAkCI,OAAlC,CAA0C,cAA1C,EAA0D,IAA1D,CADc;AAEnBC,YAAAA,MAAM,EAAE;AAFW,WAAd,EAGN5D,OAHM,CADM;AAKfsD,UAAAA,MALe;AAMfO,UAAAA,cAAc,EAAE,EAND;AAOfC,UAAAA,UAAU,EAAE,EAPG;AAQf5D,UAAAA,OAAO,EAAE,KAAKA;AARC,SAAnB;;AAUA,YAAImD,QAAJ,EAAc;AACVxD,UAAAA,mBAAmB,CAACkE,gBAApB,CAAqCP,UAArC,EAAiDH,QAAjD;AACH,SAFD,MAGK;AACD,iBAAOxD,mBAAmB,CAACkE,gBAApB,CAAqCP,UAArC,CAAP;AACH;AACJ;AAhwFmB;;AAAA;AAAA;;AAkwFxB5D,EAAAA,eAAe,CAACqB,wBAAhB,GAA2CA,wBAA3C;;AAlwFwB,MAmwFlBE,8BAnwFkB;AAowFpB,4CAAYjB,OAAZ,EAAqB;AAAA;;AACjB,WAAKA,OAAL,GAAeA,OAAf;AACA,WAAKyE,wBAAL,GAAgC,IAAIC,uDAAJ,CAA4D,KAAK1E,OAAjE,CAAhC;AACH;;AAvwFmB;AAAA;AAAA,6BAwwFbiD,gBAxwFa,EAwwFKC,iBAxwFL,EAwwFwBC,QAxwFxB,EAwwFkC;AAClD,YAAIC,MAAM,GAAIH,gBAAgB,IAC1B,EADJ;AAEA,YAAInD,OAAO,GAAIoD,iBAAiB,IAAI,EAApC;;AACA,YAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;AACxCE,UAAAA,QAAQ,GAAGF,gBAAX;AACAG,UAAAA,MAAM,GAAG,EAAT;AACAtD,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAI,OAAOoD,iBAAP,KAA6B,UAAjC,EAA6C;AACzCC,UAAAA,QAAQ,GAAGD,iBAAX;AACApD,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAMuD,OAAO,GAAGvD,OAAO,CAACuD,OAAR,IAAmB,sCAAnC;AACA,YAAMC,UAAU,GAAG;AACfxD,UAAAA,OAAO,EAAER,MAAM,CAACiE,MAAP,CAAc;AACnBC,YAAAA,GAAG,EAAE,CAACH,OAAO,GAAG,2BAAX,EAAwCI,OAAxC,CAAgD,cAAhD,EAAgE,IAAhE,CADc;AAEnBC,YAAAA,MAAM,EAAE;AAFW,WAAd,EAGN5D,OAHM,CADM;AAKfsD,UAAAA,MALe;AAMfO,UAAAA,cAAc,EAAE,EAND;AAOfC,UAAAA,UAAU,EAAE,EAPG;AAQf5D,UAAAA,OAAO,EAAE,KAAKA;AARC,SAAnB;;AAUA,YAAImD,QAAJ,EAAc;AACVxD,UAAAA,mBAAmB,CAACkE,gBAApB,CAAqCP,UAArC,EAAiDH,QAAjD;AACH,SAFD,MAGK;AACD,iBAAOxD,mBAAmB,CAACkE,gBAApB,CAAqCP,UAArC,CAAP;AACH;AACJ;AAtyFmB;AAAA;AAAA,8BAuyFbL,gBAvyFa,EAuyFKC,iBAvyFL,EAuyFwBC,QAvyFxB,EAuyFkC;AAClD,YAAIC,MAAM,GAAIH,gBAAgB,IAC1B,EADJ;AAEA,YAAInD,OAAO,GAAIoD,iBAAiB,IAAI,EAApC;;AACA,YAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;AACxCE,UAAAA,QAAQ,GAAGF,gBAAX;AACAG,UAAAA,MAAM,GAAG,EAAT;AACAtD,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAI,OAAOoD,iBAAP,KAA6B,UAAjC,EAA6C;AACzCC,UAAAA,QAAQ,GAAGD,iBAAX;AACApD,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAMuD,OAAO,GAAGvD,OAAO,CAACuD,OAAR,IAAmB,sCAAnC;AACA,YAAMC,UAAU,GAAG;AACfxD,UAAAA,OAAO,EAAER,MAAM,CAACiE,MAAP,CAAc;AACnBC,YAAAA,GAAG,EAAE,CAACH,OAAO,GAAG,qDAAX,EAAkEI,OAAlE,CAA0E,cAA1E,EAA0F,IAA1F,CADc;AAEnBC,YAAAA,MAAM,EAAE;AAFW,WAAd,EAGN5D,OAHM,CADM;AAKfsD,UAAAA,MALe;AAMfO,UAAAA,cAAc,EAAE,CAAC,wBAAD,CAND;AAOfC,UAAAA,UAAU,EAAE,CAAC,wBAAD,CAPG;AAQf5D,UAAAA,OAAO,EAAE,KAAKA;AARC,SAAnB;;AAUA,YAAImD,QAAJ,EAAc;AACVxD,UAAAA,mBAAmB,CAACkE,gBAApB,CAAqCP,UAArC,EAAiDH,QAAjD;AACH,SAFD,MAGK;AACD,iBAAOxD,mBAAmB,CAACkE,gBAApB,CAAqCP,UAArC,CAAP;AACH;AACJ;AAr0FmB;AAAA;AAAA,0BAs0FhBL,gBAt0FgB,EAs0FEC,iBAt0FF,EAs0FqBC,QAt0FrB,EAs0F+B;AAC/C,YAAIC,MAAM,GAAIH,gBAAgB,IAC1B,EADJ;AAEA,YAAInD,OAAO,GAAIoD,iBAAiB,IAAI,EAApC;;AACA,YAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;AACxCE,UAAAA,QAAQ,GAAGF,gBAAX;AACAG,UAAAA,MAAM,GAAG,EAAT;AACAtD,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAI,OAAOoD,iBAAP,KAA6B,UAAjC,EAA6C;AACzCC,UAAAA,QAAQ,GAAGD,iBAAX;AACApD,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAMuD,OAAO,GAAGvD,OAAO,CAACuD,OAAR,IAAmB,sCAAnC;AACA,YAAMC,UAAU,GAAG;AACfxD,UAAAA,OAAO,EAAER,MAAM,CAACiE,MAAP,CAAc;AACnBC,YAAAA,GAAG,EAAE,CAACH,OAAO,GAAG,qDAAX,EAAkEI,OAAlE,CAA0E,cAA1E,EAA0F,IAA1F,CADc;AAEnBC,YAAAA,MAAM,EAAE;AAFW,WAAd,EAGN5D,OAHM,CADM;AAKfsD,UAAAA,MALe;AAMfO,UAAAA,cAAc,EAAE,CAAC,wBAAD,CAND;AAOfC,UAAAA,UAAU,EAAE,CAAC,wBAAD,CAPG;AAQf5D,UAAAA,OAAO,EAAE,KAAKA;AARC,SAAnB;;AAUA,YAAImD,QAAJ,EAAc;AACVxD,UAAAA,mBAAmB,CAACkE,gBAApB,CAAqCP,UAArC,EAAiDH,QAAjD;AACH,SAFD,MAGK;AACD,iBAAOxD,mBAAmB,CAACkE,gBAApB,CAAqCP,UAArC,CAAP;AACH;AACJ;AAp2FmB;AAAA;AAAA,2BAq2FfL,gBAr2Fe,EAq2FGC,iBAr2FH,EAq2FsBC,QAr2FtB,EAq2FgC;AAChD,YAAIC,MAAM,GAAIH,gBAAgB,IAC1B,EADJ;AAEA,YAAInD,OAAO,GAAIoD,iBAAiB,IAAI,EAApC;;AACA,YAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;AACxCE,UAAAA,QAAQ,GAAGF,gBAAX;AACAG,UAAAA,MAAM,GAAG,EAAT;AACAtD,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAI,OAAOoD,iBAAP,KAA6B,UAAjC,EAA6C;AACzCC,UAAAA,QAAQ,GAAGD,iBAAX;AACApD,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAMuD,OAAO,GAAGvD,OAAO,CAACuD,OAAR,IAAmB,sCAAnC;AACA,YAAMC,UAAU,GAAG;AACfxD,UAAAA,OAAO,EAAER,MAAM,CAACiE,MAAP,CAAc;AACnBC,YAAAA,GAAG,EAAE,CAACH,OAAO,GAAG,2BAAX,EAAwCI,OAAxC,CAAgD,cAAhD,EAAgE,IAAhE,CADc;AAEnBC,YAAAA,MAAM,EAAE;AAFW,WAAd,EAGN5D,OAHM,CADM;AAKfsD,UAAAA,MALe;AAMfO,UAAAA,cAAc,EAAE,EAND;AAOfC,UAAAA,UAAU,EAAE,EAPG;AAQf5D,UAAAA,OAAO,EAAE,KAAKA;AARC,SAAnB;;AAUA,YAAImD,QAAJ,EAAc;AACVxD,UAAAA,mBAAmB,CAACkE,gBAApB,CAAqCP,UAArC,EAAiDH,QAAjD;AACH,SAFD,MAGK;AACD,iBAAOxD,mBAAmB,CAACkE,gBAApB,CAAqCP,UAArC,CAAP;AACH;AACJ;AAn4FmB;AAAA;AAAA,4BAo4FdL,gBAp4Fc,EAo4FIC,iBAp4FJ,EAo4FuBC,QAp4FvB,EAo4FiC;AACjD,YAAIC,MAAM,GAAIH,gBAAgB,IAC1B,EADJ;AAEA,YAAInD,OAAO,GAAIoD,iBAAiB,IAAI,EAApC;;AACA,YAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;AACxCE,UAAAA,QAAQ,GAAGF,gBAAX;AACAG,UAAAA,MAAM,GAAG,EAAT;AACAtD,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAI,OAAOoD,iBAAP,KAA6B,UAAjC,EAA6C;AACzCC,UAAAA,QAAQ,GAAGD,iBAAX;AACApD,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAMuD,OAAO,GAAGvD,OAAO,CAACuD,OAAR,IAAmB,sCAAnC;AACA,YAAMC,UAAU,GAAG;AACfxD,UAAAA,OAAO,EAAER,MAAM,CAACiE,MAAP,CAAc;AACnBC,YAAAA,GAAG,EAAE,CAACH,OAAO,GAAG,oDAAX,EAAiEI,OAAjE,CAAyE,cAAzE,EAAyF,IAAzF,CADc;AAEnBC,YAAAA,MAAM,EAAE;AAFW,WAAd,EAGN5D,OAHM,CADM;AAKfsD,UAAAA,MALe;AAMfO,UAAAA,cAAc,EAAE,CAAC,wBAAD,CAND;AAOfC,UAAAA,UAAU,EAAE,CAAC,wBAAD,CAPG;AAQf5D,UAAAA,OAAO,EAAE,KAAKA;AARC,SAAnB;;AAUA,YAAImD,QAAJ,EAAc;AACVxD,UAAAA,mBAAmB,CAACkE,gBAApB,CAAqCP,UAArC,EAAiDH,QAAjD;AACH,SAFD,MAGK;AACD,iBAAOxD,mBAAmB,CAACkE,gBAApB,CAAqCP,UAArC,CAAP;AACH;AACJ;AAl6FmB;;AAAA;AAAA;;AAo6FxB5D,EAAAA,eAAe,CAACuB,8BAAhB,GAAiDA,8BAAjD;;AAp6FwB,MAq6FlByD,uDAr6FkB;AAs6FpB,qEAAY1E,OAAZ,EAAqB;AAAA;;AACjB,WAAKA,OAAL,GAAeA,OAAf;AACH;;AAx6FmB;AAAA;AAAA,+BAy6FXiD,gBAz6FW,EAy6FOC,iBAz6FP,EAy6F0BC,QAz6F1B,EAy6FoC;AACpD,YAAIC,MAAM,GAAIH,gBAAgB,IAC1B,EADJ;AAEA,YAAInD,OAAO,GAAIoD,iBAAiB,IAAI,EAApC;;AACA,YAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;AACxCE,UAAAA,QAAQ,GAAGF,gBAAX;AACAG,UAAAA,MAAM,GAAG,EAAT;AACAtD,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAI,OAAOoD,iBAAP,KAA6B,UAAjC,EAA6C;AACzCC,UAAAA,QAAQ,GAAGD,iBAAX;AACApD,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAMuD,OAAO,GAAGvD,OAAO,CAACuD,OAAR,IAAmB,sCAAnC;AACA,YAAMC,UAAU,GAAG;AACfxD,UAAAA,OAAO,EAAER,MAAM,CAACiE,MAAP,CAAc;AACnBC,YAAAA,GAAG,EAAE,CAACH,OAAO,GACT,uFADC,EACwFI,OADxF,CACgG,cADhG,EACgH,IADhH,CADc;AAGnBC,YAAAA,MAAM,EAAE;AAHW,WAAd,EAIN5D,OAJM,CADM;AAMfsD,UAAAA,MANe;AAOfO,UAAAA,cAAc,EAAE,CAAC,wBAAD,CAPD;AAQfC,UAAAA,UAAU,EAAE,CAAC,wBAAD,CARG;AASf5D,UAAAA,OAAO,EAAE,KAAKA;AATC,SAAnB;;AAWA,YAAImD,QAAJ,EAAc;AACVxD,UAAAA,mBAAmB,CAACkE,gBAApB,CAAqCP,UAArC,EAAiDH,QAAjD;AACH,SAFD,MAGK;AACD,iBAAOxD,mBAAmB,CAACkE,gBAApB,CAAqCP,UAArC,CAAP;AACH;AACJ;AAx8FmB;AAAA;AAAA,6BAy8FbL,gBAz8Fa,EAy8FKC,iBAz8FL,EAy8FwBC,QAz8FxB,EAy8FkC;AAClD,YAAIC,MAAM,GAAIH,gBAAgB,IAC1B,EADJ;AAEA,YAAInD,OAAO,GAAIoD,iBAAiB,IAAI,EAApC;;AACA,YAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;AACxCE,UAAAA,QAAQ,GAAGF,gBAAX;AACAG,UAAAA,MAAM,GAAG,EAAT;AACAtD,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAI,OAAOoD,iBAAP,KAA6B,UAAjC,EAA6C;AACzCC,UAAAA,QAAQ,GAAGD,iBAAX;AACApD,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAMuD,OAAO,GAAGvD,OAAO,CAACuD,OAAR,IAAmB,sCAAnC;AACA,YAAMC,UAAU,GAAG;AACfxD,UAAAA,OAAO,EAAER,MAAM,CAACiE,MAAP,CAAc;AACnBC,YAAAA,GAAG,EAAE,CAACH,OAAO,GACT,8EADC,EAC+EI,OAD/E,CACuF,cADvF,EACuG,IADvG,CADc;AAGnBC,YAAAA,MAAM,EAAE;AAHW,WAAd,EAIN5D,OAJM,CADM;AAMfsD,UAAAA,MANe;AAOfO,UAAAA,cAAc,EAAE,CAAC,wBAAD,CAPD;AAQfC,UAAAA,UAAU,EAAE,CAAC,wBAAD,CARG;AASf5D,UAAAA,OAAO,EAAE,KAAKA;AATC,SAAnB;;AAWA,YAAImD,QAAJ,EAAc;AACVxD,UAAAA,mBAAmB,CAACkE,gBAApB,CAAqCP,UAArC,EAAiDH,QAAjD;AACH,SAFD,MAGK;AACD,iBAAOxD,mBAAmB,CAACkE,gBAApB,CAAqCP,UAArC,CAAP;AACH;AACJ;AAx+FmB;AAAA;AAAA,8BAy+FbL,gBAz+Fa,EAy+FKC,iBAz+FL,EAy+FwBC,QAz+FxB,EAy+FkC;AAClD,YAAIC,MAAM,GAAIH,gBAAgB,IAC1B,EADJ;AAEA,YAAInD,OAAO,GAAIoD,iBAAiB,IAAI,EAApC;;AACA,YAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;AACxCE,UAAAA,QAAQ,GAAGF,gBAAX;AACAG,UAAAA,MAAM,GAAG,EAAT;AACAtD,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAI,OAAOoD,iBAAP,KAA6B,UAAjC,EAA6C;AACzCC,UAAAA,QAAQ,GAAGD,iBAAX;AACApD,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAMuD,OAAO,GAAGvD,OAAO,CAACuD,OAAR,IAAmB,sCAAnC;AACA,YAAMC,UAAU,GAAG;AACfxD,UAAAA,OAAO,EAAER,MAAM,CAACiE,MAAP,CAAc;AACnBC,YAAAA,GAAG,EAAE,CAACH,OAAO,GACT,2GADC,EAC4GI,OAD5G,CACoH,cADpH,EACoI,IADpI,CADc;AAGnBC,YAAAA,MAAM,EAAE;AAHW,WAAd,EAIN5D,OAJM,CADM;AAMfsD,UAAAA,MANe;AAOfO,UAAAA,cAAc,EAAE,CAAC,wBAAD,EAA2B,2BAA3B,CAPD;AAQfC,UAAAA,UAAU,EAAE,CAAC,2BAAD,EAA8B,wBAA9B,CARG;AASf5D,UAAAA,OAAO,EAAE,KAAKA;AATC,SAAnB;;AAWA,YAAImD,QAAJ,EAAc;AACVxD,UAAAA,mBAAmB,CAACkE,gBAApB,CAAqCP,UAArC,EAAiDH,QAAjD;AACH,SAFD,MAGK;AACD,iBAAOxD,mBAAmB,CAACkE,gBAApB,CAAqCP,UAArC,CAAP;AACH;AACJ;AAxgGmB;AAAA;AAAA,2BAygGfL,gBAzgGe,EAygGGC,iBAzgGH,EAygGsBC,QAzgGtB,EAygGgC;AAChD,YAAIC,MAAM,GAAIH,gBAAgB,IAC1B,EADJ;AAEA,YAAInD,OAAO,GAAIoD,iBAAiB,IAAI,EAApC;;AACA,YAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;AACxCE,UAAAA,QAAQ,GAAGF,gBAAX;AACAG,UAAAA,MAAM,GAAG,EAAT;AACAtD,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAI,OAAOoD,iBAAP,KAA6B,UAAjC,EAA6C;AACzCC,UAAAA,QAAQ,GAAGD,iBAAX;AACApD,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAMuD,OAAO,GAAGvD,OAAO,CAACuD,OAAR,IAAmB,sCAAnC;AACA,YAAMC,UAAU,GAAG;AACfxD,UAAAA,OAAO,EAAER,MAAM,CAACiE,MAAP,CAAc;AACnBC,YAAAA,GAAG,EAAE,CAACH,OAAO,GACT,8EADC,EAC+EI,OAD/E,CACuF,cADvF,EACuG,IADvG,CADc;AAGnBC,YAAAA,MAAM,EAAE;AAHW,WAAd,EAIN5D,OAJM,CADM;AAMfsD,UAAAA,MANe;AAOfO,UAAAA,cAAc,EAAE,CAAC,wBAAD,CAPD;AAQfC,UAAAA,UAAU,EAAE,CAAC,wBAAD,CARG;AASf5D,UAAAA,OAAO,EAAE,KAAKA;AATC,SAAnB;;AAWA,YAAImD,QAAJ,EAAc;AACVxD,UAAAA,mBAAmB,CAACkE,gBAApB,CAAqCP,UAArC,EAAiDH,QAAjD;AACH,SAFD,MAGK;AACD,iBAAOxD,mBAAmB,CAACkE,gBAApB,CAAqCP,UAArC,CAAP;AACH;AACJ;AAxiGmB;;AAAA;AAAA;;AA0iGxB5D,EAAAA,eAAe,CAACgF,uDAAhB,GAA0EA,uDAA1E;;AA1iGwB,MA2iGlBvD,yBA3iGkB;AA4iGpB,uCAAYnB,OAAZ,EAAqB;AAAA;;AACjB,WAAKA,OAAL,GAAeA,OAAf;AACH;;AA9iGmB;AAAA;AAAA,0BA+iGhBiD,gBA/iGgB,EA+iGEC,iBA/iGF,EA+iGqBC,QA/iGrB,EA+iG+B;AAC/C,YAAIC,MAAM,GAAIH,gBAAgB,IAC1B,EADJ;AAEA,YAAInD,OAAO,GAAIoD,iBAAiB,IAAI,EAApC;;AACA,YAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;AACxCE,UAAAA,QAAQ,GAAGF,gBAAX;AACAG,UAAAA,MAAM,GAAG,EAAT;AACAtD,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAI,OAAOoD,iBAAP,KAA6B,UAAjC,EAA6C;AACzCC,UAAAA,QAAQ,GAAGD,iBAAX;AACApD,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAMuD,OAAO,GAAGvD,OAAO,CAACuD,OAAR,IAAmB,sCAAnC;AACA,YAAMC,UAAU,GAAG;AACfxD,UAAAA,OAAO,EAAER,MAAM,CAACiE,MAAP,CAAc;AACnBC,YAAAA,GAAG,EAAE,CAACH,OAAO,GAAG,2CAAX,EAAwDI,OAAxD,CAAgE,cAAhE,EAAgF,IAAhF,CADc;AAEnBC,YAAAA,MAAM,EAAE;AAFW,WAAd,EAGN5D,OAHM,CADM;AAKfsD,UAAAA,MALe;AAMfO,UAAAA,cAAc,EAAE,CAAC,mBAAD,CAND;AAOfC,UAAAA,UAAU,EAAE,CAAC,mBAAD,CAPG;AAQf5D,UAAAA,OAAO,EAAE,KAAKA;AARC,SAAnB;;AAUA,YAAImD,QAAJ,EAAc;AACVxD,UAAAA,mBAAmB,CAACkE,gBAApB,CAAqCP,UAArC,EAAiDH,QAAjD;AACH,SAFD,MAGK;AACD,iBAAOxD,mBAAmB,CAACkE,gBAApB,CAAqCP,UAArC,CAAP;AACH;AACJ;AA7kGmB;AAAA;AAAA,2BA8kGfL,gBA9kGe,EA8kGGC,iBA9kGH,EA8kGsBC,QA9kGtB,EA8kGgC;AAChD,YAAIC,MAAM,GAAIH,gBAAgB,IAC1B,EADJ;AAEA,YAAInD,OAAO,GAAIoD,iBAAiB,IAAI,EAApC;;AACA,YAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;AACxCE,UAAAA,QAAQ,GAAGF,gBAAX;AACAG,UAAAA,MAAM,GAAG,EAAT;AACAtD,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAI,OAAOoD,iBAAP,KAA6B,UAAjC,EAA6C;AACzCC,UAAAA,QAAQ,GAAGD,iBAAX;AACApD,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAMuD,OAAO,GAAGvD,OAAO,CAACuD,OAAR,IAAmB,sCAAnC;AACA,YAAMC,UAAU,GAAG;AACfxD,UAAAA,OAAO,EAAER,MAAM,CAACiE,MAAP,CAAc;AACnBC,YAAAA,GAAG,EAAE,CAACH,OAAO,GAAG,sBAAX,EAAmCI,OAAnC,CAA2C,cAA3C,EAA2D,IAA3D,CADc;AAEnBC,YAAAA,MAAM,EAAE;AAFW,WAAd,EAGN5D,OAHM,CADM;AAKfsD,UAAAA,MALe;AAMfO,UAAAA,cAAc,EAAE,EAND;AAOfC,UAAAA,UAAU,EAAE,EAPG;AAQf5D,UAAAA,OAAO,EAAE,KAAKA;AARC,SAAnB;;AAUA,YAAImD,QAAJ,EAAc;AACVxD,UAAAA,mBAAmB,CAACkE,gBAApB,CAAqCP,UAArC,EAAiDH,QAAjD;AACH,SAFD,MAGK;AACD,iBAAOxD,mBAAmB,CAACkE,gBAApB,CAAqCP,UAArC,CAAP;AACH;AACJ;AA5mGmB;;AAAA;AAAA;;AA8mGxB5D,EAAAA,eAAe,CAACyB,yBAAhB,GAA4CA,yBAA5C;;AA9mGwB,MA+mGlBE,cA/mGkB;AAgnGpB,4BAAYrB,OAAZ,EAAqB;AAAA;;AACjB,WAAKA,OAAL,GAAeA,OAAf;AACH;;AAlnGmB;AAAA;AAAA,+BAmnGXiD,gBAnnGW,EAmnGOC,iBAnnGP,EAmnG0BC,QAnnG1B,EAmnGoC;AACpD,YAAIC,MAAM,GAAIH,gBAAgB,IAAI,EAAlC;AACA,YAAInD,OAAO,GAAIoD,iBAAiB,IAAI,EAApC;;AACA,YAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;AACxCE,UAAAA,QAAQ,GAAGF,gBAAX;AACAG,UAAAA,MAAM,GAAG,EAAT;AACAtD,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAI,OAAOoD,iBAAP,KAA6B,UAAjC,EAA6C;AACzCC,UAAAA,QAAQ,GAAGD,iBAAX;AACApD,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAMuD,OAAO,GAAGvD,OAAO,CAACuD,OAAR,IAAmB,sCAAnC;AACA,YAAMC,UAAU,GAAG;AACfxD,UAAAA,OAAO,EAAER,MAAM,CAACiE,MAAP,CAAc;AACnBC,YAAAA,GAAG,EAAE,CAACH,OAAO,GAAG,2BAAX,EAAwCI,OAAxC,CAAgD,cAAhD,EAAgE,IAAhE,CADc;AAEnBC,YAAAA,MAAM,EAAE;AAFW,WAAd,EAGN5D,OAHM,CADM;AAKfsD,UAAAA,MALe;AAMfO,UAAAA,cAAc,EAAE,CAAC,cAAD,CAND;AAOfC,UAAAA,UAAU,EAAE,CAAC,cAAD,CAPG;AAQf5D,UAAAA,OAAO,EAAE,KAAKA;AARC,SAAnB;;AAUA,YAAImD,QAAJ,EAAc;AACVxD,UAAAA,mBAAmB,CAACkE,gBAApB,CAAqCP,UAArC,EAAiDH,QAAjD;AACH,SAFD,MAGK;AACD,iBAAOxD,mBAAmB,CAACkE,gBAApB,CAAqCP,UAArC,CAAP;AACH;AACJ;AAhpGmB;;AAAA;AAAA;;AAkpGxB5D,EAAAA,eAAe,CAAC2B,cAAhB,GAAiCA,cAAjC;;AAlpGwB,MAmpGlBE,iBAnpGkB;AAopGpB,+BAAYvB,OAAZ,EAAqB;AAAA;;AACjB,WAAKA,OAAL,GAAeA,OAAf;AACA,WAAKkC,QAAL,GAAgB,IAAIyC,0BAAJ,CAA+B,KAAK3E,OAApC,CAAhB;AACA,WAAK0B,cAAL,GAAsB,IAAIkD,gCAAJ,CAAqC,KAAK5E,OAA1C,CAAtB;AACH;;AAxpGmB;AAAA;AAAA,8DAypGoBiD,gBAzpGpB,EAypGsCC,iBAzpGtC,EAypGyDC,QAzpGzD,EAypGmE;AACnF,YAAIC,MAAM,GAAIH,gBAAgB,IAC1B,EADJ;AAEA,YAAInD,OAAO,GAAIoD,iBAAiB,IAAI,EAApC;;AACA,YAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;AACxCE,UAAAA,QAAQ,GAAGF,gBAAX;AACAG,UAAAA,MAAM,GAAG,EAAT;AACAtD,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAI,OAAOoD,iBAAP,KAA6B,UAAjC,EAA6C;AACzCC,UAAAA,QAAQ,GAAGD,iBAAX;AACApD,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAMuD,OAAO,GAAGvD,OAAO,CAACuD,OAAR,IAAmB,sCAAnC;AACA,YAAMC,UAAU,GAAG;AACfxD,UAAAA,OAAO,EAAER,MAAM,CAACiE,MAAP,CAAc;AACnBC,YAAAA,GAAG,EAAE,CAACH,OAAO,GACT,mEADC,EACoEI,OADpE,CAC4E,cAD5E,EAC4F,IAD5F,CADc;AAGnBC,YAAAA,MAAM,EAAE;AAHW,WAAd,EAIN5D,OAJM,CADM;AAMfsD,UAAAA,MANe;AAOfO,UAAAA,cAAc,EAAE,CAAC,WAAD,CAPD;AAQfC,UAAAA,UAAU,EAAE,CAAC,WAAD,CARG;AASf5D,UAAAA,OAAO,EAAE,KAAKA;AATC,SAAnB;;AAWA,YAAImD,QAAJ,EAAc;AACVxD,UAAAA,mBAAmB,CAACkE,gBAApB,CAAqCP,UAArC,EAAiDH,QAAjD;AACH,SAFD,MAGK;AACD,iBAAOxD,mBAAmB,CAACkE,gBAApB,CAAqCP,UAArC,CAAP;AACH;AACJ;AAxrGmB;AAAA;AAAA,0BAyrGhBL,gBAzrGgB,EAyrGEC,iBAzrGF,EAyrGqBC,QAzrGrB,EAyrG+B;AAC/C,YAAIC,MAAM,GAAIH,gBAAgB,IAAI,EAAlC;AACA,YAAInD,OAAO,GAAIoD,iBAAiB,IAAI,EAApC;;AACA,YAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;AACxCE,UAAAA,QAAQ,GAAGF,gBAAX;AACAG,UAAAA,MAAM,GAAG,EAAT;AACAtD,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAI,OAAOoD,iBAAP,KAA6B,UAAjC,EAA6C;AACzCC,UAAAA,QAAQ,GAAGD,iBAAX;AACApD,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAMuD,OAAO,GAAGvD,OAAO,CAACuD,OAAR,IAAmB,sCAAnC;AACA,YAAMC,UAAU,GAAG;AACfxD,UAAAA,OAAO,EAAER,MAAM,CAACiE,MAAP,CAAc;AACnBC,YAAAA,GAAG,EAAE,CAACH,OAAO,GAAG,2BAAX,EAAwCI,OAAxC,CAAgD,cAAhD,EAAgE,IAAhE,CADc;AAEnBC,YAAAA,MAAM,EAAE;AAFW,WAAd,EAGN5D,OAHM,CADM;AAKfsD,UAAAA,MALe;AAMfO,UAAAA,cAAc,EAAE,CAAC,WAAD,CAND;AAOfC,UAAAA,UAAU,EAAE,CAAC,WAAD,CAPG;AAQf5D,UAAAA,OAAO,EAAE,KAAKA;AARC,SAAnB;;AAUA,YAAImD,QAAJ,EAAc;AACVxD,UAAAA,mBAAmB,CAACkE,gBAApB,CAAqCP,UAArC,EAAiDH,QAAjD;AACH,SAFD,MAGK;AACD,iBAAOxD,mBAAmB,CAACkE,gBAApB,CAAqCP,UAArC,CAAP;AACH;AACJ;AAttGmB;AAAA;AAAA,2BAutGfL,gBAvtGe,EAutGGC,iBAvtGH,EAutGsBC,QAvtGtB,EAutGgC;AAChD,YAAIC,MAAM,GAAIH,gBAAgB,IAAI,EAAlC;AACA,YAAInD,OAAO,GAAIoD,iBAAiB,IAAI,EAApC;;AACA,YAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;AACxCE,UAAAA,QAAQ,GAAGF,gBAAX;AACAG,UAAAA,MAAM,GAAG,EAAT;AACAtD,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAI,OAAOoD,iBAAP,KAA6B,UAAjC,EAA6C;AACzCC,UAAAA,QAAQ,GAAGD,iBAAX;AACApD,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAMuD,OAAO,GAAGvD,OAAO,CAACuD,OAAR,IAAmB,sCAAnC;AACA,YAAMC,UAAU,GAAG;AACfxD,UAAAA,OAAO,EAAER,MAAM,CAACiE,MAAP,CAAc;AACnBC,YAAAA,GAAG,EAAE,CAACH,OAAO,GAAG,cAAX,EAA2BI,OAA3B,CAAmC,cAAnC,EAAmD,IAAnD,CADc;AAEnBC,YAAAA,MAAM,EAAE;AAFW,WAAd,EAGN5D,OAHM,CADM;AAKfsD,UAAAA,MALe;AAMfO,UAAAA,cAAc,EAAE,EAND;AAOfC,UAAAA,UAAU,EAAE,EAPG;AAQf5D,UAAAA,OAAO,EAAE,KAAKA;AARC,SAAnB;;AAUA,YAAImD,QAAJ,EAAc;AACVxD,UAAAA,mBAAmB,CAACkE,gBAApB,CAAqCP,UAArC,EAAiDH,QAAjD;AACH,SAFD,MAGK;AACD,iBAAOxD,mBAAmB,CAACkE,gBAApB,CAAqCP,UAArC,CAAP;AACH;AACJ;AApvGmB;;AAAA;AAAA;;AAsvGxB5D,EAAAA,eAAe,CAAC6B,iBAAhB,GAAoCA,iBAApC;;AAtvGwB,MAuvGlBoD,0BAvvGkB;AAwvGpB,wCAAY3E,OAAZ,EAAqB;AAAA;;AACjB,WAAKA,OAAL,GAAeA,OAAf;AACA,WAAK+D,KAAL,GAAa,IAAIc,gCAAJ,CAAqC,KAAK7E,OAA1C,CAAb;AACH;;AA3vGmB;AAAA;AAAA,6BA4vGbiD,gBA5vGa,EA4vGKC,iBA5vGL,EA4vGwBC,QA5vGxB,EA4vGkC;AAClD,YAAIC,MAAM,GAAIH,gBAAgB,IAC1B,EADJ;AAEA,YAAInD,OAAO,GAAIoD,iBAAiB,IAAI,EAApC;;AACA,YAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;AACxCE,UAAAA,QAAQ,GAAGF,gBAAX;AACAG,UAAAA,MAAM,GAAG,EAAT;AACAtD,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAI,OAAOoD,iBAAP,KAA6B,UAAjC,EAA6C;AACzCC,UAAAA,QAAQ,GAAGD,iBAAX;AACApD,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAMuD,OAAO,GAAGvD,OAAO,CAACuD,OAAR,IAAmB,sCAAnC;AACA,YAAMC,UAAU,GAAG;AACfxD,UAAAA,OAAO,EAAER,MAAM,CAACiE,MAAP,CAAc;AACnBC,YAAAA,GAAG,EAAE,CAACH,OAAO,GAAG,oCAAX,EAAiDI,OAAjD,CAAyD,cAAzD,EAAyE,IAAzE,CADc;AAEnBC,YAAAA,MAAM,EAAE;AAFW,WAAd,EAGN5D,OAHM,CADM;AAKfsD,UAAAA,MALe;AAMfO,UAAAA,cAAc,EAAE,CAAC,WAAD,CAND;AAOfC,UAAAA,UAAU,EAAE,CAAC,WAAD,CAPG;AAQf5D,UAAAA,OAAO,EAAE,KAAKA;AARC,SAAnB;;AAUA,YAAImD,QAAJ,EAAc;AACVxD,UAAAA,mBAAmB,CAACkE,gBAApB,CAAqCP,UAArC,EAAiDH,QAAjD;AACH,SAFD,MAGK;AACD,iBAAOxD,mBAAmB,CAACkE,gBAApB,CAAqCP,UAArC,CAAP;AACH;AACJ;AA1xGmB;AAAA;AAAA,0BA2xGhBL,gBA3xGgB,EA2xGEC,iBA3xGF,EA2xGqBC,QA3xGrB,EA2xG+B;AAC/C,YAAIC,MAAM,GAAIH,gBAAgB,IAC1B,EADJ;AAEA,YAAInD,OAAO,GAAIoD,iBAAiB,IAAI,EAApC;;AACA,YAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;AACxCE,UAAAA,QAAQ,GAAGF,gBAAX;AACAG,UAAAA,MAAM,GAAG,EAAT;AACAtD,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAI,OAAOoD,iBAAP,KAA6B,UAAjC,EAA6C;AACzCC,UAAAA,QAAQ,GAAGD,iBAAX;AACApD,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAMuD,OAAO,GAAGvD,OAAO,CAACuD,OAAR,IAAmB,sCAAnC;AACA,YAAMC,UAAU,GAAG;AACfxD,UAAAA,OAAO,EAAER,MAAM,CAACiE,MAAP,CAAc;AACnBC,YAAAA,GAAG,EAAE,CAACH,OAAO,GAAG,iDAAX,EAA8DI,OAA9D,CAAsE,cAAtE,EAAsF,IAAtF,CADc;AAEnBC,YAAAA,MAAM,EAAE;AAFW,WAAd,EAGN5D,OAHM,CADM;AAKfsD,UAAAA,MALe;AAMfO,UAAAA,cAAc,EAAE,CAAC,WAAD,EAAc,WAAd,CAND;AAOfC,UAAAA,UAAU,EAAE,CAAC,WAAD,EAAc,WAAd,CAPG;AAQf5D,UAAAA,OAAO,EAAE,KAAKA;AARC,SAAnB;;AAUA,YAAImD,QAAJ,EAAc;AACVxD,UAAAA,mBAAmB,CAACkE,gBAApB,CAAqCP,UAArC,EAAiDH,QAAjD;AACH,SAFD,MAGK;AACD,iBAAOxD,mBAAmB,CAACkE,gBAApB,CAAqCP,UAArC,CAAP;AACH;AACJ;AAzzGmB;AAAA;AAAA,2BA0zGfL,gBA1zGe,EA0zGGC,iBA1zGH,EA0zGsBC,QA1zGtB,EA0zGgC;AAChD,YAAIC,MAAM,GAAIH,gBAAgB,IAC1B,EADJ;AAEA,YAAInD,OAAO,GAAIoD,iBAAiB,IAAI,EAApC;;AACA,YAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;AACxCE,UAAAA,QAAQ,GAAGF,gBAAX;AACAG,UAAAA,MAAM,GAAG,EAAT;AACAtD,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAI,OAAOoD,iBAAP,KAA6B,UAAjC,EAA6C;AACzCC,UAAAA,QAAQ,GAAGD,iBAAX;AACApD,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAMuD,OAAO,GAAGvD,OAAO,CAACuD,OAAR,IAAmB,sCAAnC;AACA,YAAMC,UAAU,GAAG;AACfxD,UAAAA,OAAO,EAAER,MAAM,CAACiE,MAAP,CAAc;AACnBC,YAAAA,GAAG,EAAE,CAACH,OAAO,GAAG,oCAAX,EAAiDI,OAAjD,CAAyD,cAAzD,EAAyE,IAAzE,CADc;AAEnBC,YAAAA,MAAM,EAAE;AAFW,WAAd,EAGN5D,OAHM,CADM;AAKfsD,UAAAA,MALe;AAMfO,UAAAA,cAAc,EAAE,CAAC,WAAD,CAND;AAOfC,UAAAA,UAAU,EAAE,CAAC,WAAD,CAPG;AAQf5D,UAAAA,OAAO,EAAE,KAAKA;AARC,SAAnB;;AAUA,YAAImD,QAAJ,EAAc;AACVxD,UAAAA,mBAAmB,CAACkE,gBAApB,CAAqCP,UAArC,EAAiDH,QAAjD;AACH,SAFD,MAGK;AACD,iBAAOxD,mBAAmB,CAACkE,gBAApB,CAAqCP,UAArC,CAAP;AACH;AACJ;AAx1GmB;AAAA;AAAA,4BAy1GdL,gBAz1Gc,EAy1GIC,iBAz1GJ,EAy1GuBC,QAz1GvB,EAy1GiC;AACjD,YAAIC,MAAM,GAAIH,gBAAgB,IAC1B,EADJ;AAEA,YAAInD,OAAO,GAAIoD,iBAAiB,IAAI,EAApC;;AACA,YAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;AACxCE,UAAAA,QAAQ,GAAGF,gBAAX;AACAG,UAAAA,MAAM,GAAG,EAAT;AACAtD,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAI,OAAOoD,iBAAP,KAA6B,UAAjC,EAA6C;AACzCC,UAAAA,QAAQ,GAAGD,iBAAX;AACApD,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAMuD,OAAO,GAAGvD,OAAO,CAACuD,OAAR,IAAmB,sCAAnC;AACA,YAAMC,UAAU,GAAG;AACfxD,UAAAA,OAAO,EAAER,MAAM,CAACiE,MAAP,CAAc;AACnBC,YAAAA,GAAG,EAAE,CAACH,OAAO,GAAG,gDAAX,EAA6DI,OAA7D,CAAqE,cAArE,EAAqF,IAArF,CADc;AAEnBC,YAAAA,MAAM,EAAE;AAFW,WAAd,EAGN5D,OAHM,CADM;AAKfsD,UAAAA,MALe;AAMfO,UAAAA,cAAc,EAAE,CAAC,WAAD,EAAc,WAAd,CAND;AAOfC,UAAAA,UAAU,EAAE,CAAC,WAAD,EAAc,WAAd,CAPG;AAQf5D,UAAAA,OAAO,EAAE,KAAKA;AARC,SAAnB;;AAUA,YAAImD,QAAJ,EAAc;AACVxD,UAAAA,mBAAmB,CAACkE,gBAApB,CAAqCP,UAArC,EAAiDH,QAAjD;AACH,SAFD,MAGK;AACD,iBAAOxD,mBAAmB,CAACkE,gBAApB,CAAqCP,UAArC,CAAP;AACH;AACJ;AAv3GmB;;AAAA;AAAA;;AAy3GxB5D,EAAAA,eAAe,CAACiF,0BAAhB,GAA6CA,0BAA7C;;AAz3GwB,MA03GlBE,gCA13GkB;AA23GpB,8CAAY7E,OAAZ,EAAqB;AAAA;;AACjB,WAAKA,OAAL,GAAeA,OAAf;AACH;;AA73GmB;AAAA;AAAA,+BA83GXiD,gBA93GW,EA83GOC,iBA93GP,EA83G0BC,QA93G1B,EA83GoC;AACpD,YAAIC,MAAM,GAAIH,gBAAgB,IAC1B,EADJ;AAEA,YAAInD,OAAO,GAAIoD,iBAAiB,IAAI,EAApC;;AACA,YAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;AACxCE,UAAAA,QAAQ,GAAGF,gBAAX;AACAG,UAAAA,MAAM,GAAG,EAAT;AACAtD,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAI,OAAOoD,iBAAP,KAA6B,UAAjC,EAA6C;AACzCC,UAAAA,QAAQ,GAAGD,iBAAX;AACApD,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAMuD,OAAO,GAAGvD,OAAO,CAACuD,OAAR,IAAmB,sCAAnC;AACA,YAAMC,UAAU,GAAG;AACfxD,UAAAA,OAAO,EAAER,MAAM,CAACiE,MAAP,CAAc;AACnBC,YAAAA,GAAG,EAAE,CAACH,OAAO,GACT,+DADC,EACgEI,OADhE,CACwE,cADxE,EACwF,IADxF,CADc;AAGnBC,YAAAA,MAAM,EAAE;AAHW,WAAd,EAIN5D,OAJM,CADM;AAMfsD,UAAAA,MANe;AAOfO,UAAAA,cAAc,EAAE,CAAC,WAAD,EAAc,WAAd,CAPD;AAQfC,UAAAA,UAAU,EAAE,CAAC,WAAD,EAAc,WAAd,CARG;AASf5D,UAAAA,OAAO,EAAE,KAAKA;AATC,SAAnB;;AAWA,YAAImD,QAAJ,EAAc;AACVxD,UAAAA,mBAAmB,CAACkE,gBAApB,CAAqCP,UAArC,EAAiDH,QAAjD;AACH,SAFD,MAGK;AACD,iBAAOxD,mBAAmB,CAACkE,gBAApB,CAAqCP,UAArC,CAAP;AACH;AACJ;AA75GmB;AAAA;AAAA,6BA85GbL,gBA95Ga,EA85GKC,iBA95GL,EA85GwBC,QA95GxB,EA85GkC;AAClD,YAAIC,MAAM,GAAIH,gBAAgB,IAC1B,EADJ;AAEA,YAAInD,OAAO,GAAIoD,iBAAiB,IAAI,EAApC;;AACA,YAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;AACxCE,UAAAA,QAAQ,GAAGF,gBAAX;AACAG,UAAAA,MAAM,GAAG,EAAT;AACAtD,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAI,OAAOoD,iBAAP,KAA6B,UAAjC,EAA6C;AACzCC,UAAAA,QAAQ,GAAGD,iBAAX;AACApD,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAMuD,OAAO,GAAGvD,OAAO,CAACuD,OAAR,IAAmB,sCAAnC;AACA,YAAMC,UAAU,GAAG;AACfxD,UAAAA,OAAO,EAAER,MAAM,CAACiE,MAAP,CAAc;AACnBC,YAAAA,GAAG,EAAE,CAACH,OAAO,GAAG,sDAAX,EAAmEI,OAAnE,CAA2E,cAA3E,EAA2F,IAA3F,CADc;AAEnBC,YAAAA,MAAM,EAAE;AAFW,WAAd,EAGN5D,OAHM,CADM;AAKfsD,UAAAA,MALe;AAMfO,UAAAA,cAAc,EAAE,CAAC,WAAD,EAAc,WAAd,CAND;AAOfC,UAAAA,UAAU,EAAE,CAAC,WAAD,EAAc,WAAd,CAPG;AAQf5D,UAAAA,OAAO,EAAE,KAAKA;AARC,SAAnB;;AAUA,YAAImD,QAAJ,EAAc;AACVxD,UAAAA,mBAAmB,CAACkE,gBAApB,CAAqCP,UAArC,EAAiDH,QAAjD;AACH,SAFD,MAGK;AACD,iBAAOxD,mBAAmB,CAACkE,gBAApB,CAAqCP,UAArC,CAAP;AACH;AACJ;AA57GmB;AAAA;AAAA,8BA67GbL,gBA77Ga,EA67GKC,iBA77GL,EA67GwBC,QA77GxB,EA67GkC;AAClD,YAAIC,MAAM,GAAIH,gBAAgB,IAC1B,EADJ;AAEA,YAAInD,OAAO,GAAIoD,iBAAiB,IAAI,EAApC;;AACA,YAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;AACxCE,UAAAA,QAAQ,GAAGF,gBAAX;AACAG,UAAAA,MAAM,GAAG,EAAT;AACAtD,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAI,OAAOoD,iBAAP,KAA6B,UAAjC,EAA6C;AACzCC,UAAAA,QAAQ,GAAGD,iBAAX;AACApD,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAMuD,OAAO,GAAGvD,OAAO,CAACuD,OAAR,IAAmB,sCAAnC;AACA,YAAMC,UAAU,GAAG;AACfxD,UAAAA,OAAO,EAAER,MAAM,CAACiE,MAAP,CAAc;AACnBC,YAAAA,GAAG,EAAE,CAACH,OAAO,GACT,oEADC,EACqEI,OADrE,CAC6E,cAD7E,EAC6F,IAD7F,CADc;AAGnBC,YAAAA,MAAM,EAAE;AAHW,WAAd,EAIN5D,OAJM,CADM;AAMfsD,UAAAA,MANe;AAOfO,UAAAA,cAAc,EAAE,CAAC,WAAD,EAAc,WAAd,EAA2B,YAA3B,CAPD;AAQfC,UAAAA,UAAU,EAAE,CAAC,WAAD,EAAc,WAAd,EAA2B,YAA3B,CARG;AASf5D,UAAAA,OAAO,EAAE,KAAKA;AATC,SAAnB;;AAWA,YAAImD,QAAJ,EAAc;AACVxD,UAAAA,mBAAmB,CAACkE,gBAApB,CAAqCP,UAArC,EAAiDH,QAAjD;AACH,SAFD,MAGK;AACD,iBAAOxD,mBAAmB,CAACkE,gBAApB,CAAqCP,UAArC,CAAP;AACH;AACJ;AA59GmB;AAAA;AAAA,2BA69GfL,gBA79Ge,EA69GGC,iBA79GH,EA69GsBC,QA79GtB,EA69GgC;AAChD,YAAIC,MAAM,GAAIH,gBAAgB,IAC1B,EADJ;AAEA,YAAInD,OAAO,GAAIoD,iBAAiB,IAAI,EAApC;;AACA,YAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;AACxCE,UAAAA,QAAQ,GAAGF,gBAAX;AACAG,UAAAA,MAAM,GAAG,EAAT;AACAtD,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAI,OAAOoD,iBAAP,KAA6B,UAAjC,EAA6C;AACzCC,UAAAA,QAAQ,GAAGD,iBAAX;AACApD,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAMuD,OAAO,GAAGvD,OAAO,CAACuD,OAAR,IAAmB,sCAAnC;AACA,YAAMC,UAAU,GAAG;AACfxD,UAAAA,OAAO,EAAER,MAAM,CAACiE,MAAP,CAAc;AACnBC,YAAAA,GAAG,EAAE,CAACH,OAAO,GAAG,uDAAX,EAAoEI,OAApE,CAA4E,cAA5E,EAA4F,IAA5F,CADc;AAEnBC,YAAAA,MAAM,EAAE;AAFW,WAAd,EAGN5D,OAHM,CADM;AAKfsD,UAAAA,MALe;AAMfO,UAAAA,cAAc,EAAE,CAAC,WAAD,EAAc,WAAd,CAND;AAOfC,UAAAA,UAAU,EAAE,CAAC,WAAD,EAAc,WAAd,CAPG;AAQf5D,UAAAA,OAAO,EAAE,KAAKA;AARC,SAAnB;;AAUA,YAAImD,QAAJ,EAAc;AACVxD,UAAAA,mBAAmB,CAACkE,gBAApB,CAAqCP,UAArC,EAAiDH,QAAjD;AACH,SAFD,MAGK;AACD,iBAAOxD,mBAAmB,CAACkE,gBAApB,CAAqCP,UAArC,CAAP;AACH;AACJ;AA3/GmB;;AAAA;AAAA;;AA6/GxB5D,EAAAA,eAAe,CAACmF,gCAAhB,GAAmDA,gCAAnD;;AA7/GwB,MA8/GlBD,gCA9/GkB,GA+/GpB,0CAAY5E,OAAZ,EAAqB;AAAA;;AACjB,SAAKA,OAAL,GAAeA,OAAf;AACA,SAAKkE,wBAAL,GAAgC,IAAIY,yDAAJ,CAA8D,KAAK9E,OAAnE,CAAhC;AACH,GAlgHmB;;AAogHxBN,EAAAA,eAAe,CAACkF,gCAAhB,GAAmDA,gCAAnD;;AApgHwB,MAqgHlBE,yDArgHkB;AAsgHpB,uEAAY9E,OAAZ,EAAqB;AAAA;;AACjB,WAAKA,OAAL,GAAeA,OAAf;AACH;;AAxgHmB;AAAA;AAAA,6BAygHbiD,gBAzgHa,EAygHKC,iBAzgHL,EAygHwBC,QAzgHxB,EAygHkC;AAClD,YAAIC,MAAM,GAAIH,gBAAgB,IAC1B,EADJ;AAEA,YAAInD,OAAO,GAAIoD,iBAAiB,IAAI,EAApC;;AACA,YAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;AACxCE,UAAAA,QAAQ,GAAGF,gBAAX;AACAG,UAAAA,MAAM,GAAG,EAAT;AACAtD,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAI,OAAOoD,iBAAP,KAA6B,UAAjC,EAA6C;AACzCC,UAAAA,QAAQ,GAAGD,iBAAX;AACApD,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAMuD,OAAO,GAAGvD,OAAO,CAACuD,OAAR,IAAmB,sCAAnC;AACA,YAAMC,UAAU,GAAG;AACfxD,UAAAA,OAAO,EAAER,MAAM,CAACiE,MAAP,CAAc;AACnBC,YAAAA,GAAG,EAAE,CAACH,OAAO,GACT,oFADC,EACqFI,OADrF,CAC6F,cAD7F,EAC6G,IAD7G,CADc;AAGnBC,YAAAA,MAAM,EAAE;AAHW,WAAd,EAIN5D,OAJM,CADM;AAMfsD,UAAAA,MANe;AAOfO,UAAAA,cAAc,EAAE,CAAC,WAAD,EAAc,eAAd,CAPD;AAQfC,UAAAA,UAAU,EAAE,CAAC,WAAD,EAAc,eAAd,CARG;AASf5D,UAAAA,OAAO,EAAE,KAAKA;AATC,SAAnB;;AAWA,YAAImD,QAAJ,EAAc;AACVxD,UAAAA,mBAAmB,CAACkE,gBAApB,CAAqCP,UAArC,EAAiDH,QAAjD;AACH,SAFD,MAGK;AACD,iBAAOxD,mBAAmB,CAACkE,gBAApB,CAAqCP,UAArC,CAAP;AACH;AACJ;AAxiHmB;AAAA;AAAA,8BAyiHbL,gBAziHa,EAyiHKC,iBAziHL,EAyiHwBC,QAziHxB,EAyiHkC;AAClD,YAAIC,MAAM,GAAIH,gBAAgB,IAC1B,EADJ;AAEA,YAAInD,OAAO,GAAIoD,iBAAiB,IAAI,EAApC;;AACA,YAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;AACxCE,UAAAA,QAAQ,GAAGF,gBAAX;AACAG,UAAAA,MAAM,GAAG,EAAT;AACAtD,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAI,OAAOoD,iBAAP,KAA6B,UAAjC,EAA6C;AACzCC,UAAAA,QAAQ,GAAGD,iBAAX;AACApD,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAMuD,OAAO,GAAGvD,OAAO,CAACuD,OAAR,IAAmB,sCAAnC;AACA,YAAMC,UAAU,GAAG;AACfxD,UAAAA,OAAO,EAAER,MAAM,CAACiE,MAAP,CAAc;AACnBC,YAAAA,GAAG,EAAE,CAACH,OAAO,GACT,iHADC,EACkHI,OADlH,CAC0H,cAD1H,EAC0I,IAD1I,CADc;AAGnBC,YAAAA,MAAM,EAAE;AAHW,WAAd,EAIN5D,OAJM,CADM;AAMfsD,UAAAA,MANe;AAOfO,UAAAA,cAAc,EAAE,CACZ,WADY,EAEZ,eAFY,EAGZ,2BAHY,CAPD;AAYfC,UAAAA,UAAU,EAAE,CAAC,2BAAD,EAA8B,WAA9B,EAA2C,eAA3C,CAZG;AAaf5D,UAAAA,OAAO,EAAE,KAAKA;AAbC,SAAnB;;AAeA,YAAImD,QAAJ,EAAc;AACVxD,UAAAA,mBAAmB,CAACkE,gBAApB,CAAqCP,UAArC,EAAiDH,QAAjD;AACH,SAFD,MAGK;AACD,iBAAOxD,mBAAmB,CAACkE,gBAApB,CAAqCP,UAArC,CAAP;AACH;AACJ;AA5kHmB;AAAA;AAAA,0BA6kHhBL,gBA7kHgB,EA6kHEC,iBA7kHF,EA6kHqBC,QA7kHrB,EA6kH+B;AAC/C,YAAIC,MAAM,GAAIH,gBAAgB,IAC1B,EADJ;AAEA,YAAInD,OAAO,GAAIoD,iBAAiB,IAAI,EAApC;;AACA,YAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;AACxCE,UAAAA,QAAQ,GAAGF,gBAAX;AACAG,UAAAA,MAAM,GAAG,EAAT;AACAtD,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAI,OAAOoD,iBAAP,KAA6B,UAAjC,EAA6C;AACzCC,UAAAA,QAAQ,GAAGD,iBAAX;AACApD,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAMuD,OAAO,GAAGvD,OAAO,CAACuD,OAAR,IAAmB,sCAAnC;AACA,YAAMC,UAAU,GAAG;AACfxD,UAAAA,OAAO,EAAER,MAAM,CAACiE,MAAP,CAAc;AACnBC,YAAAA,GAAG,EAAE,CAACH,OAAO,GACT,iHADC,EACkHI,OADlH,CAC0H,cAD1H,EAC0I,IAD1I,CADc;AAGnBC,YAAAA,MAAM,EAAE;AAHW,WAAd,EAIN5D,OAJM,CADM;AAMfsD,UAAAA,MANe;AAOfO,UAAAA,cAAc,EAAE,CACZ,WADY,EAEZ,eAFY,EAGZ,2BAHY,CAPD;AAYfC,UAAAA,UAAU,EAAE,CAAC,2BAAD,EAA8B,WAA9B,EAA2C,eAA3C,CAZG;AAaf5D,UAAAA,OAAO,EAAE,KAAKA;AAbC,SAAnB;;AAeA,YAAImD,QAAJ,EAAc;AACVxD,UAAAA,mBAAmB,CAACkE,gBAApB,CAAqCP,UAArC,EAAiDH,QAAjD;AACH,SAFD,MAGK;AACD,iBAAOxD,mBAAmB,CAACkE,gBAApB,CAAqCP,UAArC,CAAP;AACH;AACJ;AAhnHmB;AAAA;AAAA,2BAinHfL,gBAjnHe,EAinHGC,iBAjnHH,EAinHsBC,QAjnHtB,EAinHgC;AAChD,YAAIC,MAAM,GAAIH,gBAAgB,IAC1B,EADJ;AAEA,YAAInD,OAAO,GAAIoD,iBAAiB,IAAI,EAApC;;AACA,YAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;AACxCE,UAAAA,QAAQ,GAAGF,gBAAX;AACAG,UAAAA,MAAM,GAAG,EAAT;AACAtD,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAI,OAAOoD,iBAAP,KAA6B,UAAjC,EAA6C;AACzCC,UAAAA,QAAQ,GAAGD,iBAAX;AACApD,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAMuD,OAAO,GAAGvD,OAAO,CAACuD,OAAR,IAAmB,sCAAnC;AACA,YAAMC,UAAU,GAAG;AACfxD,UAAAA,OAAO,EAAER,MAAM,CAACiE,MAAP,CAAc;AACnBC,YAAAA,GAAG,EAAE,CAACH,OAAO,GACT,oFADC,EACqFI,OADrF,CAC6F,cAD7F,EAC6G,IAD7G,CADc;AAGnBC,YAAAA,MAAM,EAAE;AAHW,WAAd,EAIN5D,OAJM,CADM;AAMfsD,UAAAA,MANe;AAOfO,UAAAA,cAAc,EAAE,CAAC,WAAD,EAAc,eAAd,CAPD;AAQfC,UAAAA,UAAU,EAAE,CAAC,WAAD,EAAc,eAAd,CARG;AASf5D,UAAAA,OAAO,EAAE,KAAKA;AATC,SAAnB;;AAWA,YAAImD,QAAJ,EAAc;AACVxD,UAAAA,mBAAmB,CAACkE,gBAApB,CAAqCP,UAArC,EAAiDH,QAAjD;AACH,SAFD,MAGK;AACD,iBAAOxD,mBAAmB,CAACkE,gBAApB,CAAqCP,UAArC,CAAP;AACH;AACJ;AAhpHmB;;AAAA;AAAA;;AAkpHxB5D,EAAAA,eAAe,CAACoF,yDAAhB,GAA4EA,yDAA5E;;AAlpHwB,MAmpHlBrD,yBAnpHkB;AAopHpB,uCAAYzB,OAAZ,EAAqB;AAAA;;AACjB,WAAKA,OAAL,GAAeA,OAAf;AACA,WAAK+E,UAAL,GAAkB,IAAIC,oCAAJ,CAAyC,KAAKhF,OAA9C,CAAlB;AACH;;AAvpHmB;AAAA;AAAA,6BAwpHbiD,gBAxpHa,EAwpHKC,iBAxpHL,EAwpHwBC,QAxpHxB,EAwpHkC;AAClD,YAAIC,MAAM,GAAIH,gBAAgB,IAC1B,EADJ;AAEA,YAAInD,OAAO,GAAIoD,iBAAiB,IAAI,EAApC;;AACA,YAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;AACxCE,UAAAA,QAAQ,GAAGF,gBAAX;AACAG,UAAAA,MAAM,GAAG,EAAT;AACAtD,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAI,OAAOoD,iBAAP,KAA6B,UAAjC,EAA6C;AACzCC,UAAAA,QAAQ,GAAGD,iBAAX;AACApD,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAMuD,OAAO,GAAGvD,OAAO,CAACuD,OAAR,IAAmB,sCAAnC;AACA,YAAMC,UAAU,GAAG;AACfxD,UAAAA,OAAO,EAAER,MAAM,CAACiE,MAAP,CAAc;AACnBC,YAAAA,GAAG,EAAE,CAACH,OAAO,GAAG,sBAAX,EAAmCI,OAAnC,CAA2C,cAA3C,EAA2D,IAA3D,CADc;AAEnBC,YAAAA,MAAM,EAAE;AAFW,WAAd,EAGN5D,OAHM,CADM;AAKfsD,UAAAA,MALe;AAMfO,UAAAA,cAAc,EAAE,EAND;AAOfC,UAAAA,UAAU,EAAE,EAPG;AAQf5D,UAAAA,OAAO,EAAE,KAAKA;AARC,SAAnB;;AAUA,YAAImD,QAAJ,EAAc;AACVxD,UAAAA,mBAAmB,CAACkE,gBAApB,CAAqCP,UAArC,EAAiDH,QAAjD;AACH,SAFD,MAGK;AACD,iBAAOxD,mBAAmB,CAACkE,gBAApB,CAAqCP,UAArC,CAAP;AACH;AACJ;AAtrHmB;;AAAA;AAAA;;AAwrHxB5D,EAAAA,eAAe,CAAC+B,yBAAhB,GAA4CA,yBAA5C;;AAxrHwB,MAyrHlBuD,oCAzrHkB;AA0rHpB,kDAAYhF,OAAZ,EAAqB;AAAA;;AACjB,WAAKA,OAAL,GAAeA,OAAf;AACH;;AA5rHmB;AAAA;AAAA,0BA6rHhBiD,gBA7rHgB,EA6rHEC,iBA7rHF,EA6rHqBC,QA7rHrB,EA6rH+B;AAC/C,YAAIC,MAAM,GAAIH,gBAAgB,IAC1B,EADJ;AAEA,YAAInD,OAAO,GAAIoD,iBAAiB,IAAI,EAApC;;AACA,YAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;AACxCE,UAAAA,QAAQ,GAAGF,gBAAX;AACAG,UAAAA,MAAM,GAAG,EAAT;AACAtD,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAI,OAAOoD,iBAAP,KAA6B,UAAjC,EAA6C;AACzCC,UAAAA,QAAQ,GAAGD,iBAAX;AACApD,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAMuD,OAAO,GAAGvD,OAAO,CAACuD,OAAR,IAAmB,sCAAnC;AACA,YAAMC,UAAU,GAAG;AACfxD,UAAAA,OAAO,EAAER,MAAM,CAACiE,MAAP,CAAc;AACnBC,YAAAA,GAAG,EAAE,CAACH,OAAO,GAAG,aAAX,EAA0BI,OAA1B,CAAkC,cAAlC,EAAkD,IAAlD,CADc;AAEnBC,YAAAA,MAAM,EAAE;AAFW,WAAd,EAGN5D,OAHM,CADM;AAKfsD,UAAAA,MALe;AAMfO,UAAAA,cAAc,EAAE,CAAC,MAAD,CAND;AAOfC,UAAAA,UAAU,EAAE,CAAC,MAAD,CAPG;AAQf5D,UAAAA,OAAO,EAAE,KAAKA;AARC,SAAnB;;AAUA,YAAImD,QAAJ,EAAc;AACVxD,UAAAA,mBAAmB,CAACkE,gBAApB,CAAqCP,UAArC,EAAiDH,QAAjD;AACH,SAFD,MAGK;AACD,iBAAOxD,mBAAmB,CAACkE,gBAApB,CAAqCP,UAArC,CAAP;AACH;AACJ;AA3tHmB;;AAAA;AAAA;;AA6tHxB5D,EAAAA,eAAe,CAACsF,oCAAhB,GAAuDA,oCAAvD;;AA7tHwB,MA8tHlBrD,uBA9tHkB,GA+tHpB,iCAAY3B,OAAZ,EAAqB;AAAA;;AACjB,SAAKA,OAAL,GAAeA,OAAf;AACA,SAAKiF,gBAAL,GAAwB,IAAIC,wCAAJ,CAA6C,KAAKlF,OAAlD,CAAxB;AACH,GAluHmB;;AAouHxBN,EAAAA,eAAe,CAACiC,uBAAhB,GAA0CA,uBAA1C;;AApuHwB,MAquHlBuD,wCAruHkB;AAsuHpB,sDAAYlF,OAAZ,EAAqB;AAAA;;AACjB,WAAKA,OAAL,GAAeA,OAAf;AACH;;AAxuHmB;AAAA;AAAA,0BAyuHhBiD,gBAzuHgB,EAyuHEC,iBAzuHF,EAyuHqBC,QAzuHrB,EAyuH+B;AAC/C,YAAIC,MAAM,GAAIH,gBAAgB,IAC1B,EADJ;AAEA,YAAInD,OAAO,GAAIoD,iBAAiB,IAAI,EAApC;;AACA,YAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;AACxCE,UAAAA,QAAQ,GAAGF,gBAAX;AACAG,UAAAA,MAAM,GAAG,EAAT;AACAtD,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAI,OAAOoD,iBAAP,KAA6B,UAAjC,EAA6C;AACzCC,UAAAA,QAAQ,GAAGD,iBAAX;AACApD,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAMuD,OAAO,GAAGvD,OAAO,CAACuD,OAAR,IAAmB,sCAAnC;AACA,YAAMC,UAAU,GAAG;AACfxD,UAAAA,OAAO,EAAER,MAAM,CAACiE,MAAP,CAAc;AACnBC,YAAAA,GAAG,EAAE,CAACH,OAAO,GACT,2EADC,EAC4EI,OAD5E,CACoF,cADpF,EACoG,IADpG,CADc;AAGnBC,YAAAA,MAAM,EAAE;AAHW,WAAd,EAIN5D,OAJM,CADM;AAMfsD,UAAAA,MANe;AAOfO,UAAAA,cAAc,EAAE,CAAC,eAAD,EAAkB,mBAAlB,CAPD;AAQfC,UAAAA,UAAU,EAAE,CAAC,mBAAD,EAAsB,eAAtB,CARG;AASf5D,UAAAA,OAAO,EAAE,KAAKA;AATC,SAAnB;;AAWA,YAAImD,QAAJ,EAAc;AACVxD,UAAAA,mBAAmB,CAACkE,gBAApB,CAAqCP,UAArC,EAAiDH,QAAjD;AACH,SAFD,MAGK;AACD,iBAAOxD,mBAAmB,CAACkE,gBAApB,CAAqCP,UAArC,CAAP;AACH;AACJ;AAxwHmB;AAAA;AAAA,2BAywHfL,gBAzwHe,EAywHGC,iBAzwHH,EAywHsBC,QAzwHtB,EAywHgC;AAChD,YAAIC,MAAM,GAAIH,gBAAgB,IAC1B,EADJ;AAEA,YAAInD,OAAO,GAAIoD,iBAAiB,IAAI,EAApC;;AACA,YAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;AACxCE,UAAAA,QAAQ,GAAGF,gBAAX;AACAG,UAAAA,MAAM,GAAG,EAAT;AACAtD,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAI,OAAOoD,iBAAP,KAA6B,UAAjC,EAA6C;AACzCC,UAAAA,QAAQ,GAAGD,iBAAX;AACApD,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAMuD,OAAO,GAAGvD,OAAO,CAACuD,OAAR,IAAmB,sCAAnC;AACA,YAAMC,UAAU,GAAG;AACfxD,UAAAA,OAAO,EAAER,MAAM,CAACiE,MAAP,CAAc;AACnBC,YAAAA,GAAG,EAAE,CAACH,OAAO,GAAG,sDAAX,EAAmEI,OAAnE,CAA2E,cAA3E,EAA2F,IAA3F,CADc;AAEnBC,YAAAA,MAAM,EAAE;AAFW,WAAd,EAGN5D,OAHM,CADM;AAKfsD,UAAAA,MALe;AAMfO,UAAAA,cAAc,EAAE,CAAC,eAAD,CAND;AAOfC,UAAAA,UAAU,EAAE,CAAC,eAAD,CAPG;AAQf5D,UAAAA,OAAO,EAAE,KAAKA;AARC,SAAnB;;AAUA,YAAImD,QAAJ,EAAc;AACVxD,UAAAA,mBAAmB,CAACkE,gBAApB,CAAqCP,UAArC,EAAiDH,QAAjD;AACH,SAFD,MAGK;AACD,iBAAOxD,mBAAmB,CAACkE,gBAApB,CAAqCP,UAArC,CAAP;AACH;AACJ;AAvyHmB;;AAAA;AAAA;;AAyyHxB5D,EAAAA,eAAe,CAACwF,wCAAhB,GAA2DA,wCAA3D;;AAzyHwB,MA0yHlBrD,cA1yHkB;AA2yHpB,4BAAY7B,OAAZ,EAAqB;AAAA;;AACjB,WAAKA,OAAL,GAAeA,OAAf;AACH;;AA7yHmB;AAAA;AAAA,gDA8yHMiD,gBA9yHN,EA8yHwBC,iBA9yHxB,EA8yH2CC,QA9yH3C,EA8yHqD;AACrE,YAAIC,MAAM,GAAIH,gBAAgB,IAC1B,EADJ;AAEA,YAAInD,OAAO,GAAIoD,iBAAiB,IAAI,EAApC;;AACA,YAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;AACxCE,UAAAA,QAAQ,GAAGF,gBAAX;AACAG,UAAAA,MAAM,GAAG,EAAT;AACAtD,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAI,OAAOoD,iBAAP,KAA6B,UAAjC,EAA6C;AACzCC,UAAAA,QAAQ,GAAGD,iBAAX;AACApD,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAMuD,OAAO,GAAGvD,OAAO,CAACuD,OAAR,IAAmB,sCAAnC;AACA,YAAMC,UAAU,GAAG;AACfxD,UAAAA,OAAO,EAAER,MAAM,CAACiE,MAAP,CAAc;AACnBC,YAAAA,GAAG,EAAE,CAACH,OAAO,GAAG,+CAAX,EAA4DI,OAA5D,CAAoE,cAApE,EAAoF,IAApF,CADc;AAEnBC,YAAAA,MAAM,EAAE;AAFW,WAAd,EAGN5D,OAHM,CADM;AAKfsD,UAAAA,MALe;AAMfO,UAAAA,cAAc,EAAE,CAAC,QAAD,CAND;AAOfC,UAAAA,UAAU,EAAE,CAAC,QAAD,CAPG;AAQf5D,UAAAA,OAAO,EAAE,KAAKA;AARC,SAAnB;;AAUA,YAAImD,QAAJ,EAAc;AACVxD,UAAAA,mBAAmB,CAACkE,gBAApB,CAAqCP,UAArC,EAAiDH,QAAjD;AACH,SAFD,MAGK;AACD,iBAAOxD,mBAAmB,CAACkE,gBAApB,CAAqCP,UAArC,CAAP;AACH;AACJ;AA50HmB;AAAA;AAAA,6BA60HbL,gBA70Ha,EA60HKC,iBA70HL,EA60HwBC,QA70HxB,EA60HkC;AAClD,YAAIC,MAAM,GAAIH,gBAAgB,IAAI,EAAlC;AACA,YAAInD,OAAO,GAAIoD,iBAAiB,IAAI,EAApC;;AACA,YAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;AACxCE,UAAAA,QAAQ,GAAGF,gBAAX;AACAG,UAAAA,MAAM,GAAG,EAAT;AACAtD,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAI,OAAOoD,iBAAP,KAA6B,UAAjC,EAA6C;AACzCC,UAAAA,QAAQ,GAAGD,iBAAX;AACApD,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAMuD,OAAO,GAAGvD,OAAO,CAACuD,OAAR,IAAmB,sCAAnC;AACA,YAAMC,UAAU,GAAG;AACfxD,UAAAA,OAAO,EAAER,MAAM,CAACiE,MAAP,CAAc;AACnBC,YAAAA,GAAG,EAAE,CAACH,OAAO,GAAG,WAAX,EAAwBI,OAAxB,CAAgC,cAAhC,EAAgD,IAAhD,CADc;AAEnBC,YAAAA,MAAM,EAAE;AAFW,WAAd,EAGN5D,OAHM,CADM;AAKfsD,UAAAA,MALe;AAMfO,UAAAA,cAAc,EAAE,EAND;AAOfC,UAAAA,UAAU,EAAE,EAPG;AAQf5D,UAAAA,OAAO,EAAE,KAAKA;AARC,SAAnB;;AAUA,YAAImD,QAAJ,EAAc;AACVxD,UAAAA,mBAAmB,CAACkE,gBAApB,CAAqCP,UAArC,EAAiDH,QAAjD;AACH,SAFD,MAGK;AACD,iBAAOxD,mBAAmB,CAACkE,gBAApB,CAAqCP,UAArC,CAAP;AACH;AACJ;AA12HmB;AAAA;AAAA,8BA22HbL,gBA32Ha,EA22HKC,iBA32HL,EA22HwBC,QA32HxB,EA22HkC;AAClD,YAAIC,MAAM,GAAIH,gBAAgB,IAAI,EAAlC;AACA,YAAInD,OAAO,GAAIoD,iBAAiB,IAAI,EAApC;;AACA,YAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;AACxCE,UAAAA,QAAQ,GAAGF,gBAAX;AACAG,UAAAA,MAAM,GAAG,EAAT;AACAtD,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAI,OAAOoD,iBAAP,KAA6B,UAAjC,EAA6C;AACzCC,UAAAA,QAAQ,GAAGD,iBAAX;AACApD,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAMuD,OAAO,GAAGvD,OAAO,CAACuD,OAAR,IAAmB,sCAAnC;AACA,YAAMC,UAAU,GAAG;AACfxD,UAAAA,OAAO,EAAER,MAAM,CAACiE,MAAP,CAAc;AACnBC,YAAAA,GAAG,EAAE,CAACH,OAAO,GAAG,qBAAX,EAAkCI,OAAlC,CAA0C,cAA1C,EAA0D,IAA1D,CADc;AAEnBC,YAAAA,MAAM,EAAE;AAFW,WAAd,EAGN5D,OAHM,CADM;AAKfsD,UAAAA,MALe;AAMfO,UAAAA,cAAc,EAAE,CAAC,QAAD,CAND;AAOfC,UAAAA,UAAU,EAAE,CAAC,QAAD,CAPG;AAQf5D,UAAAA,OAAO,EAAE,KAAKA;AARC,SAAnB;;AAUA,YAAImD,QAAJ,EAAc;AACVxD,UAAAA,mBAAmB,CAACkE,gBAApB,CAAqCP,UAArC,EAAiDH,QAAjD;AACH,SAFD,MAGK;AACD,iBAAOxD,mBAAmB,CAACkE,gBAApB,CAAqCP,UAArC,CAAP;AACH;AACJ;AAx4HmB;AAAA;AAAA,0BAy4HhBL,gBAz4HgB,EAy4HEC,iBAz4HF,EAy4HqBC,QAz4HrB,EAy4H+B;AAC/C,YAAIC,MAAM,GAAIH,gBAAgB,IAAI,EAAlC;AACA,YAAInD,OAAO,GAAIoD,iBAAiB,IAAI,EAApC;;AACA,YAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;AACxCE,UAAAA,QAAQ,GAAGF,gBAAX;AACAG,UAAAA,MAAM,GAAG,EAAT;AACAtD,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAI,OAAOoD,iBAAP,KAA6B,UAAjC,EAA6C;AACzCC,UAAAA,QAAQ,GAAGD,iBAAX;AACApD,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAMuD,OAAO,GAAGvD,OAAO,CAACuD,OAAR,IAAmB,sCAAnC;AACA,YAAMC,UAAU,GAAG;AACfxD,UAAAA,OAAO,EAAER,MAAM,CAACiE,MAAP,CAAc;AACnBC,YAAAA,GAAG,EAAE,CAACH,OAAO,GAAG,qBAAX,EAAkCI,OAAlC,CAA0C,cAA1C,EAA0D,IAA1D,CADc;AAEnBC,YAAAA,MAAM,EAAE;AAFW,WAAd,EAGN5D,OAHM,CADM;AAKfsD,UAAAA,MALe;AAMfO,UAAAA,cAAc,EAAE,CAAC,QAAD,CAND;AAOfC,UAAAA,UAAU,EAAE,CAAC,QAAD,CAPG;AAQf5D,UAAAA,OAAO,EAAE,KAAKA;AARC,SAAnB;;AAUA,YAAImD,QAAJ,EAAc;AACVxD,UAAAA,mBAAmB,CAACkE,gBAApB,CAAqCP,UAArC,EAAiDH,QAAjD;AACH,SAFD,MAGK;AACD,iBAAOxD,mBAAmB,CAACkE,gBAApB,CAAqCP,UAArC,CAAP;AACH;AACJ;AAt6HmB;AAAA;AAAA,2BAu6HfL,gBAv6He,EAu6HGC,iBAv6HH,EAu6HsBC,QAv6HtB,EAu6HgC;AAChD,YAAIC,MAAM,GAAIH,gBAAgB,IAAI,EAAlC;AACA,YAAInD,OAAO,GAAIoD,iBAAiB,IAAI,EAApC;;AACA,YAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;AACxCE,UAAAA,QAAQ,GAAGF,gBAAX;AACAG,UAAAA,MAAM,GAAG,EAAT;AACAtD,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAI,OAAOoD,iBAAP,KAA6B,UAAjC,EAA6C;AACzCC,UAAAA,QAAQ,GAAGD,iBAAX;AACApD,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAMuD,OAAO,GAAGvD,OAAO,CAACuD,OAAR,IAAmB,sCAAnC;AACA,YAAMC,UAAU,GAAG;AACfxD,UAAAA,OAAO,EAAER,MAAM,CAACiE,MAAP,CAAc;AACnBC,YAAAA,GAAG,EAAE,CAACH,OAAO,GAAG,WAAX,EAAwBI,OAAxB,CAAgC,cAAhC,EAAgD,IAAhD,CADc;AAEnBC,YAAAA,MAAM,EAAE;AAFW,WAAd,EAGN5D,OAHM,CADM;AAKfsD,UAAAA,MALe;AAMfO,UAAAA,cAAc,EAAE,EAND;AAOfC,UAAAA,UAAU,EAAE,EAPG;AAQf5D,UAAAA,OAAO,EAAE,KAAKA;AARC,SAAnB;;AAUA,YAAImD,QAAJ,EAAc;AACVxD,UAAAA,mBAAmB,CAACkE,gBAApB,CAAqCP,UAArC,EAAiDH,QAAjD;AACH,SAFD,MAGK;AACD,iBAAOxD,mBAAmB,CAACkE,gBAApB,CAAqCP,UAArC,CAAP;AACH;AACJ;AAp8HmB;AAAA;AAAA,4BAq8HdL,gBAr8Hc,EAq8HIC,iBAr8HJ,EAq8HuBC,QAr8HvB,EAq8HiC;AACjD,YAAIC,MAAM,GAAIH,gBAAgB,IAAI,EAAlC;AACA,YAAInD,OAAO,GAAIoD,iBAAiB,IAAI,EAApC;;AACA,YAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;AACxCE,UAAAA,QAAQ,GAAGF,gBAAX;AACAG,UAAAA,MAAM,GAAG,EAAT;AACAtD,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAI,OAAOoD,iBAAP,KAA6B,UAAjC,EAA6C;AACzCC,UAAAA,QAAQ,GAAGD,iBAAX;AACApD,UAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAMuD,OAAO,GAAGvD,OAAO,CAACuD,OAAR,IAAmB,sCAAnC;AACA,YAAMC,UAAU,GAAG;AACfxD,UAAAA,OAAO,EAAER,MAAM,CAACiE,MAAP,CAAc;AACnBC,YAAAA,GAAG,EAAE,CAACH,OAAO,GAAG,qBAAX,EAAkCI,OAAlC,CAA0C,cAA1C,EAA0D,IAA1D,CADc;AAEnBC,YAAAA,MAAM,EAAE;AAFW,WAAd,EAGN5D,OAHM,CADM;AAKfsD,UAAAA,MALe;AAMfO,UAAAA,cAAc,EAAE,CAAC,QAAD,CAND;AAOfC,UAAAA,UAAU,EAAE,CAAC,QAAD,CAPG;AAQf5D,UAAAA,OAAO,EAAE,KAAKA;AARC,SAAnB;;AAUA,YAAImD,QAAJ,EAAc;AACVxD,UAAAA,mBAAmB,CAACkE,gBAApB,CAAqCP,UAArC,EAAiDH,QAAjD;AACH,SAFD,MAGK;AACD,iBAAOxD,mBAAmB,CAACkE,gBAApB,CAAqCP,UAArC,CAAP;AACH;AACJ;AAl+HmB;;AAAA;AAAA;;AAo+HxB5D,EAAAA,eAAe,CAACmC,cAAhB,GAAiCA,cAAjC;AACH,CAr+HD,EAq+HGnC,eAAe,GAAGF,OAAO,CAACE,eAAR,KAA4BF,OAAO,CAACE,eAAR,GAA0B,EAAtD,CAr+HrB","sourcesContent":["\"use strict\";\n// Copyright 2020 Google LLC\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//    http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.displayvideo_v1 = void 0;\n/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/class-name-casing */\n/* eslint-disable @typescript-eslint/no-unused-vars */\n/* eslint-disable @typescript-eslint/no-empty-interface */\n/* eslint-disable @typescript-eslint/no-namespace */\n/* eslint-disable no-irregular-whitespace */\nconst googleapis_common_1 = require(\"googleapis-common\");\nvar displayvideo_v1;\n(function (displayvideo_v1) {\n    /**\n     * Display &amp; Video 360 API\n     *\n     * Display &amp; Video 360 API allows users to manage and create campaigns and reports.\n     *\n     * @example\n     * ```js\n     * const {google} = require('googleapis');\n     * const displayvideo = google.displayvideo('v1');\n     * ```\n     */\n    class Displayvideo {\n        constructor(options, google) {\n            this.context = {\n                _options: options || {},\n                google,\n            };\n            this.advertisers = new Resource$Advertisers(this.context);\n            this.combinedAudiences = new Resource$Combinedaudiences(this.context);\n            this.customBiddingAlgorithms = new Resource$Custombiddingalgorithms(this.context);\n            this.customLists = new Resource$Customlists(this.context);\n            this.firstAndThirdPartyAudiences = new Resource$Firstandthirdpartyaudiences(this.context);\n            this.floodlightGroups = new Resource$Floodlightgroups(this.context);\n            this.googleAudiences = new Resource$Googleaudiences(this.context);\n            this.inventorySourceGroups = new Resource$Inventorysourcegroups(this.context);\n            this.inventorySources = new Resource$Inventorysources(this.context);\n            this.media = new Resource$Media(this.context);\n            this.partners = new Resource$Partners(this.context);\n            this.sdfdownloadtasks = new Resource$Sdfdownloadtasks(this.context);\n            this.targetingTypes = new Resource$Targetingtypes(this.context);\n            this.users = new Resource$Users(this.context);\n        }\n    }\n    displayvideo_v1.Displayvideo = Displayvideo;\n    class Resource$Advertisers {\n        constructor(context) {\n            this.context = context;\n            this.assets = new Resource$Advertisers$Assets(this.context);\n            this.campaigns = new Resource$Advertisers$Campaigns(this.context);\n            this.channels = new Resource$Advertisers$Channels(this.context);\n            this.creatives = new Resource$Advertisers$Creatives(this.context);\n            this.insertionOrders = new Resource$Advertisers$Insertionorders(this.context);\n            this.lineItems = new Resource$Advertisers$Lineitems(this.context);\n            this.locationLists = new Resource$Advertisers$Locationlists(this.context);\n            this.manualTriggers = new Resource$Advertisers$Manualtriggers(this.context);\n            this.negativeKeywordLists = new Resource$Advertisers$Negativekeywordlists(this.context);\n            this.targetingTypes = new Resource$Advertisers$Targetingtypes(this.context);\n        }\n        audit(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://displayvideo.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1/advertisers/{+advertiserId}:audit').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['advertiserId'],\n                pathParams: ['advertiserId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        bulkEditAdvertiserAssignedTargetingOptions(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://displayvideo.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/v1/advertisers/{+advertiserId}:bulkEditAdvertiserAssignedTargetingOptions').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['advertiserId'],\n                pathParams: ['advertiserId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        bulkListAdvertiserAssignedTargetingOptions(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://displayvideo.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/v1/advertisers/{+advertiserId}:bulkListAdvertiserAssignedTargetingOptions').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['advertiserId'],\n                pathParams: ['advertiserId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        create(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://displayvideo.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1/advertisers').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: [],\n                pathParams: [],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        delete(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://displayvideo.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1/advertisers/{+advertiserId}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'DELETE',\n                }, options),\n                params,\n                requiredParams: ['advertiserId'],\n                pathParams: ['advertiserId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://displayvideo.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1/advertisers/{+advertiserId}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['advertiserId'],\n                pathParams: ['advertiserId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://displayvideo.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1/advertisers').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: [],\n                pathParams: [],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        patch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://displayvideo.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1/advertisers/{+advertiserId}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PATCH',\n                }, options),\n                params,\n                requiredParams: ['advertiserId'],\n                pathParams: ['advertiserId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    displayvideo_v1.Resource$Advertisers = Resource$Advertisers;\n    class Resource$Advertisers$Assets {\n        constructor(context) {\n            this.context = context;\n        }\n        upload(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://displayvideo.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1/advertisers/{+advertiserId}/assets').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                mediaUrl: (rootUrl + '/upload/v1/advertisers/{+advertiserId}/assets').replace(/([^:]\\/)\\/+/g, '$1'),\n                requiredParams: ['advertiserId'],\n                pathParams: ['advertiserId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    displayvideo_v1.Resource$Advertisers$Assets = Resource$Advertisers$Assets;\n    class Resource$Advertisers$Campaigns {\n        constructor(context) {\n            this.context = context;\n        }\n        create(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://displayvideo.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1/advertisers/{+advertiserId}/campaigns').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['advertiserId'],\n                pathParams: ['advertiserId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        delete(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://displayvideo.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/v1/advertisers/{+advertiserId}/campaigns/{+campaignId}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'DELETE',\n                }, options),\n                params,\n                requiredParams: ['advertiserId', 'campaignId'],\n                pathParams: ['advertiserId', 'campaignId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://displayvideo.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/v1/advertisers/{+advertiserId}/campaigns/{+campaignId}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['advertiserId', 'campaignId'],\n                pathParams: ['advertiserId', 'campaignId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://displayvideo.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1/advertisers/{+advertiserId}/campaigns').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['advertiserId'],\n                pathParams: ['advertiserId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        patch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://displayvideo.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/v1/advertisers/{+advertiserId}/campaigns/{+campaignId}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PATCH',\n                }, options),\n                params,\n                requiredParams: ['advertiserId', 'campaignId'],\n                pathParams: ['advertiserId', 'campaignId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    displayvideo_v1.Resource$Advertisers$Campaigns = Resource$Advertisers$Campaigns;\n    class Resource$Advertisers$Channels {\n        constructor(context) {\n            this.context = context;\n            this.sites = new Resource$Advertisers$Channels$Sites(this.context);\n        }\n        create(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://displayvideo.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1/advertisers/{+advertiserId}/channels').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['advertiserId'],\n                pathParams: ['advertiserId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://displayvideo.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1/advertisers/{+advertiserId}/channels/{+channelId}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['advertiserId', 'channelId'],\n                pathParams: ['advertiserId', 'channelId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://displayvideo.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1/advertisers/{+advertiserId}/channels').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['advertiserId'],\n                pathParams: ['advertiserId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        patch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://displayvideo.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1/advertisers/{+advertiserId}/channels/{channelId}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PATCH',\n                }, options),\n                params,\n                requiredParams: ['advertiserId', 'channelId'],\n                pathParams: ['advertiserId', 'channelId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    displayvideo_v1.Resource$Advertisers$Channels = Resource$Advertisers$Channels;\n    class Resource$Advertisers$Channels$Sites {\n        constructor(context) {\n            this.context = context;\n        }\n        bulkEdit(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://displayvideo.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/v1/advertisers/{advertiserId}/channels/{+channelId}/sites:bulkEdit').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['advertiserId', 'channelId'],\n                pathParams: ['advertiserId', 'channelId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        create(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://displayvideo.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/v1/advertisers/{advertiserId}/channels/{+channelId}/sites').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['advertiserId', 'channelId'],\n                pathParams: ['advertiserId', 'channelId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        delete(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://displayvideo.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/v1/advertisers/{advertiserId}/channels/{+channelId}/sites/{+urlOrAppId}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'DELETE',\n                }, options),\n                params,\n                requiredParams: ['advertiserId', 'channelId', 'urlOrAppId'],\n                pathParams: ['advertiserId', 'channelId', 'urlOrAppId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://displayvideo.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/v1/advertisers/{+advertiserId}/channels/{+channelId}/sites').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['advertiserId', 'channelId'],\n                pathParams: ['advertiserId', 'channelId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    displayvideo_v1.Resource$Advertisers$Channels$Sites = Resource$Advertisers$Channels$Sites;\n    class Resource$Advertisers$Creatives {\n        constructor(context) {\n            this.context = context;\n        }\n        create(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://displayvideo.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1/advertisers/{+advertiserId}/creatives').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['advertiserId'],\n                pathParams: ['advertiserId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        delete(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://displayvideo.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/v1/advertisers/{+advertiserId}/creatives/{+creativeId}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'DELETE',\n                }, options),\n                params,\n                requiredParams: ['advertiserId', 'creativeId'],\n                pathParams: ['advertiserId', 'creativeId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://displayvideo.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/v1/advertisers/{+advertiserId}/creatives/{+creativeId}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['advertiserId', 'creativeId'],\n                pathParams: ['advertiserId', 'creativeId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://displayvideo.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1/advertisers/{+advertiserId}/creatives').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['advertiserId'],\n                pathParams: ['advertiserId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        patch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://displayvideo.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/v1/advertisers/{+advertiserId}/creatives/{+creativeId}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PATCH',\n                }, options),\n                params,\n                requiredParams: ['advertiserId', 'creativeId'],\n                pathParams: ['advertiserId', 'creativeId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    displayvideo_v1.Resource$Advertisers$Creatives = Resource$Advertisers$Creatives;\n    class Resource$Advertisers$Insertionorders {\n        constructor(context) {\n            this.context = context;\n        }\n        create(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://displayvideo.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1/advertisers/{+advertiserId}/insertionOrders').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['advertiserId'],\n                pathParams: ['advertiserId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        delete(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://displayvideo.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/v1/advertisers/{+advertiserId}/insertionOrders/{+insertionOrderId}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'DELETE',\n                }, options),\n                params,\n                requiredParams: ['advertiserId', 'insertionOrderId'],\n                pathParams: ['advertiserId', 'insertionOrderId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://displayvideo.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/v1/advertisers/{+advertiserId}/insertionOrders/{+insertionOrderId}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['advertiserId', 'insertionOrderId'],\n                pathParams: ['advertiserId', 'insertionOrderId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://displayvideo.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1/advertisers/{+advertiserId}/insertionOrders').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['advertiserId'],\n                pathParams: ['advertiserId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        patch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://displayvideo.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/v1/advertisers/{+advertiserId}/insertionOrders/{+insertionOrderId}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PATCH',\n                }, options),\n                params,\n                requiredParams: ['advertiserId', 'insertionOrderId'],\n                pathParams: ['advertiserId', 'insertionOrderId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    displayvideo_v1.Resource$Advertisers$Insertionorders = Resource$Advertisers$Insertionorders;\n    class Resource$Advertisers$Lineitems {\n        constructor(context) {\n            this.context = context;\n            this.targetingTypes = new Resource$Advertisers$Lineitems$Targetingtypes(this.context);\n        }\n        bulkEditLineItemAssignedTargetingOptions(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://displayvideo.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/v1/advertisers/{+advertiserId}/lineItems/{+lineItemId}:bulkEditLineItemAssignedTargetingOptions').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['advertiserId', 'lineItemId'],\n                pathParams: ['advertiserId', 'lineItemId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        bulkListLineItemAssignedTargetingOptions(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://displayvideo.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/v1/advertisers/{+advertiserId}/lineItems/{+lineItemId}:bulkListLineItemAssignedTargetingOptions').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['advertiserId', 'lineItemId'],\n                pathParams: ['advertiserId', 'lineItemId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        create(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://displayvideo.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1/advertisers/{+advertiserId}/lineItems').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['advertiserId'],\n                pathParams: ['advertiserId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        delete(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://displayvideo.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/v1/advertisers/{+advertiserId}/lineItems/{+lineItemId}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'DELETE',\n                }, options),\n                params,\n                requiredParams: ['advertiserId', 'lineItemId'],\n                pathParams: ['advertiserId', 'lineItemId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://displayvideo.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/v1/advertisers/{+advertiserId}/lineItems/{+lineItemId}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['advertiserId', 'lineItemId'],\n                pathParams: ['advertiserId', 'lineItemId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://displayvideo.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1/advertisers/{+advertiserId}/lineItems').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['advertiserId'],\n                pathParams: ['advertiserId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        patch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://displayvideo.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/v1/advertisers/{+advertiserId}/lineItems/{+lineItemId}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PATCH',\n                }, options),\n                params,\n                requiredParams: ['advertiserId', 'lineItemId'],\n                pathParams: ['advertiserId', 'lineItemId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    displayvideo_v1.Resource$Advertisers$Lineitems = Resource$Advertisers$Lineitems;\n    class Resource$Advertisers$Lineitems$Targetingtypes {\n        constructor(context) {\n            this.context = context;\n            this.assignedTargetingOptions = new Resource$Advertisers$Lineitems$Targetingtypes$Assignedtargetingoptions(this.context);\n        }\n    }\n    displayvideo_v1.Resource$Advertisers$Lineitems$Targetingtypes = Resource$Advertisers$Lineitems$Targetingtypes;\n    class Resource$Advertisers$Lineitems$Targetingtypes$Assignedtargetingoptions {\n        constructor(context) {\n            this.context = context;\n        }\n        create(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://displayvideo.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/v1/advertisers/{+advertiserId}/lineItems/{+lineItemId}/targetingTypes/{+targetingType}/assignedTargetingOptions').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['advertiserId', 'lineItemId', 'targetingType'],\n                pathParams: ['advertiserId', 'lineItemId', 'targetingType'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        delete(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://displayvideo.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/v1/advertisers/{+advertiserId}/lineItems/{+lineItemId}/targetingTypes/{+targetingType}/assignedTargetingOptions/{+assignedTargetingOptionId}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'DELETE',\n                }, options),\n                params,\n                requiredParams: [\n                    'advertiserId',\n                    'lineItemId',\n                    'targetingType',\n                    'assignedTargetingOptionId',\n                ],\n                pathParams: [\n                    'advertiserId',\n                    'assignedTargetingOptionId',\n                    'lineItemId',\n                    'targetingType',\n                ],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://displayvideo.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/v1/advertisers/{+advertiserId}/lineItems/{+lineItemId}/targetingTypes/{+targetingType}/assignedTargetingOptions/{+assignedTargetingOptionId}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: [\n                    'advertiserId',\n                    'lineItemId',\n                    'targetingType',\n                    'assignedTargetingOptionId',\n                ],\n                pathParams: [\n                    'advertiserId',\n                    'assignedTargetingOptionId',\n                    'lineItemId',\n                    'targetingType',\n                ],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://displayvideo.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/v1/advertisers/{+advertiserId}/lineItems/{+lineItemId}/targetingTypes/{+targetingType}/assignedTargetingOptions').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['advertiserId', 'lineItemId', 'targetingType'],\n                pathParams: ['advertiserId', 'lineItemId', 'targetingType'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    displayvideo_v1.Resource$Advertisers$Lineitems$Targetingtypes$Assignedtargetingoptions = Resource$Advertisers$Lineitems$Targetingtypes$Assignedtargetingoptions;\n    class Resource$Advertisers$Locationlists {\n        constructor(context) {\n            this.context = context;\n            this.assignedLocations = new Resource$Advertisers$Locationlists$Assignedlocations(this.context);\n        }\n        create(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://displayvideo.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1/advertisers/{+advertiserId}/locationLists').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['advertiserId'],\n                pathParams: ['advertiserId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://displayvideo.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/v1/advertisers/{+advertiserId}/locationLists/{+locationListId}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['advertiserId', 'locationListId'],\n                pathParams: ['advertiserId', 'locationListId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://displayvideo.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1/advertisers/{+advertiserId}/locationLists').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['advertiserId'],\n                pathParams: ['advertiserId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        patch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://displayvideo.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/v1/advertisers/{+advertiserId}/locationLists/{locationListId}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PATCH',\n                }, options),\n                params,\n                requiredParams: ['advertiserId', 'locationListId'],\n                pathParams: ['advertiserId', 'locationListId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    displayvideo_v1.Resource$Advertisers$Locationlists = Resource$Advertisers$Locationlists;\n    class Resource$Advertisers$Locationlists$Assignedlocations {\n        constructor(context) {\n            this.context = context;\n        }\n        bulkEdit(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://displayvideo.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/v1/advertisers/{advertiserId}/locationLists/{+locationListId}/assignedLocations:bulkEdit').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['advertiserId', 'locationListId'],\n                pathParams: ['advertiserId', 'locationListId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        create(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://displayvideo.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/v1/advertisers/{advertiserId}/locationLists/{locationListId}/assignedLocations').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['advertiserId', 'locationListId'],\n                pathParams: ['advertiserId', 'locationListId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        delete(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://displayvideo.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/v1/advertisers/{advertiserId}/locationLists/{locationListId}/assignedLocations/{+assignedLocationId}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'DELETE',\n                }, options),\n                params,\n                requiredParams: [\n                    'advertiserId',\n                    'locationListId',\n                    'assignedLocationId',\n                ],\n                pathParams: ['advertiserId', 'assignedLocationId', 'locationListId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://displayvideo.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/v1/advertisers/{advertiserId}/locationLists/{locationListId}/assignedLocations').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['advertiserId', 'locationListId'],\n                pathParams: ['advertiserId', 'locationListId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    displayvideo_v1.Resource$Advertisers$Locationlists$Assignedlocations = Resource$Advertisers$Locationlists$Assignedlocations;\n    class Resource$Advertisers$Manualtriggers {\n        constructor(context) {\n            this.context = context;\n        }\n        activate(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://displayvideo.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/v1/advertisers/{+advertiserId}/manualTriggers/{+triggerId}:activate').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['advertiserId', 'triggerId'],\n                pathParams: ['advertiserId', 'triggerId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        create(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://displayvideo.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1/advertisers/{+advertiserId}/manualTriggers').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['advertiserId'],\n                pathParams: ['advertiserId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        deactivate(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://displayvideo.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/v1/advertisers/{+advertiserId}/manualTriggers/{+triggerId}:deactivate').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['advertiserId', 'triggerId'],\n                pathParams: ['advertiserId', 'triggerId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://displayvideo.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/v1/advertisers/{+advertiserId}/manualTriggers/{+triggerId}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['advertiserId', 'triggerId'],\n                pathParams: ['advertiserId', 'triggerId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://displayvideo.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1/advertisers/{+advertiserId}/manualTriggers').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['advertiserId'],\n                pathParams: ['advertiserId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        patch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://displayvideo.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/v1/advertisers/{+advertiserId}/manualTriggers/{+triggerId}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PATCH',\n                }, options),\n                params,\n                requiredParams: ['advertiserId', 'triggerId'],\n                pathParams: ['advertiserId', 'triggerId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    displayvideo_v1.Resource$Advertisers$Manualtriggers = Resource$Advertisers$Manualtriggers;\n    class Resource$Advertisers$Negativekeywordlists {\n        constructor(context) {\n            this.context = context;\n            this.negativeKeywords = new Resource$Advertisers$Negativekeywordlists$Negativekeywords(this.context);\n        }\n        create(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://displayvideo.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1/advertisers/{+advertiserId}/negativeKeywordLists').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['advertiserId'],\n                pathParams: ['advertiserId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        delete(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://displayvideo.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/v1/advertisers/{+advertiserId}/negativeKeywordLists/{+negativeKeywordListId}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'DELETE',\n                }, options),\n                params,\n                requiredParams: ['advertiserId', 'negativeKeywordListId'],\n                pathParams: ['advertiserId', 'negativeKeywordListId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://displayvideo.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/v1/advertisers/{+advertiserId}/negativeKeywordLists/{+negativeKeywordListId}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['advertiserId', 'negativeKeywordListId'],\n                pathParams: ['advertiserId', 'negativeKeywordListId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://displayvideo.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1/advertisers/{+advertiserId}/negativeKeywordLists').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['advertiserId'],\n                pathParams: ['advertiserId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        patch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://displayvideo.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/v1/advertisers/{+advertiserId}/negativeKeywordLists/{negativeKeywordListId}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PATCH',\n                }, options),\n                params,\n                requiredParams: ['advertiserId', 'negativeKeywordListId'],\n                pathParams: ['advertiserId', 'negativeKeywordListId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    displayvideo_v1.Resource$Advertisers$Negativekeywordlists = Resource$Advertisers$Negativekeywordlists;\n    class Resource$Advertisers$Negativekeywordlists$Negativekeywords {\n        constructor(context) {\n            this.context = context;\n        }\n        bulkEdit(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://displayvideo.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/v1/advertisers/{advertiserId}/negativeKeywordLists/{+negativeKeywordListId}/negativeKeywords:bulkEdit').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['advertiserId', 'negativeKeywordListId'],\n                pathParams: ['advertiserId', 'negativeKeywordListId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        create(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://displayvideo.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/v1/advertisers/{advertiserId}/negativeKeywordLists/{+negativeKeywordListId}/negativeKeywords').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['advertiserId', 'negativeKeywordListId'],\n                pathParams: ['advertiserId', 'negativeKeywordListId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        delete(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://displayvideo.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/v1/advertisers/{advertiserId}/negativeKeywordLists/{+negativeKeywordListId}/negativeKeywords/{+keywordValue}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'DELETE',\n                }, options),\n                params,\n                requiredParams: [\n                    'advertiserId',\n                    'negativeKeywordListId',\n                    'keywordValue',\n                ],\n                pathParams: ['advertiserId', 'keywordValue', 'negativeKeywordListId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://displayvideo.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/v1/advertisers/{+advertiserId}/negativeKeywordLists/{+negativeKeywordListId}/negativeKeywords').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['advertiserId', 'negativeKeywordListId'],\n                pathParams: ['advertiserId', 'negativeKeywordListId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    displayvideo_v1.Resource$Advertisers$Negativekeywordlists$Negativekeywords = Resource$Advertisers$Negativekeywordlists$Negativekeywords;\n    class Resource$Advertisers$Targetingtypes {\n        constructor(context) {\n            this.context = context;\n            this.assignedTargetingOptions = new Resource$Advertisers$Targetingtypes$Assignedtargetingoptions(this.context);\n        }\n    }\n    displayvideo_v1.Resource$Advertisers$Targetingtypes = Resource$Advertisers$Targetingtypes;\n    class Resource$Advertisers$Targetingtypes$Assignedtargetingoptions {\n        constructor(context) {\n            this.context = context;\n        }\n        create(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://displayvideo.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/v1/advertisers/{+advertiserId}/targetingTypes/{+targetingType}/assignedTargetingOptions').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['advertiserId', 'targetingType'],\n                pathParams: ['advertiserId', 'targetingType'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        delete(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://displayvideo.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/v1/advertisers/{+advertiserId}/targetingTypes/{+targetingType}/assignedTargetingOptions/{+assignedTargetingOptionId}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'DELETE',\n                }, options),\n                params,\n                requiredParams: [\n                    'advertiserId',\n                    'targetingType',\n                    'assignedTargetingOptionId',\n                ],\n                pathParams: [\n                    'advertiserId',\n                    'assignedTargetingOptionId',\n                    'targetingType',\n                ],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://displayvideo.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/v1/advertisers/{+advertiserId}/targetingTypes/{+targetingType}/assignedTargetingOptions/{+assignedTargetingOptionId}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: [\n                    'advertiserId',\n                    'targetingType',\n                    'assignedTargetingOptionId',\n                ],\n                pathParams: [\n                    'advertiserId',\n                    'assignedTargetingOptionId',\n                    'targetingType',\n                ],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://displayvideo.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/v1/advertisers/{+advertiserId}/targetingTypes/{+targetingType}/assignedTargetingOptions').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['advertiserId', 'targetingType'],\n                pathParams: ['advertiserId', 'targetingType'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    displayvideo_v1.Resource$Advertisers$Targetingtypes$Assignedtargetingoptions = Resource$Advertisers$Targetingtypes$Assignedtargetingoptions;\n    class Resource$Combinedaudiences {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://displayvideo.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1/combinedAudiences/{+combinedAudienceId}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['combinedAudienceId'],\n                pathParams: ['combinedAudienceId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://displayvideo.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1/combinedAudiences').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: [],\n                pathParams: [],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    displayvideo_v1.Resource$Combinedaudiences = Resource$Combinedaudiences;\n    class Resource$Custombiddingalgorithms {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://displayvideo.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/v1/customBiddingAlgorithms/{+customBiddingAlgorithmId}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['customBiddingAlgorithmId'],\n                pathParams: ['customBiddingAlgorithmId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://displayvideo.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1/customBiddingAlgorithms').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: [],\n                pathParams: [],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    displayvideo_v1.Resource$Custombiddingalgorithms = Resource$Custombiddingalgorithms;\n    class Resource$Customlists {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://displayvideo.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1/customLists/{+customListId}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['customListId'],\n                pathParams: ['customListId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://displayvideo.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1/customLists').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: [],\n                pathParams: [],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    displayvideo_v1.Resource$Customlists = Resource$Customlists;\n    class Resource$Firstandthirdpartyaudiences {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://displayvideo.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/v1/firstAndThirdPartyAudiences/{+firstAndThirdPartyAudienceId}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['firstAndThirdPartyAudienceId'],\n                pathParams: ['firstAndThirdPartyAudienceId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://displayvideo.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1/firstAndThirdPartyAudiences').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: [],\n                pathParams: [],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    displayvideo_v1.Resource$Firstandthirdpartyaudiences = Resource$Firstandthirdpartyaudiences;\n    class Resource$Floodlightgroups {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://displayvideo.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1/floodlightGroups/{+floodlightGroupId}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['floodlightGroupId'],\n                pathParams: ['floodlightGroupId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        patch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://displayvideo.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1/floodlightGroups/{floodlightGroupId}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PATCH',\n                }, options),\n                params,\n                requiredParams: ['floodlightGroupId'],\n                pathParams: ['floodlightGroupId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    displayvideo_v1.Resource$Floodlightgroups = Resource$Floodlightgroups;\n    class Resource$Googleaudiences {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://displayvideo.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1/googleAudiences/{+googleAudienceId}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['googleAudienceId'],\n                pathParams: ['googleAudienceId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://displayvideo.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1/googleAudiences').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: [],\n                pathParams: [],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    displayvideo_v1.Resource$Googleaudiences = Resource$Googleaudiences;\n    class Resource$Inventorysourcegroups {\n        constructor(context) {\n            this.context = context;\n            this.assignedInventorySources = new Resource$Inventorysourcegroups$Assignedinventorysources(this.context);\n        }\n        create(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://displayvideo.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1/inventorySourceGroups').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: [],\n                pathParams: [],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        delete(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://displayvideo.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1/inventorySourceGroups/{+inventorySourceGroupId}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'DELETE',\n                }, options),\n                params,\n                requiredParams: ['inventorySourceGroupId'],\n                pathParams: ['inventorySourceGroupId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://displayvideo.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1/inventorySourceGroups/{+inventorySourceGroupId}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['inventorySourceGroupId'],\n                pathParams: ['inventorySourceGroupId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://displayvideo.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1/inventorySourceGroups').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: [],\n                pathParams: [],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        patch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://displayvideo.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1/inventorySourceGroups/{inventorySourceGroupId}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PATCH',\n                }, options),\n                params,\n                requiredParams: ['inventorySourceGroupId'],\n                pathParams: ['inventorySourceGroupId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    displayvideo_v1.Resource$Inventorysourcegroups = Resource$Inventorysourcegroups;\n    class Resource$Inventorysourcegroups$Assignedinventorysources {\n        constructor(context) {\n            this.context = context;\n        }\n        bulkEdit(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://displayvideo.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/v1/inventorySourceGroups/{+inventorySourceGroupId}/assignedInventorySources:bulkEdit').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['inventorySourceGroupId'],\n                pathParams: ['inventorySourceGroupId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        create(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://displayvideo.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/v1/inventorySourceGroups/{+inventorySourceGroupId}/assignedInventorySources').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['inventorySourceGroupId'],\n                pathParams: ['inventorySourceGroupId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        delete(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://displayvideo.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/v1/inventorySourceGroups/{+inventorySourceGroupId}/assignedInventorySources/{+assignedInventorySourceId}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'DELETE',\n                }, options),\n                params,\n                requiredParams: ['inventorySourceGroupId', 'assignedInventorySourceId'],\n                pathParams: ['assignedInventorySourceId', 'inventorySourceGroupId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://displayvideo.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/v1/inventorySourceGroups/{+inventorySourceGroupId}/assignedInventorySources').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['inventorySourceGroupId'],\n                pathParams: ['inventorySourceGroupId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    displayvideo_v1.Resource$Inventorysourcegroups$Assignedinventorysources = Resource$Inventorysourcegroups$Assignedinventorysources;\n    class Resource$Inventorysources {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://displayvideo.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1/inventorySources/{+inventorySourceId}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['inventorySourceId'],\n                pathParams: ['inventorySourceId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://displayvideo.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1/inventorySources').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: [],\n                pathParams: [],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    displayvideo_v1.Resource$Inventorysources = Resource$Inventorysources;\n    class Resource$Media {\n        constructor(context) {\n            this.context = context;\n        }\n        download(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://displayvideo.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/download/{+resourceName}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['resourceName'],\n                pathParams: ['resourceName'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    displayvideo_v1.Resource$Media = Resource$Media;\n    class Resource$Partners {\n        constructor(context) {\n            this.context = context;\n            this.channels = new Resource$Partners$Channels(this.context);\n            this.targetingTypes = new Resource$Partners$Targetingtypes(this.context);\n        }\n        bulkEditPartnerAssignedTargetingOptions(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://displayvideo.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/v1/partners/{+partnerId}:bulkEditPartnerAssignedTargetingOptions').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['partnerId'],\n                pathParams: ['partnerId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://displayvideo.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1/partners/{+partnerId}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['partnerId'],\n                pathParams: ['partnerId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://displayvideo.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1/partners').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: [],\n                pathParams: [],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    displayvideo_v1.Resource$Partners = Resource$Partners;\n    class Resource$Partners$Channels {\n        constructor(context) {\n            this.context = context;\n            this.sites = new Resource$Partners$Channels$Sites(this.context);\n        }\n        create(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://displayvideo.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1/partners/{+partnerId}/channels').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['partnerId'],\n                pathParams: ['partnerId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://displayvideo.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1/partners/{+partnerId}/channels/{+channelId}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['partnerId', 'channelId'],\n                pathParams: ['channelId', 'partnerId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://displayvideo.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1/partners/{+partnerId}/channels').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['partnerId'],\n                pathParams: ['partnerId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        patch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://displayvideo.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1/partners/{+partnerId}/channels/{channelId}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PATCH',\n                }, options),\n                params,\n                requiredParams: ['partnerId', 'channelId'],\n                pathParams: ['channelId', 'partnerId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    displayvideo_v1.Resource$Partners$Channels = Resource$Partners$Channels;\n    class Resource$Partners$Channels$Sites {\n        constructor(context) {\n            this.context = context;\n        }\n        bulkEdit(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://displayvideo.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/v1/partners/{partnerId}/channels/{+channelId}/sites:bulkEdit').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['partnerId', 'channelId'],\n                pathParams: ['channelId', 'partnerId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        create(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://displayvideo.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1/partners/{partnerId}/channels/{+channelId}/sites').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['partnerId', 'channelId'],\n                pathParams: ['channelId', 'partnerId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        delete(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://displayvideo.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/v1/partners/{partnerId}/channels/{+channelId}/sites/{+urlOrAppId}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'DELETE',\n                }, options),\n                params,\n                requiredParams: ['partnerId', 'channelId', 'urlOrAppId'],\n                pathParams: ['channelId', 'partnerId', 'urlOrAppId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://displayvideo.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1/partners/{+partnerId}/channels/{+channelId}/sites').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['partnerId', 'channelId'],\n                pathParams: ['channelId', 'partnerId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    displayvideo_v1.Resource$Partners$Channels$Sites = Resource$Partners$Channels$Sites;\n    class Resource$Partners$Targetingtypes {\n        constructor(context) {\n            this.context = context;\n            this.assignedTargetingOptions = new Resource$Partners$Targetingtypes$Assignedtargetingoptions(this.context);\n        }\n    }\n    displayvideo_v1.Resource$Partners$Targetingtypes = Resource$Partners$Targetingtypes;\n    class Resource$Partners$Targetingtypes$Assignedtargetingoptions {\n        constructor(context) {\n            this.context = context;\n        }\n        create(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://displayvideo.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/v1/partners/{+partnerId}/targetingTypes/{+targetingType}/assignedTargetingOptions').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['partnerId', 'targetingType'],\n                pathParams: ['partnerId', 'targetingType'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        delete(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://displayvideo.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/v1/partners/{+partnerId}/targetingTypes/{+targetingType}/assignedTargetingOptions/{+assignedTargetingOptionId}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'DELETE',\n                }, options),\n                params,\n                requiredParams: [\n                    'partnerId',\n                    'targetingType',\n                    'assignedTargetingOptionId',\n                ],\n                pathParams: ['assignedTargetingOptionId', 'partnerId', 'targetingType'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://displayvideo.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/v1/partners/{+partnerId}/targetingTypes/{+targetingType}/assignedTargetingOptions/{+assignedTargetingOptionId}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: [\n                    'partnerId',\n                    'targetingType',\n                    'assignedTargetingOptionId',\n                ],\n                pathParams: ['assignedTargetingOptionId', 'partnerId', 'targetingType'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://displayvideo.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/v1/partners/{+partnerId}/targetingTypes/{+targetingType}/assignedTargetingOptions').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['partnerId', 'targetingType'],\n                pathParams: ['partnerId', 'targetingType'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    displayvideo_v1.Resource$Partners$Targetingtypes$Assignedtargetingoptions = Resource$Partners$Targetingtypes$Assignedtargetingoptions;\n    class Resource$Sdfdownloadtasks {\n        constructor(context) {\n            this.context = context;\n            this.operations = new Resource$Sdfdownloadtasks$Operations(this.context);\n        }\n        create(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://displayvideo.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1/sdfdownloadtasks').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: [],\n                pathParams: [],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    displayvideo_v1.Resource$Sdfdownloadtasks = Resource$Sdfdownloadtasks;\n    class Resource$Sdfdownloadtasks$Operations {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://displayvideo.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    displayvideo_v1.Resource$Sdfdownloadtasks$Operations = Resource$Sdfdownloadtasks$Operations;\n    class Resource$Targetingtypes {\n        constructor(context) {\n            this.context = context;\n            this.targetingOptions = new Resource$Targetingtypes$Targetingoptions(this.context);\n        }\n    }\n    displayvideo_v1.Resource$Targetingtypes = Resource$Targetingtypes;\n    class Resource$Targetingtypes$Targetingoptions {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://displayvideo.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/v1/targetingTypes/{+targetingType}/targetingOptions/{+targetingOptionId}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['targetingType', 'targetingOptionId'],\n                pathParams: ['targetingOptionId', 'targetingType'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://displayvideo.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1/targetingTypes/{+targetingType}/targetingOptions').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['targetingType'],\n                pathParams: ['targetingType'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    displayvideo_v1.Resource$Targetingtypes$Targetingoptions = Resource$Targetingtypes$Targetingoptions;\n    class Resource$Users {\n        constructor(context) {\n            this.context = context;\n        }\n        bulkEditAssignedUserRoles(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://displayvideo.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1/users/{+userId}:bulkEditAssignedUserRoles').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['userId'],\n                pathParams: ['userId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        create(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://displayvideo.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1/users').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: [],\n                pathParams: [],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        delete(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://displayvideo.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1/users/{+userId}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'DELETE',\n                }, options),\n                params,\n                requiredParams: ['userId'],\n                pathParams: ['userId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://displayvideo.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1/users/{+userId}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['userId'],\n                pathParams: ['userId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://displayvideo.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1/users').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: [],\n                pathParams: [],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        patch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://displayvideo.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1/users/{+userId}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PATCH',\n                }, options),\n                params,\n                requiredParams: ['userId'],\n                pathParams: ['userId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    displayvideo_v1.Resource$Users = Resource$Users;\n})(displayvideo_v1 = exports.displayvideo_v1 || (exports.displayvideo_v1 = {}));\n//# sourceMappingURL=v1.js.map"]},"metadata":{},"sourceType":"script"}